[
    {
        "subreddit": "webdev",
        "created": 1713435202.0,
        "title": "Any Digital Publishers Using InMobi's CMP - Is It Still Working On AMP For You?",
        "author": "eyebrows360",
        "id": "1c6zpwi",
        "selftext": "Ever since the rollout of InMobi's \"consent mode v2\" support in early March I've had several severe issues with InMobi's CMP, specifically on AMP pages:\n\n - their UI doesn't show up at all in Firefox on Windows\n - on iOS and Android the \"Accept\" button is unresponsive to taps\n - on iOS and Android the \"More Options\" button behaves like the \"Accept\" button\n\nI've not found anyone else talking about this via Google searches, so hoping some fellow web devs running InMobi as a CMP *on AMP* can let me know how theirs is going?\n\nP.S. Can't share a live site of mine as I've had to migrate my sites to Google Funding Choices as an interim measure, *but* it's not just me experiencing the issue: UK tabloid rag The Mirror are still using InMobi and having the exact same issues too e.g. on https://www.mirror.co.uk/sport/football/news/mancity-fans-bernardo-silva-penalty-32613282.amp",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1c6zpwi/any_digital_publishers_using_inmobis_cmp_is_it/",
        "num_comments": 6,
        "comments": [
            {
                "body": "Yes, Mr bot, AMP is bad. I would love to bin it off, but it is still advantageous to us unfortunately.",
                "author": "eyebrows360",
                "score": 1
            },
            {
                "body": "Did you resolve?",
                "author": "Majestic__Sea",
                "score": 1
            },
            {
                "body": "InMobi allegedly fixed their implementation ages ago, but I moved away from them to a paid-for provider instead so I don't know what's actually happened since. Infuriating, but I can't trust them after the mess they made of this.",
                "author": "eyebrows360",
                "score": 1
            },
            {
                "body": "Yeah, i still use them and the last Template fot GTM give me a error when you try using it.",
                "author": "Majestic__Sea",
                "score": 1
            },
            {
                "body": "I've never used GTM for anything; perhaps try a more manual approach.",
                "author": "eyebrows360",
                "score": 1
            },
            {
                "body": "It looks like OP posted an AMP link. These should load faster, but AMP is controversial because of [concerns over privacy and the Open Web](https://www.reddit.com/r/AmputatorBot/comments/ehrq3z/why_did_i_build_amputatorbot).\n\nMaybe check out **the canonical page** instead: **[https://www.mirror.co.uk/sport/football/news/mancity-fans-bernardo-silva-penalty-32613282](https://www.mirror.co.uk/sport/football/news/mancity-fans-bernardo-silva-penalty-32613282)**\n\n*****\n\n ^(I'm a bot | )[^(Why & About)](https://www.reddit.com/r/AmputatorBot/comments/ehrq3z/why_did_i_build_amputatorbot)^( | )[^(Summon: u/AmputatorBot)](https://www.reddit.com/r/AmputatorBot/comments/cchly3/you_can_now_summon_amputatorbot/)",
                "author": "AmputatorBot",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1714757434.0,
        "title": "How do you implement the GDPR / Consent Management Platform (CMP) rules?",
        "author": "Prestigiouspite",
        "id": "1cjeen6",
        "selftext": "Websites that are also aimed at users in the European Union must use so-called consent management solutions. According to the GPDR and Cookie Directive (2009/136/EC), it must be possible for users to give specific and informed consent. It is not enough to simply inform users about the use of cookies or to be able to agree to or reject everything.\n\nHow do you implement this bureaucratic overhead that has made surfing the web less pleasant?\n\n[View Poll](https://www.reddit.com/poll/1cjeen6)",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1cjeen6/how_do_you_implement_the_gdpr_consent_management/",
        "num_comments": 5,
        "comments": [
            {
                "body": "\"This Regulation shall apply to the processing of personal data carried out in the context of the activities of an establishment of a controller or processor in the Union, regardless of whether the processing takes place in the Union.\"\n\n- I don't think I need to say any more.",
                "author": "Prestigiouspite",
                "score": 2
            },
            {
                "body": "own development if you're good\n\nif not use another platform",
                "author": "lunzela",
                "score": 1
            },
            {
                "body": "> Websites that are also aimed at users in the European Union must use so-called consent management solutions. \n\nThis is untrue.\n\n> bureaucratic overhead\n\nThis is nonsense.\n\n> that has made surfing the web less pleasant\n\nIt’s the people begging to track you that makes it unpleasant, not the people who say that they can’t do it without permission.",
                "author": "JimDabell",
                "score": 1
            },
            {
                "body": "Politicians are a bunch of individuals with very low pattern recognition abilities. None of them even thought about the billions of people now having to click on those things several times a day. Think about how much time is wasted, including on things like you creating your post and million other posts related to this nonesense and every single website needing to implement that nonsense. The damage caused by this inefficiency to people far surpasses manslaughter or even wars. So, why aren't we putting people who come up with this nonsense to death row? ¯\\\\\\_(ツ)\\_/¯  When will we build our society on efficiency and not on imaginary things like rights?",
                "author": "johanneswelsch",
                "score": 1
            },
            {
                "body": "It's saying that if you're doing business in EU, the EU regulations apply, even if your 3rd-party consent management platform lives outside the EU. I don't think that requires use of a 3rd party platform.",
                "author": "wittjeff",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1715155826.0,
        "title": "Cheapest Google certified CMP for Cookie Banner?",
        "author": "OffsideOracle",
        "id": "1cmzap9",
        "selftext": "In relation of Google [announcement](https://blog.google/products/adsense/new-consent-management-platform-requirements-for-serving-ads-in-the-eea-and-uk/) that,\n\n>*...we will require partners using our publisher products — Google AdSense, Ad Manager, or AdMob — to use a Google-certified CMP that integrates with IAB Europe’s Transparency and Consent Framework (TCF) when serving ads to users in the European Economic Area or the UK.*\n\nI was skimming through those Google-certified CMP's and they all seem quite expensive. I have an old bulleting forum that has many pages and CMP's pricing seems to be linked to number of pages.  All I need is compliant script that I can slap to the website.",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1cmzap9/cheapest_google_certified_cmp_for_cookie_banner/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1757442288.0,
        "title": "alternatives to recaptcha? what do you use?",
        "author": "bytepursuits",
        "id": "1ncqret",
        "selftext": "recaptcha is forcing a move to recaptcha enterprise by EOY.    \nUsing google cloud for recaptcha is annoying (google cloud UI is terrible).      \nThey also require slapping their terms and conditions on all pages (yes [even enterprise](https://cloud.google.com/recaptcha/docs/faq#hiding-the-badge) ).    \nRecaptcha also requires certain CMP handling in EU: https://help.consentmanager.net/books/cmp/page/working-with-google-recaptcha  \nGoogle products are also blocked or restricted in multiple countries most important mainland China.  \n   \n^ For those reasons I'm looking to move away.         \n  \nWhich privacy first, PII safe first product did you switch to?    \nI know of:  \n[cloudflare turnstile](https://www.cloudflare.com/application-services/products/turnstile/) (sucks its not customizable, huge green circle might be coupled with error messages in the form its meant to protect and look confusing)     \n[hcaptcha](https://www.hcaptcha.com/) - looks promising   \n\nWhat would you use instead of recaptcha? Does not have to be free. \n",
        "score": 35,
        "url": "https://www.reddit.com/r/webdev/comments/1ncqret/alternatives_to_recaptcha_what_do_you_use/",
        "num_comments": 34,
        "comments": [
            {
                "body": "I dont know privacy wise, but cloudflare turnstile is the best state-of-art anti-bot protection currently.   \nPretty much the only way to bypass is running a headful automation browser with an external mouse click emulation",
                "author": "SkillterDev",
                "score": 61
            },
            {
                "body": "This is actually what I've done in my recent open-source project, I had great trouble overcoming Turnstile, compared to other captchas.   \nEven most automation browsers focused on bypassing anti-bot measures have troubles with Turnstile that required to click a button. \n\nSeleniumBase (which I used) has a way to capture a screenshot while reloading the page (to not get detected), and then emulating the mouse click. This is because Cloudflare uses a lot of tricks like shadow doms, iframes and random css class names, that makes it nearly impossible to click the checkbox programmatically within the browser.\n\nFor programmers and curious ones, this is my github repo where I implemented scraping and learned how Turnstile is the biggest pain to automate: [https://github.com/Skillter/ProxyGather](https://github.com/Skillter/ProxyGather)",
                "author": "SkillterDev",
                "score": 17
            },
            {
                "body": "Turnstile can be invisible",
                "author": "CharlesCSchnieder",
                "score": 12
            },
            {
                "body": "i personally use hcaptcha, it seems to work well enough for me",
                "author": "Deve_roonie",
                "score": 12
            },
            {
                "body": "My experience with hcaptcha was horrible (still better than recaptcha). Turnstile is awesome, and you don't have to use their widget, I just run it silently in the background with no interaction from the user at all. Even with hcaptcha we had tons of bot submissions on our forms, with turnstile we get none, even without the widget.",
                "author": "milhousethefairy",
                "score": 7
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 7
            },
            {
                "body": "I just round-trip an hmac encrypted timestamp. If your goal is just to stop bots, that works. The user will never know its even there, you collect 0 user information, and bots always get caught.",
                "author": "localnerve",
                "score": 6
            },
            {
                "body": "a simple honeypot often works well enough that if you're not a major target, you'll be fine.",
                "author": "LoudAd1396",
                "score": 5
            },
            {
                "body": "what I've seen with insible captcha - is people implement this without fallback.  \nLike invisible recaptcha would give a low score and fail and sites just show\"hey you are not allowed\", there would be no way for you to prove you are not a bot.    \nWhich I find so annoying as recaptcha would always fail for me on firefox, but work in chrome and I dont want to use chrome.  \nsome fallback to some UI method is needed on top of invisible imo.",
                "author": "bytepursuits",
                "score": 5
            },
            {
                "body": "I use honeypots on personal sites  - i think Antispam Bee plugin. and I gotta say no spam at all. but this is going to be an enterprise usecase so im looking into all options.",
                "author": "bytepursuits",
                "score": 5
            },
            {
                "body": "We use recaptcha. Where can i read more about being forced to enterprise tier?",
                "author": "tramspellen",
                "score": 4
            },
            {
                "body": "I've never noticed that before, it's one of the leaders in bot prevention out there. If you don't want to use it you're pretty limited to a standard captcha solution like google or hcaptcha",
                "author": "CharlesCSchnieder",
                "score": 4
            },
            {
                "body": "We’ve been using hcaptcha on our site for years now, with around a million registered users, and haven’t had any issues so far. We’re open source and have a Discord community of over 80k users and I don’t recall anyone ever complaining about it to us before on either Discord or GitHub",
                "author": "jondbarrow",
                "score": 3
            },
            {
                "body": "It's also free for 99% of use cases",
                "author": "paynoattn",
                "score": 3
            },
            {
                "body": "google is terrible with these changes.    \nit will have to go to google cloud account, but they might convert to google cloud account automatically?       \nhttps://cloud.google.com/recaptcha/docs/migration-v1  \nhttps://www.searchenginejournal.com/google-to-migrate-all-recaptcha-services-to-cloud-platform/538749/  \nI think you would have to use enterprise api, but your plan may or may not be enterprise depending on usage.",
                "author": "bytepursuits",
                "score": 3
            },
            {
                "body": "It’s a valid fear, but almost in the same way being worried about 2 generated uuids clashing is a valid fear",
                "author": "BombayBadBoi2",
                "score": 3
            },
            {
                "body": "The paid for option has one click authentification like Google. Its worth the money.",
                "author": "latro666",
                "score": 3
            },
            {
                "body": "what do you mean? i've ran into invisible recaptcha failing real people many times.   \nour QA team runs into this all the time.   \nThe moment you clear browser cache and try less common browsers invisible recapatcha is likely to give you a low score.",
                "author": "bytepursuits",
                "score": 3
            },
            {
                "body": "Cloudflare",
                "author": "good4y0u",
                "score": 2
            },
            {
                "body": "Personally selfhost Mosparo. It works great, just not documented enough for integrations on vue, react and all",
                "author": "AdamantiteM",
                "score": 2
            },
            {
                "body": "There's Private Captcha, that is available as a service but also can be self-hosted (https://github.com/PrivateCaptcha/PrivateCaptcha/) - in such case even less chance to be blocked by a whole country, lol. By design it does not collect any PII. You can have an invisible widget (if you want) and there's no condition about slapping terms and conditions on your pages.",
                "author": "ribtoks",
                "score": 2
            },
            {
                "body": "Hey! hCaptcha is a little better than reCAPTCHA when it comes to privacy, but it still relies on cookies. The bigger issue is also accessibility—it can be a real nightmare. \n\nIf you’re looking for an alternative, I’d recommend **Friendly Captcha**. I use it for my own projects. It’s made in Germany (so super strong on privacy), complies with almost all international privacy laws, easy to integrate, and runs completely in the background using a proof-of-work system—no user interaction needed.",
                "author": "Euphoric-Cap1210",
                "score": 2
            },
            {
                "body": "Just a basic honeypot and rate limiting submits. I'll do something like max 2 submits every 60 minutes.\n\nIt won't stop all spam, but it'll stop most of it and once the submits start failing it'll move on to their next target. \n\nMy sites aren't handling massive amounts of traffic though, so no clue how well it would scale.",
                "author": "Mister_Uncredible",
                "score": 2
            },
            {
                "body": "zendriver makes it easier though. Problem is zendriver is very poorly documented and therefore hard to use for basically anything else.",
                "author": "my_new_accoun1",
                "score": 2
            },
            {
                "body": "really like this one. I think Ill use that for personal projects",
                "author": "bytepursuits",
                "score": 2
            },
            {
                "body": "One thing bots can't do is wait - too expensive. They are large scale operations. Humans are slow. Every input is different, but find the minimum time a human could reasonably submit the input. Send the hmac encrypted timestamp down with the render, or start of input, back with the input, check it on the server. Less than the minimum? A bot. Always send back success to a bot.\n\n  \nFWIW, this is the package I use to encapsulate the encode/decode/error procedures on Node servers:  \n[https://www.npmjs.com/package/@localnerve/hmac-symmetric](https://www.npmjs.com/package/@localnerve/hmac-symmetric)",
                "author": "localnerve",
                "score": 2
            },
            {
                "body": "I like turnstile, it's really good at blocking bots and it doesn't add a load of js like a lot of other \"these kinds of things\" do. Lightweight and effective.",
                "author": "netnerd_uk",
                "score": 1
            },
            {
                "body": "So is that 10,000 per month per project, or 10,000 total for your Google account?",
                "author": "queen-adreena",
                "score": 1
            },
            {
                "body": "Yep we use this. Never had issues is fairly priced and not a cookie privacy risk like google",
                "author": "latro666",
                "score": 1
            },
            {
                "body": "oh I really like that UI.  \nand it's theme customizable nice: https://docs.privatecaptcha.com/docs/reference/widget-options/#data-theme  \n    \nhow does it work though? Is it reliable?",
                "author": "bytepursuits",
                "score": 1
            },
            {
                "body": "We use it for our project that has ~1mil registered users and no one has complained about it so far. And I’ve never personally had an issue passing a test on other sites that use it",
                "author": "jondbarrow",
                "score": 1
            },
            {
                "body": "the site I use it on is still in a closed beta so I don't have enough data to say that for sure. the only issues reported with it where due to bad implementation on my part though",
                "author": "Deve_roonie",
                "score": 1
            },
            {
                "body": "IMO Honeypots are effective for non-critical or personal sites. This is why it‘s absolutely right to use a captcha for enterprise usecases. A simple honeypot would not be a suitable alternative in this case. There are modern providers that work invisibly and ward off advanced bots.",
                "author": "PixelPizza23",
                "score": 1
            },
            {
                "body": "it's based on Proof-of-Work. Roughly speaking, the widget solves a cryptographic task to \"pass\" the captcha and if many bots are attempting to pass, the complexity of the task grows so much that it becomes quite economically unviable to burn so much compute resources on it.",
                "author": "ribtoks",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757258994.0,
        "title": "Built real-time CPU emulator in React with Monaco Editor",
        "author": "biokys",
        "id": "1naw6qx",
        "selftext": "I ve just wanted to share with you my 8bit CPU emulator written in TS, React. It is for free and you check it out here: [https://sap-3.com/](https://sap-3.com/)\n\n  \nSAP-3 (Simple As Possible 3) is an educational 8-bit computer architecture designed to understand the fundamental principles of processor operation. It builds upon the simpler SAP-1 and SAP-2 versions, but adds advanced features like an extended instruction set, more registers, and stack support. This emulator implements an enhanced version of SAP-3 with additional features for better practical use in education and experimentation with low-level programming.\n\n\n\nhttps://preview.redd.it/yt73l7p1hrnf1.png?width=3266&format=png&auto=webp&s=c2711951c21db982fe8380ae19c34bbf6e215b0d\n\n  \n",
        "score": 7,
        "url": "https://www.reddit.com/r/webdev/comments/1naw6qx/built_realtime_cpu_emulator_in_react_with_monaco/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1739790054.0,
        "title": "Floating cookie button?",
        "author": "JegSmaekker",
        "id": "1irhd0p",
        "selftext": "I am working on a website that caters to european users. Therefore, I need to be compliant with GDPR when using google tag manager and its applications. I have a question pertaining to the ability to withdraw cookie consent. Is it required that a button is visible at all times on every page or could I for example hide it in a menu drawer or something similar? I feel it would be distracting to have the floating cookie button at all times that I see implemented almost everywhere. \n\nhttps://preview.redd.it/lawncdcykoje1.png?width=1921&format=png&auto=webp&s=b5b7ecc3a43aae402e9f67411ffce45a7c0380b5\n\n",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1irhd0p/floating_cookie_button/",
        "num_comments": 7,
        "comments": [
            {
                "body": "As far as I can gather, it is not a requirement to have it floating, but it must be easily accessible.",
                "author": null,
                "score": 2
            },
            {
                "body": "Don't take this as gospel, there should be articles out there outlining it all, but as I understand it, the options to accept or deny should be equally accessible—so both options in your initial popup.\n\nAfter they make their choice, they should be able to change it, but I believe that can be on another page, like the privacy policy, where you explain what the cookies are and what they do.",
                "author": "lhowles",
                "score": 2
            },
            {
                "body": "Ask a lawyer 😬",
                "author": "ducki666",
                "score": 1
            },
            {
                "body": "Just don't forget to add class to it so it can be easily hidden with Stylish (e.g. not just Tailwind classes)\n\nThe only important thing really.",
                "author": "TheRNGuy",
                "score": 1
            },
            {
                "body": "It doesn't have to float. But it must be easily accessible on every page.",
                "author": "kiwi-kaiser",
                "score": 1
            },
            {
                "body": "Yeah I think that is where I find it hard to distinguish what easily accessible entails? Personally, I would say a menu point in the user menu would be an easily accessible way to manage cookies, but seeing all of these floating cookies makes me wonder if it is \"Easy\" with compliance eyes",
                "author": "JegSmaekker",
                "score": 1
            },
            {
                "body": "It may be up to debate, but I think it would be sufficient if it were in the user menu, if you are intending to have a privacy policy page or a cookie page, it would be a good idea to have a button there as well 😄",
                "author": null,
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745426494.0,
        "title": "Anyone good with Google tag manager and cookie banners?",
        "author": "Happy_Little_Leaves",
        "id": "1k63ugs",
        "selftext": "Hi everyone! I’ll pay for help.\n\nI’m in a bind. I started at a startup a couple months ago as a demand gen marketer and found that the website cookie banner wasn’t recording data so pivoted to Hubspot’s CMP. Our agency got those banners on the site but the consent tracking in GTM is a mess. \n\nI’ve been implementing Consent Mode using GTM in conjunction with HubSpot’s cookie banner. Most of the integration seems to work except for one major issue that I haven’t been able to resolve:\n\nProblem:\nConsent values are getting overwritten when a user accepts cookies—even though U.S. visitors should default to “granted.” Instead, the values are either not being set correctly at page load, or they’re being overwritten after a user clicks “Accept.” As a result, GA4 tags are firing inconsistently, and Consent Mode isn’t behaving as expected.\nHere’s what I’ve done so far:\n\n \nSet up HubSpot CMP using their native cookie banner with separate categories for marketing, analytics, functional, etc.\nConfigured GTM with a Consent Initialization Tag to run before any other tags:\njavascript\nCopyEdit\ngtag('consent', 'default', { 'ad_storage': 'denied', 'analytics_storage': 'denied', 'functionality_storage': 'denied', 'personalization_storage': 'denied', 'security_storage': 'granted' });\nEnabled “Respond to Global Privacy Control” in the HubSpot banner settings to respect user browser signals.\nTested behavior in GTM Preview Mode and confirmed:\nConsent values are initially set correctly when the page loads.\nBut once a user interacts with the banner and accepts cookies, the values are being overwritten instead of updated according to category selection.\nThis happens even when no GTM tags are firing at the moment of consent.\nChecked for firing tags and no conflicting tags or triggers seem to be running when the overwrite occurs.\nConfirmed U.S. visitors should be opted in by default, per agency recommendation—but this doesn’t appear to be happening. The defaults are still being treated as denied.\n\nQuestions:\nHas anyone else seen HubSpot CMP override Consent Mode values after interaction?\nHow can I stop consent states from being overwritten when a user accepts?\nIs there a recommended way to intercept or preserve the values during/after banner interaction?\nCould this be a sequencing issue between HubSpot and GTM tags?\n\nAny help would be hugely appreciated—thank you in advance! ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1k63ugs/anyone_good_with_google_tag_manager_and_cookie/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1725333266.0,
        "title": "Is it a good idea to force two-way data flow in solid js like this?",
        "author": "0x_by_me",
        "id": "1f7puyo",
        "selftext": "I have a custom file input component that shows a preview of the selected file by using `URL.createObjectURL` to create the url for the image, but I have to use `URL.revokeObjectURL` to free up the memory once the image is no longer needed, and I need the parent to be able to trigger this from above, but also the child has to be able to do it if the user inputs a file of the wrong type, plus I think I don't want the parent to have to take care of too much, so an approach like this would be the most ideal in my opinion, however I'm worried that I may be committing a grave sin that will cause the reactivity gods to lay a curse upon my bloodline for generations to come. [LIVE](https://playground.solidjs.com/anonymous/8c9469b3-ade1-4185-ab96-22c2cd827ead).\n\n    import { render } from \"solid-js/web\";\n    import { createSignal, onMount } from \"solid-js\";\n\n    type Obj = {\n      handler: null | (() => void);\n    };\n\n    type Props = {\n      name: string;\n      cord: Obj;\n    };\n\n    default function InputCmp(props: Props) {\n      const [length, setLength] = createSignal(0);\n      let ref!: HTMLInputElement;\n\n      onMount(() => (props.cord.handler = () => {\n        ref.value = \"\";\n        setLength(0);\n      }));\n\n      return (\n        <div>\n          <input\n            type=\"text\"\n            name={props.name}\n            ref={ref}\n            onInput={() => setLength(ref.value.length)}\n          />\n          <p>length: {length()}</p>\n        </div>\n      );\n    }\n\n    type Data = HTMLFormElement & { name: HTMLInputElement };\n\n    export default function FormCmp() {\n      const obj: Obj = { handler: null };\n\n      function handle_submit(event: Event) {\n        event.preventDefault();\n\n        const form = event.target as Data;\n        const name = form.name.value;\n\n        console.log(name);\n\n        obj.handler?.();\n      }\n\n      return (\n        <form onSubmit={handle_submit}>\n          <InputCmp name=\"name\" cord={obj} />\n          <button>submit</button>\n        </form>\n      );\n    }\n\n    function App() {\n      return (\n        <div>\n          <h1>Hi</h1>\n          <FormCmp />\n        </div>\n      );\n    }\n\n    render(() => <App />, document.getElementById(\"app\")!);",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1f7puyo/is_it_a_good_idea_to_force_twoway_data_flow_in/",
        "num_comments": 5,
        "comments": [
            {
                "body": "I don't know anything about SolidJS but I know that one of the big selling points of react when it first came out was the fact that it enforced unidirectional data flow which was incredible because it really simplified reasoning about the current state of your UI.  If you're newer to web dev you might not fully appreciate this because you didn't have the privilege of faffing about complex UIs in frameworks like early Angular, GWT, and jquery heavy apps....",
                "author": "jwingy",
                "score": 1
            },
            {
                "body": "Why do you need to do any of this?\n\nforms have [`reset()`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/reset) to reset it's state.\n\nAnd the image itself can release the object url once the image loads. You can revoke it the moment the image loads, it does not need to stay valid.\n\nYour code doesn't really reflect any issue you're describing.\n\nI see zero need for this kind of thing at all...\n\nI also don't see what the ref on the input is even doing. Seems totally useless.\n\nalso, you should get in the habit of using `event.currentTarget` not `event.target`.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "I'll keep that in mind.",
                "author": "0x_by_me",
                "score": 1
            },
            {
                "body": "The example just shows the way I want to trigger something in the child from the parent. I'm keeping the preview image in a signal, and checking if it exists in a conditional to choose which UI to render. It may not be the most correct way of doing it, but it's the most straight forward. [Here's](https://pastebin.com/rj4ifj2z) the component in its current form without the parent being able to trigger a cleanup in the child yet.",
                "author": "0x_by_me",
                "score": 1
            },
            {
                "body": "Yeah, do the revoke Url in the img element onLoad.\n\nNot in this strange cleanup thing you got going on.",
                "author": "thekwoka",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1684284871.0,
        "title": "Got brutal attack on my static html website, I deleted almost every suspiscious files but cannot find the title tag",
        "author": "Run_the_show",
        "id": "13jmoco",
        "selftext": "Hello everyone.\n\nMy static html got attacked and I deleted every suspicious files from ftp including htaccess, some php and all. But when I search in google (entering my sitename) . the description is different. \n\nMy site is related with banks and goldbut it shows DIY .. sometimes second hand store and osmetimes fashion and musical instruments stores.\n\nHere is the screenshot.\n\nI checked the html files but couldnt find any such description included.\n\nThe site is [this](https://gp-bank.co.jp/)\n\n&#x200B;\n\nhttps://preview.redd.it/mrfc1rp0ia0b1.png?width=822&format=png&auto=webp&s=c4fad567e28e03c42bf1a1dfd17786524cffd69d",
        "score": 10,
        "url": "https://www.reddit.com/r/webdev/comments/13jmoco/got_brutal_attack_on_my_static_html_website_i/",
        "num_comments": 22,
        "comments": [
            {
                "body": "Sign-up to Google Search Console if you haven't already and request a recrawl of the bad URLs by searching them in the search bar then click \"request indexing\".\n\n[https://search.google.com/search-console/about](https://search.google.com/search-console/about)\n\nThis will show you what Google is seeing (to check it is actually correct) and speed up the process of Google correcting your info and also alert you of any penalties you may have received from being hacked.",
                "author": "addycodes",
                "score": 33
            },
            {
                "body": "It's hard to tell just from looking at the site what's happening; it could be that Google is just still showing an old version from before you fixed it. That said, if it's all static files anyway why not just wipe the server (or hosting account, etc.) and redeploy? It's hard to guarantee that you've removed all the malware from your site once it's been hacked.",
                "author": "electricity_is_life",
                "score": 19
            },
            {
                "body": "Kinda a related tangent here, but could you use hosting better suited to static HTML? Netlify of GitHub Pages? Doesn't help you here, but they're basically immune to this kind of stuff (plus it's all through git, so you'd have a log of everything and how it got there, diffs, and the ability to easily revert any changes... And they'd need access to GitHub (or Bitbucket) to do anything).\n\nJust a suggestion... Maybe something to look into.",
                "author": "shgysk8zer0",
                "score": 15
            },
            {
                "body": "Dude they switched all the text to Japanese!",
                "author": null,
                "score": 8
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 5
            },
            {
                "body": "+1 for Netlify. Very quick and simple to use, and safe.",
                "author": "datura_enjoyer",
                "score": 5
            },
            {
                "body": "That isn't relevant info. Does your site use php or any dynamic stuff? Or is it static then you could use another platform that is more secure then your own",
                "author": "jochem4208",
                "score": 5
            },
            {
                "body": "Just a guess, but somewhere among the other sites on the server is a PHP file which allows remote access to your server. And by that I mean all files within your login home folder, so access to your html files in a completely separate web root is trivial. \n\nIf you have any sort of home-brewed file upload for images, etc, that's your entry point. \n\nI'd install Sucuri on all your WordPress sites and run a scan to compare all the files with a stock WordPress install. Wordfence also good for this.\n\nOnce you've cleaned everything, you can request a reindex through Google web console which should sort things out.",
                "author": "thekumquatkid",
                "score": 4
            },
            {
                "body": "I have an unrelated but similar issue of Google displaying a wrong snippet, do you know of an average time based on experience etc of how long it will take them to recrawl your site?",
                "author": "IncinerateZ",
                "score": 4
            },
            {
                "body": "No . Its a Japanese sitr 😅",
                "author": "Run_the_show",
                "score": 4
            },
            {
                "body": "Considering this is a japanese site it is likely out of his control. When I worked there briefly in 2015 they had an office worker literally run an encrypted usb from our production office to our server and upload changes that way. FTP very well may be space age tech there",
                "author": null,
                "score": 3
            },
            {
                "body": "I'm gonna say that your server has been compromises.\n\nHopefully you have a backup, abort your existing provider, and take your business elsewhere.\n\nit really is not difficult to redeploy with a reputable VPS like DigitalOcean, Linode, or even Vultr.\n\nYou keep your domain name and just update your DNS records.\n\nMake sure to strengthen your username/passwords for this account and any others you may have that share the same password _(never share the same passwords)_.",
                "author": "oh_jaimito",
                "score": 2
            },
            {
                "body": "This. Or put everything in a bucket and use Cloudflare to serve it for free",
                "author": "FatefulDonkey",
                "score": 2
            },
            {
                "body": "Yes all the website of ftp have suspicious files.’i have 10-15 sites(company’s site). Most of then are wordpress site and some are ftp. Might have to change server.",
                "author": "Run_the_show",
                "score": 2
            },
            {
                "body": "Yes htaccess was affected and also had index.pho out of nowhere. \nI deleted each and every file. But the problem is it reappears after 12-24 hrs.",
                "author": "Run_the_show",
                "score": 2
            },
            {
                "body": "There's no definite answer, you will get put in a queue and there's no guarantees it will be updated right away. The algorithm and I assume their insane caching and stuff works in mysterious ways.\n\nThat being said, I've experienced times between a couple of minutes and a couple of days for updating metadata via reindexing in search console.\n\nYou should also bare in mind that your metadata such as title and description are just treated as a *suggestion*. If Google thinks it can pull more relevant titles or content from your site for the query it will choose to do that instead.",
                "author": "addycodes",
                "score": 2
            },
            {
                "body": "I just checked google, and it isn't showing \"DIY\" as part of the title like in your screen shot, so maybe just took a bit from when you cleaned up the site for it to re crawl the site and update.",
                "author": "greg8872",
                "score": 1
            },
            {
                "body": "It can take months if your site doesn't have much visitors.\n\nOr hours if you have heavy traffic.",
                "author": "itachi_konoha",
                "score": 1
            },
            {
                "body": "I took on a client whose htaccess had been overwritten. Traffic to the site from most search engine results were redirected away to another site. Maybe that is what happened here?",
                "author": "7nth",
                "score": 1
            },
            {
                "body": "![gif](emote|free_emotes_pack|wink)",
                "author": null,
                "score": 1
            },
            {
                "body": "It might be an issue with your host provider in general and not just your site.\n\nYou might want to contact them and see what is going on.\n\nIf they are compromised, there is not much you can do on your end, except perhaps switching providers and moving your website somewhere else",
                "author": "GetVladimir",
                "score": 1
            },
            {
                "body": "Yes. Others sites have also been attacked. Most of the site are wordpress. (I have about 10-15 sites) with this being static",
                "author": "Run_the_show",
                "score": 0
            },
            {
                "body": "Site is uploaded via ftp. Nothing other than ftp is used.",
                "author": "Run_the_show",
                "score": -9
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1709038299.0,
        "title": "Cookie consent",
        "author": "Oynoo",
        "id": "1b1b3wz",
        "selftext": "I have some websites for clients which i have to update to latest cookie consent regulations, but i am having a hard time with finding what exactly do i need. My websites mostly have googleAnalytics, googleAds and some mandatory cookies like csrf_token. I have set up cookie-consent template from ‚68publishers’ on the googletagmanager. And question is if this is enough. I can see that gtm is providing cookie consent banner on the website, you can allow or denie Marketing/Analytic cookies, but there is no cookie table. If its possible i dont want to use CMP, but if its realy necessery, could you recommend something? The best would be open source or free, which doesnt have realy low limits. \n\nThanks for any help in advance!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1b1b3wz/cookie_consent/",
        "num_comments": 5,
        "comments": [
            {
                "body": "[deleted]",
                "author": null,
                "score": 4
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "The best way is not to give your users data away",
                "author": "web-dev-kev",
                "score": 1
            },
            {
                "body": "By „consent manager” you mean something like [this](https://github.com/68publishers/cookie-consent) or CMP? I think that cleared some missunderstanding. So when user allowed or denied specific cookies i should set denied or granted for that cookie with gtag?",
                "author": "Oynoo",
                "score": 1
            },
            {
                "body": "Do you know how this would apply to self-hosted analytics where the data is interpreted and parsed without the use of any third party?",
                "author": "Aerdynn",
                "score": 1
            },
            {
                "body": "So, self-hosted analytics! There are so many options nowadays, it also makes business sense to keep your users data to yourself (e.g. you don't want Google to use your visitors info to show targeted ads for your competitors).",
                "author": "XCSme",
                "score": 1
            },
            {
                "body": "Thank you! Yes i am not sure with whole CMP either, because i am reading that from 01.03 google is allowing only choosen CMPs to work with and all of them have subscription, which is a bummer, but also not sure if it applies to my case, if i realy need it. Because they menthion google AdSense, AdManager and AdMib, which none of those i am using.",
                "author": "Oynoo",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1697579720.0,
        "title": "Advice for learning website compliance",
        "author": "indymoguler",
        "id": "17a9wa4",
        "selftext": "I'm a new freelance dev and I'm concerned about delivering sites that aren't compliant for my clients, especially around privacy and cookie policies, controls, and terms & conditions generators.\n\nAre there specific courses or materials that delve into website compliance? There's so much info online, and it's easy to get lost.\n\nWhen it comes to cookies: \n\n  - Is the only reliable way to identify them by testing the production site?\n  - Even if I don't intentionally add cookies during coding, third-party sources like Vimeo might. Does this necessitate having a cookie policy?\n  - I'm also wary that an npm module might add cookies unbeknownst to me. \n  \nSolutions:\n\n  - Is the best route to go with platforms like iubenda or CookieYes? (I’ve heard these can slow page load times)\n  - Or is there a trustworthy policy template I could adapt?\n\nWould appreciate any insights or recommendations on this. Thanks!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/17a9wa4/advice_for_learning_website_compliance/",
        "num_comments": 1,
        "comments": [
            {
                "body": "Be careful with that. In no case you want to give any legal advice to your customers, trust me. \nBut as you wont believe me anyway, you should take care of these at least:\n- A full, valid imprint and data privacy statement accessibly from every page is not a question\n- dont use cookies without consent\n- dont include external, third party resources (no fonts from google servers, no analytics, no embed youtube, no cloudflare) without consent\n- Tell the user exactly what types of cookies and services you are using and why\n- Give the user the possibility to revoke his consent\n- Use a CookieManagementPlattform like Cookiebot/CookieYes to automaticly scan your pages for Cookies. These CMPs also respect do not track-Settings of the browser etc., anf mostly support listing all cookies with descriptions in multiple languages etc.\n- If you design the Consent-Dialog yourself make sure Declining the cookies is as easy as Accepting the cookies, and buttons should have the same colors!\n- If you're embedding media from youtube etc. you need an Embed-Consent! The CMPs usually wont do that for you\n\nBUT trust me, you dont wanna mess around with that. You can assist the data protection officer of your customer on this but you shouldnt give legal advice here.",
                "author": "Competitive_Craft900",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1686994349.0,
        "title": "Wrong position of google adsense consent. Web pages with javascript apps keep crashing",
        "author": "pixsector",
        "id": "14bmm9d",
        "selftext": "Hi,   \ngoogle adsense consent keeps crashing my pages with javascript apps. Definitely, the cookie consent is causing this problem. I just checked the website through a VPN service with locations outside of European Union countries and there is no problem with javascript apps.\n\nI noticed one thing. Check this image.   \n\n\nhttps://preview.redd.it/q6am9gc3sj6b1.jpg?width=1058&format=pjpg&auto=webp&s=abc8b06548a82bb78b7e2f646583b6c9d5373912\n\n* When the consent is loaded in a sticky position on the left side of the browser window (as it should be) then everything works fine.\n* But if the consent is placed at the bottom of the page then the website keeps crashing\n* I tried to update jquery.min.js version to v3.7.0 and jquery.form to 4.3.0 and it didn't solve this issue.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/14bmm9d/wrong_position_of_google_adsense_consent_web/",
        "num_comments": 3,
        "comments": [
            {
                "body": "Thank you for your response. I live in a country that is a member state of the EU.",
                "author": "pixsector",
                "score": 1
            },
            {
                "body": "If you're in the US you don't really need this.",
                "author": null,
                "score": 0
            },
            {
                "body": "Don't worry, I won't see it wherever you place it.",
                "author": "KaKi_87",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1587722970.0,
        "title": "Google - Deceptive Site Warning - What a nightmare!?",
        "author": "jbennett360",
        "id": "g75uce",
        "selftext": "Hi all. Prepare for a sort of lengthy post!\n\nHad an email from Netcraft on the 22nd April around 6PM, saying my site was phishing and pretending to be a MS site. I checked with the hosting company and they said this email was legit. I found the offending folders and removed them. Changed passwords on literally everything regarding the website/hosting/cpanel/FTP etc. (I have since removed the FTP Accounts)\n\nNext day, 23/04, Google is now flagging my domain as deceptive (I'm assuming Netcraft will have probably alerted Google?). Console showed that it was down to that folder and a few other files on the domain which were legitimate WordPress plugin files and i believe they haven't been modified (WordFence also agreed)\n\n**Hosting Setup**\n\nIn my hosting a i have the primary domain (Which is the domain with the issue) and an addon domain. I also have a sub domain with two development websites on, which sits on the affected domain.\n\n**The primary domain** \\- This should in theory be fine, everything was updated two days before this happened, that includes WP, WP Themes and plugins.\n\n**The addon domain** \\- is probably how it got in. It's a theme that seems to have stopped being properly maintained (was running a version from Nov 2016) and contained a few plugins that have been abandoned, one no longer existed on the WP repo either.\n\nI had a backup of one of the development sites from middle of March which I've installed on another domain I have with a different hosting company (Updated everything on this and changed passwords too).The other development site, I didn't have a backup that far back, as it's a fairly new-ish site. (I've recreated this website on the other domain so these where completely free from the problematic domain.)\n\n**What i did next**\n\nI decided to basically nuke the WP Installs via Cpanel for the primary domain and the addon domain, cleaned everything out of the root folders and deleted all db's and db users.\n\nI then installed a new WP on both of these domains.\n\n**Addon Domain** \\- I rebuilt the site using a newer theme (Salient) and this now has next to no plugins installed, these are all current plugins that are maintained still.\n\n**Primary Domain** \\- Installed one plugin 'CMP – Coming Soon & Maintenance Plugin' along with an addon for this plugin (It's a styled/custom theme for the coming soon page)\n\n&#x200B;\n\n**Google Review Request**\n\nI submitted a review request with Google Yesterday after i had done all this.\n\nThis morning (24/04), i logged into search console and it's still flagged. The sample URL's that where in the list yesterday have now gone, however the list now shows two sample urls from the addon plugin for the coming soon page?\n\n' wp-content/plugins/cmp-premium-themes/orbit/js/anime.min.js '' /wp-content/plugins/cmp-premium-themes/orbit/js/demo4.js '\n\nNo idea as to why they've been flagged?\n\n**What i've done this morning**I've once again wiped the WordPress install on the affected domain, re-installed Wordpress via CPanel and just left it like that.\n\nThere are no active plugins on the site now. The plugin list is empty. It's as stripped back as it can be.\n\n&#x200B;\n\n**Google Review Request - Again**  \nI've submitted another review request this morning in hope this will lift the 'Dangerous/Deceptive site' element.\n\n**Report Incorrect Phishing Warning** \\- I've also filled this out today too, basically explaining that i now believe that the warning is incorrect.\n\n&#x200B;\n\n**TLDR:** Site was hacked. Cleaned the server. Reinstalled WP with one plugin. Google now flagging the addon/theme of this plugin? Wiped again and resubmitted",
        "score": 9,
        "url": "https://www.reddit.com/r/webdev/comments/g75uce/google_deceptive_site_warning_what_a_nightmare/",
        "num_comments": 10,
        "comments": [
            {
                "body": "Requesting reviews can take a few days. If you let yourself get hacked once, there's no need to keep rebuilding and so on, you probably just need to wait it out from what you've said.",
                "author": "disclosure5",
                "score": 5
            },
            {
                "body": "Got any addon/subdomains in the account which are gathering dust? Those can be an entry point. Once one site is compromised you have to assume all others in the account are too. If you get any further problems you should probably get some professional help.",
                "author": "stfcfanhazz",
                "score": 2
            },
            {
                "body": "Personally I have a completely separate .dev domain that I use for all development work. Just means that worse case if something goes wrong with a development domain (or subdomains)then  it won't affect my actual business websites. Also means that if a misconfiguration or crash happens on a development domain it doesn't pull down anything important. Domains are super cheap so no reason why not. \n\nDoesn't really fix your problem (the answer with Google is always just time), but could be useful in future.\n\nEDIT: As a sidenote, I use the exact same approach in terms of server structure - one server for everything LIVE, on server for everything in development.",
                "author": "sjclark",
                "score": 2
            },
            {
                "body": "Maybe it's your hosting company lol. Hosting companies can certainly get hacked.\n\nJust guessing tho. Also if you have outdated WP plugins then you probably shouldn't leave it on a public domain.",
                "author": "Web_Designer_X",
                "score": 1
            },
            {
                "body": "Looks like it's been cleared.\n\nI'm wondering if the incorrect phishing report helped speed the process up this time.",
                "author": "jbennett360",
                "score": 1
            },
            {
                "body": "As i mentioned above.\n\n**One addon domain** \\- which had a really outdated theme on it (Version from 2016) and a few plugins that have been abandoned and one that had been pulled from the WP Repo. So, i'm fairly confident it's got in through this.\n\nDid have a three sites on the **dev. sub-domain.**\n\n1. **Being worked on -** Had a backup of this from the middle of March (*Manual backup made with Duplicator, stored locally*), so i installed that on a different domain/host, updated everything as soon as i installed it.\n2. **Being Worked on -** I didn't have a backup of this that far back as its a new-ish site. (I recreated that from scratch on the other domain/host too.\n3. **Not Being worked on -** Development has stopped indefinitely on this one, however this was up to date as of 27th March, with an offline backup from that date too.\n\nAll these three have been deleted off the subdomain along with the DB and DB User. The sub-domain is now empty.\n\nMain domain and addon domain, both nuked, wiped, everything deleted, including DB and DB User, Fresh install of WP on both.\n\nI've rebuilt the addon domain with a new up to date theme (Salient) and that has 3 plugins, all of which are current and maintained.\n\nThe 'Problematic' domain, Clean install with a holding page plugin on.\n\n  \n**24/04 - 1pm**\n\nThe warning now seems to have gone from the domain, and search console there are no issues.",
                "author": "jbennett360",
                "score": 1
            },
            {
                "body": "In my case it was more an issue of something going wrong with an outdated live domain, and me not wanting it to effect development sites.\n\nI've shifted the two development sites onto another domain and host (Using a 5 week old backup for one and recreating the other) and I'll probably keep it like this going forward. One host for the two live sites I have of mine and another for the all dev related bits.\n\nGoogle seems to be okay now. Sorted itself out around 18 hours ago. Checked it this morning and it's all still up and running, will keep an eye on it over the next few days.\n\nLesson learnt. Remember to always keep themes/plugins up to date and remove dead/no longer maintained plugins too",
                "author": "jbennett360",
                "score": 1
            },
            {
                "body": "Yeah. I acknowledge that and like I've said, that add-on domain with a 4 year out of date theme and a few/dead abandoned plugins will have been the entry point.\n\nI did Google one of the plugins, (the one that had been removed from the WP Repo) and there was an exploit/vulnerability with the last version, which is why it probably got pulled - this is the version that was sat on this site.\n\nRe:Hosting\nMaybe yeah. Although Krystal.uk are regarded as a really good host here in the UK so I can't see it being that!",
                "author": "jbennett360",
                "score": 1
            },
            {
                "body": "I'm mean personally I steer 100% clear of Wordpress for those exact reasons - often just an unavoidable maintenance stack of cards. But good lessons nonetheless!",
                "author": "sjclark",
                "score": 1
            },
            {
                "body": "I've been using it for the best part of 8 years now. This is first time ive personally had an issue. Know one or two who have issues and again, that was down to severely outdated/vulnerable themes/plugins. (4/5 years plus)",
                "author": "jbennett360",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1759211524.0,
        "title": "Confused About Cookie Consent: What’s the Right Approach for SaaS Platforms?",
        "author": "HexFalcon_KWT",
        "id": "1nu59c6",
        "selftext": "Guys I don't understand about these cookie policy pop ups, I explored many websites that do not show that as a pop up or obtain user sort of concent, specially with some tracking and analytical cookies + session recordings, they just mention it in their privacy policy, and some other websites which does try to get users concent, but if the usees never interact with that pop up/consent, those websites lose out on analytics, etc.\n\nAnd then others just show the message and request to press OK or Learn More, most have a clear pop up with a message and options such as:  'Accept all' , 'Reject non-essential' and 'Manage preferences'.\n\nQuestions is how to know which one to approach, how to balance it without any issues later?\n\nIf you have an understanding in this field, let me know for generally and also for Job board platform which is dealing with a lot of private information.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1nu59c6/confused_about_cookie_consent_whats_the_right/",
        "num_comments": 7,
        "comments": [
            {
                "body": "There are two things about cookie consent that sticks out (at least to me):\n\n\n1) requirements are location based and it varies a lot. Meaning if you visit a website but you're in Europe, you expect to see a banner to opt in each tracker. If you're visiting a website from California, you expect to see a button to just opt out. It does not matter where YOUR website is based in, it's based on where the user is visiting from. As you can see, it gets confusing really fast so if you want to be super safe, you go with the most strict requirement which I think is GDPR right now\n\n\n2) how risk averse the website is. Typically most websites are so small, it's not reasonable or feasible to pursue actions against if they don't have the cookie consent (but not saying someone won't if they really wanted yo)",
                "author": "Brother_Necessary",
                "score": 2
            },
            {
                "body": "GDPR (at least it's meant to) covers European citizens - regardless of their location.  \nIf that can be usefully evaluated is on another page.",
                "author": "RecognitionOwn4214",
                "score": 2
            },
            {
                "body": "If you want to play it safe, you go with the stricter requirement which is GDPR at the moment, correct me if im wrong",
                "author": "Ashes_0000",
                "score": 1
            },
            {
                "body": "If you put something unique on a user's device that allows you to track the user across page views, you have to display the banner, period.\n\nOn the other hand, if you don't need to track unique users or sessions, and are fine with tracking page views only, or you are doing server-side analytics, then you don't need a cookie banner.",
                "author": "repawel",
                "score": 1
            },
            {
                "body": "GDPR is made for European people - it's not relevant, if they are in California or France...\n\nBesides that consent is only needed when there are optional cookies like ad trackers or telemetry. Technical required ones as login or language select is always okay.",
                "author": "RecognitionOwn4214",
                "score": 1
            },
            {
                "body": "i understand there are nuances (again, makes everything confusing) but I thought GDPR does not protect Europeans if they are in countries outside the EU?",
                "author": "Brother_Necessary",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1667505922.0,
        "title": "Can you not be GDPR compliant and handle cookie consent without having a 3rd party cookie management platform taking care of it?",
        "author": "ValdemarSt",
        "id": "yld7ms",
        "selftext": "After much research, and seeing how big websites handle cookies, it doesn't seem like there's a way to do it yourself. Can this be true?\n\nI would've thought it was just about setting Google Tag Manager up the right way in order to let the cookies trigger depending on what the user selects, but I haven't found an example or tutorial of someone doing it.\n\nAny pointers or info on this is greatly appreciated.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/yld7ms/can_you_not_be_gdpr_compliant_and_handle_cookie/",
        "num_comments": 5,
        "comments": [
            {
                "body": "Be careful with big web sites. I'm not sure what you consider big, but there are a lot of cookie consent forms that aren't GDPR compliant!",
                "author": "FilmWeasle",
                "score": 5
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 4
            },
            {
                "body": "You absolutely can manage your own cookies without using a third party thing, but it certainly is more complicated.",
                "author": "lord2800",
                "score": 2
            },
            {
                "body": "It also means if a user click on a button that use some feature he has not accepted, the code must handle that case. It can display an error popup, hold until acceptation, fail silently, or skip some optional steps.",
                "author": "Blue_Moon_Lake",
                "score": 1
            },
            {
                "body": "You can handle cookie consent management without using a third-party tool, however, you may run into complications. If you have a website that will attract a lot of traffic in the future, it’s just easier to use a third-party CMP and steer away from potential legal risks.   \nA cookie consent tool not only helps you display a cookie banner but also \n\n* Drops/block cookie categories based on consent preferences\n* Supports DNT settings\n* Integrates with GTM and Google Consent Mode\n* Collects and aggregates consent from visitors\n* Store cookie consents for proof",
                "author": "cookieyesHQ",
                "score": 1
            },
            {
                "body": "You need to provide facility for people to delete the data you hold on them.",
                "author": "RonanSmithDev",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1749039259.0,
        "title": "GDPR only on Specific Pages or Entire Domain",
        "author": "diilym1230",
        "id": "1l33zms",
        "selftext": "I manage advertising for a UK-based company. We’re trying to apply GDPR consent only to specific URLs used for Microsoft Ads. I’ve implemented this setup, but we’re not seeing conversions populate in the Microsoft Ads platform.\n\nMy suspicion is that this issue is related to our GDPR consent tool—Usercentrics (Cookiebot)—which is currently only implemented on the pages used for Microsoft Ads.\n\nIs this likely the cause of the missing conversion data? Do we need to deploy Usercentrics across the entire domain for conversions to track properly?",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1l33zms/gdpr_only_on_specific_pages_or_entire_domain/",
        "num_comments": 3,
        "comments": [
            {
                "body": "If you have pages with no 3rd party tracking, then those don't require asking for consent.\n\nYou are allowed 1st party required cookies without asking.\n\nIt's probably better to just apply to the whole domain, because otherwise you can't show \"consented ads\" on the first page load on your pages with ads.",
                "author": "AdequateSource",
                "score": 2
            },
            {
                "body": "Can’t answer your specific question, but doesn’t GDPR require consent for every page?",
                "author": "terfs_",
                "score": 1
            },
            {
                "body": "Treat consent globally. Why not. Sounds like a hassle doing it per route.",
                "author": "Raymond7905",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1716320000.0,
        "title": "Cookie Consent: Cookies Firing before User Clicks Accept",
        "author": "AnnieArley",
        "id": "1cxgker",
        "selftext": "I’m installing Consent Management Platforms for Cookie Banners/Preference Management Centers on a few of my sites. All of these businesses are in the US and need to be CCPA/CPRA compliant.\n\n \n\nOne site is using TrustArc, another CookiePro, and another Termly. The site with TrustArc has the script installed into the head of the site. We followed the documentation and chose not to use the GTM implementations.   \n\n\nCookiePro and Termly are using the WP plugins—all I had to do was drop in the API key. I’ve configured my settings appropriately and I’m testing.\n\n \n\nWhen I inspect on Chrome and look in the application tab in the panel, cookies are showing up before I click accept. When I do click accept it shows more. If I click decline it shows a few less.\n\n \n\nIn theory, cookies should not be showing up at all until I click accept (or scroll for implied consent). Why is this happening? How do I get it to stop?\n\n\n\nTwo other things:\n\nI’m in NJ—could it possibly be a geolocation rule? There is no Data Privacy legislation in my state.\n\nAny insight is much appreciated!",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1cxgker/cookie_consent_cookies_firing_before_user_clicks/",
        "num_comments": 9,
        "comments": [
            {
                "body": "did you test this in incognito? could be the cookies already set in your cache, if not this, i suspect something was not properly configured in the third party dashboard. I know termly you have to tag & categorize your scripts based on type such as functional, targeting, performance etc.  certain cookies are except if they are required for the site to work, so it may be all your scripts are being groups as functional/necessary.",
                "author": "d0rf47",
                "score": 3
            },
            {
                "body": "What cookies show up before? You can use cookies before the user agrees, it just can't be for user/ad tracking purposes. If it's a cookie like \"IsLoggedIn\" = false or \"AgreedToTracking\" = false, then you don't need permission. You need it if you are doing something like \"UserID\" = 1234, and then you are tracking what that person does on the backend.",
                "author": "IsABot",
                "score": 3
            },
            {
                "body": "the only other thing I can think is the order of the scripts then. If you're loading scripts in before the blocker has run those scripts will get loaded no matter what. your blocker should be the first script import.",
                "author": "d0rf47",
                "score": 3
            },
            {
                "body": "I cleared my cache and tested in incognito. I just used the default categories TrustArc and CookiePro assigned each cookie when it did the scan. \n\nI can change the categories, but how could their scans be wrong?\n\nMy biggest offenders are _ga, _gid, and a couple of Cloudflare cookies\n\nThank you!",
                "author": "AnnieArley",
                "score": 2
            },
            {
                "body": "I cleared my cache and then went into incognito mode. \n\nHere’s what is showing up with TrustArc before consent:\nTAsessionID\n__cf_bm (showing up 4 times)\n__hssc\n__hssrc\n__hstc\n_cfuvid (showing up twice)\n\nCookiePro/OneTrust:\n__cf_bm\n_ga\n_gid",
                "author": "AnnieArley",
                "score": 2
            },
            {
                "body": "TrustArc has given me the regular script but then also an auto block script. Do I need both, or can I just put their regular script at the top?\n\nTrustArc support is not the best and communicating with them has left me more confused than when I started.",
                "author": "AnnieArley",
                "score": 2
            },
            {
                "body": "the auto block is what stops yours from loading so you most likely need the blocker to run first then once you get the consent the other scripts should load properly.",
                "author": "d0rf47",
                "score": 2
            },
            {
                "body": "It's so annoying I hide those warnings with Stylish.\n\nWorst part is all sites use different classes, or even only tailwind.\n\nThere should be law that says to use specific class or aria-label… so I could hide with it.\n\nBut the law about cookies warning itself is stupid.",
                "author": "TheRNGuy",
                "score": 1
            },
            {
                "body": "Here are some of what those mean: CloudFlare, Hubspot, Google Analytics\n\nhttps://cookiedatabase.org/cookie/cloudflare/__cf_bm/\n\nhttps://cookiedatabase.org/cookie/hubspot/__hssc/\n\nhttps://cookiedatabase.org/cookie/google-analytics/_ga/\n\nSome of these I don't think should activate before agreement. I would try some other plugins instead.",
                "author": "IsABot",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1711494972.0,
        "title": "PSA: Vultr's new TOS gives them full rights to resell your website/app/database contents/etc.",
        "author": "WyvernCo",
        "id": "1bomfne",
        "selftext": "Last week, when I tried to sign in to my Vultr account I was greeted with a popup demanding that I accept a new TOS to continue.  Being a completely normal person who reads TOS documents when asked to, I skimmed the new TOS to see if there was anything objectionable.\n\nUnfortunately, **the new agreement is requiring us to fork over rights to our apps/software for anything hosted on the Vultr platform**.  That goes way too far.  No other datacenter company requires this. \n\nHere is the relevant section from Vultr's new TOS:\n\n> information, text, opinions, messages, comments, audio visual works, motion pictures, photographs, animation, videos, graphics, sounds, music, software, Apps, and any other content or material that You or your end users submit, upload, post, host, store, or otherwise make available (“Make Available”) on or through the **Services** (collectively, “Your Content,” “Content” or “User Content”).\n\n> ...\n\n> You hereby grant to Vultr a non-exclusive, perpetual, irrevocable, royalty-free, fully paid-up, worldwide license (including the right to sublicense through multiple tiers) to use, reproduce, process, adapt, publicly perform, publicly display, modify, prepare derivative works, publish, transmit and distribute each of your User Content, or any portion thereof, in any form, medium or distribution method now known or hereafter existing, known or developed, and otherwise use and **commercialize the User Content in any way that Vultr deems appropriate, without any further consent, notice and/or compensation to you** or to any third parties, for purposes of providing the Services to you.\n\nThis is NOT standard contract language for web services.  I don't know of anywhere else that requires this.\n\nFor comparison, Digital Ocean specifically limits this clause to uploads on their website (ie, for community articles, forum posts, etc), not for all hosted services (which would include virtual machines, databases, etc).  Additionally, commercialization rights are not granted and it is not perpetual:\n\nDigital Ocean TOS Excerpt:\n\n> We will periodically differentiate between our websites such as digitalocean.com (which we will refer to collectively as the “Websites”) and all of our other services, such as our cloud infrastructure and other paid services (which we will refer to collectively as the “Services”).\n\n> ...\n\n> By providing your User Content to or via the **Websites**, you grant DigitalOcean a worldwide, non-exclusive, royalty-free, fully paid right and license (with the right to sublicense) to host, store, transfer, display, perform, reproduce, modify for the purpose of formatting for display, and distribute your User Content, in whole or in part, in any media formats and through any media channels.\n\nThough requesting limited permissions for the purposes of user uploads on a forum or other community site is fairly standard, it is not reasonable for a service provider partner to require full, irrevocable commercial rights of anything hosted on their services.  That'd let Vultr take and monetize customer databases, apps, software, etc. which almost every business would likely find objectionable.  Vultr needs to restrict their request as is done elsewhere in the industry.\n\nHere is another example -- AWS does not have such broad terms, except for their generative AI product:\n\n> 50.12.7. PartyRock Apps. “PartyRock App” means any application created or remixed through PartyRock, including any app snapshot and all corresponding source code. By creating or remixing a PartyRock App, you hereby grant: (a) AWS and its affiliates a worldwide, non-exclusive, fully paid-up, royalty-free license to access, reproduce, prepare derivative works based upon, transmit, display, perform and otherwise exploit your PartyRock App in connection with PartyRock; and (b) anyone who accesses your PartyRock App (“PartyRock Users”), a non-exclusive license to access, reproduce, export, use, prepare derivative works based upon, transmit, and otherwise exploit your PartyRock App for any personal purpose. We may reject, remove, or disable your PartyRock App, PartyRock alias, or PartyRock account at any time for any reason with or without notice to you. You are responsible for your PartyRock Apps, PartyRock Data, and use of your PartyRock Apps, including compliance with the Policies as defined in the Agreement and applicable law. Except as provided in this Section 50.12, we obtain no rights under the Agreement to PartyRock Data or PartyRock Apps. Neither AWS, its Affiliates, nor PartyRock Users have any obligations to make any payments to you in connection with your PartyRock Apps. You will defend and indemnify AWS and its Affiliates for any and all damages, liabilities, penalties, fines, costs, and expenses (including reasonable attorneys’ fees) arising out of or in any way related to Your PartyRock Apps or your use of PartyRock. Do not include personally identifying, confidential, or sensitive information in the input that you provide to create or use a PartyRock App.\n\nNote how the license grant doesn't infect the rest of AWS offerings, but is only restricted to their AI product offering \"PartyRock\".  \n\nIt's possible Vultr may want the expansive license grant in order to do AI/Machine Learning based on the data they host.  Or maybe they could mine database contents to resell PII.  Given the (perpetual!) license, there's not really any limit to what they might do.  They could even clone someone's project and sell their own rebranded version, and they'd be legally in the clear.\n\nI sent my objection to Vultr support, but I've just been getting the run around so far.  I've been trying to get them to at least let me access my account without agreeing to the new TOS so I can migrate out to another provider, but I'm now on day 5 of being locked out with no end in sight.  Migrating all my servers and DNS without being able to login to my account is going to be both a headache and error prone.  I feel like they're holding my business hostage and extorting me into accepting a license I would never consent to under duress.  I'm self employed and the product I host (currently) on Vultr is what pays my rent, so not being able to manage it is a pretty serious concern for me.\n\nAnyway, I don't know what Vultr's plans are, but I think it's definitely worth pushing back on this overly expansive license grant they're giving to themselves.  If Vultr gets away with it, other hosts may try to sneak it into their contracts, too",
        "score": 13,
        "url": "https://www.reddit.com/r/webdev/comments/1bomfne/psa_vultrs_new_tos_gives_them_full_rights_to/",
        "num_comments": 1,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1691200513.0,
        "title": "I cannot register a handful of domains I own on DigitalOcean because \"Domain name already exists\"",
        "author": "lewz3000",
        "id": "15iis5x",
        "selftext": "My guess is there already is a DO user who has registered these domains on their account. Even though these domains have in all likelihood never been owned by this person or anyone for that matter. One of them is my legal name .com ffs. So I'm guessing there is a malicious DO user who is just registering newly purchased 3rd-party owned domains and Digital Ocean doesn't seem to have any verification mechanism in place to prove that you are indeed the owner of the domain you're trying to register.\n\nI've tried repointing these domains to my registrar's default name servers (Namecheap) and then after propagation registering the domains again but no luck as they are already registered by another user who doesn't own them (me thinks).\n\nWhat can I do? Trying to open a support ticket with DO but no luck.",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/15iis5x/i_cannot_register_a_handful_of_domains_i_own_on/",
        "num_comments": 7,
        "comments": [
            {
                "body": "I don't use digital ocean, so I'm not sure what you mean by \"registering a domain\" with them. But for the lingo surrounding domains, usually once a domain is registered, you're then just transferring registration to someone else. It sounds like you're trying to do a new registration.",
                "author": "tridd3r",
                "score": 10
            },
            {
                "body": "Why are you trying to register domains you have already registered elsewhere?\n\nJust add dns records at Namecheap to point the domains at your VPS.",
                "author": "WhyCheezoidExist",
                "score": 6
            },
            {
                "body": "To be clear, no one ever OWNS a domain name; domain names can only ever be REGISTERED.\n\nOnce you Register a domain name, it is yours for the full term of that Registration, and no one else can Register it (unless you consent to Transfer the Registration to someone else).\n\nAs soon as you allow that Registration to expire/lapse, you lose any claim to it (beyond a certain grace period), and someone else can then Register it for themselves. After that, you cannot re-Register it in your own name, without the consent of the current Registrant.",
                "author": "CampWestfalia",
                "score": 1
            },
            {
                "body": "You can only try your luck with DigitalOcean as they are the platform you are having problems with.",
                "author": "Master-Variety3841",
                "score": -1
            },
            {
                "body": "You do realise there may be someone on earth with the same legal name as you? I know one group of 3 people and another couple of people with the exact same full name. Two of them were even in the same class for a while.\n\nAlso, as someone said, it's weird that you're trying to register a domain you already own? Probably something specific to Digital Ocean where registration means something else. But if you're actually trying to register domains you don't own and find it odd that someone else already has them, I'd suggest using \"searching domain names\" as a pass time, you'll realise that almost everything that sounds good with what you'll usually search for is taken. We are 8 Billion humans after all.",
                "author": "Pingouino55",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1683911802.0,
        "title": "Found a great way to handle cookies and render blocking scripts",
        "author": "numuso",
        "id": "13fr7og",
        "selftext": "I had some issues figuring out how to load 3rd party tracking scripts like Google Analytics without render blocking killing page speed. The advice on forums and blogs included all sorts of random timing delays and scroll or interaction event triggers - way too complicated for something so trivial IMO.\n\nAdding to that, dealing with GDPR consent pop ups. I’ve used cookie-bot and a few others, but also adds to the page delay because you have to load their scripts too. \n\nI stumbled across Cloudflare Zaraz - and although it’s only in beta, it’s super useful. Basically, instead of putting the JS in your headers, you can offload 3rd party scrips to their cloud, and injecting the scripts without interfering with load speeds. The interface is a more simple version of google tag manager, a little rough around the edges.\n\nIt also comes with a consent manager that you can use to inject a pop up, quite rudimentary and requires a little CSS to make it look a little more on brand — but overall, very impressive platform. Page speed is now 100% across mobile and desktop, whereas before Zaraz, I had 83% on mobile.\n\nIt does make it easier if you are proxied through Cloudflare on DNS, I use the Pages hosting so integration is dead simple — however, they do support manual loading outside of Cloudflare too (see docs link below).Hope this helps, because I know how much we all love dealing with cookies.\n\nHere is a link to the docs: https://developers.cloudflare.com/zaraz/",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/13fr7og/found_a_great_way_to_handle_cookies_and_render/",
        "num_comments": 2,
        "comments": [
            {
                "body": "We all love Cloudflare but this reads like an ad. On a similar topic, I’ve been meaning to check out builder.io’s partytown library",
                "author": "phoenix1984",
                "score": 5
            },
            {
                "body": "Ha! We’ll, maybe I should be in advertising. Definitely not a Cloudflare fanboy or fanatic, but this particular service does actually solve a major problem I’ve always had with loading scripts - so I thought I’d share it.\n\nI assume you’re talking about https://partytown.builder.io/ — looks great! Only difference is not having a built in GDPR pop up, but that’s ok.",
                "author": "numuso",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1605408224.0,
        "title": "I wrote a Web 4 Manifesto detailing where I think the web should be headed. Requesting feedback before I publish it.",
        "author": "currentXchange",
        "id": "juekrg",
        "selftext": "# What is Web 4?\n\nWeb 4 is a set of four **modular paradigms** and practices that allow integration of **provable democracy in any social system** that seeks to be more collaborative (organization, government, community, etc.). Modularity allows any project to adopt one or more of these principles to **increase the accuracy, fairness, and transparency** of each individual's role in **collaboration**. \n\n# [Read on Github](https://github.com/dougbutner/web-4)\n\nWeb 4 is **built on top of web 3** (it's blockchain-based) while being **fundamentally different** and providing enough **benefit to society** warrant the new title of web 4. \n\nIn essence, web 4 is **positive attention catalyzer**, built on providing power to every that only gains meaning when they give it freely to another. This power is also freely given, and limited by time. \n\n> Web 4 combines real-world components like time and geography with existing blockchain technology.\n\nIn this manifesto, I will define each of the **components** of web 4, provide **psudeocode** to illustrate the minimum integration into web 2/3, introduce the **benefits to society**, and offer a **roadmap** to adopting these concepts.\n\n# Background\n\nBefore we detail web 4, we must look briefly at the concepts of web 1, web 2, and web 3. \n\n - **Web 1**\n**Static web**. Files are served from a remote server to a user's browser.\n\n - **Web 2**\n**Dynamic web**. Web pages take a user's information and desires into account to build a unique experience for them. Asynchronous requests allow single page applications to thrive. Applications are still served from a central server.\n\n - **Web 3**\n**Decentralized web**. Applications, often open-source, exist in distributed networks instead of a central server. This unfederated model trades control and censorship ability for freedom and autonomy. \n\n - **Web 4**\n**Democratic web**. Time-limited cryptographic tokens are given to each individual, and used as a measure of opinion or desire in collaborative systems.\n\nToday, the top 100 websites by traffic are [all](https://www.alexa.com/topsites) web 2 websites. The web 2 paradigm fits closely with the wider environment of **corporate-owned information.** \n\nAs more and more individuals and societies are reconsidering the place of **government, censorship, centralization and federated power**, web 3 has emerged as a powerful, provable option to shape the evolution of society on planet Earth. \n\nA growing portion of web 2 websites and applications today have elements of web 3, like [cryptoblogs](https://peakd.com) and [games](https://www.stateofthedapps.com/rankings/category/games). While web 2 and web 3 can operate independently, web 3 enhances the abilities of web 2. Similarly, web 3 and web 4 can operate independently, but it makes the most sense for web 4 to be built on blockchain tech to gain the benefits of reliability and transparency. \n\n## Guiding Philosophy\nWeb 4 seeks to implement [biomimetic](https://biomimicry.org/what-is-biomimicry/) systems in **harmony with the universe itself** by replicating nature: the **abundance** of the Sun, rising **entropy**, and the **equality** of each human being. \n\nI believe when we create information systems in **harmonic resonance** with natural systems, our society will be able to advance more rapidly than ever before, as we will be able to **synchronize energetically** with the larger systems of information processing around us (the Earth, Sun, and Galactic core). \n\n\n## Defining Web 4\nWeb 4 introduces **four modular components** for **provably democratic systems** built on top of web 3's open-source decentralized networks. \n\n### There are four conceptual underpinnings (modules) of web 4\n\n 1. **Time-issued cryptocurrency** \n\t Individuals may receive \"Time Tokens\" at given intervals, but never more frequently, and can't hold another's time tokens.\n 2. **Proof of Individuality**\n\t Biometric Secrets, Social Verification, Proof of Liveness, etc\n 3. **Pseudonymity and Information Entropy**\n\t Information degradation over time, pseudo accounts in sensitive systems\n 4. **Harmonic GeoSocial Systems**\n\t Fair, transparent collaboration through accounting the opinions and desires of participants\n\nEach module can be used separately or in tandem. This paper invites you to involve any of these ideas into your current and future projects. We will discuss these concepts one at a time, but first let's examine why we need them in the first place. \n\n\n# Why we can't have Provable democracy with web 3\n> Provable democracy cannot be fully achieved in web 3 itself because there is intentionally no limit over how many accounts a user may control.\n\nDemocracy is essentially reaching a consensus with the idea that **each person is equal** in their influence on that consensus within defined bounds.\n\nMany different consensus models have been developed in web 3, most notably, [proof of work](https://www.ledger.com/academy/blockchain/what-is-proof-of-work) (**POW**), [proof of stake](https://www.ledger.com/academy/blockchain/what-is-proof-of-stake) (**POS**), and [delegated proof of stake ](https://academy.binance.com/en/articles/delegated-proof-of-stake-explained)(**DPOS**). These paradigms of consensus are used primarily to determine which chain of transaction records (blocks) is considered valid, \"securing\" a blockchain. \n\nPOS and DPOS is additionally used to in projects like [**Hive**](https://peakd.com) to allow users to \"vote\" on valuable content, an early example of the democratic web. DPOS is also used for networks to determine who can access network resources, such as in [EOSIO blockchains](https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md).\n\nHowever, both of these POS/DPOS use cases (curation and resource allocation) are not democratic in the sense that **each account is not equal**. In both cases, the root of democracy is in the token, not the individual, and the ownership of tokens determines the voting power or computing power held by an individual. \n\nIn the end, the only way to implement true democracy in any system is through giving **each individual equal power**. The only way to do this while keeping web3's decentralized nature is to implement the technological (biosecrets) and idealogical (time tokens) advancements needed to be sure an account is owned by **one individual**, and that individual has **only one account**. These advancements  are, for simplicity and communication, called web 4. \n\n___\n# **<center>**1**</center>**\n\n___\n\n\n# Time-issued cryptocurrency (Time Tokens) \n\nTime tokens may be distributed to users' wallets periodically as time passes, or offered to be claimed manually. They work by hashing a unique personal identifier (address) with a time identifier, linking each token to a **person and a span of time**.\n\nThese tokens provide the user with a function or action. The action burns the token, which may cause some change in the state of a system, minting of another token, or any other action. \n\n## The Gears of Time Tokens\n\nTime tokens rely on the following concepts:\n\n 1. **Time Unit**\nA time unit MUST be a superset of a timestamp. This means that a time unit is some amount (or fraction) of seconds. Each time token MUST be the only one in existence stamped with a particular time unit for each user (wallet). Thus, each time token is unique and semi-fungible.\n 2. **Time Token Faucet**\nA time faucet offers any verified user EXACTLY one time token per unit of time passed since their last faucet. This can be an active faucet; requiring some action by the recipient, or a passive faucet; automatically sending the cryptocurrency to the user.\n 3. **Verified Recipients**\nRecipients of the system MUST be verified to be an actual human in order to receive time tokens. \n\nFor a full description of Time Tokens, visit the  [Time Token repository](https://github.com/dougbutner/time-token). \n\n\n## How do Time Tokens work?\nTime tokens store a time unit (integer) with a unique user identifier (string) in a hash signed by the user's biocryptographic signature.\n\nTime tokens are platform independent, and need only store simple data involving time unit and an account identifier at the most bare level.\n\nHere is the minimum information stored in a time token, using [JSON Web Token (JWT)](https://jwt.io/introduction/) as an example\n```\n{\n  \"header\": {\n    \"typ\": \"JWT\",\n    \"alg\": \"HS256\"\n  },\n  \"payoadData\": {\n    \"time-unit\": 294957,\n    \"userid\": \"7f3e873a2c3d\"\n  }\n}\n```\nBelow is a brief pseudocode example of how one could use a signed time token as a JWT.\n\nSee Appendix A for more detailed pseudocode of a time token. \n```\nconst passedBioData = {..} // biodata from user\n\nconst header = {\n        \"typ\": \"JWT\",\n        \"alg\": \"HS256\"\n      }\n\nconst payloadData = {\n\t\"time-unit\": \"294957\", \n\t\"userid\": \"7f3e873a2c3d\", \n\t\"appData\": {\n\t\t\"gold\": 479,\n\t\t\"honey\": 23,\n\t\t\"axe\": 0 \n\t}\n}\n\nconst bioSecret = bioKeyGenerator(passedBioData); // Biometric provider's key or one generated direcly by user\n\n// --- Here we have the signature, to be used for any purpose --- \\\\\nsignature = HMACSHA256(\n\tbase64UrlEncode(header) + \".\"+\n\tbase64UrlEncode(payloadData), \n\tbioSecret\n)\n\n\nfunction bioKeyGenerator(bioData){\n\t// Function takes data in the form of user input into their browser or smartphone.\n\t// Data is normalized (explained in Appendix A, not shown here)\n\tbioSecretChecked = bioData;\n\t// Return biosecret \n\treturn sha256(bioSecretChecked)\n}\n\n\n```\nThe notable parts here are the `time-unit` and `userid` in the payload, and the `bioSecret` which is generated by a user's biometric data.\n\nWe have said we web 4 is based on web 3 (blockchain), but this example intentionally used  **web 2 technology**, so the ability to do it is at all begs the question:\n\n\n## Why can't web 2 be used for Time Tokens?\n\nOf course it can! It's just not viable to fulfill all principles of web 4, but can be done to an extent. \n\nWeb 2 is not a viable candidate for **provable democracy** because the federated nature means that your biometric data **must be trusted** to a third party, possibly a government, large corporation or malicious actor. Time tokens do not rely on blockchain technology, but benefit from it to remove trust and add transparency. \n\n___\n# **<center>**2**</center>**\n\n___\n\n# **Proof of Individuality - Biometric Secrets + Protecting Identity**\n> **Please Note:** There are solutions available today (like [FaceTec](https://www.facetec.com/)) that solve the same issues presented here. This paper seeks to outline a \"better\" system (decentralized + open source) that can be ran without a centralized actor, while not providing specifics to accomplish these goals.\n\n**Biometric secrets** are akin to any cryptographic secret key, they are a hash of information. The information hashed in a biometric secret comes from a person's biometric expression. In today's biometric space, static images are most commonly used for things like fingerprint and facial recognition, and geometry is the means to compare this data. \n\nBiometric secrets generated from static images are not secure, as static images can be faked. [2] Video offers a better solution to this problem, as it is harder to fake, can include audio, and lets developers create a whole new set of algorithms based on a changing stream of data. [Facetec](https://www.facetec.com/) is one company using video for biometric verification. \n\n### What is used to generate a biosecret?\nThis stream of data (video + audio biometric expression) could be a user doing a series of hand gestures, singing a part of a song, speaking a phrase, speaking a phrase in different voices, clapping, making a series of facial expressions or movements, or anything else one can imagine.\n\nFor security, biometric expressions must be unique (for example, which combination of words to speak) and many types (gesture, singing, clapping) must be available and used in combination. If each person's biometric secret was generated from the same single biometric expression, it would be a matter of time before specific AI could be developed to deepfake it for anyone. If the user is the only one that knows their biometric expressions it becomes nearly impossible to guess the type and nature of the expression, and even if that is known, difficult to use the same technique on more than one account. The nature of the uniqueness could be chosen by the user, or generated at random from the biosecret software which would prompt the user to complete an action in a specific way. \n\n## Why do we need this, again?\nDemocratic systems certainly are being built without biometric verification, and will continue to be until suitable biometric technology develops along the open source, client-side requirements. For now, **decentralized solutions** like [Civic](https://www.civic.com/), and centralized tech like [Facetec](https://www.facetec.com/FaceTec_3D_Face_Matching_Whitepaper.pdf) provide the necessary individuality at the cost of trust and requirement of citizenship. As different projects implement web 4 in their own ways, the ideas presented thus far will develop as flaws are found. \n\nWe will present the ideas that are crucial for this system to be different, and represent true growth into web 4.\n\n\n**Key Aspects** \n1. **Biometric Expression**: A user is presented with a choice of different biometric options used to generate a hash that can only belong to this person. \nUser can choose to either perform a chosen biometric task to receive their hashed biosecret (trustless) or generate it at any time from a third-party provider (trust). Any third-party provider will generate the same hash by a set of open-source algorithms. \n\n2. **Biosecret Generation**: User's sensitive biological information and generated algorithmic results are destroyed (made impossible to reconstruct) at the layer of hashing, and data not stored in any way, public or private, as the user runs the software on their local machine (assuming they choose the open-source software, not a third party).\n\nThe biggest issue with biometrics is the lack of trust, mostly due to the growing number of facial recognition softwares and databases. The lack of trust is almost always associated with an individual's lack of consent, not the technology itself. \n\n### To alleviate the trust issue, solutions must be: \n1) open-source\n2) ran entirely on the individual's hardware (client-side), and \n3) not expose any biometric data to any other users or the system itself. \n\nThere will always be **security concerns** with biometrics. For example, if a user uses their biometric secret to unlock their mobile device, another app could be secretly recording the camera in the background. A person could record them doing their secret, and try to play that video back to the camera to gain access. Also, *[deepfakes.](https://github.com/aerophile/awesome-deepfakes)* exist. These concerns must be addressed before this module of web 4 reaches mass adoption. \n\nThe upside of biometric secrets is they **cannot be lost**, and the account will always be recoverable by the individual. In a web 4 ecosystem, where the tokens are distributed daily and often spent daily, a hack would be much less catastrophic. The attacker will be able to access the user's balance, but not alter the past transactions, nor continue to collect the future deposits, because the real user will (in theory) quickly recover the account and change the biometric secret generation means so that the hacker's biofake is no longer working. \n\n___\n# <center>**3**</center>\n\n___\n\n## Degradation of Information\nWeb 3 focuses on storing information forever in a provable way. Web 4 introduces a **counter-model** which may be **optionally** adopted by any time-token-based system. In this model, who did what becomes **harder and harder to know** the more time that passes. \n\nThis idea hinges upon incremental time units, the number of which is used to decide how difficult information about a particular individual is to access. \n\nWith **pseudonymity**, it is difficult, but not impossible, to piece together a story about an individual user by knowing they are responsible for a set of transactions over time. The further back in time a transaction is, the **harder** it is to link it to another transaction with any **certainty**. \n\n## Degradation of Information Fidelity\nInformation fidelity requirements can also be degraded over time. For example, when generating a users biosecret, it can be assumed that the more time that passes, the more the bioinformation of the individual will change. \n\n## Degradation of Biosecrets\n**Biosecrets** are generated from a **range of biometric values**. This range of values can be expanded over time. The effect is, instead of having one hashed biosecret for eternity, the generation process will create a set of biosecrets from an increasingly **wide range of data**. This concept may be needed to keep people in control of their accounts as they age. There is considerable work to be done to develop this concept, as each data type has its own complications. \n\nIn this case, as time goes on, someone attempting to prove their individuality would have to spend a lot **more effort** to run the algorithms against their collected biodata, and the data **precision** needed to match the person's identity is actually **lower**. This is one example of **fidelity change**; others can make it more expensive to change a record from the past, make it harder to find out the ID of a voter, or even limit a past state's effect on the future of a blockchain. \n\n## Proceed with Caution \nWhile the inclusion of this concept into web 4 may seem **unnecessary** at the moment, it is another guarantee of the privacy that is needed for many **social applications**. Philosophically, degradation of information also fits in with the general web 4 desire to reflect [systems in nature](https://en.wikipedia.org/wiki/Second_law_of_thermodynamics). \n\nBefore moving on, I do wish to stress the modularity of web 4, and that this (perhaps the most radical idea presented) is not going to fit into every web 4 system, nor should it. This idea will find its usefulness when it is time, and should NOT be adopted without clear reasoning. \n\n\n___\n# <center>4</center>\n\n___\n# Geo-Social Harmonic Layers\n\nCollaborative social environments are always happening everywhere humans live. Currently, we are both realizing the vast amount of ways to live abundantly, as well as deciding what direction we should be facing to grow as a society. Human growth in the past few centuries has been focused on technological improvements rather than social improvements. [3] To harness the power of the information age for the collaboration of humans, web 4 will be used to enhance, introduce, and replace current structures that organize our societies, which we term geo-social layers. \n\n> Web 4 proposes that systems based in time token are the most apt to create and improve existing social layers. \n\n## What is a Geo-Social Layer?\n\nA geo-social layer is something that affects **people** (social) at a given **location** (Geo). A simple example is the governing body of an area, including all of the legislation. Another example is the customs and culture of a group of people. \n\nThe geo-social layers apt to be improved by web 4 are those which involve **people collaborating**; government/legislation, food and water management, community projects, education, events, charities, environmental protection and much more. \n\n## Geographic Stratification  \nAcross the globe, one geopolitical pattern seems to emerge. Cities are within Counties, are within Districts (States in the USA), are within nations, are within the world. \n\n1. Cities (aka Towns, Commonwealths, etc.)\n2. Counties (aka Divisions\n3. Districts (aka States, Provinces)\n4. Nations (aka Countries, States, Republics, etc)\n5. Global\n\nFor communication, we will consider cities as the \"lowest\" and global as the \"highest\" stratification level.\n \n> Additionally, a **community level** may be added below cities to further add accuracy and usefulness. \n\nFor the purpose of any geo-social system, **geographic association with each actor** must be defined. \n\nTraditionally, it's the existence within a certain area, such as a place of residence or business, that is of importance. When building a geo-social system, it's only necessary that association is declared at the lowest level of geographic stratification, from which the rest can be extrapolated. \n\nBecause each person can be associated to either a community or a city, we can develop systems within web 4 that allow coordination at every strata with just this one piece of data for each person. \n\n# Democracy, Collaboration, and ever-redefining Utopia\n\nBy offering time tokens to the individual that correspond to each stratum we can create **high-fidelity democratic systems** that better represent each and every person's desires. We can know exactly what the people want, with no guesswork, in a very short period of time. \n\nFor example, a person may be given 12 time tokens per month at each stratum to vote on the initiatives that they would like to see passed. They may vote all 12 tokens for an initiative they are most passionate about, or 1 token to 12 different initiatives (or 2 to 6 initiatives, etc). By collecting and counting these tokens, the governing body can **know exactly what their constituents want**, without the direct need to elect a representative who only estimates these desires. \n\nThe democratic system described in this paper does not solve all problems, as there are still issues of voter informedness, unseen actors, and more, but it is a skeleton to build a collaborative social system that are an **improvement to the representative governments** which were once as revolutionary as these ideas are. \n\n\n\n# Roadmap to Web 4 Reality\n\n## **Phase One**\n> Implementing time tokens\n\n**Time Tokens** are implemented on any and all blockchains where developers see the value. These developers provide open-source instructions and tools to helps other developers incorporate time tokens into their applications. \n\n**Provable individuality** for Time Tokens is up to each application and blockchain, and these application can choose to ignore this requirement, risking their systems' integrity. **Federated** (Facetec) and **decentralized** (Civic) options may be used, and so can social verification.\n\n**Information entropy** and **geosocial layers** are starting to be theorized, but not showing up. \n\n**Phase 1 Action Points**: \n- Time Token ERC proposal (and similar for other blockchains)\n- Developers exploring use cases for Time Tokens \n- Developers implementing Time Token in unexpected ways\n\n## **Phase Two**\n> dApps and discovering issues\n\n**Applications using Time Tokens** are widespread, and issues in implementations are becoming known and solved. \n\n**Provable identity** **issues** are becoming apparent, as certain applications with **lax rules** are being manipulated, showing the need for true provable identity. \n\nSocial Verification and solutions like Facetec are still used, while biocryptography standards and biometric secret technology are being developed to allow true provable identity (in Phase Three).\n\n**Information entropy** principles are starting to be implemented, when required.\n\n**Geo-social layers** are starting to be built, but not used for \"real applications\" like voting because of lack of true provable individuality. \n\n**Phase 2 Action Points**: \n- Proposing the best uses for geo-social layers using time tokens\n- Incorporating different provable identity methods\n\n\n## **Phase Three**\n> Implementing Provable Identity\n\n**Provable Identity** is now possible as suggested in this manifesto through the maturity of the biometric secrets. Standards are being created openly, \n\n**GeoSocial layers** are being used to run and govern communities which are not dependent on traditional representative government. Existing governments are adopting time tokens to get a better read on what legislation the people want. \n\n**Phase 3 Action Point**: \n- Creating provable identity solutions that satisfy all requirements\n\n## **Phase Four**\n> Geo-social systems\n\n**Information entropy** is added to the systems where it can be of use. For example, this could make a person's (anonymous) voting record less knowable over time by increasing the amount of CPU time needed to associate one vote with another. \n\n**GeoSocial layers** are being used as a replacement for representative government where it is the will of the people. Voter informedness is measured and known, as are the exact desires of the people. This creates collaboration and a renewed faith in democracy, and a feeling of belongingness and appreciation for each individual. \n\n**Phase 4 Action Points**: \n- Building and operating geo-social layers for the benefit of society and any collaborating group\n- Exploring use cases and integrating information entropy where appropriate\n\n# Author notes\n\n## Change Without Conflict\n**No one can stop us** from building collaborative systems with web 4 and even **self-governing**. **We don't need** to \"tear down the system\" or separate from society to do so. **We can exist** fully embedded in the geopolitical systems around us, while implementing and improving web 4 concepts, the underpinnings of collaborative democracy.\n\nIf and when the \"old system\" meets its demise, as all things do, **we can transition rapidly** to a web 4 system like [Effective Collective](https://github.com/dougbutner/effective-collective) or any other, as it will already be in place. \n\n## Why use the term \"Web 4\"\nIt is my belief that each version of the web must 1) be built on top of the previous version, 2) be fundamentally different than the previous version by introducing new technology, and 3) have meaningful impact on society. \n\nThis proposal for the next iteration of the web is an effort to both expand and shift the path of information science in a direction where the **meaningful impact** of society involves: 1) empowerment of each individual, which serve as the basis for collective (social), economic, and novel applications; 2) provable identity verification while maintaining complete separation from any federated system, including government, with the side-benefit of lifelong recoverability of private keys; and 3) resonance with our contained and containing systems, like our human organs and the Solar system, which provide us with life and free energy daily, akin to free time tokens.\n\nWhile an argument could easily be made that DeFi is Web 4, or another emerging tech, like \"layer 2\" blockchains (rollups) are web 4, both of these are **not new**. DeFi mimics and improves the systems of the past. Rollups are merely making web 3 **more efficient**. \n\nIt is my hope and desire that the information presented here will be **expanded** on and **implemented** by many developers and systems in the coming years, not for the benefit of the few, but for the **empowerment** of each individual and the **harmony** of the human collective, and every layer of Gaia. \n\n___\n# Notes + References\n___\n\n[1] - Solutions like Civic and Facetec have proved to be effective in verifying individuality. KYC services rely on government-issued identification, physical signature, and minimal, often human-checked bioverification. Until the technology is developed for a biometric system resembling the ideas here, these options (as well as social verification) are viable, though not fully embodying the idea of web 4. \n\n[2] - Hao, K. & O'Neill P. (2020, August 06). The hack that could make face recognition think someone else is you. Originally Published at https://www.technologyreview.com/2020/08/05/1006008/ai-face-recognition-hack-misidentifies-person/\n\n[3] - Nishimura H., Kanoshima E., Kono K. (2019) Advancement in Science and Technology and Human Societies. In: Abe S., Ozawa M., Kawata Y. (eds) Science of Societal Safety. Trust (Interdisciplinary Perspectives), vol 2. Springer, Singapore. https://doi.org/10.1007/978-981-13-2775-9_2 (Specifically section 2.1.3) \nweb [link](https://link.springer.com/chapter/10.1007/978-981-13-2775-9_2)\n\n\n\n\n# Appendices\n\n\n## Appendix A: Pseudocode Example of Biometric Function\n\tfunction bioKeyGenerator(bioData){\n\t\t// Function takes data in the form of user input into their browser or smartphone.\n\t\tlet recievedData = bioData;\n\n\t\t// With data, quantifyable points are taken algorithmically\n\t\tlet processedBioData = {\n\t\t\tpoint1:recievedData.point1,\n\t\t\tpoint2:recievedData.point2,\n\t\t\tpoint3:recievedData.point3\n\t\t\t...\n\t\t}\n\n\t// These points expanded to a pre-defined margin of error geometrically for each input type\n\tconst expander = 20; // Set amount to expand dataset based on data type\n\n\tlet rangedBioData = {\n\t\tpoint1: {\n\t\t\tupperRight: {\n\t\t\t\tx : processedBioData.point1.x + expander,\n\t\t\t\ty : processedBioData.point1.y + expander\n\t\t\t},\n\t\t\tlowerLeft: {\n\t\t\t\tx : processedBioData.point1.x - expander,\n\t\t\t\ty : processedBioData.point1.y - expander\n\t\t},\n\t\tpoint2: {\n\t\t...\n\t\t},\n\t\t...\n\t}\n\n\tlet snappedBioData = snapBioDataToGranularPath(rangedBioData);\n\n\n\t// For this to work, a matrix-like object containing every single possible hashed value for every point of data\n\t// ..must be stored on an authentication server for each data input.\n\t// Data must also exhibit granularity (snap to an integer path).\n\t// Without granularity, the hashes will never match a new input's hash.\n\t// This matrix of values is used to compare the biosecret with in the future\n\t// This must be made more efficient to use with today's computers\n\n\tlet x;\n\tlet y;\n\tlet bioMatrix = {};\n\tfor (x = snappedBioData.point1.lowerLeft.x; x <= (expander*2) ; x++) {\n\t\tlet curXRow = \"x\"+x;\n\t\tlet bioMatrix[curXRow] = [];\n\t\tfor (y = snappedBioData.point1.lowerLeft.y; y < (expander*2) ; y++) {\n\t\t\tcurYRow = \"y\"+y;\n\t\t\tbioMatrix[curYRow].push(sha256(y));\n\t\t}\n\t}\n\n\n\t// Finally, the real biosecret is returned as an object of hashed biometric data, which will be checked by comparing each granular piece of data's hash to the incoming granular hashes\n\treturn bioMatrix; // Biosecret\n\n\t}\nfunction snapBioDataToGranularPath(rangedBioDataParam){\n\t//returns data snapped to grid (recursively scans object passed)\n}",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/juekrg/i_wrote_a_web_4_manifesto_detailing_where_i_think/",
        "num_comments": 11,
        "comments": [
            {
                "body": "> it's blockchain-based\n\nAll I needed to know.\n\n> The upside of biometric secrets is they cannot be lost\n\nGrow/shave a beard that changes your face, get a sore throat that changes your voice, wear a glove that obstructs your fingerprint... Biometrics can absolutely be lost.\n\nAll in all sounds like \"make everybody identifiable on the internet, buzzword buzzword blockchain\"",
                "author": "Atulin",
                "score": 7
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 3
            },
            {
                "body": "This seems super convoluted and I'm not really sure what the benefit will be. I rather not use the internet forever than have to use biometric data for anything. I like being mostly anonymous.\n\nWhat is this trying to solve exactly?\n\nWhat's the point when 95% of website could just be completely static with some minor JS for interaction?\n\n>In essence, web 4 is positive attention catalyzer, built on providing power to every that only gains meaning when they give it freely to another. This power is also freely given, and limited by time.\n\nWhat the hell is this supposed to mean?",
                "author": "archerx",
                "score": 3
            },
            {
                "body": "Thanks for the Switzerland tip. I will look into it!!\n\nI plan to publish this on Hackernoon, Dev, Medium, and it will stay on github where it can be updated. \n\n> But the wording around community, group and collaboration makes me wonder if it is a new marxist idea and it kind of colored the reading. So maybe that should be toned down unless there is a marxist intent, in which case it could be laid out and explained in a clearer way. Where will you publish it?\n\nI really dislike shoving ideas into categories, and labeling things with words, as even if they are well defined to a small group of people, a larger group of people understand very little besides they do or don't like an idea, which ironically, they don't understand. \n\nPersonally, I'm way off in a different direction with my inspirations. I study channeling from ET entities, particularly those that talk about how they run their societies. I have learned a lot, and one thing that advanced societies, and even non-physical beings do is collectively share intent to get things done. \n\nWeb 4 (the name) came after I designed a [project-based system](https://github.com/dougbutner/effective-collective) that people can submit projects, and others can vote on them and have them funded by these votes (votes are actual currency). Perhaps in that context it makes more sense. \n\nBut I will review the section again and make sure I communicate my intent clearly. It's really the whole point (for me) to help people collaborate and be sure collaborators are informed (that part isn't in this paper, but in the web 4 system I am designing called [Effective Collective]((https://github.com/dougbutner/effective-collective))). \n\nCould you use the system to collaborate like a Marxist? Sure. Could you use it to collaborate like a libertarian? Definitely. The system isn't meant to be opinionated in how anything gets done, just provide a new mechanism of high fidelity consensus. \n\nThanks for your input and for taking the time to read this!!",
                "author": "currentXchange",
                "score": 3
            },
            {
                "body": "Interesting read. There are challenges. Regular people don't understand what the blockchain is, and will never do, in my projection. It is not a sound fundament for trust. I like the pseudo direct democracy that could be obtained with this kind of solution, kinda like Switzerland where they hold popular votes everywhere, al the time for the smallest new piece of legislation. But the wording around community, group and collaboration makes me wonder if it is a new marxist idea and it kind of colored the reading. So maybe that should be toned down unless there is a marxist intent, in which case it could be laid out and explained in a clearer way. Where will you publish it?",
                "author": "anatolhiman",
                "score": 2
            },
            {
                "body": "Well, you can't have two faces. \n\nOne person one account is the big problem to solve. It's super easy to solve using a centralized system, pretty much simply a KYC issue. Solving it in a decentralized way is difficult, but could be done biometrically, provided the solution meets the requirements outlined. \n\nYou wouldn't be able to open two accounts with a single face, just like you couldn't open two accounts with the same passport number. \n\nThe ideas are module, so it's possible to build a web 4 system where each person is known, for example in a community. That would mean someone has to approve every member in the system. Of course, that's not decentralized, but it's still using these concepts. \n\nYou could then use time tokens to allow the people to self-govern. Time tokens are the real incremental improvement here, the biometric (One person one account) aspect is optional, but needs to be explained for the concept to be fully laid out. \n\nThere's also social verification, which is being done by at least one blockchain project.",
                "author": "currentXchange",
                "score": 2
            },
            {
                "body": "> What's the point when 95% of website could just be completely static with some minor JS for interaction?\n\nIdeally, as a better solution for collaboration. I would say 98% of sites/apps/systems would not benefit from this enough to implement it. But that number will shrink as the benefits become apparent, and more dapps pop up.\n\n> What is this trying to solve exactly?\nFirst off, thanks for your input. It made me realize I really do need a problem solution section, which I decided not to do at first. I suppose the problem is only obvious to me. Here's what I aded to the paper (may change, just typed this up)\n\n# The Problem\nDemocracy, societies biggest and most successful consensus and collaboration mechanism, has become too slow to keep up with the modern world. Groups of people organizing, whether to turn a profit as a company, or to live together in a city, are often under-, mis-, or not represented at all in the decision making processes that affect their life. In both of these (governments and companies,) it is the few that make the decisions for the many, even with the illusion of \"having a say\" that exists in a representative system. \n\n# The Solution\nBy providing each individual with equal power in a transparent decision making process, the true intent of the majority can not only be known, it can be acted upon in predetermined ways through smart contracts. Though the solution seems simple, there are issues that will need to be addressed according to the needs of each group of collaborating people, such as ensuring one person per account, and limiting the minting of voting tokens with time, as well as protecting the privacy of decision makers where appropriate. This paper will detail these solutions, though they may not be needed for each system. For example, systems can (and should) be built using time tokens that do not use biometric data at all. \n\n> What the hell is this supposed to mean?\n\nMan, I'm really grateful for your reply. You are right. typo aside, it was a very convoluted message using vocabulary I used in a [different project](https://docs.google.com/document/d/1T2JH9J73WjgZ9-cULJAzrYvZzyPSXEA_fdgt21lHnDc/preview) that has no real context here. So super glad to gut that before publishing. \n\nHere's what I changed it to:\n\n> In essence, web 4 is **collaboration consensus tool** that helps to manifest a shared desire, opinion, or solution by providing a fair system of accounting using time-limited votes, real people, and existing geopolitical stratification.\n\nHow 'bout dat?",
                "author": "currentXchange",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "The problem/solution part is good, and also indirectly addresses the doubt about political line I mentioned in another comment. Suddenly the reader understands what a \"community\" could be, like a company or a city and will then read the rest in a more open manner.",
                "author": "anatolhiman",
                "score": 1
            },
            {
                "body": "Re-read this part, I think what you're saying was pretty well accounted for in the paper, but obviously a big topic I glossed over in two paragraphs\n\n### What is used to generate a biosecret?\nThis stream of data (video + audio biometric expression) could be a user doing a series of hand gestures, singing a part of a song, speaking a phrase, speaking a phrase in different voices, clapping, making a series of facial expressions or movements, or anything else one can imagine.\n\nFor security, biometric expressions must be unique (for example, which combination of words to speak) and many types (gesture, singing, clapping) must be available and used in combination. If each person's biometric secret was generated from the same single biometric expression, it would be a matter of time before specific AI could be developed to deepfake it for anyone. If the user is the only one that knows their biometric expressions it becomes nearly impossible to guess the type and nature of the expression, and even if that is known, difficult to use the same technique on more than one account. The nature of the uniqueness could be chosen by the user, or generated at random from the biosecret software which would prompt the user to complete an action in a specific way.",
                "author": "currentXchange",
                "score": 1
            },
            {
                "body": "Awesome. Thanks for the feedback. Much needed + appreciated!!",
                "author": "currentXchange",
                "score": 1
            },
            {
                "body": "So how much did you read?\n\nHonestly, Imo, the biometric aspect is the least important idea here. But all feedback helps me learn so thanks!!",
                "author": "currentXchange",
                "score": -1
            },
            {
                "body": "Perhaps because that's the only code example it seems like it's important, but the time tokens are the really good stuff.   \n\n\nI think I got a little distracted with the biometric aspect because it's a hard problem and I like hard problems ha ha",
                "author": "currentXchange",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1606460152.0,
        "title": "Thanks for your feedback on my \"Web 4\" concept. Here's where it's at now.",
        "author": "currentXchange",
        "id": "k1w9v9",
        "selftext": "A few days ago, I posted my idea about \"Web 4\", four modular ideas that help us create democracy on top of blockchain tech. \n\nI got some stark and quality feedback that helped open my eyes to the shortcomings of my ideas and communication. I have re-written most of the paper, and would like to ask again for your feedback. \n\nWhat I Learned before \nTime Tokens, what I thought was the most important part, was looked over -> I clarified (lengthened) this idea and the importance\n\nBiometrics -> Although this was a \"thought experiment\" to me, people took it seriously and reminded me of the problems of biometrics, so I shortened the section, added the \"Biokey/Biosecret\" terminology along with many disclaimers.\n\nCommunication -> I added a \"problem/solution\" section at the beginning, and cut out most of the fluff \n\n# Here's the paper as it is now\n\n# The Web 4 Manifesto: Awakening the Democratic Web \n\nby Douglas James Butner \ndouglas@cxc.world\n\n\n\n# What is Web 4?\n\nWeb 4 is a set of four **modular paradigms** (time tokens, biokeys, information entropy, and geo-social systems) that allow integration of **provable democracy in any social system** that seeks to be more collaborative (organization, government, community, etc.). Modularity allows any project to adopt one or more of these principles to **increase the accuracy, fairness, and transparency** of each individual's role in **collaboration**. \n\nWeb 4 is **built on top of web 3** (it's blockchain-based) while being **fundamentally different** and providing enough **benefit to society** warrant the new title of web 4. \n\nIn essence, web 4 is **collaboration consensus tool** that helps to manifest a shared desire, opinion, or solution by providing a fair system of accounting using time-limited votes, real people, and existing geopolitical stratification.\n\n> Web 4 combines real-world components like time and geography with existing blockchain technology.\n\nIn this manifesto, I will define each of the **components** of web 4, provide **psudeocode** to illustrate the minimum integration into web 2/3, introduce the **benefits to society**, and offer a **roadmap** to adopting these concepts.\n\n# The Problem\nDemocracy, society's biggest and most successful consensus and collaboration mechanism, has become **too slow to keep up** with the modern world. Groups of people organizing, whether to turn a profit as a company, or to live together in a city, are often **under-, mis-, or not represented at all** in the decision making processes that affect their lives and work. In both governments and companies it is the few that make the decisions for the many, even with the **illusion** of \"having a say\" that exists in a **representative system**. \n\n# The Solution\nBy providing each individual with **equal power** in a **transparent decision making process**, the true intent of the majority can not only be known, it can be acted upon in predetermined ways through smart contracts. Though this solution seems simple, there are issues that will need to be addressed according to the needs of each group of collaborating people, such as ensuring **one person per account**, and **limiting the minting of voting tokens with time**, as well as protecting the **privacy of decision makers** where appropriate. This paper will detail these solutions, and recommend that each system decide what components of web 4 to use or not use. For example, systems can (and should) be built using time tokens that **do not use biometric data at all**, a common concern in our modern world. \n\n\n# Background\n\nBefore we detail web 4, we must look briefly at the concepts of web 1, web 2, and web 3. \n\n - **Web 1**\n**Static web**. Files are served from a remote server to a user's browser.\n\n - **Web 2**\n**Dynamic web**. Web pages take a user's information and desires into account to build a unique experience for them. Asynchronous requests allow single page applications to thrive. Applications are still served from a central server.\n\n - **Web 3**\n**Decentralized web**. Applications, often open-source, exist in distributed networks instead of a central server. This unfederated model trades control and censorship ability for freedom and autonomy. \n\n - **Web 4**\n**Democratic web**. Time-limited tokens are given to each individual, and used as a measure of opinion or desire in collaborative systems.\n\nToday, the top 100 websites/apps by traffic are [all](https://www.alexa.com/topsites) web 2-based. The web 2 paradigm fits closely with the wider environment of **corporate-owned information.** \n\nAs more and more individuals and societies are reconsidering the place of **government, censorship, centralization and federated power**, web 3 has emerged as a powerful, provable option to shape the evolution of information and society on planet Earth. \n\nA growing portion of web 2 websites and applications today have elements of web 3, like [cryptoblogs](https://peakd.com) and [games](https://www.stateofthedapps.com/rankings/category/games). While web 2 and web 3 can operate independently, web 3 enhances the abilities of web 2. Similarly, web 3 and web 4 can operate independently, but it makes the most sense for web 4 to be built on blockchains to gain the benefits of reliability and transparency. \n\n## Guiding Philosophy\nWeb 4 seeks to implement [biomimetic](https://biomimicry.org/what-is-biomimicry/) systems in **harmony with the universe itself** by replicating nature: the **abundance** of the Sun, rising **entropy**, and the **equality** of each human being. \n\nWeb 4 tests the hypothesis that when we create information systems in **harmonic resonance** with natural systems, our society will be able to advance more rapidly than ever before, as we will be able to **synchronize energetically** with the larger systems of bioelectromagnetic information processing around us (the Earth, Sun, and Galactic core). \n\n\n## Defining Web 4\nWeb 4 introduces **four modular components** for **provably democratic systems**, suggested to be built on top of web 3's open-source decentralized networks. \n\n### There are four conceptual underpinnings (modules) of web 4\n\n 1. **Time Tokens** \n\t Individuals may claim time-limited tokens at given intervals, which represent that interval. Only one time tokens can represent the one interval and individual, and one individuals can't hold another's time tokens.\n 2. **Proof of Individuality (One Person, One Account)**\n\t Biometric Secrets, Social Verification, Proof of Liveness, white lists, etc. are used to guarantee no individual can collect two time tokens for a given interval by holding two accounts. \n 3. **Information Entropy**\n\t Information degradation over time, pseudo accounts in sensitive systems\n 4. **Harmonic Geo-social Systems**\n\t Fair, transparent collaboration through accounting the opinions and desires of participants, including in existing geopolitical \n\nEach module can be used separately or in tandem. This paper invites you to involve any of these ideas into your current and future projects. We will discuss these concepts one at a time, but first let's examine why we need them in the first place. \n\n\n# Why we must grow from web 3 to evolve democracy\n> Provable democracy cannot be fully achieved in web 3 as-is because there is no inherit limit over how many accounts a user may control.\n\n**Democracy** is essentially reaching a consensus with the idea that **each person is equal** in their influence on that consensus within defined bounds.\n\nMany different **consensus models** have been developed in web 3, most notably, [proof of work](https://www.ledger.com/academy/blockchain/what-is-proof-of-work) (**POW**), [proof of stake](https://www.ledger.com/academy/blockchain/what-is-proof-of-stake) (**POS**), and [delegated proof of stake ](https://academy.binance.com/en/articles/delegated-proof-of-stake-explained)(**DPOS**). These paradigms of consensus are used primarily to determine which chain of transaction records (blocks) is considered valid, \"securing\" a blockchain. \n\nPOS and DPOS are additionally used in projects like [**Hive**](https://peakd.com) to allow users to \"vote\" on valuable content, an early example of the democratic web. DPOS is also used for networks to determine who can access network resources, such as in [EOSIO blockchains](https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md).\n\nHowever, both of these POS/DPOS use cases (curation and resource allocation) are not democratic in the sense that **each account is not equal**. In both cases, the root of democracy is in the token, not the individual, and the ownership of tokens determines the voting power or computing power held by an individual. \n\nIn the end, the only way to implement true democracy in any system is through giving **each individual equal power**. The only way to do this while keeping web 3's decentralized nature is to implement the technological and idealogical advancements needed for a **one individual,  one account** system. These advancements  are, for simplicity and communication, called web 4. \n\nLet's review the concepts one by one.\n\n___\n# **1**\n\n___\n\n# Time-issued cryptocurrency (Time Tokens) \n\nTime tokens may be offered or directly distributed to users' wallets periodically. They work by hashing a unique personal identifier (address) with a time identifier, **linking each token to a person and a span of time**.\n\n\n## The Gears of Time Tokens\n\nTime tokens rely on the following concepts:\n 1. **Time Tokens** \n\t Individuals may claim time-limited tokens at given intervals, which represent that interval. Only **one time token can represent the one interval and individual**, and one individual can't hold another's time tokens.\n\t These tokens provide the user with a function or action. The action burns the token, which may cause some change in the state of a system, such as minting another token, registering a vote, or any other action. Thus, **each time token is unique yet semi-fungible**. Time tokens can also be checked for freshness when needed, for example a user may have to use a certain time period's token to cast a vote in an election, which SHOULD also exclude that particular time token from all other functions. \n\t \n 2. **Time Unit**\nA time unit is an time interval that is a sub- or superset of a timestamp. This means that a time unit is some amount (or fraction) of seconds. Each time token MUST be the only one in existence stamped with a particular time unit for each user (wallet). \n\n 2. **Time Faucet**\nA time faucet is a smart contract that offers any qualified account EXACTLY one time token per unit of time passed since their last faucet. This can be an active faucet; requiring some action by the recipient, or a passive faucet; automatically sending the cryptocurrency to the user. \n\n 3. **Qualified Accounts**\nQualified accounts adhere to the individuality requirements of a given system. Each web 4 system will do this differently according to their needs, perhaps with a whitelist, social verification, biometric verification, proof of liveness, or other means. \n\n\n## How do Time Tokens work?\nTime tokens operate like non-fungible tokens in their structure, storing a time unit (integer) with a unique user identifier (string) as the payload data. \n\nThe user's identifier may also be a biocryptographic key (biokey) discussed in the next section.\n\nTime tokens are platform independent, and need only the ability to store simple data: a time unit and user identifier. \n\nIn practice, a time unit is an integer that counts up the number of pre-defined time spans that have passed since an **epoch**. The epoch is typically when the system went live, and represents 0 in the first time interval. \n\n## Time Tokens in practice\n\nIf we were to create a time token for a US citizen to vote in the **US presidential election**, the time span would be 126144000 seconds (four years), and the epoch would be at a timestamp representing the start of the **election day previous to the first election** to use time tokens. On election day, an active faucet would send one time token to each registered voter (aka Qualified Account) with a payload of the user's **unique identifier and the integer 1 as the time unit** (the next election would be 2, and so on.) The user would then send the token to the election's smart contract address with a **memo of their vote**. The system would check the identity of the voter, validity of the memo, and the time unit against their list to ensure they are voting in the correct election, **burn the token** (or else reverse the transaction if malformed), and send the user back another token representing a **\"I Voted\" sticker**. \n\n> This example intentionally doesn't account for anonymity\n\n**This example is trivial.** It becomes beneficial when we realize that we can just as easily send the person 12 voting tokens so they can vote on their first, second and third choice. It becomes even more interesting when we send tokens **every month** (or so) and allow the people to **vote directly on the bills that are being presented to their respective legislative bodies**. It becomes even more expansive when we have the faucet smart contract require **educational actions**, such as opening a link to information on these bills (summary and the full text) **to receive their time tokens**. \n\n## A Simple Example in web 2\n\nHere is the minimum information stored in a time token, using [JSON Web Token (JWT)](https://jwt.io/introduction/) as an example\n```\n{\n  \"header\": {\n    \"typ\": \"JWT\",\n    \"alg\": \"HS256\"\n  },\n  \"payoadData\": {\n    \"time-unit\": 294957,\n    \"userid\": \"7f3e873a2c3d\"\n  }\n}\n```\nBelow is a brief pseudocode example of how one could use a signed time token as a JWT.\n\nSee Appendix A for more detailed pseudocode of a time token. \n```\nconst passedBioData = {..} // biodata from user\n\nconst header = {\n        \"typ\": \"JWT\",\n        \"alg\": \"HS256\"\n      }\n\nconst payloadData = {\n\t\"time-unit\": \"294957\", \n\t\"userid\": \"7f3e873a2c3d\", \n\t\"appData\": {\n\t\t\"gold\": 479,\n\t\t\"honey\": 23,\n\t\t\"axe\": 0 \n\t}\n}\n\nconst bioKey = bioKeyGenerator(passedBioData); // Biometric provider's key or one generated direcly by user\n\n// --- Here we have the signature, to be used for any purpose --- \\\\\nsignature = HMACSHA256(\n\tbase64UrlEncode(header) + \".\"+\n\tbase64UrlEncode(payloadData), \n\tbioKey\n)\n\n\nfunction bioKeyGenerator(bioData){\n\t// Function takes data in the form of user input into their browser or smartphone.\n\t// Data is normalized (explained in Appendix A, not shown here)\n\tbioKeyChecked = bioData;\n\t// Return biokey \n\treturn sha256(bioKeyChecked)\n}\n\n\n```\nThe notable parts here are the `time-unit` and `userid` in the payload, and the `bioKey` which is generated by a user's biometric data.\n\nWe have said we web 4 is based on web 3 (blockchain), but this example intentionally used  **web 2 technology**. Much of the rest of this paper goes over ways to avoid trust by incorporating biometric data in a specific way, but that's not always needed, or helpful. We have to trust a government to run our elections. We have to trust social media platforms with our photos. We have to trust the Sun will rise, and a. giant meteor won't crash into Earth. \n\nThe truth is, **all systems have some level of trust**, even if that's just in the system itself. If we try to get rid of this trust by implementing a system so good we are our own private key, it can backfire, and when it does, if we built it because we were fearful instead of trusting, that's super lame. \n\nWhile I'm going to lay out a possible solution to use biometrics in a \"trustless\" way that fits with web 3 ideals, I don't personally think it's a good idea, and I won't be designing my Web 4 apps with it for quite some times, if ever. \n\n___\n# **2**\n\n___\n\n# **Proof of Individuality - Biokeys + Biosecrets**\n> **Please Note:** There are solutions available today (like [FaceTec](https://www.facetec.com/) and [BrightID](https://www.brightid.org/)) that solve the same issues presented here. This paper seeks to outline a web 3-based system (decentralized + open source) that can run without a centralized actor, while not providing specifics to accomplish these goals. This is more of a thought experiment than a suggestion or requirement. \n\n**Biometric secrets (biosecrets)** are akin to any cryptographic private key, but they are your actual biological data, or, more specifically, a four dimensional expression of your humanness from which biometric data is collected. \n\nInstead of a private key generated alongside a public key, **a hash of quantized biometric data becomes your public key**, which is paired with your **actual flesh-and-blood-and-sound-and-movement-data, your private/secret key**, or as we call it \"**biosecret**\" which isn't stored on any server or blockchain. \n\n## Keys  \n1. **Biosecret**: A biosecret is a specific biometric expression that is quantized using cartesian grids into data points with a precision that makes it replicable for the individual in the future, but impossible for another person to duplicate, even an identical twin.\n\n2. **Biokey**: The biometric information that makes up a biosecret is hashed into a public biokey, making the original biometrics practically impossible to reconstruct for a biokey.\n\n\n\n## How this can go wrong\nIn today's biometric space, static images are most commonly used for things like fingerprint and facial recognition, and geometry is the means to compare this data. Biometric secrets generated from static images are not secure, as static images can be faked. [2] Video offers a better solution to this problem, as it is harder to fake, can include audio, and lets developers create a whole new set of algorithms based on a changing stream of data. [Facetec](https://www.facetec.com/) is one company using video for biometric verification. \n\n\n## What could be used to generate a biokey?\nThis stream of data (video + audio biometric expression) could be a user doing a series of hand gestures, singing a part of a song, speaking a phrase, speaking a phrase in different voices, clapping, making a series of facial expressions or movements, or anything else one can imagine.\n\nFor security, biometric expressions (used to make a biokey) must be unique (for example, which combination of words to speak) and many types must be available (gestures, movement, singing, clapping, etc) and used in combination. **If each person's biokey was generated from the same single biometric expression, it would be a matter of time before specific AI could be developed to deepfake it for anyone**. If the user is the only one that knows their biometric expressions it becomes nearly impossible to guess the type and nature of the expression, and even if that is known, difficult to use the same technique on more than one account. The nature of the uniqueness could be chosen by the user, or generated at random from the biokey software which would prompt the user to complete an action in a specific way. \n\n## Why do we need this, again?\nDemocratic systems certainly are being built without biometric verification, and will continue to be even after suitable biometric technology develops along the open source, client-side requirements. For now, **decentralized solutions** like [Civic](https://www.civic.com/), and centralized tech like [Facetec](https://www.facetec.com/FaceTec_3D_Face_Matching_Whitepaper.pdf) provide the necessary individuality at the cost of trust and requirement of citizenship. Additionally, **biometric data can be avoided entirely** by using a social verification platform like [BrightID](https://www.brightid.org/) As different projects implement web 4 in their own ways, the ideas presented thus far will develop as flaws are found. And there's always the ability to use a whitelist, the most low-tech, high-trust, and simplest solution.\n\n## Trust Issues\nThe biggest issue with biometrics is the lack of trust the general population has (or should have) with giving up their biometric data, including the growing number of facial recognition softwares and databases. The lack of trust is almost always associated with an individual's **lack of clear consent**, and lack of understanding the technology itself. \n\n### To alleviate the trust issue, biokey generators must be: \n1) **open-source**\n2) entirely run on the individual's hardware (**client-side**), and \n3) **not expose any biometric data** to any other users or to a web 4 system itself (the biosecret is never stored or transmitted in any way). \n\nThere will always be **security concerns** with biometrics. For example, if a user uses their biometric secret to unlock their mobile device, another app could be secretly recording the camera in the background. A person could record them doing their secret, and try to play that video back to the camera to gain access. Also, *[deepfakes](https://github.com/aerophile/awesome-deepfakes) exist*. These concerns must be addressed before this module of web 4 reaches mass adoption. \n\nThe upside of biosecrets is they **cannot be lost**, and the account will always be **recoverable by the individual**. In a web 4 ecosystem, where the tokens are distributed daily and often spent daily, a hack would be much less catastrophic. The attacker will be able to access the user's balance, but not alter the past transactions, nor continue to collect the future deposits, because the real user will (in theory) quickly recover the account and change the biometric secret generation means so that the hacker's biofake is no longer working. \n\n___\n# **3**\n\n___\n\n##  Information Entropy\nWeb 3 focuses on storing information forever in a provable way. Web 4 introduces a **counter-model** which may be **optionally** adopted by any time-token-based system. In this model, who did what becomes **harder and harder to know** the more time that passes. \n\nThis idea hinges upon incremental time units, the number of which is used to decide how difficult information about a particular individual is to access. This can be implemented by increasing the difficulty required to verify a transaction chain, or economically by increasing the fees associated with accessing or interacting with old transactions or smart contracts. \n\nWith **information entropy**, it is difficult, but not impossible, to piece together a story about an individual user by knowing they are responsible for a set of transactions over time. The further back in time a transaction is, the **harder** it is to link it to another transaction with any **certainty**. \n\n## Information Entropy and Biosecrets\nInformation fidelity requirements can also be degraded over time. For example, when generating a user's biokey, it can be assumed that the more time that passes, the more the biometrics of the individual will change. \n\n### Degradation of Biokeys\n**Biokeys** are generated from a **range of biometric values**. This range of values can be expanded over time based on specific, well researched paths. The effect is, instead of having one hashed biokey for eternity, the generation process will create a set of biokeys from an increasingly **wide range of data**. This concept may be needed to keep people in control of their accounts as they age. There is considerable work to be done to develop this concept, as each data type has its own considerations and complications. \n\nIn this case, as time goes on, someone attempting to prove their individuality would have to spend a lot **more effort** to run the algorithms against their collected biodata, and the data **precision** needed to match the person's identity is actually **lower**. This is one example of **fidelity change**; others can make it more expensive to change a record from the past, make it harder to find out the ID of a voter, or even limit a past state's effect on the future of a blockchain. \n\n## Proceed with Caution \nWhile the inclusion of this concept into web 4 may seem **unnecessary** at the moment, it is another guarantee of the privacy that is needed for many **social applications**. Philosophically, degradation of information also fits in with the general web 4 desire to reflect [systems in nature](https://en.wikipedia.org/wiki/Second_law_of_thermodynamics). \n\nBefore moving on, I do wish to stress the modularity of web 4, and that this (perhaps the most radical idea presented) is not going to fit into every web 4 system, nor should it. This idea will find its usefulness when it is time, and should NOT be adopted without clear reasoning. \n\n\n___\n# **4**\n\n___\n# Geo-Social Systems: Geotribes + Geodomains\n\nThe geo-social systems apt to be improved by web 4 are those which involve **people collaborating**, like government/legislation, food and water management, community projects, education, events, charities, environmental protection and more. Web 4 can also be used by organizations so employees can have a direct say in the actions and direction of their companies and non-profits.\n\nCollaborative geo-social systems are always happening everywhere humans live. Currently, we are collectively deciding what direction we should be moving as a society, from representative governments, to social media. However, human growth in the past few centuries has been focused on technological improvements rather than social improvements. [3] To harness the power of the information age for the collaboration of humans, web 4 should be used to enhance, introduce, and replace current structures that organize our societies. \n\n> Web 4 proposes that systems based in time token are the most apt to create and improve existing social layers. \n\n## What is a Geo-Social System?\n\nA geo-social system is something that affects people (**social**) at a given bounded area (**geo**). To refer to a group of people associated with a certain area, we'll call them a **geotribe**, and to refer to that area we'll call it a **geodomain**. \n\n## Concepts\n\n1. **Geodomain**: A bounded area that has an associated group of people who are running a democratic (web 4) system. \n\n2. **Geotribe**: The group of people associated with a geodomain that are participants in a web 4 system.\n\nGeodomains can be nested, with a finite set of smaller areas making up the larger area, common in geopolitics, but this is not required. Geodomains can also be overlapping or non-overlapping.\n\n\n## Creating Geo-social Systems\nTo create a geo-social system, we first must define the requirements of the geodomain, and then the requirements for an individual to be a part of the geotribe within that geodomain. \n\n### Geodomain Stratification  \nAcross the globe, **one geopolitical pattern** seems to emerge, though names vary. Cities are within Counties, are within States, are within Nations, are within the World. \n\n1. Cities (aka Towns, Commonwealths, etc.)\n2. Counties (aka Divisions\n3. States (aka Districts, Provinces)\n4. Nations (aka Countries, States, Republics, etc)\n5. Global\n \n> Additionally, a **community level** may be added within cities to further add accuracy and usefulness. \n\nUsing this existing geopolitical stratification is recommended for those wishing to build a web 4 system because it makes varying global systems easily storable in a one relational database model or similar data structure, and is understood by local people, governments, etc. \n\nOnce we have our geodomains, we must define what makes a geotribe.  \n\n### Geotribal Bonds\nTraditionally, it's the existence within a certain area, such as a place of residence or business, that is of importance for things like taxes, voting, and citizenship. When building a geo-social system, it's only necessary that an association is declared that is relevant for that system, which may or may not involve proving residency. \n\nIt is important for every system that each individual only exist within one geotribe (excluding those extrapolated) so that their vote isn't counted twice. \n\nWhen using stratified geodomains, such as geopolitically-based ones, only the deepest level of association is needed (city/community), from which the rest can be extrapolated.\n\nIf a geopolitically-based geodomain system allows geotribe members to declare their own associated location without proof, the member is incentivized to be honest, as they will receive the most benefit from having their opinion heard where it matters to them. \n\nAll \"non-proof\" systems should place restrictions on switching voluntarily-given geodomain association too often (such as once per 6 months) to prevent influencing foreign affairs. \n \n\n# High-Fidelity Democracy \n\nBy offering time tokens to the individual that correspond to each stratum we can create **high-fidelity democratic systems** that better represent each and every person's desires. We can know exactly what the people want, with no guesswork and 0 middlemen, in a very short period of time. \n\nFor example, a person may be given 12 time tokens per month at each stratum to vote on the initiatives that they would like to see passed. They may vote all 12 tokens for an initiative they are most passionate about, or 1 token to 12 different initiatives (or 2 to 6 initiatives, etc). By collecting and counting these tokens, the governing body can **know exactly what their constituents want**, without the direct need to elect a representative who only estimates these desires. \n\nThe democratic system described in this paper does not solve all problems, as there are still issues of voter informedness, unseen actors, and more, but it is a skeleton to build a collaborative social system that are an **improvement to the representative governments** which were once as revolutionary as these ideas are. \n\n\n# Roadmap to Web 4 Reality\n\n## **Phase One**\n> Implementing time tokens\n\n**Time Tokens** are implemented on any and all blockchains where developers see the value. These developers provide open-source instructions and tools to helps other developers incorporate time tokens into their applications. \n\n**Provable individuality** for Time Tokens is up to each application and blockchain, and these application can choose to ignore this requirement, risking their systems' integrity. **Federated** (Facetec) and **decentralized** (Civic) options may be used, and so can social verification (BrightID).\n\n**Information entropy** and **geo-social systems** are starting to be theorized, but not showing up. \n\n**Phase 1 Action Points**: \n- Time Token ERC proposal on Ethereum (and similar for other blockchains)\n- Developers exploring use cases for Time Tokens \n\n\n## **Phase Two**\n> dApps and discovering issues\n\n**Applications using Time Tokens** are widespread, and issues in implementations are becoming known and solved. Developers who open time token faucets are seeing their token be used in third-party apps in ways they didn't foresee. \n\n**Provable identity issues** are becoming apparent, as certain applications with **lax rules** are being manipulated, showing the need for true provable identity. The best solutions are becoming known alongside the problems.\n\n**Information entropy** principles are starting to be implemented, when required.\n\n**Geo-social systems** are starting to be built, but not used for \"real applications\" like running a government because of lack of true provable individuality, and social inertia.\n\n**Phase 2 Action Points**: \n- Proposing the best uses for geo-social systems using time tokens\n- Incorporating different provable identity methods\n- Developers implementing Time Token in unexpected ways\n\n## **Phase Three**\n> Implementing Provable Identity\n\n**Provable Identity** is now possible as suggested in this manifesto through the maturity of the biometric secrets. Standards are being created openly, or, it is decided that the way presented here is not needed as a better way is found.\n\n**Geo-social systems** are being used to run and govern communities which are not dependent on traditional representative government. Existing governments are adopting time tokens to get a better read on what legislation the people want. \n\nOrganizations of all sizes are using time tokens to shift power to employees. \n\n**Phase 3 Action Points**: \n- Picking provable identity solutions that satisfy all requirements\n- Possibly abandoning biometric system presented here\n- Communities running on web 4\n- Governments benefiting from web 4\n- Organizations using web 4\n\n## **Phase Four**\n> Geo-social systems\n\n**Information entropy** is added to the systems where it can be of use. For example, this could make a person's (anonymous) voting record less knowable over time by increasing the amount of CPU time needed to associate one vote with another. \n\n**Geo-social systems** are being used as a replacement for representative government where it is the will of the people. Voter informedness is measured and known, as are the exact desires of the people. This creates collaboration and a renewed faith in democracy, and a feeling of belongingness and appreciation for each individual. \n\n**Phase 4 Action Points**: \n- Building and operating geo-social systems for the benefit of society and any collaborating group\n- Exploring use cases and integrating information entropy where appropriate\n\n# Author notes\n\n## Change Without Conflict\n**No one can stop us** from building collaborative systems with web 4 and even **self-governing**. **We don't need** to \"tear down the system\" or separate from society to do so. **Web 4 can exist** fully embedded in the geopolitical systems around us, while implementing and improving the four concepts, the underpinnings of collaborative democracy.\n\nIf and when the \"old system\" meets its demise, as all things do, **we can transition rapidly** to a web 4 system like [Effective Collective](https://github.com/dougbutner/effective-collective) or any other, as this solution will already be in place. \n\n## Why use the term \"Web 4\"\nIt is my belief that each version of the web must 1) be built on top of the previous version, 2) be fundamentally different than the previous version by introducing new technology, and 3) have meaningful impact on society. \n\nThis proposal for the next iteration of the web is an effort to both expand and shift the path of information science in a direction where the **meaningful impact** of society involves: 1) empowerment of each individual, which serve as the basis for collective (social), economic, and novel applications; 2) provable identity verification while maintaining complete separation from any federated system, including government, with the side-benefit of lifelong recoverability of biokeys with biosecrets; and 3) resonance with our contained and containing systems, like our human organs and the Solar system, which provide us with life and free energy daily, akin to free time tokens.\n\nWhile an argument could easily be made that DeFi is Web 4, or another emerging tech, like \"layer 2\" blockchains (rollups) are web 4, both of these are **not new**. DeFi mimics and improves the systems of the past. Rollups are merely making web 3 **more efficient**. \n\nIt is my hope and desire that the information presented here will be **expanded** on and **implemented** by many developers and systems in the coming years, not for the benefit of the few, but for the **empowerment** of each individual and the **harmony** of the human collective, and every layer of Gaia. \n\n___\n# Notes + References\n___\n\n[1] - Solutions like Civic and Facetec have proved to be effective in verifying individuality. KYC services rely on government-issued identification, physical signature, and minimal, often human-checked bioverification. Until the technology is developed for a biometric system resembling the ideas here, these options (as well as social verification) are viable, though not fully embodying the idea of web 4. \n\n[2] - Hao, K. & O'Neill P. (2020, August 06). The hack that could make face recognition think someone else is you. Originally Published at https://www.technologyreview.com/2020/08/05/1006008/ai-face-recognition-hack-misidentifies-person/\n\n[3] - Nishimura H., Kanoshima E., Kono K. (2019) Advancement in Science and Technology and Human Societies. In: Abe S., Ozawa M., Kawata Y. (eds) Science of Societal Safety. Trust (Interdisciplinary Perspectives), vol 2. Springer, Singapore. https://doi.org/10.1007/978-981-13-2775-9_2 (Specifically section 2.1.3) \nweb [link](https://link.springer.com/chapter/10.1007/978-981-13-2775-9_2)\n\n\n\n\n# Appendices\n\n\n## Appendix A: Pseudocode Example of Biometric Function\n\tfunction bioKeyGenerator(bioData){\n\t\t// Function takes data in the form of user input into their browser or smartphone.\n\t\tlet recievedData = bioData;\n\n\t\t// With data, quantifyable points are taken algorithmically\n\t\tlet processedBioData = {\n\t\t\tpoint1:recievedData.point1,\n\t\t\tpoint2:recievedData.point2,\n\t\t\tpoint3:recievedData.point3\n\t\t\t...\n\t\t}\n\n\t// These points expanded to a pre-defined margin of error geometrically for each input type\n\tconst expander = 20; // Set amount to expand dataset based on data type\n\n\tlet rangedBioData = {\n\t\tpoint1: {\n\t\t\tupperRight: {\n\t\t\t\tx : processedBioData.point1.x + expander,\n\t\t\t\ty : processedBioData.point1.y + expander\n\t\t\t},\n\t\t\tlowerLeft: {\n\t\t\t\tx : processedBioData.point1.x - expander,\n\t\t\t\ty : processedBioData.point1.y - expander\n\t\t},\n\t\tpoint2: {\n\t\t...\n\t\t},\n\t\t...\n\t}\n\n\tlet snappedBioData = snapBioDataToGranularPath(rangedBioData);\n\n\n\t// For this to work, a matrix-like object containing every single possible hashed value for every point of data\n\t// ..must be stored on an authentication server for each data input.\n\t// Data must also exhibit granularity (snap to an integer path).\n\t// Without granularity, the hashes will never match a new input's hash.\n\t// This matrix of values is used to compare the biokey with in the future\n\t// This must be made more efficient to use with today's computers\n\n\tlet x;\n\tlet y;\n\tlet bioMatrix = {};\n\tfor (x = snappedBioData.point1.lowerLeft.x; x <= (expander*2) ; x++) {\n\t\tlet curXRow = \"x\"+x;\n\t\tlet bioMatrix[curXRow] = [];\n\t\tfor (y = snappedBioData.point1.lowerLeft.y; y < (expander*2) ; y++) {\n\t\t\tcurYRow = \"y\"+y;\n\t\t\tbioMatrix[curYRow].push(sha256(y));\n\t\t}\n\t}\n\n\n\t// Finally, the real biokey is returned as an object of hashed biometric data, which will be checked by comparing each granular piece of data's hash to the incoming granular hashes\n\n\t  return bioMatrix; // Biokey\n\n\t}\n\n\tfunction snapBioDataToGranularPath(rangedBioDataParam){\n\t\t//returns data snapped to grid (recursively scans object passed)\n\t}",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/k1w9v9/thanks_for_your_feedback_on_my_web_4_concept/",
        "num_comments": 3,
        "comments": [
            {
                "body": "You probably want something like /r/cryptocurrency or /r/buttcoin for critical reviews of a blockchain system. I have to admire the effort you obviously put into writing all this, but to be honest these days I see these sort of things and think \"so tell about your ICO\".",
                "author": "disclosure5",
                "score": 2
            },
            {
                "body": "No ICO, but I'll post there too!!\n\nNo really, no ICO. \n\nBut I 100% totally understand why you think that, and don't take offense.\n\nIt's just such a good idea I don't want to fumble the ball so I'm trying to pass it off in case something happens to me, good or bad!! \n\nEarth needs this, soon!! \n\nThere are more important things than money..\n\nJust sucks lots of people focus on the ideas they think will make them money, not the ones that will help advance society",
                "author": "currentXchange",
                "score": 1
            },
            {
                "body": "Unrelated but I see your username is disclosure, you might like something else I put together about universal consciousness. \n\nhttps://github.com/dougbutner/universal-consciousness/\n\nMaybe you'll get that i'm not trying to sell an ICO then ha ha. Though honestly I should, with money I can buy land and with land we can build spaces + food forests for people to enjoy!",
                "author": "currentXchange",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1737587747.0,
        "title": "Created a 'Best of Everything' voting platform because I was tired of reading 47 blog posts just to find a password manager",
        "author": "Ok-War-9040",
        "id": "1i7p15h",
        "selftext": "We've all been there - Googling for the 'best' of something and ending up with 15 different blog posts all saying different things.\n\nThis website lets you:\n\n* See questions like 'Best programming language for beginners?' or 'Best first date ideas?'\n* View community-voted options ranked by actual votes\n* Add your own options if you know better ones\n* See why people voted for certain options\n* Find definitive answers instead of marketing listicles\n\nNo ads, no affiliate links, no SEO articles - just people voting on what they think is actually best.\n\nI would love some feedback on the project :) [Bextora.com](https://Bextora.com)",
        "score": 76,
        "url": "https://www.reddit.com/r/webdev/comments/1i7p15h/created_a_best_of_everything_voting_platform/",
        "num_comments": 47,
        "comments": [
            {
                "body": "The \"+Add a New Option\" button should tell you to sign in before showing the form, not after you already type something up. Also, the option field might be too short for some questions.",
                "author": "tgeene",
                "score": 39
            },
            {
                "body": "My go to for apps is [AlternativeTo](https://alternativeto.net).",
                "author": "BehindTheMath",
                "score": 16
            },
            {
                "body": "Really nice, although now I might have to look through 47 Bextora posts to find “the best” password manager :P. Just joking of course, super nice platform. Good work!",
                "author": "chembit",
                "score": 11
            },
            {
                "body": "Thank you so much for the feedback. Really good point. I'll be adding fixing this soon.",
                "author": "Ok-War-9040",
                "score": 7
            },
            {
                "body": "How you secure from manipulating pols via spam or bots?\nHow can you monetise this to finance the server costs, so that you don’t end up risking to compromise the rankings by sponsoring or ads",
                "author": "Temporary-Ad-4923",
                "score": 5
            },
            {
                "body": "This is a common growth hacking dark pattern where you've invested time to do something and only then find out you need to create an account.\n\nYour sunken cost fallacy kicks in and you think \"I already did all this work, might as well\" which wouldn't happen if you saw the need to be logged in upfront.",
                "author": "dkarlovi",
                "score": 5
            },
            {
                "body": "really good idea, recommend changing the color palette to give navbar, manu a bit pop, also this [https://imgur.com/FOYFEbg](https://imgur.com/FOYFEbg) , also take a look at lighthouse, good luck!",
                "author": "Aggressive_Talk968",
                "score": 4
            },
            {
                "body": "Not bad but for my part I'm more interested in products and that needs a little more specification and also being regularly updated. For example comparing headphones.",
                "author": "Swedish-Potato-93",
                "score": 3
            },
            {
                "body": "I love this idea. I too hate trying to weed through all of the paid, outdated, or poorly written articles and blogs to find relevant information.\n\nWhen I'm going to make a large purchase I often make a spreadsheet to compare all of the top options. It would be cool if you could add a comparison table mode and everyone could update it as new solutions are released and old solutions are updated or killed off... like a wikipedia of best of/comparisons.\n\nUX: I searched for a couple of things I'm currently looking for and I didn't find anything, which is fine, but it took me way too long to notice the new bar that appears below the search with the status text in gray that tells me it's searching or no results were found. Maybe you could give that bar, or the header bar, some contrast or color so it's more noticable.\n\nDesign: the bootstrap styles (or whatever it is) are nice and simple but it could use some bitmap graphics to add some depth and variety; and it would be a fun site to browse, even if I wasn't looking for something specific. Maybe there could be icons or graphics for the categories so you can easily see which category a post belongs to from the homepage list. If a particular post gets popular you could add a picture to convey it's topic more quicly when someone is scanning the list (or maybe automate fetching images from a stock photo site and users can indicate it if it's good/relevant or not).\n\nAnyway, just some ideas and feedback, take it or leave it. Good luck with the site!",
                "author": "bonestamp",
                "score": 3
            },
            {
                "body": "You should *definitely* have a filter going for slurs and a report button. Sorry. Internet :(",
                "author": "ic_nay",
                "score": 3
            },
            {
                "body": "Did you create this from scratch? \n\nI have an idea for a website that i want to build and the layout is kinda similar to your website. also what are you using for the backed? \n\nLooks sleek and straight forward! \n\nI do find the landing page a teeency bit busy. but once you look around and understand whats going on it makes sense :)",
                "author": "Wombo_Warrior",
                "score": 2
            },
            {
                "body": "Maybe add categories, tags and/or similar questions to the question page. People will ask the same thing a million times just like on any forum i think x)",
                "author": "shmupid",
                "score": 2
            },
            {
                "body": "nice work",
                "author": "Formal_Ad_8000",
                "score": 2
            },
            {
                "body": "Commenting for submission",
                "author": "winnerofchains",
                "score": 2
            },
            {
                "body": "👏🏻👏🏻 NICE WORK\n\nIs this open-source though?\n\nFeedback:\n\n1. Dark Mode\n2. Upvote a question without logging in - Shows up more prominently for the day/week/month.\n3. Weekly \"Challenge\"? What's that? Doesn't make any sense. Challenge word could be changed with Poll, Debate, Discussion, Vote etc. The challenge word doesn't sit well in this context.\n4. Search existing options (fuzzy search) before adding a new option when found, prompt to vote.\n5. Allow reporting of an option, when a threshold is reached, it is flagged and will be removed after a manual check (AI checked). Seen some NS4W options.\n6. Allow marking something NS4W, question/option.\n7. Allow AI summarisation down the line.\n\n👍🏻",
                "author": "CURVX",
                "score": 2
            },
            {
                "body": "This is awesome. I actually thought about making this years ago but never did it.\n\nThe more users, the more input, the better the site. How to get more users though?",
                "author": "krazzel",
                "score": 2
            },
            {
                "body": "Thank you for the help and feedback, this really means a lot. Yup should have fixed those console errors before launching but I was too excited to wait ahah",
                "author": "Ok-War-9040",
                "score": 2
            },
            {
                "body": "soundguys.com",
                "author": "GuyWithManyThoughts",
                "score": 2
            },
            {
                "body": "You’re right. Thank you. I’ll fix.",
                "author": "Ok-War-9040",
                "score": 2
            },
            {
                "body": "Thanks for the feedback! I have a related section on the questions page but it only shows on desktop. I might add it to mobile too then. Also it’s not possible to add duplicate question so if someone tries it they get prompted to go to the original question.",
                "author": "Ok-War-9040",
                "score": 2
            },
            {
                "body": "Yeah I'm aware, talking about comparison lists",
                "author": "Swedish-Potato-93",
                "score": 2
            },
            {
                "body": "I love it!",
                "author": "Black_Bird00500",
                "score": 1
            },
            {
                "body": "damn!!! is really interesting! i love it",
                "author": null,
                "score": 1
            },
            {
                "body": "Ahah thank you :D",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I haven't thought too much into it because it's a passion project. Monetisation would just be to keep the server costs, so maybe Google Ads would suffice. Optional could be sponsored options but by clearly marking them as such. spams and bots... So far i have a system to remove flagged content if deemed necessary and only authenticated users can comment, so that should help a little! :)",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Thank you for the amazing feedback. I’ve made a note of everything and I’ll fix soon as possible :)",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I’ve added a filter for slurs!! And also an AI moderator to moderate questions and comments on the background :)\n\nAlso, I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Ehy there :) yes, from scratch but using AI. Stack: Vite, React, Supabase",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Thank you so much ☺️ \n\nI’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Hi there, it’s not open source yet but could be in future!\n\nYou made an amazing point about the weekly challenge. I’ll change it to something like discussion.\n\nIt already searches for existing options but i just noticed that on mobile the search is obscured by the keyboard!!\n\nJust noticed the NS4W. Thank you. I’ll fix it :)",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Ahah that’s the question. Still trying to find out :)",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Thank you!!!",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Thank you!!",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Thanks for the feedback. If this works out it won’t be hard to add a filter to sort the options by hottest instead of most voted, and that’s also why i’ve added a comments.",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Congrats on the launch. 🎊🎊🎊\n\nMost of the issues I listed are yet to be addressed so I will hold onto that upvote for now. 😊\n\n🍻",
                "author": "CURVX",
                "score": 1
            },
            {
                "body": "Ehy there!\n\n2. Worried about this one, as bots could spam or click random things and vote for questions, would feel safer if user had to be authenticated to vote.\n4. That one i have done!\n5. I haven’t allowed reporting for options, BUT i have added a naughty words filter :)",
                "author": "Ok-War-9040",
                "score": 1
            },
            {
                "body": "Exactly what I needed - because the most popular product is obviously the most appropriate to my use-case. As an added bonus, this will also ensure that any pesky new-comers trying to come up with more effective solutions than the incumbents will have an even harder time gaining users.",
                "author": "symcbean",
                "score": 0
            },
            {
                "body": "Now we have to look through 48 ☺",
                "author": "Supermathie",
                "score": 0
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 0
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 0
            },
            {
                "body": "I’ve just released on Product Hunt, would help me a lot if you could upvote me :’)\n\nhttps://www.producthunt.com/posts/bextora",
                "author": "Ok-War-9040",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1751392239.0,
        "title": "Is Angular + Laravel a good tech stack for building a medium-level sports business management platform?",
        "author": "k_sports_man",
        "id": "1lp8ecf",
        "selftext": "I'm planning to build a **medium-level sports business management platform**—something that includes managing tournaments, teams, player registrations, match schedules, payments, and reporting tools. I’m targeting web-first for now but might consider a mobile app later.\n\nI have decent experience with **Angular** for frontend and **Laravel** for backend, and I’m considering using this stack for the project.\n\nA few things I’m wondering:\n\n* Is Angular still a good long-term choice compared to something like React or Vue?\n* Is Laravel scalable enough for growing userbases in case this platform expands?\n* Any issues I should watch out for when combining Angular and Laravel?\n* Would this be a good stack for integrating real-time updates (like match scores)?\n\nI’d love to hear from others who’ve built similar business platforms or have used this stack in production.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1lp8ecf/is_angular_laravel_a_good_tech_stack_for_building/",
        "num_comments": 12,
        "comments": [
            {
                "body": "Yes.",
                "author": "Marques_Neto",
                "score": 6
            },
            {
                "body": "Absolutely\n\nThough you should clarify how \"rich\" the UI really needs to be\n\nIf this is \"just\" a functional tournament *backend* and maybe a scoreboard - as in you're mostly just filling out and submitting forms, and can handle a page refresh on submit - you don't need Angular at all",
                "author": "No_Dot_4711",
                "score": 6
            },
            {
                "body": "Yes. Already have 2 apps in prod with same stack. No regret.",
                "author": "eneajaho",
                "score": 3
            },
            {
                "body": "This post sounds like you are hiring someone to make this for you and you're double checking with this subreddit for validation.\n\nTo answer your question: It's fine. \n\nThe problem will not be your tech stack unless you choose a non-relational database (teams and players are relational by default).\n\nBefore even hiring anyone for this, create an MVP and save yourself money. Use Replit/Loveable/Bolt.new to get a rough draft of the CRUD side of things (no need for auth in this case). Do not ask it to use Laravel/Angular as it doesn't really matter for the MVP. Just React/Express is fine for MVP. Once it 'sorta works' you can then hire someone to build the thing out. This will save you $thousands in dev costs.\n\n  \nYour bottleneck will be the information about the players/teams. These APIs/Datasets are NOT cheap for commercial plans and realtime data. \n\n  \nGood luck!",
                "author": "Pigmilk",
                "score": 2
            },
            {
                "body": "Frequency of upates and features + maintained by Google.",
                "author": "v-and-bruno",
                "score": 2
            },
            {
                "body": "Q> Is Angular still a good long-term choice compared to something like React or Vue?  \nA> Depends on your project, if you build complex features like reporting tools or real time updates, then Angular is great chocie. For lightweight components, then use React. Vue is also good but lack of features. \n\nQ> Is Laravel Scalable Enough for Growing Userbases?  \nA> Yes, for database optimization, caching, and background processing\n\nQ> Issues to Watch Out for When Combining Angular and Laravel  \nA> Prepare with CORS configuratuion, authentication, API design, deployment, and real time updates. \n\nQ> Would this be a good stack for integrating real-time updates (like match scores)?  \nA> You can combine it with Laravel WebSocket.",
                "author": "OptPrime88",
                "score": 1
            },
            {
                "body": "Yes for sure. But if you want to use Inertia features or anything like that then go with React or Vue. \n\nI have laravel apps with a 80 million database rows in tables. I was at Laracon last year and listened to how Square uses Laravel and they handle millions of database transactions a day. \n\nReal time updates are easy using laravel livewire pooling and Inertia polling which none of that works with angular. But you should be able to get real time updates with Laravel Reverb and angular.",
                "author": "funrun2090",
                "score": 1
            },
            {
                "body": "You're golden.\n\n1 - Angular is starting to rise again, and it has much stronger backing than React. \n\n2 - Don't know about Laravel, but I do know about Adonis JS which is very similar and is inspired by Laravel - and it scales gracefully. \n\n3 - XSS vectors, since you're most likely going to be using OATs or JWT for Auth. \n\n4 - Can't answer this since I've never done live updates, but look into web sockets. Laravel has something called Laravel Echo from a quick lookup. \n\nThe only reccomendation I can possible give is to use Inertia, but unfortunately, it's probably a pain to make it work with Angular.",
                "author": "v-and-bruno",
                "score": 1
            },
            {
                "body": "Sounds good! But to support the decision even further I challenge you to design the app on paper for as complete as you can imagine before writing a single line of code. With design, I don’t (just) mean UI, but more importantly: architecture, DB models, event system, communication channels etc.\n\nHave fun!",
                "author": "Electronic_Voice_306",
                "score": 1
            },
            {
                "body": "I am not hiring any one, i am building my own.",
                "author": "k_sports_man",
                "score": 1
            },
            {
                "body": "> Angular ... has much stronger backing than React\n\nWhat does this mean?",
                "author": "azangru",
                "score": 1
            },
            {
                "body": "**Actually, the UI is quite extensive — it’s not just basic forms or scoreboards.** The platform will handle everything from **player selection workflows**, **team and match administration**, to **cash transactions**, **stats tracking**, and potentially **live match inputs or real-time updates**. So we’re looking at a **dashboard-heavy, interactive interface** with a lot of client-side logic, validations, and dynamic components.",
                "author": "k_sports_man",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1758652665.0,
        "title": "Is 3k euros too much for a one-man dev team?",
        "author": "mekmookbro",
        "id": "1nopj1g",
        "selftext": "They asked me for my price, and knowing that I'll be the only tech literate person to build their whole app I quoted 3k euros per month.\n\nHere's a list of what they're expecting from me :\n\n1. Frontend design\n2. Logo and brand design\n3. Server management & security\n4. Database management, backups etc.\n5. Backend\n6. Mobile app\n7. Landing page\n8. Company email setup\n\nIn short : literally everything.\n\nThey're based in Germany, I checked out senior backend dev salaries there and saw that it's around 4.5 to 5.5k on average. Since I live in Turkey (our currency sucks ass) I was able to quote as low as 3k, and I know the partner of the company who actually contacted me with the offer.\n\nThey've also been very eager to get a time estimate from me so I estimated 3 months for the MVP and 9 for the complete platform they have in mind.\n\nI also stated that I am quoting this because I will be the one person doing everything, if they bring in more Devs/designers/DevOps people etc to ease my workload, I can go a little lower\n\nMy contact (partner of the company) contacted his partner and returned to me and said it's above their budget. And that they were \"thinking something like 1000€/mo\". I closed the door shut immediately, so I wanted to ask here if I made the right choice. Because it's the salary they pay an intern in Germany, and 3 times less than what a \"junior\" backend dev makes.\n\n---\n\nEdit : Since the post is getting a lot of attention, here are my answers to some FAQs;\n\n\n**Can you even do \"literally everything\"** : I've been very clear about this, since I know the guy (we've done some work before), he already knows that I suck at frontend design. I'm half decent at others, and I have 15 yoe in backend development so no issues there. And their response to it was : \"We'll hire freelancers when you complete the backend and have the MVP ready\" which sort of made sense to me.\n\n**What is the job?** : Basically they wanted to clone prematchapp.de for Turkey. Yes, the entire thing. (including business side)\n\n\n---\n\nEdit 2 : I can't believe I forgot to mention, this is the same person who [asked me to build an AI model](https://www.reddit.com/r/webdev/s/iqZBQSr3qM). After reading the comments I told him that it'll cost at least a million dollars and years of research and training.\n\nBut apparently he still has hope for it because he said \"I'll handle the AI part\". Which is incredibly sad if they can't even afford 3k salary for me. Also the server will handle the bulk of the work but let's add custom AI model integration to that list as well lmao\n\nYou may say he's a dreamer, but you won't be the only one",
        "score": 293,
        "url": "https://www.reddit.com/r/webdev/comments/1nopj1g/is_3k_euros_too_much_for_a_oneman_dev_team/",
        "num_comments": 189,
        "comments": [
            {
                "body": "You are doing the job of like 8 people for 3k a month.",
                "author": "IntentionallyBadName",
                "score": 899
            },
            {
                "body": "Too much? I’d say it’s too little for what you’re doing (without knowing exact specifications).",
                "author": "Fit_Schedule2317",
                "score": 229
            },
            {
                "body": "They have an Idea™ and want someone to do all the actual work  \nDodged a bullet imho.\n\nDo you lnow what kind of product they actually wanted to build? Any specifics?\n\nAlso 3k is ridiculously low for the skillset required",
                "author": "regaito",
                "score": 159
            },
            {
                "body": "You made the right call, they just assumed since you live in Turkey you would be dirt cheap. Be very polite when you decline as your friend may just be the guy in the middle when it comes to financial decisions.",
                "author": "ShawnyMcKnight",
                "score": 141
            },
            {
                "body": "36k/year is crazy low",
                "author": "hobesmart",
                "score": 59
            },
            {
                "body": "3k euros can be too low for what they want.\n\nI can not see how one person can do all of this without suffering quality of the result. \n\nAnd I am generalist myself.",
                "author": "Sad-Seaworthiness140",
                "score": 55
            },
            {
                "body": "Just ask them if working 2h a day / 10h a week on their project works for them, presuming you are fine taking multiple part-time assignments.\n\nFull time for 1k / mo is not a thing.",
                "author": "These_Matter_895",
                "score": 46
            },
            {
                "body": "And probably not doing some of it well, that is a lot of skills and different specialisms.",
                "author": "Mortensen",
                "score": 35
            },
            {
                "body": "its crazy low for turkey too they just looking to find people to screw over and if i know one thing from freelancing is that the cheap ass customers are worst clients to work with they never like anything nor be satisfied",
                "author": "InevitableView2975",
                "score": 33
            },
            {
                "body": "I'm a full-stack developer and backend expert. My rate is 700€/day. So for a whole month (20 days) it would be 14k.\n\nEven with a friend discount it should be at least 3x what you are asking.",
                "author": "Automatic-Branch-446",
                "score": 30
            },
            {
                "body": "Basically they wanted to clone prematchapp.de for Turkey.\n\nYes, the entire thing.",
                "author": "mekmookbro",
                "score": 28
            },
            {
                "body": "Well what does “per month” promise anyway. I can do the job of 8 people, but it will be 1/8 the speed theoretically, so it depends on expectations etc",
                "author": "Ibuprofen-Headgear",
                "score": 24
            },
            {
                "body": "> Is 3k euros too much for a one-man dev team?\n\nNo. For someone who works on their own, it's not much in most EU countries. If we go to countries with high salaries like Germany, it would be very little\n\nIn Germany, a worker could earn 5k, but a self-employed person would earn more because he has to face other expenses; otherwise, it wouldn't be worth it.\n\n>  if they bring in more Devs/designers/DevOps people etc I can go a little lower \n\nThat not right. That should mean the project moves forward faster, not that you get paid less.\n\n>  \"thinking something like 1000€/mo\". I closed the door shut immediately,\n\nThe choice was simply that or allow whipping.",
                "author": "ManWithoutUsername",
                "score": 20
            },
            {
                "body": "First: 3K is still too cheap. But it’s a good start if this one of your many jobs.\n\nJust tell them: for 1K per month I can do the job in 36 months for you, for 3k in 12 months. And be sure you are not exclusive tied to them, so you can do side gigs too. And as an extra bonus (the vendor lock) make the app in such way that they need you after the 12 months. Because nobody in that company knows how it is built, they will desperately need you after those 12 months…",
                "author": "benthisday",
                "score": 18
            },
            {
                "body": "If thats true, 3k/month with a 3 month mvp is REALLY under estaminated as a single dev. You will spend months alone getting interfaces right; even if you try to cut corners everywhere (i.e. android app is just a webview; next.js (or similat) + and some high quality component framework; idk if multilingual support is needed but since they are in germany and it should also work for turkey I strongly suspect that as well so add 3 languages atleast....)\n\nYeah dodged a massive bullet right there. Honestly was there also a couple of times with some german clients. They expect everything and pay nearly nothing....",
                "author": "Mai_Lapyst",
                "score": 18
            },
            {
                "body": "It's not about your currency, it's about the value you're bringing to the table.",
                "author": "EducationalZombie538",
                "score": 17
            },
            {
                "body": "That's standard rate for senior developer in Belgium",
                "author": "Automatic-Branch-446",
                "score": 17
            },
            {
                "body": "Honestly you are lucky they didn't take you on that offer, people who have such grand ambitions to build complex apps and can't even afford to pay 3k are going to be such a pain to work with.",
                "author": "mdivan",
                "score": 15
            },
            {
                "body": "Double the money and triple the estimate and you might be close to something realistic.",
                "author": "CrawlToYourDoom",
                "score": 14
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 14
            },
            {
                "body": "Thanks for the info.\nI thought only Switzerland can achieve such levels.\n\nThumbs up for your PHP in title! 👍",
                "author": "AminoOxi",
                "score": 10
            },
            {
                "body": "That did cross my mind lol.\n\nEven in Turkish currency I'm currently making around 3k euros per month through my freelance profile. But again since it's freelance it's not very stable.",
                "author": "mekmookbro",
                "score": 8
            },
            {
                "body": "How about I raise you one.\n\nI've even heard the trigger word \"*once the app starts to make money*\" in their response lmao. Their plan was to start me with 1k and **maybe** 9 months later I'll get a raise.\n\nSurprised they didn't ask for a blowjob as well, but I'll be working remote so they'll have to make do with some nudes lol",
                "author": "mekmookbro",
                "score": 8
            },
            {
                "body": "You should know, just in case you don't, you do not need to use ai to do those things there are plenty of app frameworks ready to go",
                "author": "InAppropriate-meal",
                "score": 8
            },
            {
                "body": "3000 is low. LOW.\n\nNever talk to them again, lol.",
                "author": "briang17",
                "score": 7
            },
            {
                "body": "You should ask 30k Euro for this based on the skills required.",
                "author": "Hot-Chemistry7557",
                "score": 7
            },
            {
                "body": "RemindMe! 7 days",
                "author": "Joni97",
                "score": 6
            },
            {
                "body": "> suffering quality of the result\n\nI've been very clear about this, since I know the guy (we've done some work before), he already knows that I suck at frontend design. I'm half decent at others, and have 15 yoe in backend development.\n\nTheir response to it was : \"We'll hire freelancers when you complete the backend and have the MVP ready\" which sort of made sense to me.",
                "author": "mekmookbro",
                "score": 6
            },
            {
                "body": "I edited the post to include a response to this, but yeah I do, and I have built many similar systems. Even one for the government, though thankfully on that job I had a frontend designer to work with me, and a pretty good documentation.\n\n15 yoe in backend helps a lot, especially since most of that time I was working freelance or on my own projects - which meant dabbling in all these 8 areas. I also have worked as a graphic designer for a few years and I'm more confident in my logo/brand design skills than I am in my frontend design.",
                "author": "mekmookbro",
                "score": 6
            },
            {
                "body": "I like the way “mobile app” and “logo and brand design” are just casually thrown in there.",
                "author": "bitanath",
                "score": 5
            },
            {
                "body": "Sounds like you need to be paid more!",
                "author": "BinaryMoon",
                "score": 5
            },
            {
                "body": "I was getting paid 4.2k euros a month outsourcing german company and i was only backend developer.",
                "author": "AlexGSquadron",
                "score": 5
            },
            {
                "body": "I'm a full-stack developer and backend expert. My rate is 700€/day. So for a whole month (20 days) it would be 14k.\n\nEven with a friend discount it should be at least 3x what you are asking.",
                "author": "Automatic-Branch-446",
                "score": 5
            },
            {
                "body": "It's low even for a senior in Portugal. Fair price here would be >5k being freelance I would ask for ~6k /7k at least (40-50€/h)\n\nThey are trying to get something really crappy or they are trying to find the best hero paying peanuts. Better trying wordpress or AI and then you can quote 3k to fix their \"almost done\" lovable project \n\nNote: I've seen now the minimum wage in Turkey which is 2/3 of the Portuguese one, so maybe 3k is reasonable for turkey.",
                "author": "pfunf",
                "score": 5
            },
            {
                "body": "700€ a day? Now that's impressive for Europe.",
                "author": "AminoOxi",
                "score": 5
            },
            {
                "body": "> They're based in Germany, I checked out senior backend dev salaries there and saw that it's around 4.5 to 5.5k on average.\n\nThats not quite correct. You need to add about 25% for health insurance etc. you need to compare what you earn with what it would cost them to hire someone. With that 1k would come out to below intern level. Even an anverage student can earn 1200€/month with 20h/week. (15€/h)",
                "author": "Mognakor",
                "score": 4
            },
            {
                "body": "I'm pretty sure they're gonna come crawling back once they check out the market lol. \n\nMy contact and I have worked on a few projects before and I'm 100% certain he'll want to work with me rather than someone he doesn't know for the same salary. And good luck finding someone who'll accept **the same salary** for a job like this.\n\nThough the comments made me want to increase the number now. But 3k €/mo for Turkey is like crazy high, about 1.5 times of a specialist doctor salary. So I'd be more than happy with it.",
                "author": "mekmookbro",
                "score": 4
            },
            {
                "body": "I don't speak Dutch either. It is a little bit more complicated to find contracts but not impossible if you have connections.\n\nWhat backend language/framework are you proficient with ?",
                "author": "Automatic-Branch-446",
                "score": 4
            },
            {
                "body": "Thanks! I'll check out some places when I'm there then. Though I'll probably also need a work visa lol\n\nMainly PHP, nowadays Laravel. But also wrote some node and python backends as well. Last app I worked on had both Laravel and node backend for example. I had to use puppeteer for browser interactivity which PHP can't do, so I implemented node mostly as an API endpoint for the PHP backend",
                "author": "mekmookbro",
                "score": 4
            },
            {
                "body": "Massively under charged in my opinion.",
                "author": "mr_tea",
                "score": 3
            },
            {
                "body": "turkiyede bile bankalar aylik 110bin tl veriyor 3-5 senelik deneyimli kisilere. 4-5bin eur altina yapılamaz ve yapilmaz ki şevkinizi kirmak istemem 8 tane seyi bir kisiye aylik 1bin eurya yaptirmaya calisan elemanlar (sirket demiyorum bile) her zaman cok bas agritir hic bi isi begenmezler soyle soyliyim sizin verdiginiz rakam turkiye sartlari icin bile cok cok dusuk. \n\nEger 4 bine okey derlerse el altindan bi designer ile calisip iş yükünüzü hafifletirseniz daha karli olur sizin icin",
                "author": "InevitableView2975",
                "score": 3
            },
            {
                "body": "Ah, never accept a job that tries to lowball you. They will be an absolute pain when it comes to actually paying. And like other said, 3k/month is too low for that. 3k is a junior over here.",
                "author": "Draqutsc",
                "score": 3
            },
            {
                "body": "You absolutely made the right choice. 1k a month for all that work is insulting. They basically wanted a full tech team for intern wages. 3k is already super low for everything you listed, especially for a German company. Don't second guess yourself on this one.",
                "author": "KoalaFiftyFour",
                "score": 3
            },
            {
                "body": "3K Euro in Germany is monthly salary of a lady that is cleaning the office.",
                "author": "UnnecessaryLemon",
                "score": 3
            },
            {
                "body": "These guys are serious?  That deserves about 25k per month",
                "author": "Crystalized_Moonfire",
                "score": 3
            },
            {
                "body": "Brand identity alone is 4k+. If you accept this I think you may burn yourself out.",
                "author": "Solid_Pay1086",
                "score": 3
            },
            {
                "body": "3k? Stop selling yourself so short my man.",
                "author": "AggravatingAd4758",
                "score": 3
            },
            {
                "body": "That's not a single role, that's an entire department and barely enough even to live in Turkey especially if you’re in Istanbul.",
                "author": "TroileNyx",
                "score": 3
            },
            {
                "body": "youdontsay.gif",
                "author": "EducationalZombie538",
                "score": 3
            },
            {
                "body": "Those are my freelance rates. When I was employed in a company my rate was more like 800 per day",
                "author": "Automatic-Branch-446",
                "score": 3
            },
            {
                "body": "My best friend lives in Belgium and we have plans to live together there for a while.\n\nIdk if you know the market there, but do you think I can work there as senior backend dev without knowing Dutch (I think that was the other language spoken there), and only a little French?\n\nI have 15 yoe in backend and no problem communicating in English (C2 level)",
                "author": "mekmookbro",
                "score": 3
            },
            {
                "body": "Then given your skillset, you could do the project yourself and maybe get some additional income?\n\nIf you have the time of course",
                "author": "regaito",
                "score": 3
            },
            {
                "body": "Don't have the time but I also don't believe in the project either. I'm not very interested in football(soccer), plus I already have too many side projects lol",
                "author": "mekmookbro",
                "score": 3
            },
            {
                "body": "Whatever you do, don't do it for 1k. This is ridiculous low and they know it for sure.",
                "author": "Alekurp",
                "score": 2
            },
            {
                "body": "€3k is too little, if you are the whole development and operations 10-20k is more along a team of part time engineers doing the tasks you outline. \n\nAlso your delivery time estimates seem way too low",
                "author": "esbenab",
                "score": 2
            },
            {
                "body": "you should say 5k and hire a helper! you'll need $200 for claude code max!",
                "author": "PricePerGig",
                "score": 2
            },
            {
                "body": "Too low unless they only expect a couple of hours a week.\n\nDon’t race to the bottom, find the clients that are willing to pay what you’re worth.",
                "author": "andlewis",
                "score": 2
            },
            {
                "body": "Are you available for hire? Joking but not totally.",
                "author": "1ntothefray",
                "score": 2
            },
            {
                "body": "I would rather be bedrotting and scroll through tiktok all day than do all that for only 1k a month\n\nYou made the right call",
                "author": "seexo",
                "score": 2
            },
            {
                "body": "3k EUR was already too low, 1k EUR is just an insult for what they want. You made the right choice running away from that offer.",
                "author": "theflyingdeer",
                "score": 2
            },
            {
                "body": "In a vacuum, too little. You'd be doing the work of multiple people by yourself. If the exchange rate works out in your favor, though, it can make sense- that's the entire basis of outsourcing lol.",
                "author": "SmokyMetal060",
                "score": 2
            },
            {
                "body": "So they thought they could get an entire platform built from scratch including database, backend, design. web frontend + mobile and all of the infrastructure to support this and pay 1k per month for it? If I were you I’d let your contact know that this is pure delusion. Even 3k was grossly underselling yourself.",
                "author": "avnoui",
                "score": 2
            },
            {
                "body": "3k € in Germany as a self-employed would be a scam. 500€/day would be the minimum for someone with your experience.\n\n\nThey are basically \"nearshoring\" you. Pay someone much less in a EMEA  country with lower wages but say it's ethical because they don't \"offshore\" in India or whatever.\n\n\nSo you have two choices, either you lowball yourself and ask for an amount much lower than what a German freelancer would ask but higher than your local wages. Or you ask for a fair price following the German market (but with higher chances to be refused).",
                "author": "irisos",
                "score": 2
            },
            {
                "body": "It's less than what I get paid and I have a team of 14 devs around me.",
                "author": "Ythio",
                "score": 2
            },
            {
                "body": "What. The. Actual. Fuck.\n\nRaise your quote to 4k per month immediately in response. They're taking the piss.",
                "author": "EducationalZombie538",
                "score": 2
            },
            {
                "body": "Actually, I take my other comment back.\n\nJust reply by increasing your time estimate by 3\\*, given that they divided your salary by 3.\n\nThey'll get the hint.",
                "author": "EducationalZombie538",
                "score": 2
            },
            {
                "body": "Too little. Regardless if they bring in more people, do not go lower. Don't undervalue yourself.",
                "author": "artFlix",
                "score": 2
            },
            {
                "body": "Imo it should be double that (neto).",
                "author": "edaroni",
                "score": 2
            },
            {
                "body": "Way too small and the time frame isn’t giving much room for anything going wrong. \n\nLet’s make a fully functional and expansive app out that can do everything in 9 months… btw I’d like to add x, y and z along the way",
                "author": "Immereally",
                "score": 2
            },
            {
                "body": "No it's not too much. It's literally free for all that work. I live in a country where the currency is even shittier than yours (Lebanon) and I quote 200 euros per day just to write java backend code and sql/DB work.",
                "author": "BlacksmithLittle7005",
                "score": 2
            },
            {
                "body": "Yup charge around 6K.",
                "author": "spaarki",
                "score": 2
            },
            {
                "body": "15 yoe in backend development, doing everything stack and asking if $3k is too much? I was earning $2k with my 1 year of backend experience. Also design is the most important and the hardest part sometimes but often overlooked. I worked as a designer for 1-2 years so I know. I usually hire someone for that and tell that to the employer beforehand. I do design for my personal projects but never for a client. That skill of mine is reserved for only me.",
                "author": "Professional_Hair550",
                "score": 2
            },
            {
                "body": "Bro, take my mobile development off my hands and you can have part of my fucking business, lol. \n\n\n\nIf what you’re describing is true, you _are_ the business. Jesus.",
                "author": "VehaMeursault",
                "score": 2
            },
            {
                "body": "Refugees receiving welfare have around 1k per person per month.",
                "author": "nubreakz",
                "score": 2
            },
            {
                "body": "3k is cheap, insanely cheap … you met some guys who have no clue what the market is.    They are not worth your time.  \n\nLet them go try out 1k and fail.\n\nI would have given them estimates on per hour cost, features, and then an estimate of hours for each thing they want done.  \n\nAnd there would be costs for new features and so on…\n\nContracts are good.\n\nYou won by not doing business with these guys.",
                "author": "CantaloupeCamper",
                "score": 2
            },
            {
                "body": "Here is how i would handle it:\nFull stack Dev: 3k\nDevops: 2k\nDesign: 1k\nExtras (email and some other stuff): another 1k or if you feel generous maybe add as a One time order.\n\nDoing all that by yourself for 3k and assuming you are competent, that is a bargain, some could call that free work",
                "author": "_KNC",
                "score": 2
            },
            {
                "body": "Wtf man. They should hire grom India and even then they won't get good quality for 1k per month. At least I think.\n\nI've been to Turkey. It's not so much a very cheap country from what I could tell. Perhaps I was in the tourist places. Idk about rent prices. But 1k is not a bargain, it's a misconception of theirs.",
                "author": "RonHarrods",
                "score": 2
            },
            {
                "body": "My 5-8 person dev teams in India run 35-40k a month. Do with that information what you will.",
                "author": "wspnut",
                "score": 2
            },
            {
                "body": "Fk no",
                "author": "No_Top5115",
                "score": 2
            },
            {
                "body": "It's 1000€/day.",
                "author": "williarin",
                "score": 2
            },
            {
                "body": "It would cost more than your entire quote just for logo and brand design tbh",
                "author": "tacticalpotatopeeler",
                "score": 2
            },
            {
                "body": "Bro, you are the design, software and infrastructure teams in one person 😂",
                "author": "drckeberger",
                "score": 2
            },
            {
                "body": "nah make it  greater than 10k, they are almost hiring a company not a developer at this point",
                "author": "spreadsheet123",
                "score": 2
            },
            {
                "body": "It seems a quite a low price tbh.\n\nAnd while the currency is bad in Turkey, things are still expensive due to the inflation so I wouldn’t undersell yourself.",
                "author": "SableSnail",
                "score": 2
            },
            {
                "body": "Depends really on the work load which depends on number of features:\n\n1. same as 2.\n2.  This is a one time job. Use AI. Will not be close to professional designer, but they get what they pay for. Ask them to define in detail what logo&design represent, color scheme, and some similar designs that they like. Feed it AI\n3. Ongoing job. Use managed cloud to minimize workload.\n4. same as 5.\n5.  Ongoing work,. Use Backend-as-a-Service (BaaS). Something that is well established and has good support, documentation and developer mindshare. Firebase, Supabase, AWS Amplify, etc... Use one that has SQL support, user authentication, push notifications, real-time capabilities.\n6. Ongoing work, heavily depends on features and polish. Use Flutter to produce iOS & Android apps. Gemini AI knows really well how to produce Flutter apps.\n7. One time job. Use AI, should take less then a day.\n8. One time job. Use hosted email with integrated UI: gmail, proton, etc... Should take a few hours.\n\nI'd take that for an ongoing 3k/month",
                "author": "krkrkrneki",
                "score": 2
            },
            {
                "body": "Lol, I'm in exactly the same situation, for the same money. But I'm on outskirts of eastern europe. So in Germany such a job would probably have to pay at least twice the amount...",
                "author": "justhatcarrot",
                "score": 2
            },
            {
                "body": "3k and you're a consultant? Nah dude that's at least 8k if you gotta pay taxes too",
                "author": "bluegiraffeeee",
                "score": 2
            },
            {
                "body": "The typical daily rate for junior and mid-level (backend) devs in our company is about 600-800€ with 600€ being very cheap.\n\nSo per month its about 12.600€ to 16.800€. If you are a one man show you can cut this rate by about 20% because you don‘t have to finance the overhead/backoffice.\n\n3k is extremely cheap",
                "author": "hairytale007",
                "score": 2
            },
            {
                "body": "Happened to me recently, i came up to my boss to tell him that some stuff needed to change, he offered me to lead the company, but then refused to give me a contract with the agreed apon terms, tried to change them and was only going to give me a contract if i found a clients which is like adding cargo to a sinking ship. He also uses AI for EVERYTHING, he once bragged that he was worth 47 million (by asking an AI) but has been late to pay his devs several times, sometimes for months.",
                "author": "Some1_Nerdy",
                "score": 2
            },
            {
                "body": "This is so short sighted on their part.\n\nThis is way too cheap. I would charge more but only because I would manage team to implement.\n\nYou will burn out 100%.\n\nAt best they will have something that kind of works but is brittle and hard to maintain.",
                "author": "Icy_Foundation3534",
                "score": 2
            },
            {
                "body": "Tech person doing design tasks…. This is the problem with so much stuff on the internet where you get devs doing design seriously what decade are we in!",
                "author": "stroma_ru",
                "score": 2
            },
            {
                "body": "Classic case of non-technical founders who fundamentally misunderstand software economics. Building a sports analytics platform requires data ingestion from a number of sports analytics APIs, custom valuation algorithms that use millions of data points on the back-end side and creating mobile-optimized interfaces. \n\nFor 1k euro they are looking for someone who's desperate enough to accept 10% of the market rate for this. Even in lower-cost regions, engineers who can architect and build a complex system can ask for premium because of the value they can deliver. \n\nSports data platforms require significant infrastructure investments, licenses for using third-party API for bringing in the data may cost from 200-1000s of euro. A proper MVP would need 50-100k minumum, not the 3-9k they are implying. OP made the right call walking away.",
                "author": "nexo-v1",
                "score": 2
            },
            {
                "body": "The thing is you tell them $3k, but you tell them what they get. What you're capable of, what additional role you will take on. YOU set the expectations, they either agree, or they try to negotiate, it's up to you - but it needs to be clear what you provide them.",
                "author": "besseddrest",
                "score": 2
            },
            {
                "body": "it's not that bad, if they give him 8 times the normal amount of time to make things",
                "author": "General_Hold_4286",
                "score": 2
            },
            {
                "body": "I will be messaging you in 7 days on [**2025-09-30 18:42:45 UTC**](http://www.wolframalpha.com/input/?i=2025-09-30%2018:42:45%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/webdev/comments/1nopj1g/is_3k_euros_too_much_for_a_oneman_dev_team/nftbl5c/?context=3)\n\n[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fwebdev%2Fcomments%2F1nopj1g%2Fis_3k_euros_too_much_for_a_oneman_dev_team%2Fnftbl5c%2F%5D%0A%0ARemindMe%21%202025-09-30%2018%3A42%3A45%20UTC) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201nopj1g)\n\n*****\n\n|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|\n|-|-|-|-|",
                "author": "RemindMeBot",
                "score": 2
            },
            {
                "body": "\"Sure, 1000euros per month is absolutely fine, but the MVP will take 9 months, and the app 27\"",
                "author": "EducationalZombie538",
                "score": 2
            },
            {
                "body": "Technically you could probably do it at better than that measured in man hours, though not calendar hours. Comms is really easy when it's all in your head.",
                "author": "morosis1982",
                "score": 2
            },
            {
                "body": "Minimum wage doesn't really mean much here lol. In our beautiful country, minimum wage is below poverty line, for comparison minimum wage is around ₺25k while the cheapest house you can rent is around 10-15k. (That is without adding at least one month of rent each for down payment and agency fee)\n\nAdd in groceries, bills, and one single big mac and you're already in debt.\n\nBut yeah 3k is a lot (at least here), it's 1.5x higher than a specialist doctor's salary",
                "author": "mekmookbro",
                "score": 2
            },
            {
                "body": "and 9 months later the increase will be at inflation rate in Germany, around 5% lmao, also consider calling this guy as friend - no joke, they pay more to cleaning person at their office.",
                "author": "nubreakz",
                "score": 2
            },
            {
                "body": "Good on you for standing up for yourself, honestly it pisses me off when they want to undercut you like that(happened to me when i was an actor, before being a dev). In my case, the dude has clients that owe him money by the thousands in europe and in my country (Domincan Rep.), idk about your sitch but they probably have the money, just want to get it cheap cuz they see you as cheap labor. Value your work and yourself ✊️",
                "author": "Some1_Nerdy",
                "score": 2
            },
            {
                "body": "if you wanna do this get more, but I wouldn’t really do things I don’t have expertise on, like branding and design",
                "author": "Wall_Hammer",
                "score": 2
            },
            {
                "body": "You don't pay taxes etc?\n\n\nIf a contractor in EU want a 5k euro salary they charge 10k+ from the client. ",
                "author": "zkareface",
                "score": 2
            },
            {
                "body": "Depends on country etc but usually around 30-50%. Social tax, pension, employment tax etc. Then money for equipment, education, software. \n\n\nSo to pay a employee 5k you need to charge around 10k. Then the employee earn around 3,5k after income tax.\n\n\nA German dev would probably charge 20k euros a month for that job. ",
                "author": "zkareface",
                "score": 2
            },
            {
                "body": "Dodged a bullet then, know your worth :)",
                "author": "regaito",
                "score": 2
            },
            {
                "body": "I really hope you have at least two years time working alone on that",
                "author": "valendinosaurus",
                "score": 1
            },
            {
                "body": "This is ~5x less than what an MVP of this calibre should reasonably cost IMO.",
                "author": "deepwaterpaladin",
                "score": 1
            },
            {
                "body": "including logo and brand design..? wtf, they’re literally not doing anything. next thing they ask you to develop a marketing strategy",
                "author": "Wall_Hammer",
                "score": 1
            },
            {
                "body": "What country is this?  That's below minimum wage where I live.",
                "author": "FridgesArePeopleToo",
                "score": 1
            },
            {
                "body": "You should quote double",
                "author": "schaye1101",
                "score": 1
            },
            {
                "body": "too little",
                "author": "voodoo212",
                "score": 1
            },
            {
                "body": "It’s very little wouldn’t go under 8k for that",
                "author": "Chance-Possession182",
                "score": 1
            },
            {
                "body": "Do people outside the US really live on that little for that much work?!",
                "author": "Dangle76",
                "score": 1
            },
            {
                "body": "1000 Euros a month for full-stack dev, even with AI and excellent requirements, leaves you in poverty almost anywhere in the world...",
                "author": "Appropriate-Pin2214",
                "score": 1
            },
            {
                "body": "Wayyy too little",
                "author": "quintenkamphuis",
                "score": 1
            },
            {
                "body": "You’re better off working at McDonalds at that point haha",
                "author": "manintheuniverse",
                "score": 1
            },
            {
                "body": "it is not too much at all... you should charge double that amount at least",
                "author": "saito200",
                "score": 1
            },
            {
                "body": "You should ask 2k more",
                "author": "bluebird355",
                "score": 1
            },
            {
                "body": "3k is very bad.",
                "author": "muh2k4",
                "score": 1
            },
            {
                "body": "Frontend here (from Austria), from experience:\n- how much time for a mockup? Frontend design (believe it, or not) is very important for them, since it must \"look\". How many iterations of the mockup have you calculated in?\n- if no mockup (I assume this is the case). There will be change requests. How much time did you planned in for them? Your idea vs theirs. And then defend your position. \n- The frontend itself will take about 9 months ( preparing design, logo, Fotos, solutions to make it look good). The coding part is just a bit of work. The research and the ideas and how you would put everything together would eat the most time).\n- 3k€/month is okay, but you need at least 2 years to make everything work like a charm.",
                "author": "argens0",
                "score": 1
            },
            {
                "body": "I think it's too low for the work you're gonna do for them",
                "author": "empty-man-47",
                "score": 1
            },
            {
                "body": "At my company I do 3,4,5 and 6 for almost twice the price. It mostly depends on the country you live in, but 3k for all that stuff looks a low price for any country",
                "author": "rio_sk",
                "score": 1
            },
            {
                "body": "Too little.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "no.",
                "author": "Dangerous_Setting_78",
                "score": 1
            },
            {
                "body": "Introduce them to Claude, get a referral fee. Claude only charge them $200 per month",
                "author": "graph-crawler",
                "score": 1
            },
            {
                "body": "Cheap as chips mate can you build me a start up too?🤣",
                "author": "Crazy_Selection8433",
                "score": 1
            },
            {
                "body": "10k",
                "author": "Day_Hour",
                "score": 1
            },
            {
                "body": "Way too low. Contact companies and get their quotes for these services, then you can price yourself better.  But I would definitely not agree to all that (maybe just 1.) for 3k a month",
                "author": "jtemel13",
                "score": 1
            },
            {
                "body": "No. Too little. Take a few project then double your fee. Get to €12k",
                "author": "web_person_077",
                "score": 1
            },
            {
                "body": "If you're a contractor, then your invoices to clients should have a much different thought process than comparing to salaried(+ benefits) full-time employees.\n\nContractor negotiations are all about what is the value you provide to the client. Unless you are negotiating for specific hourly rates then your salaries or hourly wages are not the client's business. The price for specific services provided is what matters in these talks.\n\nIf they can only afford to pay you 1k/month, then they get only 1k of your services rather than the 3k worth you originally asked for. Obviously it slows down the project timeline, but it leaves you more time each month for your other income sources.\n\nIf you want to bring in 3k+/month and this one client only can afford 1k, then as a self-employed contractor it's up to you to  find other ways to earn the other 2k+/month.\n\nAs an independent developer (assuming that's the path you're trying to take), you will ideally be far more clever in your business strategy than doing bespoke projects for random clients here and there. Always think about resellability and residual income, because realistically there's relatively little value and a lot of time invested in constantly starting projects from scratch.",
                "author": "UntestedMethod",
                "score": 1
            },
            {
                "body": "I earn triple that for 1/8th of the work, and I'm not overpaid.",
                "author": "KrisSlort",
                "score": 1
            },
            {
                "body": "No. If they would hire in Germany it would be 6k+benefits and if they hire a contractor without benefits it is like 100+ PER HOUR, so roughly 1000/day.",
                "author": "jas_nombre",
                "score": 1
            },
            {
                "body": "3k for this job iss way to less, you can ask for more as single tech person in team you will not just responsible for development but for bugs and everything and if things doesn't work you will be first to get blame.",
                "author": "BrightSchool2775",
                "score": 1
            },
            {
                "body": "ask for moreeeeeeee. at least 5k. Like u/IntentionallyBadName said. you are doing the work of 8 people.",
                "author": "Ok-Count-3366",
                "score": 1
            },
            {
                "body": "I wouldn't even think about it for less than 6-8k. But salary are very dependant on location, your CoL might be much lower than me. \n\nNo idea if that's actually a reasonable rate, but thats a lot of work for just one person",
                "author": "OverclockingUnicorn",
                "score": 1
            },
            {
                "body": "Take the 1k and bang out a lazy AI hack job. They get what they pay for",
                "author": "Ancient-Function4738",
                "score": 1
            },
            {
                "body": "No, it's not much. i charge 2000$/ week.",
                "author": "GoodOk2589",
                "score": 1
            },
            {
                "body": "I think they won't pay you. You're too naive",
                "author": "Witty-Development851",
                "score": 1
            },
            {
                "body": "dude, your initial price is low.  1000€ is a day price for a very good dev in B2B consulting.",
                "author": "gdvs",
                "score": 1
            },
            {
                "body": "3k net / month used to be a 'competitive' salary for a medior-level engineer in Germany back around 2020.",
                "author": "pund_",
                "score": 1
            },
            {
                "body": "If you're quoting for a finished product it shouldn't be a monthly rate but a fixed price which is on the higher side of your guesstimate because you're taking on risk, and you'd want to be very militant against scope creep and iterative design rounds or improvements.\n\nFact that they offered 1k monthly is insulting and a huge red flag. I'd bail right there.\n\n3k is low for the west before tax, especially with your YoE, but idk about turkish rates and that's where you are.",
                "author": "Fspz",
                "score": 1
            },
            {
                "body": "For how many hours per month? Please say 50 or less.",
                "author": "FairyToken",
                "score": 1
            },
            {
                "body": "If they believe in their project they won’t want to cut corners by trying to do it on the cheap. You too have your own integrity to think about and have to be transparent about what the total development costs might be for such a project which you obviously want to be successful and if you need help with anything you need to be able to make the best decision you can for both parties. Speak candidly with the client and then see if they are still serious.",
                "author": "Rayzwave",
                "score": 1
            },
            {
                "body": "3k euro/month is only good if you have economical problems and desperately need the money. Otherwise 4-5k/month is more reasonable. But expecting you to do all that work for 1k/month is disrespectful and pure abuse.",
                "author": "Mikolai007",
                "score": 1
            },
            {
                "body": "Yapma seni sikecekler",
                "author": "Baris_CH",
                "score": 1
            },
            {
                "body": "At least double as minimum",
                "author": "atd2018",
                "score": 1
            },
            {
                "body": "Im getting 1.8k as a senior dev at 18",
                "author": "Zmlakarr",
                "score": 1
            },
            {
                "body": "If it's contractor work, you are barely at the level of a person who get a monthly salary. \n\n\nContractor work is expected to be paid hourly, not monthly. Prices for contractor can be from 45€ to 100+ per hour depending on experience and country. You government might ask for taxes, so you have to calculate before setting your price.\n\nIt's incredibly difficult to do those kind of estimates, especially with the diversity of tasks they are requiring.\n\nI'd say you need to build a team of 3-4 persons for that job, and delegate a lot.\n\nGood luck.",
                "author": "sebf",
                "score": 1
            },
            {
                "body": "It’s not that Turkish currency sucks, it’s because the country is poorer and things cost cheaper there. So 3k you’ll be living like a king in Turkey.",
                "author": "Odd_Row168",
                "score": 1
            },
            {
                "body": "I charge about 17K EURO per month ( 20K in freedom units ).  Lots of factors, experience, what's asked for, industry, scale needed.  I also work a lot when I'm \"on\".  I also \"do it all\" -- but in FinTech.\n\nIf you can \"do it all\", I might try to hook up with a consulting firm that does contracts for companies.  I think you'll find them more realistic and can negotiate with the companies better.",
                "author": "PaulPhxAz",
                "score": 1
            },
            {
                "body": "I would have quote 15-20/m depending on the client",
                "author": "aeroverra",
                "score": 1
            },
            {
                "body": "I would ask more also why logo dedign very weird but then again I would outsource that",
                "author": "JVAV00",
                "score": 1
            },
            {
                "body": "Salaries aren't that. Those are salaries after money already went out to pay for healthcare, unemployment insurance, etc.....\n\nAs a senior freelancer you would charge twice that salary @ 500€ a day. And here probably even more given that tasks they are asking of you.",
                "author": "tom_earhart",
                "score": 1
            },
            {
                "body": "Where do I pay you ?",
                "author": "RecursivelyYours",
                "score": 1
            },
            {
                "body": "Charge more! \nThey want to pay a shit salary and take as much profit as possible.\nYou’re worth 10k per month doing the jobs of 5 people.",
                "author": "IntrepidAspect5811",
                "score": 1
            },
            {
                "body": "Next time, quote them an hourly rate - or a daily rate if you must. Otherwise you get screwed when you need to work evenings/weekends.",
                "author": "SamPlinth",
                "score": 1
            },
            {
                "body": "Far too little..",
                "author": "Blackvz",
                "score": 1
            },
            {
                "body": "Tell them you’ll do it, but it will take 5 times longer and you will not accept any amendments once they have a working clone.  \n\nSo 1k a month for 45 months instead of 3k for 9 months.  That way, you will give yourself time to also take on supplemental clients as you won’t be working on it full time.  And as there are no amendments, you eliminate the “cheap” clients who take up most developers time. \n\nWin win",
                "author": "nycsavage",
                "score": 1
            },
            {
                "body": "I see 3k x 8 lol\n\nJokes apart at that point just do it for yourself\n\nOr if you want to do it for them at least have 50% cut",
                "author": "flaviews_",
                "score": 1
            },
            {
                "body": "so you do all... cool, mby register your own company",
                "author": "Puzzleheaded-Work903",
                "score": 1
            },
            {
                "body": "I'm a full-stack developer and backend expert. My rate is 700€/day. So for a whole month (20 days) it would be 14k.\n\nEven with a friend discount it should be at least 3x what you are asking.",
                "author": "Automatic-Branch-446",
                "score": 1
            },
            {
                "body": "that doesn't matter that much. It's still one man month and delivery will be prolonged. Extra pay for reduced overhead in managing 8 people, but not 8x. So price is reasonable",
                "author": "CatolicQuotes",
                "score": 1
            },
            {
                "body": "Yeah but it’s b2b, I think you don’t invoice from yourself? A freelance is no more than 30-40 an hour.",
                "author": "idontuseuber",
                "score": 1
            },
            {
                "body": "Yeah. Offering 1k/month for full time and a team's worth of skills? Hard pass is the only choice.",
                "author": "FairyToken",
                "score": 1
            },
            {
                "body": "This. Almost every 20k project we took as a startup back then ended up in a disaster due to the client wanting more and more",
                "author": "segidev",
                "score": 1
            },
            {
                "body": "Totally agree. For all that work and responsibility, 3k is a steal, especially if you’re the only one handling everything. They’re seriously undervaluing your skills and effort.",
                "author": "False_Bookkeeper_529",
                "score": 1
            },
            {
                "body": "Adamla arkadaş gibi bi ilişkimiz var. Fiyat sormadan önce bir konuşma sırasında söylemiştim benimle aynı seviyede olan arkadaşlarımdan en düşük maaş alan 100k alıyor diye. Hatta 3 günlük freelance iş için 16k aldığımı da biliyor (30 güne oranlayınca 160k TL ediyor ve yine 3000 eurodan daha fazla)\n\nAdamın asıl istediği beni asgari ücrete falan çalıştırmak ama bi diğer mağazalara da bakıp geri gelsin bakalım, yorumlardan gördüğüm kadarıyla 3kya bu işi yapacak insan yok benden başka skdfgsjdfksj",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "if he was a pakistani, were it wise for him not to accept the 1000 / month deal? That would be 4 times their average salary there in Pakistan",
                "author": "General_Hold_4286",
                "score": 1
            },
            {
                "body": "Teach me, oh wise one *bow*",
                "author": "Some1_Nerdy",
                "score": 1
            },
            {
                "body": "I am, but after reading the comments my price just went up a bit lmao",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "Thanks! I don't need AI for most of these but you're right it'll speed things up. After reading the comments I don't think I'm gonna work with them though, even if they come back and accept my 3k offer.\n\nAnd thanks a lot for the Gemini tip! I was wanting to check out flutter for some time and I could never get past the installation bugs lol (I'm on Linux Mint so that might be the problem idk) but if Gemini can help me out with the basics I'll try give it another shot",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "Sounds very much like my contact lol. I'm 1000% certain he's secretly expecting me to say \"okay I believe you, I'll work on this app for 9 months of my life and you can pay me *when it starts to make money*\" lmao\n\nHe's tried this line before and I refused (maybe also ridiculed a little but he's bad at reading subtext so I'm sure he didn't get that part)",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "In general it would be weird but I do have a 3 year professional graphic design experience. I taught myself Photoshop (then illustrator) the same way I taught myself backend development lol\n\nWeirdest part is, even though I'm pretty good at graphic design, I'm horrible at frontend, I always thought it would translate.",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "Wouldn't be surprised lmao. As I said I have done some work with the guy and he's a master of scope creep. Fortunately I only have one body so they'll have to understand that I can only work on one thing at a time.",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "Well I can do all but not at a professional level, and they were okay with that. They said they'll hire freelancers for design, and a fulltime devops team etc. when the MVP is ready.",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "Yeah realistically this is not getting done to a satisfactory degree",
                "author": "AllomancerJack",
                "score": 1
            },
            {
                "body": "Do you actually think you can build that? Honestly",
                "author": "regaito",
                "score": 1
            },
            {
                "body": "Backend also does pay quite well depending on market. Because too many people try to do the \"easy\" route and click together a shop and less want to do the interesting stuff like backend or ERP integrations. They are high risk and high value.\n\nI'd like to know more about what you do in terms of backend. But 700 a day sounds reasonable.",
                "author": "FairyToken",
                "score": 1
            },
            {
                "body": "That’s my point. People specialise because doing it all you never are able to get the quality that specialist can provide.  This is the case regardless of activity. You wouldn’t necessarily get a designer to do backend development.",
                "author": "stroma_ru",
                "score": 1
            },
            {
                "body": "Aggressive as hell for 1 person, but they probably don’t care about a quality product with the rate they are willing to pay",
                "author": "Trakeen",
                "score": 1
            },
            {
                "body": "800 € per day for a permanent contract? How do you sell yourself?",
                "author": "Ok_Interaction_8407",
                "score": 1
            },
            {
                "body": "It’s normal in b2b but not if you’re an employee",
                "author": "Ok_Interaction_8407",
                "score": 1
            },
            {
                "body": "Thanks, I don't have expertise but I do have experience in graphic design. Though I'm worse at frontend than I am at graphic design lol, it sadly didn't translate.",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "Idk how many taxes there are in EU but in Turkey you just have to pay the income tax, which is 15% up to ₺158k/year (~€3250)",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "I think it's fine if you need the experience. Don't do any overtime, period, unless you get paid overtime pay! Don't go above and beyond—just do what's expected of you. You'll be able to build the full stack yourself without any issues since you'll know everything, but don't let them abuse you or make it seem like you're responsible for it all. This is their choice to have one person handle everything.",
                "author": "mrcodehpr01",
                "score": 0
            },
            {
                "body": "Are you kidding? For contract work you should be asking for at least $80/hr ($12k/month)\n\nAnd that’s at absolute minimum.",
                "author": "snazzy_giraffe",
                "score": 0
            },
            {
                "body": "They offered you 30% more than the average salary in Turkey, I think it was a good offer. Surely you can hope to find a company that will give you the same salary as they give to their German developers.",
                "author": "General_Hold_4286",
                "score": 0
            },
            {
                "body": "I'm a senior dev with 7 years exp. I know I wouldn't be able to do all that in 3 months for any idea worth its salt. Maybe a very small idea like a basic fitness app or a small ecommerce site. Even at that it wouldn't be ready to put into production unless I was working 12 hour days. Unless you have some serious inventory then I wouldn't even attempt it",
                "author": null,
                "score": 0
            },
            {
                "body": "If thats true, 3k/month with a 3 month mvp is REALLY under estaminated as a single dev. You will spend months alone getting interfaces right; even if you try to cut corners everywhere (i.e. android app is just a webview; next.js (or similat) + and some high quality component framework; idk if multilingual support is needed but since they are in germany and it should also work for turkey I strongly suspect that as well so add 3 languages atleast....)\n\nYeah dodged a massive bullet right there. Honestly was there also a couple of times with some german clients. They expect everything and pay nearly nothing....",
                "author": "Mai_Lapyst",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1749853831.0,
        "title": "Why do people prefer MacOS (and Linux) for web development?",
        "author": "Reddit_Account_C-137",
        "id": "1lat2u6",
        "selftext": "I recently developed a full-stack app, and while I know it’s not perfect, the development process on Windows was surprisingly seamless. Deploying the app to GitHub and then to platforms like Render and Netlify was straightforward. The only real challenge I encountered was properly configuring environment variables.\n\nAlthough I also own a Mac, I mainly use it for lightweight tasks like checking email or watching videos. I recently tried setting it up for a new development project and found it to be quite frustrating. For example, PgAdmin presented a host of unusual issues that I never faced on Windows. Application management also felt inconsistent. Some apps install to the Launchpad, others land in random directories, and some just seem to “exist” through Homebrew. I also don’t find myself using PowerShell or other CLI tools often, so the heavy reliance on the terminal in Unix-based systems feels unintuitive to me.\n\nI understand some of this is likely due to my limited experience with Unix-like systems and command-line interfaces. Still, I can’t help but wonder: is there really still a strong advantage to doing web development on macOS or Linux? From my experience so far, navigation, installation, and tool compatibility seem worse compared to Windows.\n\nI’ve often heard the argument that Linux is the standard for most production servers and that developing in an environment similar to your deployment environment makes sense, especially for complex systems involving microservices, Docker, Kafka, Spark clusters, and the like. But does that same logic apply to simpler setups, like a typical React and Node.js app that doesn’t rely on real-time data streaming or distributed systems?\n\nIs my frustration just a result of inexperience? Should I push through and try to become more comfortable using macOS for development, or is it perfectly fine to stick with Windows (without WSL) if it works well for me?",
        "score": 323,
        "url": "https://www.reddit.com/r/webdev/comments/1lat2u6/why_do_people_prefer_macos_and_linux_for_web/",
        "num_comments": 291,
        "comments": [
            {
                "body": "- I don’t use an app for db management, just setup database schemas and queries in code.\n\n- The terminal is more intuitive once learned\n\n- When you push to production a lot of the time it will be in a UNIX-like environment so it makes sense that your dev environment matches this to increase portability etc.\n\n- Once you’re used to it everything feels very efficient.",
                "author": null,
                "score": 673
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 205
            },
            {
                "body": "It really depends on your tech stack. If you just use Node, it might not be worth it. But if you use Ruby, for example, Ruby version managers just aren't as fleshed out as on Unix. Even worse, Rails' latest background job runner doesn't even support Windows yet. This recently pushed me to use WSL.\n\ntl;dr: A lot of dev tools are just better or more mature in Unix.",
                "author": "TehDro32",
                "score": 172
            },
            {
                "body": "This having been said, if you’re happy with windows then stick with it if you want. If you’re comfortable that’s important, if you want to learn more it’s a good idea to learn a unix like OS as you will learn a lot about computing in general, but you should use what you like.",
                "author": null,
                "score": 131
            },
            {
                "body": "My experience with WSL is it feels like a bandaid instead of a real solution. Mac was more seamless for me and less unexpected issues. That said I use terminal a lot.\n\nI don’t think I can go back to windows development. I did some desktop app development and dealing with the registry and distributing DLL updates was very painful. Writing on Mac was never an issue, Unix operating systems are much cleaner",
                "author": "Technical_Sleep_8691",
                "score": 77
            },
            {
                "body": "While I'm a Windows user, I generally dislike everything Microsoft builds. Apis feel poorly designed, workflows are weird and cumbersome, developer experience is poor. I used Azure when I started out, and it's like being in an abusive relationship. You don't realise that getting punched in the face every day isn't normal until you're out of the relationship.",
                "author": "dmart89",
                "score": 74
            },
            {
                "body": ">tl;dr: A lot of dev tools are just better or more mature in Unix.\n\nAnd it probably end up running on Linux anyway, so you get some better parity.",
                "author": "ClikeX",
                "score": 62
            },
            {
                "body": "This is exactly why I moved to Mac for web dev, but that was also before things like docker/kubernetes existed (yes because I am ancient as the hills). It’s arguably less important to be developing on a Unix-like system now that most web development happens in virtualised/containerised environments.",
                "author": "q51",
                "score": 43
            },
            {
                "body": "Let go of ideas such as \"easy\" or \"intuitive.\" These words are basically analogs for \"familiar\" and thus are not helpful when approaching something new. \n\nRather, try and approach from first-principles and whether a tool or system adheres to (or even has) its internal logic. \n\n> Some apps install to the Launchpad\n\nApps do not install *to* Launchpad. Launchpad is just an app that presents an iPad-like interface for viewing apps that are installed to your Applications folder. FWIW, the common sentiment is that it's a pretty crap and useless app.\n\n> others land in random directories\n\nExample? That sounds very un-macOS-like and honestly is closer to the Windows experience.\n\n> some just seem to \"exist\" through Homebrew.\n\nThis is the biggest red flag here. Homebrew is a package manager; like all package managers, it installs to a specific path. Your shell should be configured to find these packages via the environment variable `$PATH`. This is pretty standard Unix command line 101 stuff, and if you're going to be a web developer, you *really* need to at least know the basics. \n\nFWIW the same concepts exist on Windows -- environment variables in general, as well as specifically `PATH` (Windows foregoes the leading `$`) -- but Windows users tend to eschew the command line, and thus don't run into these sort of concepts as often (even though environment variables can very easily be configured via the GUI on Windows).\n\nSo:\n\n> Is my frustration just a result of inexperience?\n\nYes. The command line isn't some \"other\" thing that should be feared; rather, the Unix command line specifically is one of the *the* primary reasons Windows is often a second-class citizen in the development world (there are many other reasons, e.g. licensing, but that's beyond the scope of this comment). \n\nAlso, command-line tools are often very simply *better.* For example, I am yet to find a better editing experience than neovim in a tmux session.\n\nBeyond that: as mentioned before, proficiency with the Unix command line is a basic requirement for being a web developer. I simply can't imagine doing this work without being able to effectively work with it.\n\nTo more directly address our post's question: \n\n- People prefer Linux for web development because it's most likely where our work is ultimately running.\n- People prefer macOS for web development because it's similar enough to Linux in the ways that matter, but has a very nice and consistent desktop environment. Non-dev apps such as email/messaging/etc tend to be of the highest quality and/or consistency compared to the other platforms, and of course things like iMessage are great too. \n\nIn many ways macOS is often seen as \"the best Linux distro,\" and I often agree. The Linux desktop is definitely a \"you get what you put into it\" thing, and I love that. But although I have my issues with macOS, and altogether find my Hyprland-on-Arch machine better for development specifically and generally more inspiring (it's also a good deal faster, even though the hardware is worse on paper), if I had to live with a single computer, it would be a 14-inch MacBook Pro without question. It's just the best of all worlds.\n\nI've also worked with Windows a ton and know it like the back of my hand. I genuinely appreciate some things about it, but all in all it is very simply a worse experience, and its impact on developers and development exceeds its failings local to itself -- e.g. the aforementioned issue of developers who use it (and haven't used anything else) often not learning how to do things outside of a GUI (which leads to horrible things like click ops). The developer tools that Microsoft has built (read: not acquired) that I think are truly fantastic are PowerShell and Visual Studio. The former is a great scripting language and *can* be made into a great interactive shell, but now is cross-platform so it's not really a Windows talking point anymore; the latter is overall fantastic but has been surpassed by JetBrains' offerings. \n\nBeyond those two things, though, I struggle to see any value that Windows brings to the table. It performs worse than Linux, is the least stable of the bunch, its dev tools are nearly always second class, and it costs money to boot (that is, if it boots -- badum-cssh). \n\nTo ever so slightly edit the classic saying: Arch on the desktop, Debian on the server, Windows on the wall, and Apples in *or on* my tummy.",
                "author": "rewgs",
                "score": 32
            },
            {
                "body": "I love working in WSL, but you’re understating the cost a lot. Yeah installing WSL is easy, but sometimes services don’t talk well between WSL and your host machine. And if you need any Linux applications that use any form of graphical interface you’re basically boned.\n\nI’ve spent in the hundreds of hours over the course of WSLs existence diagnosing WSL specific issues. Someone you don’t even realize it’s a WSL problem at first and start doubting your sanity about why some thing isn’t working, etc. It’s massively better than cygwin. And nicer to work in than VMware. So it definitely improves on what used to be, but no one should pretend it comes effortlessly or that it’s as easy to work with as true Linux environments.",
                "author": "memorable_zebra",
                "score": 32
            },
            {
                "body": "this is such a heinous perspective. “if people can’t deal with this thing i elect to deal with, maybe this trade isn’t for them”. get lost, man.",
                "author": "GludiusMaximus",
                "score": 25
            },
            {
                "body": "> isn’t going away and it isn’t bad enough \n\n\nThe slogan of Microsoft ",
                "author": "endrukk",
                "score": 23
            },
            {
                "body": "Agree, it’s less required however having to only learn one type of OS for servers and your local system is going to reduce needles repetitions of knowledge with variations in syntax.",
                "author": null,
                "score": 22
            },
            {
                "body": "It's not that mac or Linux are great. Once you don't have to use windows you start to realize it sucks.",
                "author": "Zahema",
                "score": 21
            },
            {
                "body": "Git commands get tremendously more cumbersome with  a UI with the exception of viewing diffs and logs history.  Those are easier for me with a UI.",
                "author": "CheapChallenge",
                "score": 20
            },
            {
                "body": "Yes, once deployment has been solved, it really doesn't matter what you used anymore",
                "author": "notAllBits",
                "score": 18
            },
            {
                "body": "Honestly... in my 15 years of development (if I count my beginnings in high school), I've developed \"something\" on everything - Windows with mingw/msys, Windows with WSL1, Windows with WSL2, various flavours of Linux (Arch, Ubuntu, Fedora), and now macOS... I have reasonable experience of at least 2 years with each OS... \n\nOne thing that stands out about Windows is that Windows's NTFS filesystem is slow AF compared to Linux's ext4. Lots of non-development stuff works better on Windows (+ I always worked with laptops and Windows always had better battery runtime if needed and Linux sometimes had HW/driver issues with stuff like bluetooth/wifi/gpu/...) so even when I used Linux I've always dual-booted, I mostly tried developing on Windows because dual-booting was a pain in the ass. But I always returned to Linux because Windows was just slow. I/O heavy operations, like running tests were often 2-3x faster on Linux on the same machine. \n\nBut honestly for \"the average case\" the platform you're working with doesn't really matter. \n\nThe difference comes when \"something doesn't work as expected\". Then it comes to the question of \"how to fix/solve this on <insert os here>?\" and your ability to figure it out. 3 things help in these cases:\n\n* How well are you experienced with problem solving on the platform you're using.\n* How well your teammates are experienced with problem solving on the platform you're using.\n* Is the solution googlable (= How many people on the internet encountered the same or similar issue).\n\nThe first one is very subjective. The second one is team dependent, if you're a solo developer you're on your own, if you work in a team, I strongly suggest aligning yourself with the team and using their knowledge to get more comfortable with other platforms. The third one depends on the technology you're using. For C# you'll mostly find solutions for Windows. For PHP/Java it'll be roughly the same for all 3 OSs. For modern nodeJS setups it'll probably be macOS > Linux > Windows. \n\nThis obviously also covers tutorials. Lots of tutorials for new stuff is mainly for macOS and Linux (given that WSL2 is now an established thing on Windows). \n\nSo the answer to your question is basically \"a combination of peer pressure + comfort\"...",
                "author": "black3rr",
                "score": 17
            },
            {
                "body": "Terminal environments are an afterthought on Windows and so many web development tools are written for them. It is a lot better now than it used to be but you still need band-aids for things to work.\n\nGit Bash is nice but a lot of things break like vitest reports or gradle output. It mimics some \\*nix commands but it's no replacement. WSL sucks. Docker using WSL is such a memory/resource hog. NVM for windows has some lame limitations. \n\nWorking on a mac is more native experience and is so much nicer.",
                "author": "viveleroi",
                "score": 17
            },
            {
                "body": "Before WSL, setting up a dev environment in windows was painful. You could use WAMP or XAMPP for PHP, but it was difficult to use for multiple projects, and especially with different versions of php and other services.\n\nWe used virtualization before docker, with virtualbox and vagrant. Vagrant was great for teams, but difficult for noobs if they didn't have a preconfigured file for their project.\n\nThen came docker, and that make setup a lot easier for developers, mostly because there were so many available config files to get started.\n\nVirtualization on windows and mac had issues with syncing files, so there was some lag in the server. I think Mac was ok with vbox/vagrant, but docker still had a sync delay. That got fixed eventually on mac.\n\nWSL fixes windows by running linux in the hypervisor, at the same level as windows. There is no file sync issue because we use an editor that can edit files remotely.\n\nI used windows for a few years, it was the worst but I got by. I had a mac for a few years, but once I saw docker performance on linux, I've been on that for the past decade. It's also great because it's the same cli environment as on the server, so we gain familiarity (this is a huge one). That's less the case now with WSL, and Mac has one that is almost the same.",
                "author": "iBN3qk",
                "score": 17
            },
            {
                "body": "Constantly switching between PowerShell and bash really makes you appreciate bash.",
                "author": "SporksInjected",
                "score": 17
            },
            {
                "body": "Setting up is far better experience. Also deving on a Spanish keyboard is fire",
                "author": null,
                "score": 14
            },
            {
                "body": "For things like this specifically, you have to think. Is a tool that can do an extremely large amount of things well and easily going to be as good at a single task or set of tasks as dedicated software? The answer is usually that no, it will not be.\n\nBut terminals do a LOT of things very well. File system searching and manipulation, git commands, docker commands, SSHing. All these things can be done easier and in UI tools. But they’re just as good as terminals, and terminals are transferable and require no setup on new machines.",
                "author": "Murlock_Holmes",
                "score": 14
            },
            {
                "body": "WSL is (really)fine until its not and you run into some kind of problem\n\n(For example; There is no way to prevent the WSL from going to sleep when unused. Also there is no way to ensure what IP the VM is going to have)",
                "author": "BortOfTheMonth",
                "score": 14
            },
            {
                "body": "No one said that broski. What they are saying is that with MacOS for example, it just works. \n\nYou install via homebrew, dmg file or whatever, ultimately it doesn’t matter. Spotlight or whatever gives you access to the app. \n\nI started off on windows, I’m never going back. I guess this trade isn’t for me lol",
                "author": "Real_Petty_Cash",
                "score": 14
            },
            {
                "body": "I actually prefer Windows with WSL2 and Linux Ubuntu   \nI have a M4 64GB and its cool, but I still prefer my windows - hate all you want but I am able to set up a local dev on any system as a result.",
                "author": "entp-bih",
                "score": 13
            },
            {
                "body": "Sure, and then stuff breaks and I spend 5 hours debugging.",
                "author": "Fs0i",
                "score": 13
            },
            {
                "body": "One thing I remember having issues with is anything that is file related.\n\nWindows is not case sensitive while mac and Linux are.\n\nSo if you test on Windows and everything works, you may have a bad time when publishing it on Linux \n\nI also remember having a surprise with MySql back then. I think tables name were binded to the file name. So on windows they were not case sensitive while on Linux yes. But for that part they may have fixed meanwhile.\n\nBut development wise, it is up to you. There is nothing wrong with developing on Windows.\n\nJust make sure to test on a linux-ish OS.\n\nEDIT: Yeah I know it is the file system, Windows has always been using case insensitive file system. Linux, i'm not a huge user but I know it is a lot of the time. Mac, is it \"new\"?",
                "author": "who_you_are",
                "score": 12
            },
            {
                "body": "Dude i was scratching my head with an UDP issue i had developing an app guess what it just doesnt work on wsl",
                "author": "xander1421",
                "score": 12
            },
            {
                "body": "Stick with it, it isn’t going away and it isn’t bad enough to quit a job over. All the different clouds have some sort of issue",
                "author": "ryantrappy",
                "score": 12
            },
            {
                "body": "Linux and Unix are posix.",
                "author": "MadCervantes",
                "score": 11
            },
            {
                "body": "For web, specifically, its because the vast majority of web servers are running linux (or adjacent), so its an easier / more direct transition.\n\nYoull want to level up in CLI. Its way easier to do stuff on remote servers.\n\nIts weird you encountered problems installing pgadmin, even using homebrew. \n\nFor Macs, apps that are installed through packages are installed to your Applications folder. Homebrew is unofficial, and tracked separately, so the apps are maintained elsewhere on the system. This is comparable to linux package management.\n\nThe fact that you find it harder is almost certainly because you’ve not used it enough. I used Windows a long time after starting out on DOS. MacOS took a little getting used to, but I’d never go back. Linux CLI was an easier step because I was used to DOS; the modern linux GUIs are very similar to MacOS too.",
                "author": "armahillo",
                "score": 10
            },
            {
                "body": "Linux has been my main OS for the last 10 years, but I had to use Windows at work, and while there were some hurdles in setting up WSL, there was nothing really difficult. And once it was set up, it's a breeze. You've got a full Linux system with seamless mounting and near-native speed.\n\nI probably wouldn't have switched to Linux if WSL was a thing 10 years ago.",
                "author": "perk11",
                "score": 9
            },
            {
                "body": "Just FYI, Windows works fine with /",
                "author": "Shipdits",
                "score": 9
            },
            {
                "body": "Better analogy would be that minivans and sedans are built on unibody platforms.",
                "author": "MadCervantes",
                "score": 9
            },
            {
                "body": "Dev matching Prod is a big thing for me. At work I use WSL for my webdev, this way I know my code will work exactly the same way on prod",
                "author": "Raphi_55",
                "score": 8
            },
            {
                "body": "Damn I'm early in my cloud engineer career a d my company uses azure. Should I stick to it or try other stuff? ",
                "author": "TinyStorage1027",
                "score": 8
            },
            {
                "body": "And unix systems use `/` (forward slashes) as file separaters, whereas Windows uses `\\` (back slashes).",
                "author": "queen-adreena",
                "score": 8
            },
            {
                "body": ">Most people lack the skills necessary to setup a Linux-like environment on Windows.\n\nThe best part is that you're serious. 😂\n\nYeah, we have trouble setting up the Linux subsystem on Windows that's pre-installed. You nailed it, that's exactly why we don't use Windows. /s\n\n>Matter of fact, Mac extremely slows me down with how unintuitive everything is compared to other OS's.\n\nNow that's just pure unadulterated projection right there. Mac is built off one of the oldest foundations still used in modern computing and the same foundation that Linux is built off of. \n\nMS DOS/Windows is the one that purposely made everything incompatible to try and build a monopoly in the 90s.",
                "author": "_hypnoCode",
                "score": 8
            },
            {
                "body": "Most of the development tools were written for unix derivatives so they run well there. Windows does have some compatibility etc now and a Linux layer but it still a layer compared to something built on a bsd type of kernel like macOS and Linux provide.  They’re like running a desktop version of the server version cloud providers use. ",
                "author": "PhotojournalistAny22",
                "score": 7
            },
            {
                "body": "Well because sometimes I need to grep and I don’t want to ask Copilot because apparently windows doesn’t ship with a common tool that was introduced in 1973.",
                "author": "wasteplease",
                "score": 7
            },
            {
                "body": "Easy. UNIX experience with the ability to do creative work -- Motion Graphics (After Effects), Retouching-Photoshop, Color Grading- Adobe Lightroom. Then jump into development work right after. I started my career as a webmaster where we had to use Photoshop as our daily tasks.\n\nIt has been like for 20+ years now. Sure you can run Adobe stuff on Windows but it didn't have posix layer until WSL2.\n\nSome of the things I like from Mac that Windows doesn't have are:  \nAbility to folder names like \"Client Report 01/01/07\" and Ability to label tags. I color code my folders/files with red,yellow,green,etc. Red for \"hot of the press\" review, Yellow for \"It is not ready to go but in draft state\" and green for published and done .This was part of classic mac OS 7 &8. It has and still is a productivity booster to look at different colored tagged folders/files for organization.\n\nPeople don't know what they are missing out with right-click and tag a label. Tag yellow and I know that file or folder isn't ready or in draft mode.\n\nI can go on and on. Another nice thing is hot-folders. Drag completed stuff into a folder and it automatically emails,zips, or SFTP files to a vendor/team mate. Again, those folder/file automation has been there for 30 plus years.",
                "author": "originalchronoguy",
                "score": 7
            },
            {
                "body": "For me, it's a mixed bag. VSCode, TypeScript, C# and Github are all quite good Microsoft products IMO, even if I'm not a big fan of many things in Windows. Clearly big enough corporation that some teams make good things, while others focus on enshittification.\n\nWSL made Windows a more viable dev environment, but it's still not quite as smooth of an experience as running Unix environment directly. Occasionally recovering from sleep mode gets the WSL stuck and demands a reboot, and if you need to run GUI from the Linux side, the WSLG windows can act weird. Annoying, but just viable enough that I still slightly prefer having the same OS and dev environment on work and personal computers, as I'd run Windows on the latter anyway for gaming.",
                "author": "Voidsheep",
                "score": 7
            },
            {
                "body": "macOS’s filesystem (APFS) is actually case insensitive — I’ve run into bugs that were due to this multiple times. \n\nThe most recent one was just last week when a developer on my team had used the wrong casing in a namespace in a PHP “use” statement. The import worked just fine on his machine, worked just fine when other team members pulled his changes and tested on their machines, but threw an exception when deployed to the (Linux, running ext4) dev server.",
                "author": "conchobarus",
                "score": 7
            },
            {
                "body": "Macs are very good computers. macOS is a very good operating system for web development toolchains/environments. Why wouldn't people use them? Who cares if a Windows computer is cheaper? I certainly don't care.",
                "author": "Lord_Xenu",
                "score": 7
            },
            {
                "body": "Github was only bought by Microsoft when it was already great",
                "author": "riggiddyrektson",
                "score": 7
            },
            {
                "body": "I don't think that's what he's implying with that last analogy",
                "author": "neoverdin",
                "score": 7
            },
            {
                "body": "Work with whatever makes you most productive.  Linux tends to be bit less ... quirky for package management and environment setup, once you get used to it. There’s an old saying about the “Linux mindset” that still kinda holds true, something like \"*Linux doesn’t teach you to avoid problems, it teaches you how to debug them*\".  Good skill for devs :-)",
                "author": "e-dimensionz",
                "score": 6
            },
            {
                "body": "Generally people like to develop on systems that more closely resembles where it will be deployed because then you are getting close to the real world experience*\n\nIt never hurts to try new things but sometimes the learning curve of a new process may affect development. You should develop with what you’re comfortable with and not try to fix a problem if there isn’t one. Just because a workflow works for one dev, doesn’t mean it will work for another.",
                "author": "probablystilldrunkk",
                "score": 6
            },
            {
                "body": "To put it simply from my experience Mac is the best of both worlds. You have the easy of use of Windows and you have the stability and development environment of Linux. I know I’am putting it in simple terms so bear with me with the downvotes. 😅",
                "author": "incunabula001",
                "score": 6
            },
            {
                "body": "Operating systems aren't case sensitive or insensitive, it's a property of the filesystem... NTFS used by Windows is case insensitive. And also APFS in default configuration used in macOS 10.13+ (so basically every modern Mac)... Linux uses case sensitive filesystems by default. But if you mount an NTFS disk in Linux it will be case insensitive., Similarly if you mount a Linux filesystem under Windows (using WSL) it will be case sensitive under Windows.",
                "author": "black3rr",
                "score": 6
            },
            {
                "body": "Desktop linux is easy to use for developers, particular given how many choices there are to find a paradigm that suits you. For consumer users or professional creatives, macos is better for high end peripherals and proprietary software.\n\nA lot of the tools and desktop environments on linux are developer-first, not constrained by a need to meet a general consumer market, or to be a sales platform for Apple's cloud services (even more annoyingly true of Windows in both cases, where there is a user base very hostile to change, and where Microsoft is monetising with gay abandon; you can avoid that via Windows Pro licences, but that is basically a Microsoft shakedown. Pay to avoid the ads. )\n\n What macos gives you is better commercial application support (although for developers this is not the case) and better laptop hardware, as long as arm is all you need. But Linux on laptops gives you a lot more vendor choice, such as Lenovo with its next day on site service options. That was actually why I left macs. Linux was a consequence of wanting to use Thinkpads but not Windows.",
                "author": null,
                "score": 6
            },
            {
                "body": "You can’t find a Windows laptop that can compete with the new MacBooks for anywhere near the same price. Not even close.\n\nAlso, for an old Unix hand like me, MacOS blows Windows away. Macs are like Linux boxes but with actual usable software.\n\nMy Dell work laptop costs far more than my daughters MacBook Air and the MacBook runs circles around a 16 core Windows laptop.",
                "author": null,
                "score": 6
            },
            {
                "body": "Because a lot of dev tools are built for Unix/Linux systems before they’re built for Windows.\n\nAnd because the terminal is way better\n\nAnd frankly because I’d much rather use macOS then the horseshit Windows has become especially because it integrates with my phone and tablet so I can also easily have my more mundane daily apps and messages synced with my machine.",
                "author": "MrCrunchwrap",
                "score": 5
            },
            {
                "body": "Because people praise themselves on learning Unix commands, but fail to learn powershell.",
                "author": "Fantaz1sta",
                "score": 5
            },
            {
                "body": "Because they want to feel different. Windows + Web Dev would simply remove their \"not a normie I swear\" card",
                "author": "djmill0326",
                "score": 5
            },
            {
                "body": "I prefer macOS over Linux because of its support and new M-series chips. I haven’t preferred Windows even when I was little.",
                "author": "a_decent_hooman",
                "score": 5
            },
            {
                "body": "Thank you for answering my question more directly and completely than others. It’s clearly a matter of inexperience. Appreciate the lengthy reply sharing your thoughts/insights.",
                "author": "Reddit_Account_C-137",
                "score": 5
            },
            {
                "body": "As a Unix fan, Bash is not one of my favorite things about Linux/MacOS. It's pretty archaic, and you quickly reach a point where you should've used a \"proper\" programming language. I actually think Microsoft did a pretty good job with Powershell. \n\nThat said, nobody is going to run Powershell (or anything else) on their Linux servers.",
                "author": "ClikeX",
                "score": 5
            },
            {
                "body": "As a mostly full time Linux user outside of work. WSL2 is honestly impressive. I hate the way The Raspberry Pi Pico has to be programmed on Windows (unless yoir using microPython), but WSL2 basically let me compile the SDK in the way I am used to and flash it over a USB cable with no Hassel.",
                "author": null,
                "score": 5
            },
            {
                "body": "I might very well not be doing things right, but if anything, docker is pushing me towards linux.\n\nHaving to open docker desktop and enabling chokidar polling for hot reloading feels clunky. It's not a big deal by any means, but it feels like a fix I shouldn't be having to do.\n\nAnd I feel that's kind of the thing that moves people towards Linux in general, it's not like you can't on windows, it's just that stuff here and there is that little bit easier. That command you need to do the thing you want to do is a one liner in linux or an installation of a tool in windows. Ssh or curl are good examples of this.",
                "author": "Levitz",
                "score": 5
            },
            {
                "body": "I never had WSL go to sleep, I've had it running 24/7.\n\nAs far as IP, you're correct, I haven't found a way to do that. There is however networking.mode=mirror which allows WSL to use the same IP as the host.",
                "author": "perk11",
                "score": 5
            },
            {
                "body": "if i met a junior, and they told me “i started with windows, tried WSL but it was difficult so i changed to Mac” my response wouldn’t be “guess this profession isn’t for you”, it would be, “that’s understandable, i am not a weird guy who judges people based on this”",
                "author": "GludiusMaximus",
                "score": 5
            },
            {
                "body": "macOS/Linux = UNIX\nServer will be running on a UNIX machine most likely. Most servers do. So its natural to develop on a UNIX machine. Macs have great hardware quality, Linux most customizable.",
                "author": "MrChiSaw",
                "score": 4
            },
            {
                "body": "Mac just works. it looks pretty its lightweight it stays cool its cheap for what you get(mba m4 base) for unix like or terminal stuff i am not going to pretend i know shit about this stuff all I know is i can use jetbrains ide, postman and chrome is enough for me. i can install most of the things i need with homebrew easily.\n\nI remembered the dark ages of having to set java_home in windows manually then have issues like jdk not found in ide terminal but works fine on windows terminal and things go wrong in terminal in windows quite often. i have none of those on mac. maybe because i was a jr dev back then and I don’t know what am i doing. I don’t know. but right now mac works and i am not even thinking about switching back.",
                "author": "PsychologicalAsk7466",
                "score": 4
            },
            {
                "body": "Notifications distract me a lot. Also, many background apps use unnecessary ram and cpu. Windows is like a naughty child that constantly wants your attention. I can't concentrate.",
                "author": "nevarneyok",
                "score": 4
            },
            {
                "body": "Dev time is all around slower on windows, if you work in a corporate environment windows will usually have bitlocker, at least one antivirus and the usual ntfs being slower with operations on a lot of tiny files.    \nThis means that in practice even a simple vscode search can take 2-10x more time on windows depending on the project’s complexity.",
                "author": "grimtree",
                "score": 4
            },
            {
                "body": "Yes, you should absolutely be comfortable in unix dev environments because the whole industry runs on linux since it's a far better tool for production environments, and it's not even close. Use windows wherever you like, but you'll really need to learn unix basics to be competitive.\n\nMy personal issue with windows for development is that everything is focused on the goddamn mouse. Click through this wizard just to install git, click through 3 child dialog windows to modify your PATH, install powertools from the Microsoft store and interact with its UI to do any kind of system automation — the list goes on.",
                "author": "UrToesRDelicious",
                "score": 4
            },
            {
                "body": "Want to throw my pc out the window trying to setup something like a cron on windows half the time.",
                "author": null,
                "score": 4
            },
            {
                "body": "I don't, I've tried Linux, MacOS and windows and as soon as I could I went back to windows",
                "author": "Clunkiro",
                "score": 4
            },
            {
                "body": "Speaking as a 10+ year IT Manager, started as Desktop Support, of over 9k laptops, desktops, and thin clients (I survived upgrading a whole Hospital from XP to Win7, and implement whole disk encryption with losing only 2 computers to the process).\n\nI can say that Windows sucks for anything but gaming, and locking down computer illiterate users—even then they manage to fuck up their machines. You think Pam in accounting knows how to download files safely from the Internet, and deserves admin access but she doesn’t know how to save a Word document as a PDF—yeah, no. \n\nI’ve been in software for 8+ years now, and can say the DX on Mac is leaps and bounds ahead of Windows in terms of productivity, utility, and OS user delight features. Especially if you adopt the ecosystem. I can’t tell you how many times I’ve need the clipboard from my phone (or other Apple device), just copy, and then paste. \n\nI primary work web so I can speak from a local development experience that covers Ruby, Node, Java, and both relational and non-relational databases—full stack. I spin up Swift every now and then, but not my primary focus. \n\nThe app ecosystem, outside of games, is also way better. Tools like Raycast/Alfred, BetterTouchTool, Rectangle, Little Snitch, etc… like Windows can’t even touch any of that. Also, as a develop… their UI/UX is fucking trash, and though Win10/11 have gotten better… their devs were back in the 80/90s for far too long. Like, who wants to use WSL or do everything in a VM (although most my apps are docekrized). \n\nLastly, Windows lacks consumer oriented innovation. Why? Because their sales primarily stem from corporations (I’ve work for MS before too—in support). They don’t care about features that delight users, because admins don’t give a fuck. macOS is primarily consumer oriented with a halfhearted attempt at management for businesses. Their server product is trash, and everyone just uses MDM to manage them on MS Active Directory domains. Why did they have to do that, because C-level and VP users demanded their companies bring in Apple products. So Windows only shops had to adapt. Hell, I remember that a poor telecom employee staying up till all hours of the night to order Apple products for all the C-suite on launch. Literal fucking joke. \n\nAnyways, fuck all corporations. America is shit. Leetcode is for cucks who can’t write actual applications. Nothing matters, and everything is made up. You will die, this post, your life’s work, and anything else won’t be remembered. Do what makes YOU happy, and not anyone else.",
                "author": "unicorndewd",
                "score": 4
            },
            {
                "body": "I'm mainly a PHP & Laravel developer; I love using the terminal, but to me it's not more intuitive than running Laragon and instantly running my development environment.",
                "author": "pambolisal",
                "score": 4
            },
            {
                "body": "Yeah I only wrote Powershell for one role and it’s fine, definitely a bit lore verbose than I’d like.",
                "author": null,
                "score": 4
            },
            {
                "body": "Terminal",
                "author": "darkmatterjesus",
                "score": 3
            },
            {
                "body": "Simple, lots of programming stuff are native or built on top of mac or linux. Lots of them are optimized in these os",
                "author": "Totoro-Caelum",
                "score": 3
            },
            {
                "body": "Fucking safari love it hate it we need to support.\n\n\nI hate lot of things except performance. Also I have a problem where two instance of VSCode can't be switched with CMD TAB\n\n\nSo bad I hate it so much.",
                "author": "Pomelo-Next",
                "score": 3
            },
            {
                "body": "Actually, you have the docker thing backwards. You can more easily develop on a different type of machine than you deploy to without worry because the containers add that stability back to the application environment. When you’re deploying raw languages like that to a server you are drastically changing the environment the app runs on.",
                "author": "bsknuckles",
                "score": 3
            },
            {
                "body": "I use Windows for 9-5 salary work and MacOS for side gigs/contract work. The biggest difference for me is the speed and cleaner UI for Macs. It's just much more aesthetically pleasing and overall more enjoyable on Macs.",
                "author": "Outofmana1",
                "score": 3
            },
            {
                "body": "Originally it was because the AMP stack on Linux was just better and easier, and since it was what I was deploying to, it made deployments more seamless. Then Docker made Linux simply the only reasonable choice.\n\nI also like Gnome better than Windows, plus Linux doesn't pester me and try to sell me software I don't need every couple of months, and it performs better. Add in that I can control updates, and the power of the command line (grep, rename, find, and sed have no equivalent on Windows AFAIK), and Linux has remained the winner for me.\n\nWSL \"works\" but is really just a wrapper around a VM with some tooling to make it feel more native. Overall it is a lackluster experience.",
                "author": "ErroneousBosch",
                "score": 3
            },
            {
                "body": "I think for laptops, windows just feels so bloated and unintuitive to use. On desktop I use windows and love it for my workflow, but only if I have hardware that let's me run it how I want. In comparison, mac os for development on the go is just so much more of a breeze. Shortcuts, switching tabs, track pad quality and gestures feel great, windows laptops are all over the place in terms of consistency and build quality and I'd rather not have to get a gaming laptop to have a smooth experience on a small screen.",
                "author": "286893",
                "score": 3
            },
            {
                "body": "- I grew up using UNIX systems.\n- I develop using UNIX systems.\n- I deploy to UNIX systems.\n\nEven Microsoft acknowledges this. They added WSL precisely because UNIX is what the world runs on. No matter the investment people won’t leave UNIX for windows. Not anytime soon.\n\n- MacOS is the only UNIX with a usable and polished GUI (use for dev).\n- Linux is just free (use for servers).\n\nAlso if it’s not UNIX you are vendor-locked to whatever you are using.",
                "author": "FlightPrior8021",
                "score": 3
            },
            {
                "body": "Windows CLI and toolchain support used to be extremely shitty. Now that it’s become less shitty a lot of people are already invested somewhere else. \n\nAlso Windows is kinda bloated and some people prefer less bloat. \n\nAlso MacBooks are simply the best laptops available. Their insane battery life alone makes them worth it but their trackpads are also in a league of their own. \n\nAlso devs like to tinker with their environment. Linux gives the most options to tinker with your environment.\n\nIn the end WSL2 made Windows a lot more usable and all three options are completely fine for most workloads, but posts like this are kind of curious to me because I feel like each OS’s advantages seem fairly obvious unless you haven’t tried them *at all*.",
                "author": "ven_",
                "score": 3
            },
            {
                "body": "Historical bias and marketing. Everything you can do in a Mac you can do on Windows (including all the terminal stuff). Windows also supports Linux commands and has a Linux subsystem. \n\nThere was a markable shift in the early 2000s where web devs suddenly started switching to Mac en masse. I remember speaking at conferences and suddenly seeing only grey Apple screens in the audience. They claimed MacOS was better, that the terminal was better, that things like Git only worked on MacOS, etc. All of it was nonsense based on ignorance.\n\nI did a talk at a conference in 2011 or thereabouts where I showcased some really fancy UI tools and automations for open source web dev. People were super excited and asked where they could get it. I told them it was Windows software. The immediate response was \"oh, so you're not a real developer.\" One of the things I was showing off was CSS Grid, which at the time was a Windows-only feature.\n\nI say all this as someone who uses both Windows and MacOS all the time. Platforms and hardware have been at feature parity for a long time, and most web dev is done in the cloud and with universal open source software anyway, so it's a preference thing at this point.\n\nSome people like Metallica. Others like The Dave Mathews Band. Your preference is your preference.",
                "author": "mor10web",
                "score": 3
            },
            {
                "body": "Because once you learn Bash or any Linux command line you'll want it everywhere for all time. Otherwise installing everything development/stack related is just simpler on Linux.\n\nWSL is at least a passable stand-in on Windows. I don't see a reason to NOT at least learn in WSL.",
                "author": "horizon_games",
                "score": 3
            },
            {
                "body": "The NTFS slowness is real. I had to use windows at work for a while. I’d type rm -rf node_modules out of habit and it would take half an hour. When I remembered, I’d work around by renaming node_modules first so I could run npm i while it deleted",
                "author": "hamstre",
                "score": 3
            },
            {
                "body": "This. I grew up using Windows back in the 90’s until about 2005 when I took a web dev job and had to switch to a Mac. Initially I had complaints just because it was different from what I was used to, but I quickly grew to like Mac OS and Linux and have never looked back. I still have a few PCs in my house for gaming/etc but they drive me insane.",
                "author": "brentmc79",
                "score": 3
            },
            {
                "body": "DIRECTORY\\_SEPARATOR\n\nO\\_o",
                "author": "nhepner",
                "score": 3
            },
            {
                "body": "I was helping someone get their system set up for development, and while WSL2 is impressive, it’s still such a hack. There are so many gotchas in running on Windows, stuff like setting up your git config properly so that line endings are properly converted, certain software needing to convert ssh keys because they don’t recognise OpenSSH key out of the box, etc. \n\nSure, there are fixes to these, but the error messages often aren’t helpful, and take time to troubleshoot for problems that wouldn’t even be problems on a Mac or Linux system.",
                "author": "sylfy",
                "score": 3
            },
            {
                "body": "Sure, but I'd give them credit for things like free private repositories, Github actions, packages and codespaces.\n\nAt least from my point of view Github is better than it was in 2018, so it's a thing they've done right.",
                "author": "Voidsheep",
                "score": 3
            },
            {
                "body": "Yeah, I can leave the console window open and its fine. If i close it the vm goes to sleep. Its not a big deal usually, you open console window again and it spins up in a few seconds.\n\nBut I wanted to use my existing nixos config to use ollama with gpu support on my workstation without the need to reboot. That works IF i leave the terminal window open which just sucks.\n\nThats exactly what I meant. It works unti it does not.",
                "author": "BortOfTheMonth",
                "score": 3
            },
            {
                "body": "You can YOLO most things through the terminal on Mac/Linux. Windows, even with WSL, generally has more hoops.",
                "author": "MrLetter",
                "score": 2
            },
            {
                "body": "Run a suite of unit tests on a Mac and then on windows. You'll see.",
                "author": "anaveragedave",
                "score": 2
            },
            {
                "body": ">why\n\nComfort\n\n>advantage\n\nDoubtful",
                "author": "AtmosphereVirtual254",
                "score": 2
            },
            {
                "body": "regarding servers, if you spend time on them, having linux skills will make that much easier.\n\nLinux has native support for every technology you will encounter in modern web development, windows doesn't and never will (that ship has sailed). But this doesn't mean your particular technology stack is not ok on Windows. However, that stack you mentioned is kind of where professional software differs from hobby software. If you want to learn about kubernetes or message brokers, Windows is pretty limited.\n\nThe command line is more productive and tooling is much easier to automate, in my experience. And there are just so many more tools to manage your machine. Of course, if you don't use these tools, you can't get the benefit from them. There are also many options for desktop environments which have different approaches to productivity. I look at my workflow and it is unimaginable not using command line scripts that pipeline together. And git is like a different tool with the command line.\n\nOverall, you are definitely correct that your limited experience is the reason why you don't understand it. Learning to use use linux means wanting to use more advanced tools and becoming more productive. Or maybe you just want to have more fun. Probably it is more obvious when you have colleagues who can answer your questions. But you should always strive to be better if you want a career in tech. There is a learning curve to linux although LLMs can help a lot with linux system admin, it's like having an expert on call.\n\nDoes it pay off? Well, a lot more developers use Linux and Macos that you would predict looking at the preferences of non developers. That is, they probably started as Windows user and left. Make of that what you will. A lot of devs still use Windows though, wsl is a good enough \"best of both worlds\" I guess.",
                "author": null,
                "score": 2
            },
            {
                "body": "i do almost everything from the terminal and windows terminal is ass and WSL2 isn’t just second rate",
                "author": "jakesboy2",
                "score": 2
            },
            {
                "body": "I develop my websites on an external and official shared webhost, so I have already all limitations which I need to react to. I don't mind uploading modified files to the webhost.",
                "author": "gr4phic3r",
                "score": 2
            },
            {
                "body": "WSL2 sucks ass. Why would you use a half-baked linux subsystem when you can use the real thing?",
                "author": "theofficialnar",
                "score": 2
            },
            {
                "body": "If you learned how to use a terminal and the basics of Linux or *nix systems then you would understand. \n\nMost web servers are Linux, and MacOS is much more similar to it. Windows is very different.\n\nBecause of that it had a very strong history of developer friendly tools developed for it.\n\nAnd then combine that with an OS and hardware that was really polished with a much better UX and its a slam dunk.\n\nI’m sure windows is pretty decent nowadays, I settled on macs for web dev a long time ago.",
                "author": "mr_brobot__",
                "score": 2
            },
            {
                "body": "Because sadly, Safari and iPhones exist, and you cant emulate or even debug them outside of MacOS environment...",
                "author": "Aries_cz",
                "score": 2
            },
            {
                "body": "Let me put it this way. I have a desktop from 2016 that I dual booted both windows and Ubuntu on. I had to update Ubuntu OS just twice. No overly eager windows updates. No spyware. No viruses. It just works and lasts a long time. Runs very efficiently. I can install anything I need and will work just like when I deploy the code to a VPS. ",
                "author": "selipso",
                "score": 2
            },
            {
                "body": "I haven't used windows for any serious developing in the past 10 years, so I can't really say how it's today. But I switched to linux because it was (is) way more reliable and does what I want. \nWith linux, I can be sure that when I start my PC, i will be greeted by my login window. \nWith windows (still use it for gaming) you never know if you find yourself in a 20 step questionnaire or if suddenly everything you do gets screenshot and analyzed by AI.\nAlso imho setting up all the programming stuff (docker, servers, cli tools, etc) is much easier on linux.\nLinux isn't perfect either, but for me it's the more reliable OS, and that's important for work.",
                "author": "Fitzi92",
                "score": 2
            },
            {
                "body": "Not so much a development thing but every few weeks Windows would update itself and break a driver so I’d lose Bluetooth or my network or graphics card. Got tired of wasting time fixing that vs. spending time actually developing. When I could develop it was fine as VS Code works the same in all of them. I also build mobile apps though and need a Mac to publish.",
                "author": "twoolworth",
                "score": 2
            },
            {
                "body": "Nah, as long as you are aware of some differences, you are fine on either system. No need to push this agenda that you have to develop on system whatever. ",
                "author": "Mystical_Whoosing",
                "score": 2
            },
            {
                "body": "It just works. I migrated to Mac when they introduced M1 (still using this machine!)\nAfter a month or so, I remember that I found myself in a very pleasant state that I don’t want to break my computer anymore. No halts, no system crashes, I didn’t reconnect a bluetooth mouse. I used to postpone Windows upgrades cause they always broke something in my work setup, no single issue with this on Mac. \nSo yeah, it just works",
                "author": "brstra",
                "score": 2
            },
            {
                "body": "Developers using Linux are top notch",
                "author": "darulez",
                "score": 2
            },
            {
                "body": "Because the OS itself is more programmable.",
                "author": "I-make-ada-spaghetti",
                "score": 2
            },
            {
                "body": "I don't love the word, but I am a \"power user\". Linux is designed primarily for \"power users\". Windows and macs just are not.\n\nSo (for me) it just offers the best interfaces and design a computer can have.\n\nAnd it's fun.",
                "author": "rickisen",
                "score": 2
            },
            {
                "body": "I develop solely in containers, so I do not care what jump host I use to get into my containers.",
                "author": "Roemeeeer",
                "score": 2
            },
            {
                "body": "I personally do prefer mac — but that is because 1) I come from a design background which has always been culturally Mac; and 2) I also do a lot of native app development, including for iOS which can only really be done on a Mac.\n\nMost of the developers I've ever worked with, let's say 75% in 20 years, have preferred windows.",
                "author": "JohnCasey3306",
                "score": 2
            },
            {
                "body": "mostly so I'm on the same page as my coworkers. i work in a Mac shop with Mac tools and the industry I'm in gravitated towards Mac OS.\n\nMac OS already comes with most of the stuff you need installed with just a few modifications. Windows at first didn't have this setup. a decade ago they embraced wsl but it's not the same. and i say this as a wsl user. \n\nset up is one of the major differences. on Windows you have to do a lot of installations and reboots before you can get everything up and running, and that's before you pick a distro and install the tools you'll need. \n\neither way, both environments are fine for development work.",
                "author": "luxtabula",
                "score": 2
            },
            {
                "body": "I just prefer a computer that works and gets out of the way.",
                "author": "mcfedr",
                "score": 2
            },
            {
                "body": "I did it for budget reasons.\n\nMy laptop could barely have enough tabs in the browser without lagging and I could  only have one program running.\n\nNow with Linux I can have how many tabs as I like + a code editor + server + music player.",
                "author": "TheDoomfire",
                "score": 2
            },
            {
                "body": "This is a very common question. But the best way to understand it is to experience it. Commit to develop con your Mac for like 3 months, you won’t go back.  Not a single dev I know went back. It’s a case of not knowing the benefit until you try it",
                "author": "kyou20",
                "score": 2
            },
            {
                "body": "Unix",
                "author": "stephansama",
                "score": 2
            },
            {
                "body": "In my limited experience, only actual issue is that windows uses \\ for paths and files system is case insensitive - both of these decision are ABSOLUTELY NUTS \n\nFor one, if you want to put a path in a JSON config, you have to excape the \\ by using \\\\, which means you cannot just paste a path into the config, or copy it from the config into terminal or file explorer.\n\nCase insensitive part is a big problem when your config files/project files have actual paths on them. While most programs can figure out both slashes, even mixed sometimes, of a thing works on Windows, it doesnt mean that it will work on Linux. You will get an error that says a file doesn't exist, but it's there, it works on windows, but the name starts with a capital letter.\n\nOther than that, things mostly work the same",
                "author": "qrzychu69",
                "score": 2
            },
            {
                "body": "What are you building in exactly? Node? That can work fine.\n\n\nBut what's best in a professional setting is apples to apples. If you are deploying to Linux, you need to be building it in Linux so you don't encounter unexpected issues.\n\n\n\n\nA lot of server software just doesn't work on Windows, or doesn't work in the same way. Ruby is a great (and unfortunate) example. You need to use WSL at a minimum. Even Macs with ARM can be a compatibility nightmare nowadays, where previously they were favored due to being closer to Linux, and generally much more compatible. (And also good battery life, nice hardware.)\n\n\nFollowup point is ideological: Windows is basically bloated spyware at this point. An OS should have a working search, only the bare minimum bloat, and not come with ads, and definitely not spy on you. Having used Windows, Mac, Gnome and KDE for decades, I can attest that productivity is a question of familiarity with the platform, not about one being innately better or worse.",
                "author": "Serializedrequests",
                "score": 2
            },
            {
                "body": "I’m not a fan of windows.  I don’t like the way it’s GUI first and I’m very well versed with GNU utilities, so Linux and to a lesser degree Mac, are a better fit for my development style.  If you like windows, then go get’um tiger.  Do you.",
                "author": "orangeowlelf",
                "score": 2
            },
            {
                "body": "Because it’s a personal preference. No need to lecture people why A is better than B. There is no science in that.",
                "author": "automagisch",
                "score": 2
            },
            {
                "body": "95% ish of all devs at my work use Windows or Linux (most windows) Like two use a Mac so it definitely varies.",
                "author": "akzoluxx",
                "score": 2
            },
            {
                "body": "Because everything just works. Brew install whatever and you’re good to go.",
                "author": "Any-Woodpecker123",
                "score": 2
            },
            {
                "body": "Idc. I can work with any tool. It is certainly not what makes or breaks.",
                "author": "Ciff_",
                "score": 2
            },
            {
                "body": "It’s simple. You’re going to deploy to a POSIX compliant environment 95% of the time. Linux is that. The dev process on Linux and Mac match each other with no need for weird extra tools.",
                "author": "thedarph",
                "score": 2
            },
            {
                "body": "I feel like I'm using a phone when I use Windows. I've lost all of my super powers with the terminal and the only thing to do is play games.",
                "author": "malero",
                "score": 2
            },
            {
                "body": "i fucking hate linux",
                "author": "braca86",
                "score": 2
            },
            {
                "body": "Linux is generally more reliable and efficient. macOS is derived from Linux and has a lot of similarities. Windows is the outlier. Windows takes more resources to run, and is less stable. Therefore people don’t use it in production unless they have a good reason.",
                "author": "haragoshi",
                "score": 2
            },
            {
                "body": "One not so mentioned feature of using linux as your primary desktop is that it makes you feel more like a real programmer. I'm not joking about this. A fringe benefit is that you also will have more solid linux skills, which is great when having to understand, setup, troubleshoot, or admin linux servers.\n\nOn the feel more like a real programmer, I read about a study where they had engineers wear labcoats, and they were more productive with than without. These were electrical engineers, not chemical.\n\nMost production environments are linux. Working in an environment close to linux is better. For example. Docker containers will run pretty well in windows, but with docker compose there can be very subtle differences in naming, etc. The result is a compose-windows.yaml, and a compose.yaml file which are slightly different. With linux as a dev environment, this is a non issue.\n\n\nAlso, with linux, you can get way more power out of older hardware. I would argue that most non gamers could get away with a halfway decent 15 year old laptop with a few modest upgrades such as a better SSD and some RAM(cheap on the used market). This also translates to getting more power of lesser newer hardware. If you are stuck with a new laptop with 8Gb soldered in; then linux will almost always be happy with that, even when running containers, etc.\n\nIt isn't all roses. Some hardware will be missing fairly key features, such as bluetooth, sound, wifi, etc. But this is rare, and often the missing features are subtle, such as more exotic power management. People are more and more dumping adobe, but if you are still stuck with it, then linux isn't going to be too happy. Adobe in a windows VM is usable, but extremely grumpy. With a new machine, it is easy enough to spend an hour installing linux and seeing if all the key features are working. Or checking compatibility reports before choosing which machine to buy.\n\nFor me the primary killer is that I run some software which is windows only. This software does not play well in a VM. \n\nI used to be a mac person running as much windows software in a VM as possible, with a windows machine to run my remaining windows only software, and in some cases it would run in a VM. But, with mac moving to ARM, the windows VM is hot garbage. Also, the lack of total control over my own machine turned me off Apple. I do a variety of programming, not just web. So SIP was a problem as were drivers for things, etc. So, now my mac sits to the side for testing only.",
                "author": "LessonStudio",
                "score": 2
            },
            {
                "body": "Depends on what you’re developing. I use .NET and MSSQL at work, which can be kind of a nightmare to dev with on a Mac. There are alternative IDEs and stuff you can use but it’s not ideal. Likewise you might encounter the same issues using something like Swift on a Windows OS. Linux seems like it might be a good middle ground but I don’t use it so I’m not sure.",
                "author": "reddithoggscripts",
                "score": 2
            },
            {
                "body": "Microsoft alleviated most of the issues with the release of Windows 10 but it’s been quite challenging to work with many tools in the past as they’ve been Unix only or better on Unix. Now that Windows can run Unix libraries as is, it’s a non issue and the preference is mostly a mix of habit, momentum and stubbornness.\n\nOne major advantage of a Mac is that you can develop and test all major platforms but if you don’t have a need to debug Safari web browser, emulate iPad app or such, it’s perfectly fine to continue using Windows.",
                "author": "Both-Reason6023",
                "score": 2
            },
            {
                "body": "Because just like game devs who largely use windows, it's easier to test in an environment it's probably going to be used in. (Linux for servers, MacOS for general population, etc. Plus the linux environment for build and ci/cd testing is preferred for the same reason)\n\nOther than that, the only thing you're worried about is browser testing, which those are pretty consistent across OSs these days so it doesn't really matter which os you use for browser testing.\n\nWindows is fine but you should really be working in WSL at the very least. It will help with learning plus using the standard tools will be much more streamlined as they and their docs are written largely for macos and linux.\n\nI've been building with wsl for a couple months now coming from linux (ya, I know) and it's been pretty good so far. So we will see. Worst come to worst ill probably go back to linux but meh. No rush so far.",
                "author": "Civil_Sir_4154",
                "score": 2
            },
            {
                "body": "I prefer Linux because I don't really have a preference.  I used to do a lot of LAMP, so that got me into Linux long enough to get used to it.  But, after many years, with many OSs, I feel Linux is the most frictionless long term experience.  \n\nI have a philosophy of never get attached to any single OS installation.  Put all the stuff you want to keep on an external drive.  I can nuke and reinstall my OS without even thinking about it.  Couldn't be easier.  There are no epic, world shifting releases, like with Windows. \n\nThe quirks of Linux are very minor, and anyone who want's to be a dev and gets tripped up by the oddities of Linux is a bitchy little lamewad that probably games all day.  If so, just stay out of the dev OS conversation, because you aren't really participating in a way that matters.",
                "author": "SeaLouse6889",
                "score": 2
            },
            {
                "body": "Dev tools are mostly written for nix environments because Linux is incredibly stable, easy to destroy and recreate and highly configurable and controllable. \n\nWindows servers are not. They are meant to be long running. They are pets, not cattle, so to speak. They require care and feeding and if you try to destroy and recreate you could be in for a pretty bad time. \n\nThat type of paradigm isn't well suited for development. MacOS found a niche (whether intentionally or not) where they brought the usability of a first class user system, and a nix environment together. They also did that pretty well (mostly). So it's quite smooth to go from local -> deploy... Relatively speaking. \n\nYou can use Windows well enough, but you'll often find yourself fighting against differences and weirdness because windows has NOTHING to do with the target environment. \n\nBut you can totally do it. You just need to learn some quirks and oddities.",
                "author": "tr14l",
                "score": 2
            },
            {
                "body": "Linux and macOS are unix-style operating systems. The terminal is one reason why I would opt for a linux or mac.",
                "author": "littlehero91",
                "score": 2
            },
            {
                "body": "I use both and honestly these days both can work very well for just about anything.\n\nI have a windows desktop, and a macbook. I love a unix like environment, but because of wsl2 its not the main differentiator any more. The reason I use mac is mostly because the specs and behavior of their laptops is so superior to any windows options. The displays, the mac silicon, the battery life, the speakers, the sleep behavior, the whole package just beats out any other laptop I've ever tried, and I've tried them all. Maybe the new generation of ARM windows laptops will get there at some point but they still have too many issues.",
                "author": "TracerBulletX",
                "score": 2
            },
            {
                "body": "it's not the OS, it's the ecosystem.\n\nit's super tight integration with world class hardware. plus tons of support. everyone uses it so fixing issues is super easy\n\nthat means even if a pure linux box is technically superior, it'll be harder to fix issues and you won't get the super smooth hardware integration",
                "author": "bestjaegerpilot",
                "score": 2
            },
            {
                "body": "I can't tell for others but in my particular case I began to work a lot with servers once i had the ability to do so, it was a game changer to avoid netlify and other vendors which (maybe you don't notice at the moment) but they are very expensive, most of production environment on back are linux machines (virtual mostly) so I had problems in the beginning that I could not understand because they were related to the machine not the app (inodes, processes, max open files, small brute force attacks) so I moved to a linux machine so I could hold one context (linux env), from there I understood better what is a os (something that every app has working in the back) and what are the best tools to create and deploy, from there I came accustom to linux because it makes sense, windows is not as good structured software when you look behind the curtain, as Unix systems.\n\nI'm sorry for the long response but in short, you can use whatever works, and from my experience once you start reaching a certain level you feel better using a system that gives you full control, and that is used in almost every server that is there.",
                "author": "soyrbto",
                "score": 2
            },
            {
                "body": "Container development is what I plan to do, then I don’t need to worry about the works on my machine thing",
                "author": "4115steve",
                "score": 2
            },
            {
                "body": "For me the main advantage is bash. In the professional development world it is very common to do just about everything via the CLI. Even more so if you're developing with vim. The most common deployment environments are Linux based (also bash) so it's very important that you're working with similar tools locally.\n\nIn theory, windows leveled the playing field with WSL but in my experience, that can be a bit buggy. I did a bit of development on my windows machine with wsl and it worked fine initially but ran into severe issues when I tried to introduce docker. Docker Desktop supports integration with WSL and I enabled it but for some reason WSL could never see it. I also tried installing docker via the wsl CLI directly but that too ran into serious problems. It's been months and I suspect that the solution may include wiping my system entirely and doing a fresh install. My point with this is that while WSL is nice in theory, it is an additional complication in an already complicated process and can cause issues.",
                "author": "PatchesMaps",
                "score": 2
            },
            {
                "body": "Surprised to see no mention of the hardware it comes with. A macbook is a really nice piece of hardware with a great trackpad. It looks and feels right.",
                "author": "ZakKa_dot_dev",
                "score": 2
            },
            {
                "body": "It's best to develop on a modern, robust, operating system.  But, you can also develop on Windows...",
                "author": "BotBarrier",
                "score": 2
            },
            {
                "body": "I've used both and all I can say is this entire comment section is just a dumpster fire.",
                "author": "real_bro",
                "score": 2
            },
            {
                "body": "I have a windows computer for gaming and I can't even imaging having to deal with all that junk on my dev laptop. To expand on that, it's all the junk microsoft has you install plus I still don't trust the security from being traumatized decades ago.\n\nAs for your installation frustrations. Mac actually is a dream in comparison to windows. There is no registry. When you delete an app it's deleted. Also don't worry about where apps are installed. Let them install in the default location. Launch them with the command + spacebar and don't use the launchpad. Use a minimal dock. Don't clutter it.",
                "author": "PandorasBucket",
                "score": 2
            },
            {
                "body": "You should learn to use the terminal. Anything you can do at the terminal can be scripted and automated. It’s very powerful as you become more advanced. You wouldn’t want to waste your time clicking through a dozen GUI apps when you could just run a single command.",
                "author": "Oscill_8",
                "score": 2
            },
            {
                "body": "Aside from the comments here about the ecosystem, something about the way text renders on a MacBook screen just looks better than any other display I’ve used… also just being able to run/emulate safari and iOS when needed.",
                "author": "carbon7",
                "score": 2
            },
            {
                "body": "your last sentence is actually the answer you're looking for. if it works for you, then you should stick to it. you shouldn't change environments just because \"real devs use linux\". if you're comfortable and efficient in your workflow and you can deploy your projects without any issue, then i see no reason to change your environment.\n\ntldr: if it aint broke dont fix it",
                "author": "YigitS9",
                "score": 2
            },
            {
                "body": "Use both.  On Mac, Docker runs better, the IDEs run smoother, the graphics are cleaner, SourceTree runs great.  Windows is great for some apps like Blender and I think Adobe apps run better on Windows.  Some apps like Bartender and Solidworks only run on Windows.  Computers aren’t that expensive.  Using both gives me a ton of options.",
                "author": "Engineer_5983",
                "score": 2
            },
            {
                "body": "It wasn't as seamless 5-10 years ago. When Mac went linux kernel they got a huge boost in this area. Windows has covered ground and so much containerized dev is being done that it's largely a non issue now.\n\nI have moved 95% of my development to containers on github codespaces and the system I am working on has basically 0 relevance to the system I am developing on.",
                "author": "Tiquortoo",
                "score": 2
            },
            {
                "body": "I prefer windows.... and ive been a dev for a very long time.",
                "author": "Beerbelly22",
                "score": 2
            },
            {
                "body": "I like to work in an environment that's closest to the production environment, which is in my case linux.\n\nI also had more luck with resource management.",
                "author": "dns_rs",
                "score": 2
            },
            {
                "body": "macOS because it works. Linux because you can make it yours.",
                "author": "No_Count2837",
                "score": 2
            },
            {
                "body": "even with me being a dyed-in-the-wool Apple hater, I can see a lot of benefits of developing in a *nix-based local environment & pushing my work out into what will (almost certainly) be a *nix-based production environment.\n\nI develop locally using WSL (Ubuntu) for this reason. less things to go wrong moving from one environment to the next if everything's coming up from the same soil.\n\nalso: for organizational management, a fleet of Macbooks given to employees by a company is less hassle-y to deal with in terms of permissions, resource access and device theft risk.",
                "author": "Entire-Worldliness63",
                "score": 2
            },
            {
                "body": "In the past, developing on Mac or Linux was a much more pleasant experience. But there isn’t really much difference anymore between operating systems",
                "author": "ElephantSudden4097",
                "score": 2
            },
            {
                "body": "I got 2 dev environments, windows with WSL, and a standard Ubuntu Linux (I don't want to devolve to what favour of Linux is best, I know a lot of people got beef with Ubuntu but it works for me).\n\nSo far, my dev experience is better in Linux because of one thing only: Terminal. I'd much prefer the Linux terminal to the WSL one, it don't take a whole bunch of resources when not in use, feels nicer, and basically just have a better experience overall with the terminal.\n\nI know that YMMV, but if your dev setup works for you, then so be it, there isn't a \"best\" way to doing things.",
                "author": "buttch33kz",
                "score": 2
            },
            {
                "body": "Honestly, it’s just preferences IMO.  Use the environment that works for you and your workflow. I run full stack on macOS.  Most all dev apps are homebrew installed and just work for me and my workflow.",
                "author": "Necessary_Ear_1100",
                "score": 2
            },
            {
                "body": "Idk about mac, but in linux installing pgadmin is as easy as `pip install pgadmin4`, inside of a venv. Show me an OS where it's easier. \n\nAs others have said, it's more a thing of what you're more comfortable with. All have their upsides and downsides.",
                "author": "edu2004eu",
                "score": 2
            },
            {
                "body": "Most servers are linux-based. So Mac being unix-like means that they have access to the similar managed packages like the rest of the Linux world essentially. \n\n\nWith Windows you have to jump through hoops with weird programs and VMs to run the same packages compared to running them natively. ",
                "author": "Infinite-Raisin9853",
                "score": 2
            },
            {
                "body": "/n vs /r/n in the early days and it just stuck.  No matter what editor in Windows employees were using there were many times that files got all their line endings changed and that broke something on a Linus or Mac os server",
                "author": "thinsoldier",
                "score": 2
            },
            {
                "body": " For me MacOs is the best, but Mac price is too high,\nFor I use Linux,",
                "author": "flutterdevlop",
                "score": 2
            },
            {
                "body": "I like a super simple interface, which is why i use linux. Basic tiling desktop with workspaces. Simple hot key setup, minimal need for a mouse.\n\nBack 20 years ago the reason i switched to linux was to keep my dev and server environment as similar as possible. \n\nIt's less of an issue now.",
                "author": "ndreamer",
                "score": 2
            },
            {
                "body": "I use WSL on windows. I've never got on with a Mac, dislike them, dislike the overhyped overpriced brand and have never found any reason they are better than using windows for web development. Literally...none. If you're experienced and prefer a Mac, great, use it and if not, use whatever you're comfortable with.",
                "author": "Helirose",
                "score": 2
            },
            {
                "body": "The question is, why would anybody want to use windows? What benefit does it have over Linux/Mac?",
                "author": "trgiskehism235",
                "score": 2
            },
            {
                "body": "Great points! \n\nHonestly, if Windows works smoothly for your workflow, there is no need to switch just for the sake of it. MacOS and Linux often get praise because their Unix based systems match many server environments and offer powerful CLI tools but for many projects, especially simpler ones, \n\nWindows is totally fine. If you ever dive into more complex setups, you might find Unix like systems helpful, but no shame in sticking to what works for you!",
                "author": "CommentFizz",
                "score": 2
            },
            {
                "body": "I much prefer coding on my MacBook Pro over my PC\n\nI can swipe between windows such as vscode and chrome quickly, I can take screenshots of important sections easily. The M1 Pro is so powerful any photoshop or video editing renders at lightning speed (the new cpus are even better it’s crazy), and combing that with other tools like GitHub desktop, nodemon and ChatGPT (a little vibe coding hurt nobody) my development speed is so much faster then my PC. I can also take my laptop everywhere I go which means I can code on the move. \n\nHonestly if I didn’t play games I could live with just my Mac. They’re so good.",
                "author": "Skyfall106",
                "score": 2
            },
            {
                "body": "Initial days of my career I worked mostly on windows.\n\nWhen I switched to Mac os, initially it was difficult but day by day it was amazing. It is something that you can rely on.\n\nI have an another windows machine where its updates are never ending. These updates push what is even not needed apps etc unnecessary stuff slowing down the machine.  It is the most horrible OS I believe.\n\nI am thinking putting ubuntu on this machine, atleast no slow and frequent updates.",
                "author": "IndianGolum",
                "score": 2
            },
            {
                "body": "if I could use the terminal on Windows I probably would. I use MacOS and Linux and it definitely helps that the terminal commands are pretty much the same ",
                "author": "alarming_wrong",
                "score": 2
            },
            {
                "body": "Because Microsoft are genocidal fascists.",
                "author": "kwaddle",
                "score": 2
            },
            {
                "body": "There is literally no reason to use windows unless you have some specific software that is not available on mac or linux\n\ni.e. video games",
                "author": "DjSassyTown",
                "score": 2
            },
            {
                "body": "DEVs whon prefer Linux/Macos typically work on Compiled languages.\n\n\nNow, Linux/MacOs have them by default.\n\n\nAnd you can install them on Windows as well but it's one pathetic experience to setup the basic tools.\n\n\nAnd someone will come up quickly saying windows have visual studio and standalone compiler tools.  But they are difficult to setup and also costly and more often than not,  slow.\n\n\nOtherwise there is not much difference if you only try to setup interpreter languages like Python and Java script. Both  should work seemless.\n\n\nIf you are not using command line tools, you are leaving extremely potent tool chain in day to day work. While GUI is great for novice and other domain folks, As a SW developer I quickly realised I can be super efficient with command line.\n\n\nFor example, Any Complex system that runs for days generate extremely large log files to the tune of Few GB at minimum and 10s of GB some times. I don't find any GUI tool that can be fluid to work with  these files for selecting logs of interest if at all we can open them in first place.\n\n\nWith command line, I can split the file if required (rarely do I need to split) and do a quick grep and get going in no time.\n\n\nCommand line PIPEs exist for a reason and doing them in GUI is unnecessary if at all it's feasible. Worst case would be GUI with same command as command line and you have the extra UI layers.",
                "author": "Dry-Edge-1534",
                "score": 2
            },
            {
                "body": "Yeah, I might hate it for personal use, but for software engineering it does work great",
                "author": "Etheon44",
                "score": 2
            },
            {
                "body": "Sure but you're still using WSL2, why out of curiosity? That Linux integration benefit is what I'm curious about. Is it just mimicking prod, better CLI, or something entirely different?",
                "author": "Reddit_Account_C-137",
                "score": 2
            },
            {
                "body": "Gotcha this makes the most sense to me. I’ve only ever used services that obscure away most of the server and make management simple. Which is great because I’m a new dev. I’ve only deployed one app. But as people get more advanced they likely want more control which means hosting on a VM (I assume)? Appreciate the insights!",
                "author": "Reddit_Account_C-137",
                "score": 2
            },
            {
                "body": "Good advice, thanks",
                "author": "Reddit_Account_C-137",
                "score": 2
            },
            {
                "body": "I use WSL pretty seamlessly for this. Consultant that works on a million projects across orgs so I need Windows as well. Generally I agree with your sentiment (and I also have a Mac and a rack with Linux) but for me the barrier to WSL is non-existent. A bit of docker networking quirks but super minor, not enough to stop my main development desktop and laptop from just being Windows.\n\nBasically I find it MORE annoying when teams set something up with all these bash scripts to start it and hand it off to the clients that end up not being able to run things because they might be organizationally tied to using Windows.\n\nPersonal projects I just start on Mac usually but you're far better off IMO being flexible. If I had only budget for one computer I would make it a Windows one and use WSL.",
                "author": "lbc_ht",
                "score": 2
            },
            {
                "body": "Core concepts are the same, and msft is everywhere (open ai is on azure) so i wouldn't worry - keep at it. If you get to a point where you hate the stack because everything takes days to configure, try switching to a non msft shop.",
                "author": "dmart89",
                "score": 2
            },
            {
                "body": "APFS can be configured to be case sensitive when formatting the hard drive or the SSD, but by default it tends to the more consumer-friendly case insensitive. And yes, I have been bitten by that sort of brain fart as well. Luckily, there are now tools in my IDE that are stricter than the actual file system to keep me from doing it again. \n\nAnd every new Mac I get, I ensure that the main storage is set to be case sensitive.",
                "author": "fnordius",
                "score": 2
            },
            {
                "body": "it is capable of being case sensitive.",
                "author": null,
                "score": 2
            },
            {
                "body": "[https://github.com/utmapp/UTM](https://github.com/utmapp/UTM)  \nThis one",
                "author": "NoNicknamesLeft",
                "score": 2
            },
            {
                "body": "Well said.  I'm a Windows guy through and through, have never been able to comfortably afford a Mac, but I used Pop_OS for some web dev because the text file helper with notes I created for myself to get WSL to talk correctly to my host was a couple of days work, and I walked away from the project for a little while and when I came back, I was like why am I doing this to myself.  So yes, a lot of things in Windows are great, but a few aren't.  Use what works.",
                "author": "armostallion2",
                "score": 2
            },
            {
                "body": "Replying to the wrong person.",
                "author": "queen-adreena",
                "score": 2
            },
            {
                "body": "lol yes. I guess though you can alias away some of the verbosity but grep vs Select-String is a perfect example.",
                "author": "SporksInjected",
                "score": 2
            },
            {
                "body": "Interesting, I wonder what that shutting down looks like? I haven't to do anything special to achieve this... I just keep wsl.exe running in Konsole and it never shuts itself down.",
                "author": "perk11",
                "score": 2
            },
            {
                "body": "Windows is just not for professionals. Does it even has ssh out of the box now? No idea. And in Unix you switch between local and remote via ssh easily and it follows the same structure and syntax.   \nConvert 300 of pictures from jpg to web and shrink them 50%, can you even do something like this on the powershell? No idea",
                "author": "Material_Water4659",
                "score": 1
            },
            {
                "body": "I run Linux on a separate drive and I find that I use it much more often that I use Win 11 pro … I used to just use the virtualizer built into win pro to have a linux box handy but I prefer a native install and I find it much more powerful, faster, and genuinely convenient to use Linux for almost all dev tasks.",
                "author": "hackedfixer",
                "score": 1
            },
            {
                "body": "Unix",
                "author": "Soccer_Vader",
                "score": 1
            },
            {
                "body": "For me things get compiled fast on Unix like system. It almost takes more time on windows.",
                "author": "kunal-gautam",
                "score": 1
            },
            {
                "body": "They typically don't. If you look at the SO Developer Survey, the most popular development platform is Windows.\n\nI think you should use whatever you prefer. Use Windows, Mac , Linux, Haiku, whatever.",
                "author": "Pale_Height_1251",
                "score": 1
            },
            {
                "body": "Unix env matches that of most servers",
                "author": "MinuteScientist7254",
                "score": 1
            },
            {
                "body": "Personally, I like running linux dev containers, either on an external server I SSH into, or WSL containers.\n\nWeb stuff is just easier on a linux machine, and much easier on an external machine where you can have it in a proper server environment",
                "author": "viperfan7",
                "score": 1
            },
            {
                "body": "I prefer Macs because of the battery life of their laptops while in a slim package.",
                "author": "kozak_",
                "score": 1
            },
            {
                "body": "More on the musical style tho?",
                "author": "Due_Lingonberry3946",
                "score": 1
            },
            {
                "body": "I have a deep and abiding attachment to one menu bar across the top of the screen, so it’s macOS for me until Linux apps start respecting that setting.\n\nAlso the iOS integration is *nice*… not sure losing that with Linux would be a *complete* dealbreaker, but I’d miss it if I ever switched.",
                "author": "OtherOtherDave",
                "score": 1
            },
            {
                "body": "I have honestly not read all the comments, just about half of them. I am noticing that you asked because you were frustrated and people are sharing their own preferences instead of giving you an actual answer. So let me try.\n\nI suspect your frustration is because you tried to be like others instead of being yourself. As corny as that sounds, I think it is true. What reason do you have to switch to Mac if you are able to be productive on Windows?\n\nIf your reason is to learn new things then you should not be frustrated by friction, that’s learning. But if your reason is to just match others then you should be frustrated because why?\n\nWe are (like) engineers. We use the right tool for the job. I am not a big fan of Windows because I grew up using Linux. But I know plenty of developers who don’t touch Linux for development. Windows has improved so much that the whole “portability” thing is no longer that relevant (only a few edge cases) and anything can be sorted quickly\n\nThen lastly, yeah some of your frustration comes from inexperience. I think getting familiar with the MacOS environment would help you with the papercuts you experienced. Homebrew is not perfect but it is very mature. Trying to use what you are used to from Windows on MacOS is also not the best approach. Find tools that are more suited to the environment. Because App developers, like you, have preferred environments and so produce better work on those environments. MacOS will have some programs that are just not great on Windows\n\nHope that helps",
                "author": "LungeloSLX",
                "score": 1
            },
            {
                "body": "Windows used to absolutely suck total ass for web development. It's not so bad anymore so if you like it go for it. Some places will ask for linux experience though so might be worth learning anyways.",
                "author": "__versus",
                "score": 1
            },
            {
                "body": "Mouse my friend \n\nYou don't use mouse at all on Linux, meaning you can bring your laptop everywhere and take it out anywhere, sitting on a lotus pose and start coding. You can do that on Windows of course, but how annoying it would be the code with a trackpad on Windows? Needless to say.\n\nYou can imitate Linux setup with Mac but it's not perfect.",
                "author": "hearthebell",
                "score": 1
            },
            {
                "body": "There's no right answer, it's just personal preference. If you use one a lot more than the other then it's going to seem slicker.",
                "author": "shelf_caribou",
                "score": 1
            },
            {
                "body": "Windows today is nowhere near as bad as it used to be but it still sucks compared to dev’ing on a Unix based OS.",
                "author": "sdw3489",
                "score": 1
            },
            {
                "body": "Most important thing is that you are productive. Could you be more productive on a Mac/Linux given that you learn to use it? Possibly. Is it worth the time investment at the moment? You have to decide. Will it potentially cause you to lose that drive you seem to have atm.? Possibly, you need to think this through.\n\nIn the its just tools, and they have pros and cons. I suggest learning other tools when you feel receptive or ready to learn something new, don’t learn because others are telling you, “you are doing it wrong”. Note their suggestions down, thank them for input and pick it up when you feel comfortable.",
                "author": "VelvetWhiteRabbit",
                "score": 1
            },
            {
                "body": "> I understand some of this is likely due to my limited experience with Unix-like systems and command-line interfaces.\n\nNot \"some\" but \"all\".\n\nIt is perfectly fine to stick with whatever works for you, but there are reasons why not everyone does it that way and the main reason is for those not uncomfortable with Linux command line windows feels like it is completely unnecessary and often in the way.",
                "author": "Salamok",
                "score": 1
            },
            {
                "body": "One reason could be that Windows is case insensitive & Ubuntu is case sensitive,\n\nFor Windows, File.txt = file.txt & for Ubuntu they're different files,\n\nMost servers use linux-kernel based OS becuz they can run without GUI, So when you develop on Windows and deploy on linux-kernel based server then there is a possibility of errors due to case sensitivity of files.",
                "author": "parth1610",
                "score": 1
            },
            {
                "body": "The command line is much faster and more flexible once you get used to it.",
                "author": "Intrepid_Result8223",
                "score": 1
            },
            {
                "body": "Much of your output is OS-independant.    Database schema, DDL, DML, Python, rust. go, JS , html, css - all going to be the same.  CLI on Mac is closer to, but not exactly the same, as Unix - where you are likely to deploy.\n\nThe reasons you are using the Mac for ’lightweight’ tasks is because the UX is nicer.\n\nThat nicer UX on dev tasks make the experience so much better, IMHO.\n\nAnd efficient, beyond the windows experience I have had (15 years software dev in a corporate).  10 years with the Mac - I am so much not going back to using Windows as my main toolset.",
                "author": "Agile-Ad5489",
                "score": 1
            },
            {
                "body": "I just use WSL in windows, works great. Best of both worlds",
                "author": "iRBlue",
                "score": 1
            },
            {
                "body": "It's gonna depend on your use case but for a good number of stacks and environments windows is allright when it comes to making stuff but one u get more into the professional side of things ur gonna see real fast that windows is very second rate and more of an afterthought for things. Stacks are primarily designed for use on unix like systems so they just mesh better when working on those systems. Then u get to virtualization like docker and what it and windows and u get performance problems with windows as it doesn't run it natively like I can on Linux systems (and idk about Mac for that but best guess is it will run them natively as well) and has to run a compatibility layer under it. Not gonna go into everything as it would take forever but many things also just do not work on windows or don't have a windows alternative for the tooling yet. When dealing with say node for example since it's pretty common it's more of a hassle to get different version on the same system since windows isn't big on that while at work I can have a few different version for different things. Windows isn't bad, it's just not the primary environment most development stuff is made for. Also using the cli is way faster and windows seems to have an adversion to it where everything has to have some sort of ui attached cause that's just what windows users expect. Now if ur using c# as ur primary language and making windows focused apps then yes windows is the best for it but beyond that it just sucks and a cut below what one would want.",
                "author": "anatoledp",
                "score": 1
            },
            {
                "body": "For me, it’s the file system speed. Even if you have the same exact hardware, Windows will always be slower. Dev compile times in chunky JavaScript frameworks is horrendous on Windows.\n\nNot to mention, everything else in windows just sucks anyways. You only feel comfortable because you’re used to it. Spend more time on another OS, go through the growing pains and you’ll never look back.",
                "author": "Zephury",
                "score": 1
            },
            {
                "body": "Because they haven't tried WSL yet.",
                "author": "7107",
                "score": 1
            },
            {
                "body": "With wsl2, windows is prefectly fine.",
                "author": "Arvi89",
                "score": 1
            },
            {
                "body": "Linux is the same OS it will run on in production so easy setup, and so on. Windows added WSL, Docker showed up but some still want their customized Linux desktop, security and control. Apple is Unix so very similar while often offering the best experience and solid hardware (even with whatever anti-consumer practice shows up, upselling of basic spec upgrades).",
                "author": "riklaunim",
                "score": 1
            },
            {
                "body": "Erm... because simple life.",
                "author": "actionphp",
                "score": 1
            },
            {
                "body": "For most, it boils down to the terminal and tooling.\n\nFor most/basic web development, the experience on Windows is pretty okay. Especially with powershell core and ohmyposh.\n\nIt pales in comparison to Zsh and omzsh but it's pretty good as far as Windows is concerned. The Windows terminal is janky though, often not responding to inputs or writing stdout in the wrong place - it's a mess.\n\nWSL is a meme and I largely avoid it.\n\nThe other side is supporting Windows targets. Things like file paths (slashes and drive letters), file permissions, Windows APIs, symlinks, line endings, etc - Windows-isms are garbage to deal with.\n\nIt's also really hard to figure out where things are installed in Windows. Used to be Program Files, now it's AppData/Local/Roaming or something. Windows apps are impossible to find.\n\nYou can use busybox, msys2 or git bash on Windows but it ends up being entirely broken most of the time. It's frustrating having to learn Powershell and not being able to reuse tools/knowledge from bash.\n\nI use Linux for development most of the time, though I do spend a fair amount of time on Windows too (dual booted). Windows mostly for light tasks and gaming.",
                "author": "apatheticonion",
                "score": 1
            },
            {
                "body": "The world works on Unix/Linux, Mac is closely compatible.",
                "author": "augurone",
                "score": 1
            },
            {
                "body": "The simple answer is that Macs are necessary to develop for iOS and Safari. Apple purposefully gatekeeps.",
                "author": "klgrs",
                "score": 1
            },
            {
                "body": "For me, the breaking point was file permissions issues when working with docker, where the file I'd created on my windows machine, would run into issues when moving them onto Docker images. \n\nPossibly/probably an easy fix, but it was a straw the broke the camel's back for me.",
                "author": "davidblacksheep",
                "score": 1
            },
            {
                "body": "its better i guess , who cares i got a 11 year old fkin pc",
                "author": "Bustskit",
                "score": 1
            },
            {
                "body": "I hate windows with a passion and hate the company even more.",
                "author": "kinkkush",
                "score": 1
            },
            {
                "body": "Windows is just a very bad operating system, and each release it gets even worse.",
                "author": "TypeScrupterB",
                "score": 1
            },
            {
                "body": "The availability of a proper Linux-based terminal and package manager.\n\nOther dev tools like SDKMAN that have no official support for Windows.",
                "author": "Acrobatic-Guess4973",
                "score": 1
            },
            {
                "body": "what about the IIS server dev ?  C# framework 4.8 i still working on it , and i can not use my macbook for job",
                "author": "SplitInteresting6359",
                "score": 1
            },
            {
                "body": "I have never understood this either. With Mac, the positive is that you can also build iOS/macOS apps alongside Windows apps (virtualization). \n\nHowever, the hatred towards Windows in general is b/c of those who still can't let go of Netscape fiasco. Even though, Google and Apple have done far graver \"sins\" afterwards. \n\n  \nUse whatever suits you the best. That is my personal advice.",
                "author": "uknowsana",
                "score": 1
            },
            {
                "body": "Sounds like a lot of mouse involving gui clickery. No thanks.",
                "author": "SubstanceSerious8843",
                "score": 1
            },
            {
                "body": "Docker is Running well on macs.",
                "author": "JenzHK",
                "score": 1
            },
            {
                "body": "I havent used MacOS yet but my experience with Windows as a developer is great so far. Using both Visual Studio and VS Code is a must in my job. Also Visual Studio is no longer supported in MacOS, with that id still love to try it in the future.",
                "author": "Relevant-Strength-53",
                "score": 1
            },
            {
                "body": "For me in FE almost everyone is on mac, and I have noticed its because new devs are literally told they need to be on a mac, I have seen it happen.  I tried to switch to mac for around 2 years, hated every day of it.  \n\nFor a start the ergonomics are just shit. I need at least 3 screens, 4 is best.  Now mac doesn't deal well with external monitors, getting the correct refresh and resolution plus setting up the mouse transfer..  its a nightmare.  Then there are macs themselves.  With windows I have 2 or 3 monitors and use the laptop as another screen.  I fold the keyboard under and have the laptop monitor as a standalone touchscreen. Which BTW is perfect for checking mobile designs, you even have touch.  Apple is yet to invent touch screens for laptops.\n\nThen things like developing a file uploader, I needed to test with a ton of different files.  You cannot just make random files on macOS like you can on windows.  I asked all the mac people I know and after 5 mins of trying to explain the concept of making files they told me I am an idiot and just open the app that makes that file and save...  wtf.  \n\nAnd commands after npm run start/build... There are so many package.json files with commands that will ONLY run on macOS. These are not necessary, there are more standard ways to do things but when a dev tries to run a repo on windows they get errors and say windows is shit.  Sure. \n\n  \nOh and the constant macOS updates that break everything. Why does FE dev need to depend on xcode and related updates? I can try to run a simple repo that works fine on windows but errors out in macOS because xcode doesn't have the correct update?... wtf does xcode have to do with it Apple?",
                "author": "nasanu",
                "score": 1
            },
            {
                "body": "Less tech necessary. Ex chocolatey with docker. With ios its just docker.",
                "author": "Throwing-up-fire",
                "score": 1
            },
            {
                "body": "On MacOS you can debug web apps in the Chrome/FF, Safari, Android, IOS and Edge via VM, covering all platforms and browsers. That's the main reason to use it for me if we put aside habits and familiarity with the OS and it's tools. ",
                "author": "NoNicknamesLeft",
                "score": 1
            },
            {
                "body": "Because Safari mobile is one of the most used browsers and you can't unit test that accurately without an Apple device. Some people have Stockholm syndrome and will tell you they actually like Mac's to try to rationalize their abuse.",
                "author": "IAmASolipsist",
                "score": 1
            },
            {
                "body": "I do not prefer Mac. I hate Mac. I have to use one for work, can't stand it. Everything from keystrokes to menus to app behaviors with keystrokes and menus is all fubar.\n\nLinux, of course, rocks.",
                "author": "FortuneIIIPick",
                "score": 1
            },
            {
                "body": "It's just a matter of experience. If you were experienced in both you would never wanna touch windows for development again, or at least that's my experience being experienced in both. If a job demanded I use windows for my development I'd rather quit.",
                "author": "igna92ts",
                "score": 1
            },
            {
                "body": "intuitive means you generally don't have to put much or any effort into learning it. that's not the terminal, the reason why we use it is because it's a powerful tool that makes your job easier once learned.",
                "author": "luxtabula",
                "score": 1
            },
            {
                "body": "All of these reasons are fading or obsolete now",
                "author": "the_ai_wizard",
                "score": 1
            },
            {
                "body": "Definitely not worth it for Node. Node is my life and there's no way I would do windows.",
                "author": "PandorasBucket",
                "score": 1
            },
            {
                "body": "> You don't realise that getting punched in the face every day isn't normal until you're out of the relationship.\n\nThere is help.\n\ncall 0800-TUX-SAVE-ME",
                "author": "BortOfTheMonth",
                "score": 1
            },
            {
                "body": "Compared to AWS it is much much simpler...",
                "author": null,
                "score": 1
            },
            {
                "body": "NTFS was (is?) also really slow dealing with lots of little files. This wasn't a big deal with DLLs and Visual Studio, but not a great fit for Rails dev. Presumably node_modules folders don't fare much better. WSL1 was the last time I tried it but it was much slower than my dual-booted Linux install.",
                "author": "marten",
                "score": 1
            },
            {
                "body": "What made WSL feel like a bandaid for you? Was there any set of issues that were particularly annoying or frustrating for you?",
                "author": "blazincannons",
                "score": 1
            },
            {
                "body": "This is so true. I grew up on Unix, SunOS first. I find the UI of vi intuitive but the reason for this is of course I also use grep, sed, awl and other Inix tools.\n\nAs you said, \"intuitive\" is just another word for \"familiar\".",
                "author": null,
                "score": 1
            },
            {
                "body": "Best answer. The only thing I have to add: I don’t get it how CLIs could feel unintuitive. I mean, CLI is what the computer IS! As intuitive as you can get. At least if your first contact to programming was on a Commodore 64, the first PC you used was an IBM PC (with WordPerfect 5.1), your first laptop (or actually luggage) experience was a Nixdorf 8810, and the email client was a choice between Elm and Pine. 😁 Contributes to the feeling of the CLI being the only grown up touchpoint.",
                "author": "items-affecting",
                "score": 1
            },
            {
                "body": "Haven’t used Windows in few years but Docker made it extremely clear you should install Docker for Windows, not Docker in WSL. I recall it being pointed out in the docs numerous times.",
                "author": "Both-Reason6023",
                "score": 1
            },
            {
                "body": "Nothing a cheeky pre commit hook wouldn't fix",
                "author": "namespace__Apathy",
                "score": 1
            },
            {
                "body": "Windows is not case sensitive while mac and Linux are.\n\nMacOS actually isn't case-sensitive.",
                "author": "ClikeX",
                "score": 1
            },
            {
                "body": "> because the terminal is way better.\n\n\nThe newish windows terminal is now the default on Windows 11 and it's really good, I like it more than the default terminal on MacOs.\n\n\nIf you meant the shell then I agree, PowerShell is pretty good as a scripting languages, but way less useful for one liners than bash.",
                "author": "BlueScreenJunky",
                "score": 1
            },
            {
                "body": "30y of windows and never had issues like yours lol",
                "author": "Dependent-Net6461",
                "score": 1
            },
            {
                "body": "The case sensitivity is, these days rare, but still an issue.  I still occasionally run across issues where “worked on my machine!” was caused by a file system case sensitivity issue, and almost always it was caused by someone on windows.  That said, I worked someplace which sent me a MacBook for work.  Filesystem was case insensitive, and I hit this issue myself because I missed typed a file name and it “worked on my system” but not the client’s.  I couldn’t even wipe the drive and reformat to a different filesystem because it wasn’t my machine as it was locked down. :/",
                "author": "colcatsup",
                "score": 1
            },
            {
                "body": "\"*If you are deploying to Linux, you need to be building it in Linux*'\n\nI write c# code, always deploy on Linux, and have never used Linux for development, and i can't remember anyone, on any project over the last 5 years, doing so.",
                "author": "soundman32",
                "score": 1
            },
            {
                "body": "I think that’s what I’ve learned most from this thread. For simple stuff my process works fine but for more robust/complex solutions it will be helpful to have full control of the server.",
                "author": "Reddit_Account_C-137",
                "score": 1
            },
            {
                "body": "Which VM are you using? I've struggled finding a VM to run windows with the apple chips",
                "author": "gentlychugging",
                "score": 1
            },
            {
                "body": "I mean it's like a few clicks to get WSL set up. Then you're in Linux Land anyways",
                "author": "lbc_ht",
                "score": 1
            },
            {
                "body": "Some dude wrote a reply and deleted it or Reddit is being funny:\n\n> >Most people lack the skills necessary to setup a Linux-like environment on Windows.\n\n> The best part is that you're serious. 😂\n\n> Yeah, we have trouble setting up the Linux subsystem on Windows that's pre-installed. You nailed it, that's exactly why we don't use Windows. /s\n\n> >Matter of fact, Mac extremely slows me down with how unintuitive everything is compared to other OS's.\n\n> Now that's just pure unadulterated projection right there. Mac is built off one of the oldest foundations still used in modern computing and the same foundation that Linux is built off of. \n\n> MS DOS/Windows is the one that purposely made everything incompatible to try and build a monopoly in the 90s. \n\nWSL absolutely sucks. Cross-env port-forwarding and network management in it is atrocious and unreliable. There's also huge delays on every WSL installation I worked with.\n\nAnd Mac as an overall operating system, is vastly different from every other system on the market. That's a fact. It goes beyond bash and easy terminal setup, but that obviously flew over your head. File handling, window management, system shortcuts, ecosystem, etc.\n\nAnd yes - most people lack the skills necessary to add bash functionality to their cmd, or ensure their Windows machine is almost identical to their deployment Linux ones. \n\nIt's why the majority of people just flock to Linux. Because, like I said, Windows isn't built for it out of the box. You have to tweak it a LOT. And that takes knowledge, experience, and TIME that many either don't wish to invest or completely lack. \n\nUnless you absolutely need software that is only compatible with Linux, you can absolutely do whatever you want on your Windows machine. My experience reflects that. Glad my experience hurts your brain so much.",
                "author": "Shiedheda",
                "score": 1
            },
            {
                "body": "If I buy a non Apple laptop for development work, I'm putting Linux on there. So it will never be \"a Windows computer\" to me. If I could put MacOS on non-Apple hardware in a legit way, I'd choose that over using Windows. \n\nI use both MacOS and Windows (client requirement) for work. And my daily dev machine was Linux for years.",
                "author": "ClikeX",
                "score": 1
            },
            {
                "body": "The only way to ensure that your dev matches the prod is to containerise your work. And at the point it doesn't matter what OS you're using for dev.",
                "author": "ldn-ldn",
                "score": 1
            },
            {
                "body": "Interesting. Now, I'm trying to learn more. So, from what I'm reading, MacOS and Linix are Posix compliant because they implement bash commands that have roughly the same behavior or does the compatibility run deeper? And if that's the case, what's preventing Windows from implementing bash for more compatibility? \n\nFor those who are interested, the function that Ruby is missing on Windows to support SolidQueue is 'fork'.",
                "author": "TehDro32",
                "score": 1
            },
            {
                "body": "I like those products too, but they all work fine on Mac.",
                "author": "PMMEBITCOINPLZ",
                "score": 1
            },
            {
                "body": "Bro it breaks all the time for no reason. It feels like it’s not stable. Loses internet for no reason.",
                "author": "k-rizza",
                "score": 1
            },
            {
                "body": "My only issue with WSL is performance on an enterprise bloated laptop running ivanti tools and teams with 16gb of RAM. Shit gets clunky very quickly. \n\nI also have to compact my vdisk pretty regularly when I'm doing lots of docker builds",
                "author": "mindsnare",
                "score": 1
            },
            {
                "body": "It was a long time ago so I don’t remember all the issues but the final thing that made me lose interest was trying to copy paste in and out of Ubuntu. I followed all steps I saw on the internet to fix it and nothing worked. \nI’m amazed it wasn’t simply working by default. Why would you ever not want that feature?",
                "author": "Technical_Sleep_8691",
                "score": 1
            },
            {
                "body": "Docker requires wsl: [https://docs.docker.com/desktop/setup/install/windows-install/](https://docs.docker.com/desktop/setup/install/windows-install/)",
                "author": "viveleroi",
                "score": 1
            },
            {
                "body": "Yeah I phrased that poorly - I use zsh and oh-my-zsh and use Warp for my terminal app",
                "author": "MrCrunchwrap",
                "score": 1
            },
            {
                "body": "It depends on the platform. Java would be fine too, because it is also a bytecode JVM. Languages without good Windows support or a habit of calling C libraries are less fine. Some languages don't handle file systems cross platform in a good way, resulting in different behavior.",
                "author": "Serializedrequests",
                "score": 1
            },
            {
                "body": "It really depends on the task. I've written bash scripts which got so out of hand it made sense to rewrite them in python or something similar, but I've also had the opposite happen, where doing it in bash would just be so much simpler and more efficient.",
                "author": "DeeplyLearnedMachine",
                "score": 1
            },
            {
                "body": "WSL is absolute hell. Would rather dual-boot or grab a completely different setup with Linux on it instead.",
                "author": "Shiedheda",
                "score": 1
            },
            {
                "body": "All the common syscalls have a lot of parity between Linux and MacOS. I don't have a list of non portable syscalls, I only know they exist. I targeted Mac for a teeny tiny part of my life, but the existence of GNU on both systems is evidence that the compatibility layer is there, whether it's glibc/stdlib or something like stdc++ which does stuff like multithreading portably. Funny that MingW exists for Windows and I think I can target windows exe with the GCC cross compiler. I think the biggest problem is deployment and bug testing. No reason why things shouldn't work together if they aren't interacting with a system specific piece of software. Like porting group policy from windows to linux is ofc possible but also pretty pointless, useless, and has no default way to interact with the system. Wine couldn't change UAC to be the amount of time sudo is going to beg for a password. Windows just isn't in the realm of posix compatible so things aren't immediately compatible if it wasn't for MingW",
                "author": "MrDoritos_",
                "score": 1
            },
            {
                "body": "Posix compliance is more than just having the same commands. It also has to do with file structure and the way system calls work Which is why windows just won't cut it,  not something one can just tack onto their os as an afterthought.",
                "author": "anatoledp",
                "score": 1
            },
            {
                "body": "The point is you are supposed to install Docker for Windows and let it manage how it uses WSL 2 for Linux containers instead of installing deb package inside WSK 2 CLI.",
                "author": "Both-Reason6023",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "gentlychugging",
                "score": 1
            },
            {
                "body": "I don't know where you're getting \"installing deb package inside WSK 2 CLI\" that's not what I was talking about. Still, WSL is yet another layer and it takes resources.",
                "author": "viveleroi",
                "score": 1
            },
            {
                "body": "I just have a batch file that I leave running. You can’t open WSL in service mode but the script can just sit there running a loop on the desktop regularly keeping it awake. I have on premise servers that act as both WSL/Linux and Windows ADO agents so they need to always be awake.",
                "author": "Sanchuniathon",
                "score": 1
            },
            {
                "body": "Powershell is a far more powerful scripting language than bash because its object based and bash is just text. ",
                "author": "halap3n0",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "> developing in an environment similar to your deployment environment makes sense\n\nYou can deploy anything anywhere and locally run whatever VM or Docker image you want to check how something behaves in a particular env (if there's issues but there's usually not).  Use whichever OS you like.",
                "author": "Psychological_Ear393",
                "score": 0
            },
            {
                "body": "Unplug your mouse for a week.",
                "author": "Fluffcake",
                "score": 0
            },
            {
                "body": "Its obviously, SMART people do not Win-DOHS",
                "author": "BullTopia",
                "score": 0
            },
            {
                "body": "Because they are masochists",
                "author": "Dependent-Net6461",
                "score": 0
            },
            {
                "body": "Running `npm run` is pretty slow in powershell on Windows compared to running it in a Unix-like environment.",
                "author": "andycall",
                "score": 0
            },
            {
                "body": "Wtf did I just read?",
                "author": "quixotik",
                "score": 0
            },
            {
                "body": "~~MacOS actually isn't case-sensitive.~~",
                "author": "ClikeX",
                "score": 0
            },
            {
                "body": "> I never had WSL go to sleep, I've had it running 24/7.\n> \n> \n\nI tried different ways with chatgpt and all failed. I might have done something wrong.",
                "author": "BortOfTheMonth",
                "score": 0
            },
            {
                "body": "That’s something this thread is missing: there’s a whole class of dinosaur applications that have to run on windows server and companies will force you to use windows to develop for them.",
                "author": "SporksInjected",
                "score": 0
            },
            {
                "body": "All he's saying is they're POSIX compliant (first statement), then try to explain their difference between Linux/Unix using an analogy with vehicles to follow your wheel analogy (second statement).\n\nWhere are you getting all these assumptions about Linux = Unix from?",
                "author": "neoverdin",
                "score": 0
            },
            {
                "body": "Honestly, you really don't want to be doing bare metal web development. You want a linux dev container no matter what(WSL or Docker on mac/linux), especially with npm or pypi etc... You don't want rando webdev repos having access to your normal file system/resources. npm has this permission by default, while normally even prod browsers would block it, which isn't intuitive.\n\n.net on windows server is like maybe the only exception, but even then...",
                "author": "psyfry",
                "score": -1
            },
            {
                "body": "My only reason to use Mac is that I am forced to use it for iOS development. \n\nOtherwise wsl2 is godsend. Never needed a nix system since",
                "author": "truemario",
                "score": -1
            },
            {
                "body": "Most people lack the skills necessary to setup a Linux-like environment on Windows. It's just not optimised for that sort of thing. I've been working on Windows for 5 years so far, never needed Linux or Mac. Matter of fact, Mac extremely slows me down with how unintuitive everything is compared to other OS's.",
                "author": "Shiedheda",
                "score": -2
            },
            {
                "body": "Linux sucks, I prefer macOS",
                "author": "_BlackJack_",
                "score": -2
            },
            {
                "body": "> and terminals are transferable and require no setup on new machines.\n\nMy Oh My ZSH terminal config begs to differ.\n\n\nI never disagreed with you, it's just that tools such as Laragon are pretty intuitive and quick to deploy for specific stacks.",
                "author": "pambolisal",
                "score": -3
            },
            {
                "body": "Github This is a web interface for git. Git was developed on Linux by Torvalds and in Linux you don't need to use any GitHub, git can work with your personal repository out of the box on any host for free",
                "author": "Fun-Entrepreneur-173",
                "score": -4
            },
            {
                "body": "> Setting up a local environment is frequently a big blocker and source of delays from devs.\n\nI made a script to create a dev environment that our team uses  (private). It takes like 5 mins to do it.. It sets up a distro and installations from scratch. Now everyone works with WSL and the only issues we have is when stuff needs updating or when people do not know how linux works. I head on over to assist? I know I can trust their installation.",
                "author": "FrostingTechnical606",
                "score": -5
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -11
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -14
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -15
            },
            {
                "body": "People that buy macs whether they admit it or not do it for the form over function. Factor. Every component on windows computers is cheaper and on average much higher self serviceable than a Mac computer.\n\n\nTldr they want the logo",
                "author": "RainbowUnicorns",
                "score": -16
            },
            {
                "body": "I do a lot of development on Mac too and would use it instead of Win if it wasn't for my clients having enterprise requirements to use Windows machines (so I want to make sure project setup works for them too etc.)\n\nI didn't say anything about not using a Mac, I said complaining WSL setup is too complicated is a dumb excuse.",
                "author": "lbc_ht",
                "score": -16
            },
            {
                "body": "Really? But \"you gotta use a Mac to be a developer! Mac Mac Mac Mac! Buy a Mac!\" That's acceptable perspective?",
                "author": "lbc_ht",
                "score": -18
            },
            {
                "body": "Look, I work on Linux and Mac a lot and would probably prefer it, however, if setting up WSL is a barrier to someone, then honestly software development is something they shouldn't look into. It's a few mouse clicks. I will grant that there are sometimes organizations that lock down a computer enough that installing WSL is not an option, but those organizations are giving their employees bad developer machines then.",
                "author": "lbc_ht",
                "score": -35
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1747526273.0,
        "title": "Considering creating a WooCommerce managed platform",
        "author": "dillonlawrence0101",
        "id": "1kp6uy6",
        "selftext": "Considering a Woo based SaaS service.\n\nOwn an ecommerce agency and I've been considering this for a while. Many don't like Shopify for numerous reasons I won't go in depth with (lack of flexibility, SEO, fees, monthly app charges etc.)\n\nI've considered creating a platform where the entire platform/Woo install is managed for you. \"Isn't this just WPEngine?\" I hear you ask. No. Because it'll focus specifically on WooCommerce and the updates will be managed, installed and tested for you without the need for a developer if it goes wrong like WPE. It'll also have a customised WP-Admin backend that's entirely focused on Ecommerce, so the ecommerce part doesn't feel like an afterthought stuck below blogs in the side menu. Everything from payments to analytics will be set up for you and ready to go. Then we'll review and work with store owners to help optimise and drive conversions (they can subscribe to a higher plan where we'll build the entire store or they can subscribe to a plan which implements the changes we'll suggest monthly for free). I'd price it in line with Shopify. We are already doing this for clients, this is just a fancy way of moving it up a level and making it subscription based. \n\nFor plugins I could even go as far as to fork or create new plugins which are specific to the platform which implement features which should be core by now. \n\nIt's the management/ease of Shopify with the ability to still own your store and get some flexibility when needed. \n\nThoughts? \n\n\n\n",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1kp6uy6/considering_creating_a_woocommerce_managed/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1725566605.0,
        "title": "Anyone have to use Duda? Or at their job? My employer is toying with the idea of using it as a platform. I’m vehemently against it. What are your experiences with it that I can share with upper management and bring them back to earth?",
        "author": "Citrous_Oyster",
        "id": "1f9vynx",
        "selftext": "It’d help if I had some first hand testimony about the platform and its drawbacks. ",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1f9vynx/anyone_have_to_use_duda_or_at_their_job_my/",
        "num_comments": 19,
        "comments": [
            {
                "body": "It's a page builder. As a web developer they are the bane of my existence. DX-wise they will never be as good or better than coding a website by hand. If my company asked me to use page builders instead of coding them I would just search for another job where I did proper web development.",
                "author": "Competitive_Talk6356",
                "score": 8
            },
            {
                "body": "I just Googled it to see what it was about, and yeah, I'd be vehemently against using a website builder as a web developer.",
                "author": "Competitive_Talk6356",
                "score": 7
            },
            {
                "body": "Interesting thread here...\n\n[https://new.reddit.com/r/WebsiteBuilder/comments/1b66ze6/need\\_duda\\_website\\_builder\\_reviews\\_is\\_it\\_easy\\_to/](https://new.reddit.com/r/WebsiteBuilder/comments/1b66ze6/need_duda_website_builder_reviews_is_it_easy_to/)\n\nThe comment about Duda offering whitelabel clients cheaper deals to go direct with them seems like it would scare the shit out of management.",
                "author": "dageshi",
                "score": 3
            },
            {
                "body": "Reasons I'd veto this:\n\n1. It's a site builder that almost certainly makes garbage code (they all do) that you'd be on the hook for \"improving\" even though you won't have the flexibility to do so.\n2. It's a sitebuilder so your projects are now very \"same-y\" and generic. Good luck making anything to differentiate yourselves from the competition! You look like every other low-budget mass-produced website farm out there. GG to your business.\n3. No dev is going to be excited to work at this company. That means devs are going to leave and backfilling is going to be hard.\n4. One of the unspoken perks of bespoke websites it is a little harder for your clients to walk away. This removes that entirely.\n\nIf I worked on a team that was forced to adopt this I'd be sending out resumes the next day.",
                "author": "TheOnceAndFutureDoug",
                "score": 2
            },
            {
                "body": "I did a talk about this very question at a CMS event earlier this year. if you’re interested, I posted the transcript. https://eaton.fyi/talks/buried-in-blocks/",
                "author": "eaton",
                "score": 2
            },
            {
                "body": "I'm living that nightmare at the moment - it's like you peered into my soul",
                "author": "Ronjohnturbo42",
                "score": 2
            },
            {
                "body": "I do good work, I’m on time, and I’m efficient. They don’t care what I do, when I do it, or how long it takes me as long as do it on time and do it well. Which I do. They can hire someone that will take twice as long but write ugly code that isn’t as responsive or creative with animations as me. I’m being paid for my expertise and ability to get the job done right. Not for the hours I work.",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "Fair! I’ve followed your journey since the start, good to see it’s still going well for you!",
                "author": "devcolm",
                "score": 2
            },
            {
                "body": "You own a web dev agency and are employed as well?",
                "author": "HiImGlazed",
                "score": 1
            },
            {
                "body": "Both",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "I’m just curious, does your agency not keep you busy enough?",
                "author": "HiImGlazed",
                "score": 1
            },
            {
                "body": "I have a design team and 2 developers that do most of the work for me. And we have tools and a work process set up that enables us to work incredibly efficiently with low overhead and costs. The job is easy money and benefits like health and dental. It’s cost me like $1900 a month for a family of 5 in the private insurance market.",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "Thank you for your response. I recently started trying to do some website updates or redesigns for local business, just browsing your profile to see what I can learn. It made me hesitant to keep pursuing this seeing a web agency owner deciding to work a job as well. Would you not earn more if you also join the devs? Is it a scaling issue? Again, thank you for taking the time to respond.",
                "author": "HiImGlazed",
                "score": 1
            },
            {
                "body": "I just have too sweet of a job to quit. I’m very good at what I do and work maybe 15 hours a week and paid for 40 and get benefits and unlimited PTO. The agency makes about $180k a year alone and I’m ramping up marketing to scale even more and faster. When you got a family and mortgage in high cost of living area and you’re the sole income provider it’s not wise to quit a job like that to pursue freelance full time. Freelance income is also scrutinized more by banks when getting loans and require higher thresholds for getting approved. We intend on buying a new house in the next year or two. Gonna need that easy income and make getting approved easier.",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "Thank you so much for your response.",
                "author": "HiImGlazed",
                "score": 1
            },
            {
                "body": "Do your employers ever look at your Reddit posts?😅 \nAre they aware you’re only doing 15 hours a week? I’m not hating, I’m just jealous 😅.",
                "author": "devcolm",
                "score": 1
            },
            {
                "body": "What are some of your reasons that I can share?",
                "author": "Citrous_Oyster",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1730818081.0,
        "title": "Best practices for managing cross platform project",
        "author": "PlaintiffSide",
        "id": "1gk8d90",
        "selftext": "I used my website to design a WebView-based iOS app and I am designing an Android app, and I am wondering how to best manage it.\n\nDo I duplicate the relevant pages (ones users see and interact with) and so I can do specific formatting to optimize one for web, one for iOS app, and one for the Android app? Do I run a different EC2 for each?",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1gk8d90/best_practices_for_managing_cross_platform_project/",
        "num_comments": 5,
        "comments": [
            {
                "body": "Basically, if your website is responsive, you're half way there. For custom styling (if still needed) you can swap .css files either server-side (think rewrite rules based on user-agent and/or cookies) or client-side (JS). Unless content is different for each platform you don't even need separate code on a server.",
                "author": "PGurskis",
                "score": 3
            },
            {
                "body": "If you expect regular upgrades and want a unified experience that is easy to administer, you could consider making your site a PWA (Progressive Web App).",
                "author": "Winter_Process_9521",
                "score": 2
            },
            {
                "body": "I am having the same issues",
                "author": "EvanLubeee",
                "score": 1
            },
            {
                "body": "Thank you for this.",
                "author": "PlaintiffSide",
                "score": 1
            },
            {
                "body": "Thank you. I had considered that, but my hope was to have the benefits of distributing through the Apple and Android stores and AFAIK Apple doesn’t accept PWAs.",
                "author": "PlaintiffSide",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731543922.0,
        "title": "Seeking Recommendations for Payment Platforms to Integrate with Wix/Squarespace/WordPress for Managing Membership Payments",
        "author": "wombilator",
        "id": "1gqs2gz",
        "selftext": "I'm seeking advice on the best payment platforms that can integrate with website builders such as Wix, Squarespace, or WordPress. Our small business network’s primary goal is to streamline the management of annual and monthly membership payments to avoid overwhelming committee members who already have their own businesses to run. We're also open to changing the type of website platform to find the most suitable solution. We would like:\n\n* **Automated Tax Invoices**: Generate tax invoices for each payment.\n* **Receipt Downloads**: Enable members to download receipts easily for tax time.\n* **Event Ticketing (great to have)**: Accept payments for ticketed events and send reminder emails.\n* **Affordable fees and charges.** I have been speaking with Squarespace about their payment platforms and they seem to be quite expensive\n\nWe’d love a system that’s user-friendly and comes with strong customer support. Any insights or recommendations would be greatly appreciated!",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1gqs2gz/seeking_recommendations_for_payment_platforms_to/",
        "num_comments": 2,
        "comments": [
            {
                "body": "The fees for these payment gateways are quite similar. If you're using WordPress, WooPayment should be a relatively common choice.",
                "author": "visitchinavisa",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1728983911.0,
        "title": "Would you need a consent management service?",
        "author": "alexandergaal",
        "id": "1g43jt3",
        "selftext": "Hi guys,\n\nI‘m currently building a consent management service for my applications and would like to know if you‘d need something like that.\n\nIt provides an API and an UI to manage legal documents (privacy, terms, …) and with the API I can consent to these documents from my apps. Every document can have multiple versions which can seperately be consented.\n\n[View Poll](https://www.reddit.com/poll/1g43jt3)",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1g43jt3/would_you_need_a_consent_management_service/",
        "num_comments": 4,
        "comments": [
            {
                "body": "Honest feedback:  No.  Anyone using a pre-built CMS or etc is going to have these tools already available to them, and any developers building angular/react/etc from scratch are just going to setup a simple relational table / document store / template store and track which users have consented to which document version.  It's a very simple feature to build for all but the most jr of jr developers.\n\nI am not trying to rain on your parade... you asked if there is a need and I would say that this is not something I would want to add to my list of growing headaches: another 3rd party reliance for something so trivial and simple to build but is also important to have functioning to be compliant with international regulations.  AKA: I'm running it myself so I don't have to worry about an API breaking for a boolean flag with a version number.",
                "author": "Rivvin",
                "score": 2
            },
            {
                "body": "Beware the personal data / GDPR / legal situation. Those consents are are of legal importance and cannot be lost nor tampered with.",
                "author": "billcube",
                "score": 1
            },
            {
                "body": "Thanks for letting me know! :)",
                "author": "alexandergaal",
                "score": 1
            },
            {
                "body": "Thanks for making aware. I'll need to discuss the service with my privacy lawyer anyways, I'll take your input into the chat with him.",
                "author": "alexandergaal",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731024266.0,
        "title": "Need help with Google Analytics consent management in Nuxt 3 using @nuxtjs/script",
        "author": "Trainee_Ninja",
        "id": "1gm56tr",
        "selftext": "I'm trying to implement Google Analytics with cookie consent in my Nuxt 3 app using @nuxtjs/script. I've followed the documentation and got the basic implementation working, but I'm having issues with persistence.\n\nHere's my current setup:\n\n1. Components/CookieConsent.vue:\n\n&#8203;\n\n    <template>\n      <div>\n        <div v-if=\"!cookieConsentStatus\">Hi</div>\n        <button @click=\"handleAccept\">Accept Cookies</button>\n        <button @click=\"handleReject\">Reject Cookies</button>\n      </div>\n    </template>\n    \n    <script setup lang=\"ts\">\n    const { cookieConsentStatus, acceptCookies, rejectCookies } = useCookieConsent();\n    \n    const handleAccept = () => {\n      acceptCookies();\n    };\n    \n    const handleReject = () => {\n      rejectCookies();\n    };\n    </script>\n    \n    2. App.vue\n    \n    <template>\n      <NuxtLayout>\n        <NuxtPage />\n        <ClientOnly>\n          <CookieConsent />\n        </ClientOnly>\n      </NuxtLayout>\n    </template>\n    \n    <script setup lang=\"ts\">\n    const { load } = useScriptGoogleAnalytics({\n      id: \"MY-GA-ID\",\n      scriptOptions: {\n        trigger: agreedToCookiesScriptConsent,\n      },\n    });\n    </script>\n    \n    \n    \n\n  \nThe issue is that while the cookie gets stored and persists between sessions, the actual Google Analytics script doesn't load after a page refresh or when returning to the site after the browser has been closed (even though consent was previously given).  \nWhat am I missing to make the consent state properly persist and trigger the GA script load on subsequent visits?  \nI'm using:  \n  \nNuxt 3  \nu/nuxtjs/script  \nTypeScript  \n  \nAny help would be appreciated! ",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1gm56tr/need_help_with_google_analytics_consent/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1757419239.0,
        "title": "Vanilla JS/HTML in 2025: What’s the Best Way to Build a Web App Without React, Vue, or Svelte?”",
        "author": "Siref",
        "id": "1ncgxw1",
        "selftext": "I’ve been asked to build a KYC system. We’ll start with a small MVP:\n\n* Collect user info,\n* Store it in a database,\n* Include basic authentication.\n\nI've been debating with the right stack - especially for the frontend.\n\nI love the DX of frameworks like Next.js, React Router, Solid, Svelte, and Astro. But they all ship extra JavaScript that users don’t need. For a little-to-no-interactive small app, that feels like overkill.\n\n(I love the snapiness of a mimialminimal JS-free site!) \n\nI’m debating:\n\n* **Qwik**: It's a framework. But, minimal JS is shipped to the browser. I'm unsure if it’s easy for new teammates to pick up or it becomes too niche (Remember we're in a B2B setting and long term support matters)\n* **HTMX**: I like it a lot, but then my head starts spinning with the details:\n   * **Minification** – What tool should I use? Vite/Rollup expect a single entry file, but I’d need something that handles JS per path. Gulp could work, but that means writing my own build pipeline.\n   * **Components** – Frameworks like React/Svelte make components simple and give me SSR. With Web Components (even with Lit), I run into issues like Flash of Unstyled Content (FOUC). There are SSR options for Web Components, but I haven’t tried them yet.\n   * **Critical CSS** – I’d like to extract and inline important CSS for faster loads.\n\n\n\nI once tried Go + HTMX, but I went back to Remix because:\n\n* components in HTMX felt too verbose,\n* I had to manage a full build system,\n* orchestrating JS file loads was painful.\n\n\n\n\n\nI’d love to “go back to the platform” (just HTML + JS), but all the old problems come back.\n\n\n\nI’m sure I’m missing something. Any ideas?",
        "score": 109,
        "url": "https://www.reddit.com/r/webdev/comments/1ncgxw1/vanilla_jshtml_in_2025_whats_the_best_way_to/",
        "num_comments": 156,
        "comments": [
            {
                "body": "You're overcomplicating this.  You need auth and form submissions.  Just use php.\n\nNo build step\n\nHigh performance on the client\n\nYou're not doing anything with css/js that would require bundling/treeshaking just use native css/js imports.\n\nIf you want to trade a little bit of simplicity for convenience, use laravel.",
                "author": "_listless",
                "score": 235
            },
            {
                "body": "Extra JavaScript? Like 40kb of react, 10kb of svelte or 20kb of vue? That is the size of an webp image.  \n\nFurthermore qwik is larger in size than svelte or vue. you're making shit up.",
                "author": "Business_Occasion226",
                "score": 118
            },
            {
                "body": "Astro ships no JavaScript by default. Same with svelte. It’s only when reactivity is included it goes to the client. Correct me if I’m wrong",
                "author": "joshuajm01",
                "score": 81
            },
            {
                "body": "PHP, sqlite and you are done. No need for “orchestrating js file loads” (whatever that means).",
                "author": "bubba-bobba-213",
                "score": 60
            },
            {
                "body": "What you gain in \"smaller size\", you loose in development speed and ease of using frameworks.",
                "author": "Distdistdist",
                "score": 42
            },
            {
                "body": "From OPs requirements I’d highly recommend Astro. Feels like html with templating",
                "author": "CallumK7",
                "score": 35
            },
            {
                "body": "I miss having no build step.  I worked on a PHP project where our deploy was to ssh onto the server and do a git pull.  Done.  And it was the fastest website I've ever worked on.  It had no perceptible load time.  Even pages with database calls were effectively instant.  Since then I've gone on to jobs building SPAs, and I always hoped to replicate that level of speed, but have never seen it since.",
                "author": "Mizarman",
                "score": 32
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 28
            },
            {
                "body": "Use a server-side template rendering, batteries all-in thing like Django. It takes very little to get something decent and secure working, and honestly almost no UI even really needs reactivity, but if you do you can just write vanilla JS or HTMX.",
                "author": "Euphoric-Neon-2054",
                "score": 27
            },
            {
                "body": "Anything with templates on the server, could be plain php. Pure html, css in the browser. This would do the job.\nFast, accessible, never any component updates.",
                "author": "ducki666",
                "score": 27
            },
            {
                "body": "> I’m sure I’m missing something. Any ideas?\n\nIt sounds like you're missing the basics of web development. your requirements fall mostly under the purview of server-side technologies, but everything else you're describing falls far outside of the MVP. you're either spending too much time solving problems you don't have or aren't sharing enough about the project to give you a good recommendation",
                "author": "donkey-centipede",
                "score": 26
            },
            {
                "body": "> I'm concerned about building design systems and reusable components.\n\nThen use the design systems and reusable components that hundreds of very smart developers have collaborated on building over the last few decades.",
                "author": "IM_OK_AMA",
                "score": 24
            },
            {
                "body": "What a monstrous discussion.  \nJS frameworks, minification, pipelines. web components.  \nAre you serious? KYC This is a form with four text fields. OP wrote more characters in post  than the implementation would take.",
                "author": "YahenP",
                "score": 23
            },
            {
                "body": "100% and I’ll never understand why in the js world, we can’t simply use js + some node.js packages, instead of php - why do we need frameworks that add countless layers of abstraction….",
                "author": "ptrnyc",
                "score": 22
            },
            {
                "body": "And having a structured framework helps prevent you from shooting yourself in the foot when you inevitably develop a weird spaghetti driven bug because JavaScript allows you to do all the worst things imaginable with no immediate recourse",
                "author": "King_Joffreys_Tits",
                "score": 18
            },
            {
                "body": "> I've heard that new PHP is much better than older version.\n\nThis has been true for at least a decade.",
                "author": "eyebrows360",
                "score": 18
            },
            {
                "body": "Rails, Laravel, Django. Pick a “batteries included” framework and go. No need to worry about anything else.",
                "author": "mq2thez",
                "score": 17
            },
            {
                "body": "HTML, JS, PHP, SQLite",
                "author": "kimikopossible",
                "score": 16
            },
            {
                "body": "Laravel is the answer to this thread.",
                "author": "singeblanc",
                "score": 14
            },
            {
                "body": "Those were the days. I’m now using Laravel for a huge project that wasn’t feasible without a framework, but it’s a struggle to keep the response time below 200ms.\n\nBut, with PHP it’s easy to make a website without layout shift. It justl feels faster from the first byte that comes in.",
                "author": "East_Lychee5335",
                "score": 14
            },
            {
                "body": "All the JS shit is always more trendy, even though Django celebrated it's 20 year birthday this year and there's a tonne of good work built on the back of it. It's not perfect for everything but it's fantastic for mid to large web apps.",
                "author": "Euphoric-Neon-2054",
                "score": 14
            },
            {
                "body": "PHP, Python backend and you are good to go. A good framework would make it even easier.",
                "author": "riklaunim",
                "score": 12
            },
            {
                "body": "PHP is the goat",
                "author": "SleepAffectionate268",
                "score": 12
            },
            {
                "body": "I haven’t use php in years but man does this sound tempting. I’ve already moved to no build js.",
                "author": "MissinqLink",
                "score": 12
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 12
            },
            {
                "body": "I think SvelteKit includes the hydration and client-side routing code by default even if none of your components are interactive. It is possible to turn those things off for the whole page but I'm not sure there's much point in using Svelte over any other template system if you're going to do that.\n\n\nAstro you're right, no JS there unless you include client components. OP is mistaken I think.",
                "author": "electricity_is_life",
                "score": 11
            },
            {
                "body": "Thanks you! Why no Python Django love on this thread?",
                "author": "activematrix99",
                "score": 11
            },
            {
                "body": "The only way it takes 200ms is because of your database, and that problem would occur in any framework. Laravel itself should hit 20ms.",
                "author": "someexgoogler",
                "score": 10
            },
            {
                "body": "You can build any website with vanilla HTML/JS and a RESTful backend.  \nI do it all the time. I do it to pass PCI/HIPAA audits. No dependencies, no npms, no CVEs.\n\nAnd I've sold some of those apps for $40k, $50k, $60+++\n\nYour auth guard is handled by the backend middleware. Protecting API writes are also protected by backend middleware.. All you need is vanilla .fetch()\n\nThen use ES6 modules to keep your code clean, concise, easily readable, extensible and modular.",
                "author": "originalchronoguy",
                "score": 9
            },
            {
                "body": "Use whatever you are skilled in.",
                "author": "Professional_Mix2418",
                "score": 8
            },
            {
                "body": "Ruby on Rails. It comes with all the batteries included.",
                "author": "dude-on-mission",
                "score": 8
            },
            {
                "body": "This is what I do. HTML, JS, CSS, server side rendering with Handlebars.",
                "author": "alwaysoffby0ne",
                "score": 8
            },
            {
                "body": "Or Symfony",
                "author": "Oihso",
                "score": 8
            },
            {
                "body": "If you just want something very basic, you can just require or import a php file in another one.  You can't pass props/data easily this way though.\n\nRobust templating has been a solved problem in php for years though. [Twig](https://symfony.com/bundles/ux-twig-component/current/index.html) is probably the most common php template language, but there are others too.  If you've used Liquid, ERB, or even Vue, Twig will feel very familiar.\n\nLaravel has it's own templating language (blade) that allows you to break up your UI into components.  [https://laravel.com/docs/12.x/blade#components](https://laravel.com/docs/12.x/blade#components)\n\n\\_\\_\\_\n\n>I think it all comes from the wiring in my head of utility classes of Tailwind which blows up the HTML\n\nI mean... hear me out... it is possible (I know this will sound crazy)... it is possible to style websites without tailwind.",
                "author": "_listless",
                "score": 8
            },
            {
                "body": "Remember, PHP is always evaluated end to end ( unless you have bytecode cache or whatever). So don't open that DB unless you really need to.\n\nCache: Redis, Valkey. ( In memory LRU if this is a keep alive backend ).\nPer view projections, no complex join reads.\nOnly select what you need from a DB.\nDon't materialize rows you don't use.\nTake care of Big O SQL, don't loop and query. O(n * m) vs O(n+m).",
                "author": "nemeci",
                "score": 8
            },
            {
                "body": "A very complete compilation of resources and tips to learn php: https://phptherightway.com/\n\nIf you prefer a more visual roadmap: https://roadmap.sh/php\n\nI also highly recommend this book, it's very well made and you go from the basics to building a full project by the end: https://phpandmysql.com/code\n\nIf you want to get into more advanced topics, check out https://front-line-php.com/",
                "author": "Telumire",
                "score": 6
            },
            {
                "body": "I had an interview for a Laravel position, I've lightly used it at my current job, and I was pleasantly surprised how well put together it is. Seems like a joy to work in.",
                "author": "hidazfx",
                "score": 6
            },
            {
                "body": "Php\n\nOr just use a framework anyways, it's not going to \n impact the user at all",
                "author": "webwizard94",
                "score": 5
            },
            {
                "body": "I've heard that new PHP is much better than older version. Is there some good guide or a tutorial for somebody who did 2 php projects 10 years ago and then spent time working on Angular/React projects with Java backend?",
                "author": "yyytobyyy",
                "score": 5
            },
            {
                "body": "why do you say this then?\n\n> I love the snapiness of a mimialminimal JS-free site!\n\nfeels like ... don't use JS then?\n\nyou can do reusuable components in a FS framework? it's just templating language and css?\n\n> I'm concerned about building design systems and reusable components. \n\nsounds like js?",
                "author": "lunacraz",
                "score": 5
            },
            {
                "body": "how do you mean?  A php app that uses native css/js imports has no build step.",
                "author": "_listless",
                "score": 5
            },
            {
                "body": "Is the juice worth the squeeze? Who cares if 10 more kb of js is loaded? Writing something in elixir, or go, or php is just going to make it harder to hire someone to maintain compared to just writing a single simple React component, it’ll also make implementing auth easier compared to doing it vanilla style. The entire page/implementation would be less characters than even this post like another user said.",
                "author": "ATXblazer",
                "score": 4
            },
            {
                "body": "PHP or Tanstack, some devs never want to admit it but you can scale to 100k or 1M users with simple php and postgres/mariadb. I wouldn't bother with other micro frameworks due to lack of support and you'd more than likely run into unique frustations and need to recode it later on",
                "author": "yamibae",
                "score": 4
            },
            {
                "body": "Astro you're right but svelte does ship js I think, just compiled",
                "author": "burningscarlet",
                "score": 4
            },
            {
                "body": "I would probably go with whatever you are most familiar with so you can complete the job sooner.  Worrying about bundle size seems like a waste of time and energy, especially since it may never even matter for this app.  These days, it's about as ridiculous as trying to build a server to handle millions of concurrent users before you even have an established demand in the market.  And this is coming from someone in rural Appalachia using terrible 4G LTE internet with soft data caps.  30kb bundle size is nothing.  Hell, 500kb is nothing too.  Many sites will have you downloading that and more in images on the first load.",
                "author": "KwyjiboTheGringo",
                "score": 3
            },
            {
                "body": "You could use a server side framework like Laravel or Symfony, with standard form submission (the users don’t care and won’t notice a difference). Sprinkle on some vanilla JS if needed. ",
                "author": "Disgruntled__Goat",
                "score": 3
            },
            {
                "body": "if you need client side components - web components\nif you want encapsulated css - declarative shadow dom\n\npick the templating language and server framework you like the best, speak HTML for the rest",
                "author": "benny-powers",
                "score": 3
            },
            {
                "body": "`<script>` \n\nbehold my orchestration",
                "author": "flooronthefour",
                "score": 3
            },
            {
                "body": "This is the way. I now use Go, which similarly does serverside HTML rendering. It is just so much more sane than the Javascript framework thing. You don't get the reactive GUI, but I find that I usually don't miss it.",
                "author": "zephyrinian",
                "score": 3
            },
            {
                "body": "Sweetalert + fetch. Done.",
                "author": "Raphi_55",
                "score": 3
            },
            {
                "body": "Sure, just exactly what you said except for the part that you said.\n\nEvaluation/execution is not the same thing as compile/build.\n\nBy way of example: browser-ready js requires no build step, but your browser evaluates/executes that js.  The fact that the code gets evaluated and executed does not mean that the js now has a \"build step\".\n\nts by comparison does require a build step.  the browser has no idea what to do with ts, it needs to be compiled to something else (js). same with sass->css. Even most node apps have a build step that bundles code so you're not referencing node\\_modules in your production app.\n\nphp is different than that - the php code itself gets evaluated and executed on the server with no intermediate compilation or build step. Lets say you're using composer deps, those classes get loaded from /vendor via psr autoloading, not compiled as part of a build step.\n\nOut of curiosity, can you describe this build step you believe php has?",
                "author": "_listless",
                "score": 3
            },
            {
                "body": "Maybe something like Astro if you really don't want to ship code (or at least have full control over it)",
                "author": "vexii",
                "score": 2
            },
            {
                "body": "Astro ships with zero extra JavaScript, but provides all the benefits of the modern JS/TS ecosystem. Astro all the way!",
                "author": "Prize_Hat_6685",
                "score": 2
            },
            {
                "body": "Astro",
                "author": "0_2_Hero",
                "score": 2
            },
            {
                "body": "Can I htmx and hyperscript circlejerk?",
                "author": "zauddelig",
                "score": 2
            },
            {
                "body": "arrow.js is nice and can be used with out a build step",
                "author": "zarlo5899",
                "score": 2
            },
            {
                "body": "HTMX works for simple use cases like a login form but doesn't scale. The moment you have a bit of UI sophistication it becomes a mess with code all over the place... and inevitably you will still need client-side JS anyway.",
                "author": "WorriedGiraffe2793",
                "score": 2
            },
            {
                "body": "I just use Laravel and Livewire to build anything really.",
                "author": "Fair-Parking9236",
                "score": 2
            },
            {
                "body": "Check out [Fusor](https://github.com/fusorjs/dom) - it's simple and lightweight (3KB). Close to vanilla, with an optional build step and less verbose components than other libs.",
                "author": "isumix_",
                "score": 2
            },
            {
                "body": "Elixir and Phoenix",
                "author": "jax024",
                "score": 2
            },
            {
                "body": "If you’ve ever written React and are familiar with the basic patterns of `mount` and `render` I can’t recommend Elixir with Phoenix and Phoenix LiveView enough. Got a job a few years ago writing it and it’s incredible.\n\nLiveView hooks a socket up to the server and uses MorphDOM to diff the DOM and update whatever needs to update in the UI automatically for you. So you write only server side code in Elixir and you get all the snappiness of a modern front end web app without having to deal with the usual rigmarole of having API requests. It also has great form support out of the box so you can just pass a schema and it will generate a form handling validation and choosing the correct inputs.\n\nPlus Elixir’s function clauses with pattern matching means you can write the same function more than once but tell Elixir when you want one version to be called instead of another (like say if a string is passed as an argument instead of an integer, or if three arguments are passed instead of two). And lastly it’s support of pipes for functions makes it easy to chain things together and write smaller, functional steps that are easy to reasons about.\n\nJust my two cents. I personally love writing JS and did it for most of the last two decades, but Elixir is up there as one of my top two favorite languages now.",
                "author": "undone_function",
                "score": 2
            },
            {
                "body": "instead of this debate u could have shipped this product 5 times with vite or next js app.",
                "author": "InevitableView2975",
                "score": 2
            },
            {
                "body": "I *just* started playing with Astro as an excuse to redo my personal site. It’s been pretty smooth so far, and I love the speediness and simplicity of it.",
                "author": "ikeif",
                "score": 2
            },
            {
                "body": "Astro yes, not sure about Svelte.",
                "author": "gdmr458",
                "score": 2
            },
            {
                "body": "Agree. \nWe have a whole erp software written in plain vanilla and html, no frontend frameworks or react.\nAmazing performance, clean code and easier to maintain and update over time.",
                "author": "Dependent-Net6461",
                "score": 2
            },
            {
                "body": "Hell yes. I don’t think enough JS devs have given Elixir and Phoenix a shake but it feels great to write it and you get nearly all the benefits of a separate front end application with zero effort.",
                "author": "undone_function",
                "score": 2
            },
            {
                "body": "Phoenix looks great on paper but the reality is that there's not even an official AWS client for Elixir.",
                "author": "WorriedGiraffe2793",
                "score": 2
            },
            {
                "body": ">...a little-to-no-interactive small app\n\nPer OP",
                "author": "_listless",
                "score": 2
            },
            {
                "body": "Your js shouldn't be in the critical path for rendering, but of course if the js makes changes those won't work until the jsnis ready.",
                "author": "thekwoka",
                "score": 2
            },
            {
                "body": "What do you mean? You don't need anything to run a vanilla.js site, also you can justo import almost any library directly in the browser with a CDN, never heard jquery?",
                "author": "tmarnol",
                "score": 2
            },
            {
                "body": "There is a PHP video series by a YouTuber called \"Program With Gio\". His course covers PHP 8. He also has a follow up for Laravel, but I haven't experienced that since I mostly deal with front-end at work but just needed some fundamental PHP for some projects.",
                "author": "Lower_Rabbit_5412",
                "score": 2
            },
            {
                "body": "It technically is tho.",
                "author": "Raphi_55",
                "score": 2
            },
            {
                "body": "Nope. Either you don't know what you're talking about, or we're talking about 2 different things.\n\nThere is no build step, your php does not compile out into something else in order to get executed, the server just executes the code you write.\n\nYou could maybe make the argument that php8's JIT is some sort of compilation, but that's not a build step, it's an OPCache extension that caches the php required to fulfill a request in memory as byte code.\n\nThere's not really a corollary to \"npm run build\" in php.  The server just executes the code you write.",
                "author": "_listless",
                "score": 2
            },
            {
                "body": "> the PHP is still built when run. \n\nNo it's not? PHP code is interpreted, there is nothing being built. The most minimal PHP deployment is to SSH into the server and do a git pull.  \n\nIt's exactly like raw JS.",
                "author": "xIcarus227",
                "score": 2
            },
            {
                "body": "There is a button which leads you to the qwik implementation. There is nothing hidden or so. Generally the benchmark gives an estimate of a simple reference implementation",
                "author": "Business_Occasion226",
                "score": 2
            },
            {
                "body": "Laravel IS a joy to work with!",
                "author": "ArtisticParticular20",
                "score": 2
            },
            {
                "body": "Laravel genuinely changed the PHP landscape completely. I fell in love the frst time I did a `Model::where(something)->get()` as as a junior/mid developet years ago. This framework just makes things very simple and easy to read, even though it admittedly achieves this by doing some magic which I dislike.",
                "author": "xIcarus227",
                "score": 2
            },
            {
                "body": "I found saving complex join queries as views were quite fast to query",
                "author": "thinsoldier",
                "score": 2
            },
            {
                "body": "Best way without React, Vue, or Svelte… Angular!",
                "author": "chadan1008",
                "score": 1
            },
            {
                "body": "You could look into alpine.js but honestly just use django and be done. Could even add alpine or vue or whatever afterwards, if the need arises",
                "author": "Recent-Assistant8914",
                "score": 1
            },
            {
                "body": "Gulp is 200yo. You can't build multiple entrypoints with any of the modern building tools.",
                "author": "MrDontCare12",
                "score": 1
            },
            {
                "body": "Just use Supabase, [https://supabase.com/](https://supabase.com/) and store data with a Supabase JS client. You can serve everything off a CDN or bucket, no server needed. Thank me later.",
                "author": "who_am_i_to_say_so",
                "score": 1
            },
            {
                "body": "You're putting tech ahead of the product. You can use **literally anything** with those requirements. So use what you know best.",
                "author": "Solid-Package8915",
                "score": 1
            },
            {
                "body": "Solid and svelte are pretty minimal. Alpinejs is another light framework that uses Vue’s reactivity system. \n\nUltimately, if you want the convenience of reactivity, etc, you’re going to need the JS that backs it up. Or you’ll need to write your own laser focused micro framework. ",
                "author": "hyrumwhite",
                "score": 1
            },
            {
                "body": "Datastar is the simplest and first approach, especially if you can about siding orders of magnitude less data",
                "author": "opiniondevnull",
                "score": 1
            },
            {
                "body": "If you're building what's defined as a Web App, then the best way is to initialize a SvelteKit (or Nuxt or Next) project and get on with your development without having to implement your own routing, client side state, server/client hydration, etc. If it's complex enough to be called a Web App, letting someone else handle the complexity is a reasonable thing to do.\n\nThat's obviously not the answer you want. Re-implementing all that is also clearly a good way to learn what you need, so I'd say the least you can do is set up TypeScript (so a tool tracks your types for you instead of flying blind) and Vite (so you get hot reloads and reasonable imports and other transpilation/bundling goodies).\n\n---\n\nAlso, **Astro does not ship extra JS by default**. It bears repeating, **Astro is zero-JS by default**. An Astro site without script tags and client: directives literally would have less client side JS than HTMX.\n\n- For Astro templates, they are rendered at build time on the build machine, or at request time on the server, and the client only gets the resulting HTML. (Script tags that you wrote are bundled so that TypeScript and imports work. This is done by Vite, which Astro builds on top of.)\n\n- For React/Svelte/Vue/etc. components, the same is true by default: they get rendered into HTML at build time or at request time, and the client doesn't actually get an interactive component. You only get an interactive component (and have the framework and the component JS shipped to the client) if you add a `client:load` directive or its alternatives.\n\n---\n\nIf your project feels more like \"HTML plus some interactivity\", Astro really isn't a bad choice. If that's too much, I recommend trying to just `npx vite foo.html`.\n\nBut since you said it's a B2B setting so you want something less experimental than Qwik, and your problems with using HTMX suggests you want a router, I seriously recommend just using Astro. You can choose to not use a client side component framework if you don't need it.",
                "author": "kisaragihiu",
                "score": 1
            },
            {
                "body": "I’d probably fall back to the sort of thing people did before JS frameworks were a thing:\n- Ruby on Rails\n- Django\n- PHP + MySQL \n\nMaybe even consider using JQuery for the JS you need, the newest version has cut support for a bunch of older browsers so it’s way lighter than it was before. \n\nAll that stuff still works, no reason not to use it!",
                "author": "jfinch3",
                "score": 1
            },
            {
                "body": "Astro doesn't ship js, only if you opt in.",
                "author": "tomhermans",
                "score": 1
            },
            {
                "body": "Web Components are pretty solid now for reusable pieces. Combine with native ESM and you can build surprisingly complex apps without any frameworks. The tooling story still isn't as smooth though.",
                "author": "RRO-19",
                "score": 1
            },
            {
                "body": "Here's how i would recommend doing it;\nUse hono for the backend. Supabase for the db. Everything else will fall in place",
                "author": "rishav_sharan",
                "score": 1
            },
            {
                "body": "Correction: Astro ships zero JS by default.",
                "author": "jamesjosephfinn",
                "score": 1
            },
            {
                "body": "1. JS != slow website\n2. Astro and Next can do what you want.\n3. Stop over optimizing and use something that’s tried and true",
                "author": "30thnight",
                "score": 1
            },
            {
                "body": "Astro. Keep it simple.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "Astro for the SSR stuff. Add islands where you need more interactivity with whatever frontend framework you prefer.",
                "author": "WorriedGiraffe2793",
                "score": 1
            },
            {
                "body": "PHP/Laravel, Ruby/Rails, Swift/Vapor, Java/SpringBoot, etc. pick any back end basic framework and all of that should already be included in some with without worrying about any extra JS. I work with 3 of these regularly, sometimes within the same project.\n\nEVERYTHING you describe IS basic web technology that does NOT require JavaScript.\n\nThe BEST approach you can take with any application is... make it work without JavaScript then add it in for \"flavor.\"",
                "author": "rjhancock",
                "score": 1
            },
            {
                "body": "What's the problem with svelte? I heard that it's very lightweight.",
                "author": "pinkwar",
                "score": 1
            },
            {
                "body": "Astro is nice minimal and clean.",
                "author": "typhona",
                "score": 1
            },
            {
                "body": "You can just use as backend  bash script in cgi-bin and sqlite3 or mariadb for database",
                "author": "Substantial_Wait_215",
                "score": 1
            },
            {
                "body": "Not sure it’s an answer exactly, but maybe it’s the sort of thing you’d be interested in:\n\nHere is a wholly static, no build tool required, every file hand-crafted TodoMVC implementation using the fantastic Hyperapp micro-framework. It’ll even pass type checking and give you intellisense in the editor thanks to the type annotations using jsdoc-syntax (so the scripts can still run in the browser)\n\nhttps://github.com/zaceno/todomvc-hyperapp",
                "author": "zaceno",
                "score": 1
            },
            {
                "body": "The old problems come back if you want a single page web app, polling and notifications.",
                "author": "CautiousRice",
                "score": 1
            },
            {
                "body": "Angular",
                "author": "Time-Refrigerator769",
                "score": 1
            },
            {
                "body": "Don't use php please.\n\nI have built a couple frameworks and web applications both professionally but also in my free time. If you wanna forego the whole schtick, which I thoroughly recommend, then the easiest way is to\n\n* Use Django as a framework - it's intuitive, well documented and has many great features\n* Use bootstrap as a CSS and JS framework - it provides everything you need in a CSS framework\n* Write basic classes for rest API communication. Django provides an extensible Auth framework, and you can easily adapt it to a custom rest api. You should be able to throw out models, simple views and basic integrations in a day or two. Depending on what you want to do, quick prototyping should be doable in a few days with these tools. You will need to work through vanilla is, but frankly it's not too bad for anything basic such as data retrieval, stateful requests, Auth, frontend manipulation and such. For more complex stuff like oauth or processing CSV you'll need more time obviously, as that stuff without proper frameworks can be a bitch and a half.\n\nEdit: Holy shit, the software stack you mention compared to your requirements is insanely bloated. I'm gonna be blunt - if you can't build an app that just stores some data without shit like react then I really don't know what to tell you.",
                "author": "EverythingsFugged",
                "score": 1
            },
            {
                "body": "I get where you’re at. Going “just HTML + JS” sounds clean until you run into all the invisible stuff frameworks quietly handle for you: bundling, routing, hydration, CSS pipeline, component ergonomics. You don’t notice how much DX is basically guardrails until you rip them out.  \n\nWhat’s helped me in similar MVP setups is not trying to kill all JS, but being intentional about where it runs. You can still think server‑first, sprinkle interactivity. A few thoughts:  \n\n- If you’re already leaning toward HTMX, pair it with something opinionated on the backend. It takes the pressure off the build pipeline because you stop thinking of it as “frontend vs backend” and just serve HTML fragments. Django, Rails, Phoenix all play nice here.  \n- Don’t over‑optimize CSS and JS upfront. A single well‑hashed CSS + JS file that covers your MVP won’t kill you. Critical CSS extraction can come later.  \n- For components: instead of going full Web Components, think of partials/partials‑with‑JS. HTMX plus Stimulus or Alpine can give you that “tiny React component” feel without the payload of React.  \n\nBasically: when you want the snap of minimal JS but the sanity of a framework, you usually end up layering a very lightweight “sprinkle” library over a strong backend template system. That combo is boring, predictable, and doesn’t leave future teammates stranded.  \n\nIf you try to fully replicate React’s ergonomics in vanilla land, you’ll spend three months building your own half‑framework. That’s the trap.",
                "author": "theycallmethelord",
                "score": 1
            },
            {
                "body": "Astro + petite-vue",
                "author": "c01nd01r",
                "score": 1
            },
            {
                "body": "I know the tooling in the JS ecosystem isn’t the most beginner friendly but if you can ramp up and understand it it’s powerful, it can be minimal, it can be flexible to your needs, and it can scale well.\n\nMy vote is to use just react, react router, typescript, vite, and trpc. In a monorepo containing your frontend and backend.",
                "author": "spooker11",
                "score": 1
            },
            {
                "body": "I love this one- currently one of the developers speaking - I am defiantly a strong advocate for php",
                "author": "SharePanelHost",
                "score": 1
            },
            {
                "body": "Yii2 + HTMX",
                "author": "Jealous-Bunch-6992",
                "score": 1
            },
            {
                "body": "Vanilla Web components \nhttps://developer.mozilla.org/en-US/docs/Web/API/Web_components\n\n\n\nThere's a little boilerplate that's unavoidable, but there's no build step and components built this way are compatible with ANY JS framework. \n( if you decide to use one again )\n\nlink css style sheets that use nested styles. ( or use a style tag for smaller web components )\n\nSince every component has its own shadow DOM you don't have to worry about detailed ids and classes too much.\n\nMake components talk to each other by setting component attribute values with  setAttribute() and listen for those changes using attributeChangedCallback() and fire logic using the call back as a trigger.\n\nUse fetch api or whatever.. to talk to the backend.\nUse express js or flask, anything that can be leveraged to create endpoints and backend api.\n\nIf you need realtime features use socketio.\n\nNested css\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting/Using_CSS_nesting\n\nFetch api\nhttps://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
                "author": "ProgrammerGrouchy744",
                "score": 1
            },
            {
                "body": "OMG... soooooo much bloat! Web components, SASS on the F/E, simpleJWT + one MariaDB table on the backend. Do all the F/E dev in Visual Studio live in the browser... no pipeline. Mock JSON-RPC responses for a single endpoint.",
                "author": "dug99",
                "score": 1
            },
            {
                "body": "that means it is stupid crud. vannila js would already work wonder.\n\ni wont even add in waste-of-time frameworks otherwise needed",
                "author": "CartographerGold3168",
                "score": 1
            },
            {
                "body": "Reject modernity, embrace PHP.",
                "author": "Osato",
                "score": 1
            },
            {
                "body": "Vite + Web Components (HTMLElement) + Navigo is what I use for small projects. Plotly.js for charts.\n\nLet me know if you’d like me to share an example.",
                "author": "amjadmh73",
                "score": 1
            },
            {
                "body": "For the sake of mentioning something no one else has there’s also **Nunjucks**.  \n\nYou’ll need to build with npm scripts but nunjucks gives you templates and variables injection ( equivalent to {{myVar}} ) and some other stuff and it’s basically all js you write.   ",
                "author": "Headpuncher",
                "score": 1
            },
            {
                "body": "I personally run htmx + tailwind + flask/jinja. Jinja templating takes care of reusable components for me, tailwind is just my personal preference for CSS because it's easy to prototype and I can just put repeated code into more sensible classes later, and htmx make my webapp into an SPA without a huge framework.\n\nand... why are you caring about minification at this stage? Even with tailwind classes, which are bloated as fuck, my current project is smaller and faster than most react pages. Solve it when it becomes an issue, premature optimization is a real thing and it kills projects.",
                "author": "Beregolas",
                "score": 1
            },
            {
                "body": "I'm using Lit on a project and it's very unopinionated. You can use as much or as little as you want. I mostly use the template literals and vanilla for everything else l. Have a look at it. It's extremely lightweight https://lit.dev/",
                "author": "mrchoops",
                "score": 1
            },
            {
                "body": "For the Critical CSS portion, I wrote a free tool that can be used post-production at [https://criticalcss.net/](https://criticalcss.net/)\n\nIt visits your page, pulls down all of the CSS, finds the critical, strips out the unused styles, and then emails you links for both the critical CSS as well as the remaining CSS.  \n  \nMy goal is to eventually offer plans for full API access outside the web generator.",
                "author": "sethta",
                "score": 1
            },
            {
                "body": "Perfect fit for vanilla php and html css and vanilla js where needed. Ez 98 on lighthouse",
                "author": "ardicli2000",
                "score": 1
            },
            {
                "body": "If you want minimal JS without the pain, HTMX + server-rendered templates is probably your best bet. It avoids big bundles, handles forms/auth nicely, and you can sprinkle vanilla JS for edge cases. Qwik is cool but still feels too niche for long-term maintainability.",
                "author": "basit740",
                "score": 1
            },
            {
                "body": "Next can do SSG where you can send user only html without any js.",
                "author": "TheRNGuy",
                "score": 1
            },
            {
                "body": "Htmx+Tailwind",
                "author": "ogMasterPloKoon",
                "score": 1
            },
            {
                "body": "The best PHP framework: Yii2",
                "author": "Superb-Marketing-453",
                "score": 1
            },
            {
                "body": "Go + Datastar = It's so simple, and for the features you get for the payload size, it's hard to beat for performance. https://data-star.dev/",
                "author": "whoslaughingnow",
                "score": 1
            },
            {
                "body": "PHP my guy",
                "author": "Historical_Emu_3032",
                "score": 1
            },
            {
                "body": "Is the bundle size really a problem tho? If the user base is from EU/US this is rarely a problem.",
                "author": "RoundRecorder",
                "score": 1
            },
            {
                "body": "Sounds like Rails is what you need.",
                "author": "mrfredngo",
                "score": 1
            },
            {
                "body": "you mean SvelteKit?",
                "author": "WorriedGiraffe2793",
                "score": 1
            },
            {
                "body": "Qwik too.",
                "author": "Lord_Xenu",
                "score": 1
            },
            {
                "body": "How does Astro compare to 11ty for basic static sites? Kinda want to try it now.",
                "author": "SRTM86",
                "score": 1
            },
            {
                "body": "Astro is the only real answer here, it's a wonderful framework based on the base technologies of the web and it has zero overhead if you don't need it. It also has a great community and well built documentation, I can't recommend it enough.",
                "author": "ViorelMocanu",
                "score": 1
            },
            {
                "body": "This",
                "author": "Smart-Preference549",
                "score": 1
            },
            {
                "body": "It depends on the scope of the site. A simple, static, and small website for a business or whatever can be entirely done in under 60kb, without compromising the design or hero, with smart use of image optimization, css, svg, etc.\n\nWhile anything loads fast on our development machines, keep in mind a lot of potential users will be on slow hardware, perhaps a Samsung J series, and may have poor mobile data where they're at.",
                "author": "7f0b",
                "score": 1
            },
            {
                "body": "Qwik is way smaller what are you talking about about?\n\nIt literally has zero client code unless you interact with something.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "Wild that a login form can spark a whole framework war.",
                "author": "InclusionXpert",
                "score": 1
            },
            {
                "body": "For me, I enjoy the island architectures. Being able to plug in any reactivity framework you want is pretty good",
                "author": "joshuajm01",
                "score": 1
            },
            {
                "body": "> deploy was to ssh onto the server and do a git pull\n\nYeah i love this. Been a PHP dev for 8 years now and deploying is soo easy\n\nI did nodejs sideprojects too and hell, what a pain in the ass to deploy such thing? Like just on a VPS right, you need dev packages on your production environment else you can't build it. It also takes so much more space compared to a php project. node_modules is like 10x worse than vendor folder\n\nYou can't just git pull, you need like CI/CD, expose more vps security so like github can connect it, yada yada",
                "author": "michaelbelgium",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "This is technically true, but also completely irrelevant in this context. 20kb of js on any phone or computer built in the last 15 years is going to load and execute so fast as to be imperceptible without benchmarking tools.\n\nI'm not saying OP should use react or vue for their web form project, it's all perfectly achievable without, but it would also do literally zero harm to the user experience if they did.",
                "author": "hiddencamel",
                "score": 1
            },
            {
                "body": "[https://krausest.github.io/js-framework-benchmark/2024/table\\_chrome\\_121.0.6167.86\\_win.html](https://krausest.github.io/js-framework-benchmark/2024/table_chrome_121.0.6167.86_win.html)",
                "author": "Business_Occasion226",
                "score": 1
            },
            {
                "body": "Because JSX (or TSX) code is easier to code.\n\n\nPHP have sone frameworks too.",
                "author": "TheRNGuy",
                "score": 1
            },
            {
                "body": "There is some great training for PHP, I'm not entirely sure how to go from Ang/React, I mostly need help the other way. Udemy would probably be where I would start. Lots of hybrid approach that would suit your skills.",
                "author": "activematrix99",
                "score": 1
            },
            {
                "body": "Because it just works and it's easy to use. A lot of JS devs hate that because they can't sit at a table and have conversations about the 30th level of abstraction.",
                "author": "IWantToSayThisToo",
                "score": 1
            },
            {
                "body": "Uh it’s hard to describe the nothingness. I just put js in places. [Here’s an example](https://patrick-ring-motive.github.io/tolkienizer/). It sort of builds but it’s building the language model not the js.",
                "author": "MissinqLink",
                "score": 1
            },
            {
                "body": "so you agree that php is not enough",
                "author": "WorriedGiraffe2793",
                "score": 1
            },
            {
                "body": "I'd have to see the implementation, cause that doesn't align with my experiences, but thank you :)",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "Did you ever develop anything complex in multiple ways? Cause I did and there’s plenty up and downsides to all of them. Laravel has a lot of upsides, but the downside is that it’s not made to be efficient with CPU cycles. You simply can’t deny that fact.",
                "author": "East_Lychee5335",
                "score": 1
            },
            {
                "body": "It has its issues in singleton design for example...",
                "author": "nemeci",
                "score": 1
            },
            {
                "body": "It can feel like that when you don't understand something.",
                "author": "Euphoric-Neon-2054",
                "score": 1
            },
            {
                "body": "Quite complex, yes. I have not used Laravel so cannot speak to it. Nowadays I'm usually building microservices in Python, a few in Golang. I will say nowadays I steer clear of ORMs: ie EF in .Net, ActiveRecord in Rails. The overhead is gross.",
                "author": "Poopieplatter",
                "score": 1
            },
            {
                "body": "Nah, just have actually used it and other things.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "200ms has nothing to do with a specific language or framework.",
                "author": "Poopieplatter",
                "score": 0
            },
            {
                "body": "the PHP is still built when run. Laravel even more so.\n\n\"no build step\" is literally meaningless",
                "author": "thekwoka",
                "score": -3
            },
            {
                "body": "Like I said, essentially arbitrary.",
                "author": "thekwoka",
                "score": -3
            },
            {
                "body": "Because anyone that has used it and something else know Django is a steaming pile.",
                "author": "thekwoka",
                "score": -4
            },
            {
                "body": "It's more like \"basically passable for some apps\".\n\nNot fantastic at anything.",
                "author": "thekwoka",
                "score": -7
            },
            {
                "body": "> No build step\n\nMore like \"hidden build step\"",
                "author": "thekwoka",
                "score": -8
            },
            {
                "body": "Easy for devs, terrible for users. Nobody wants to navigate to a new page to edit and item in a list.",
                "author": "WorriedGiraffe2793",
                "score": -11
            },
            {
                "body": "Thanks :). \n\nI know The same can be achieved with any server side language like Python + Django, Ruby and Rails, Node and Nunjucks, C# and Razor. \n\nI'm concerned about building design systems and reusable components. \n\nI think it all comes from the wiring in my head of utility classes of Tailwind which blows up the HTML (which isn't a problem in React/Svelte) .",
                "author": "Siref",
                "score": -16
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1724417488.0,
        "title": "How much of a bad idea is to use a JSON file instead of a SQL database?",
        "author": "OptimalAnywhere6282",
        "id": "1ezby2c",
        "selftext": "It's meant to be used in a very small project, and being able to read its data on different frontends (website, desktop program, mobile app) depending on the project path.\n\nThe pros I found by using this are:\n- Works with almost any programming language --> any platform\n- It's very simple\n\nBut I don't know if it brings any kind of vulnerability.\n\nI have made the source code public, if you want to see it just say so.\n\n\n\nEdit: Answers to some questions, and to questions that weren't asked but knowing them may help.\n\n\n- The small project is a forum/blog where users can add posts with their own content. It's still in development, so there are missing features; I wanted to ask [title] before continuing with the project.\n\n- Data is structured like this (as JSON):\n[\n    {\n        \"id\": 1,\n        \"time\": 1723073204,\n        \"title\": \"Example post\",\n        \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        \"link\": \".\\/read.php?id=1\",\n        \"image\": \"\"\n    },\n    ...\n]\n\n- There is no sensitive information, and there aren't plans to store it.\n\n- This is run in a basic server that just has PHP, file serving (obviously), and databases are managed with PMA. No SSH, no Python, no Git, no Node.js, no Bash scripts, etc.\n\n- The source code is available at https://github.com/Jotalea/SimpleForum\n\n- The deployed version is available at http://blog.jotalea.com.ar\n\n- This is my first time using PHP, so don't expect good code.\n\n\n\n(Final?) edit: I learned SQLite and made the database work there. I also made a tools page for converting the previous JSON-based database into the new, better SQLite DB; and a few more things. All of that is available on GitHub and it's already deployed.",
        "score": 231,
        "url": "https://www.reddit.com/r/webdev/comments/1ezby2c/how_much_of_a_bad_idea_is_to_use_a_json_file/",
        "num_comments": 358,
        "comments": [
            {
                "body": "sqlite",
                "author": "Shmutsi",
                "score": 540
            },
            {
                "body": "It's not very scalable and searching through isn't as optimal as SQL queries I think.\n\n\nIf it's tiny and won't change much I don't see the harm in it",
                "author": "Kaimito1",
                "score": 366
            },
            {
                "body": "It's like re-inventing the wheel. \n\nYou can do it for sure - but the reasoning is lacking. DBs store in files too, not JSON, but still files. The biggest differences are caching layers, security, and standardization.\n\nWheels are free. I'd use one.",
                "author": "NuGGGzGG",
                "score": 183
            },
            {
                "body": "I think that every novice programmer has an intrusive thought that it would be \"simpler\" not to use a database, and just to store the data in files.\n\nIgnore it",
                "author": "ElCuntIngles",
                "score": 138
            },
            {
                "body": "And the amount of effort it takes to do it the stupid way is much much higher ",
                "author": "yousirnaime",
                "score": 92
            },
            {
                "body": "Thanks ChatGPT.",
                "author": "Getabock_",
                "score": 84
            },
            {
                "body": "As long as nothing in the JSON file is sensitive - no passwords, no PII, no bank accounts - it's fine.\n\nThis sort of thing is why SQLite exists, though.",
                "author": "ceejayoz",
                "score": 77
            },
            {
                "body": "I came here to say this. SQLite is a solid choice, and provides a path to a better database solution if you need to scale later.",
                "author": "_hoyet",
                "score": 60
            },
            {
                "body": "Yep, if it's tiny, and there's minimal read/write activity sure , but for anything with more than say  10k records use SQL",
                "author": "abrandis",
                "score": 59
            },
            {
                "body": "Nah don't ignore it. Explore it! That way you have a true understanding of why we don't do it that way. 😂\n\nPunishment being time wasted.",
                "author": "PublicStalls",
                "score": 38
            },
            {
                "body": "\"overkill\".\n\nI feel like everyone that uses that nowadays has no idea what it means.\n\n\nIt doesn't take more work, and it works better.\n\nWhat is overkill?",
                "author": "thekwoka",
                "score": 33
            },
            {
                "body": "Database can be connected from every programming language also.\n\nDatabase management systems are highly performant, and your queries will be damn fast especially if your app is kinda small (but it's still better to make decent db  architecture)",
                "author": "Able-Bar-5446",
                "score": 31
            },
            {
                "body": "\"Is there an observable problem that switching to SQL would fix?\"",
                "author": "raserei0408",
                "score": 26
            },
            {
                "body": "SQL is built to confirm to ACID principles.\n\nLet's say with this system two people try to update a post simultaneously, how will it cope. What about two comments being added. \n\nCan this system roll back a transaction while letting others progress.\n\nYou'll also have scalability issues. With SQL you can update a single row as far as I can see this will require a whole file to be read parsed updated and written. The longer this takes the more chance that two processes will do this simultaneously and one will lose the changes",
                "author": "Normal_Fishing9824",
                "score": 25
            },
            {
                "body": "Unless it’s a very small hobby project, just go with SQL",
                "author": "krazzel",
                "score": 22
            },
            {
                "body": "Why do filesystems even exist? So overcomplicated. You'd get much better performance storing data on the raw disk and managing it yourself!",
                "author": "Supermathie",
                "score": 22
            },
            {
                "body": "sqlite is the best thing since white bread",
                "author": "DreamDeckUp",
                "score": 20
            },
            {
                "body": "Did white bread come after sliced bread or are you just ambivalent to sliced bread?",
                "author": "Disgruntled__Goat",
                "score": 20
            },
            {
                "body": "Is it just meant to act as a source of truth and doesn’t need to be updated by your API and only needs to be updated through source control? Then JSON is fine for this, and I think is better than using a SQL database for this particular case. If you want to use it as a database where users can modify it, then it’s a bad idea.",
                "author": "TheExodu5",
                "score": 19
            },
            {
                "body": "I also came here to say this. There are very few places a json file will be better than SQLite. It's still just a local file, so you'll be able to create it as easily as you would json (if not more so).",
                "author": "StaticCharacter",
                "score": 19
            },
            {
                "body": "There are things like lowdb",
                "author": "KaiAusBerlin",
                "score": 19
            },
            {
                "body": "Hint: A Database is nothing other than a file 😛",
                "author": "lilith2k3",
                "score": 18
            },
            {
                "body": "What’s the threshold between tiny and “time to use sql”?",
                "author": "BatPlack",
                "score": 17
            },
            {
                "body": "Mongo uses JSON but it isn't just one JSON file.",
                "author": "username-must-be-bet",
                "score": 17
            },
            {
                "body": "But should you?\n\nNever.",
                "author": "thekwoka",
                "score": 16
            },
            {
                "body": "It's every junior JS devs first choice because it's just json or something. People abuse it like hell because it's supposedly easier to not think about schema and relations when you store something. Then as projects progress, things catch fire because of things that would've been impossible if you had used a relational database to begin with.\n\nMongo isn't bad. People just love to use a hammer when the correct tool would be a screwdriver.\n\nAlso, some years ago it was slapped on every project by foolish architects blindened by some webscale memes.",
                "author": "fletku_mato",
                "score": 16
            },
            {
                "body": "Even 9k might be too much for json imo",
                "author": "Sa404",
                "score": 15
            },
            {
                "body": "To go against the grain here: it depends. If you are just reading and it’s not a lot of data, then sure a json file is just fine. OTO, if you want to write to it or you start dealing with hundreds of records, a db will be simpler.",
                "author": "SirScruggsalot",
                "score": 14
            },
            {
                "body": "As long as the JSON file is not publicly accessible (i.e. through a web URL) then it’s fine to store things like hashed passwords.\n\nSame for SQLite too - as it’s a single file, that file must not be publicly accessible.\n\n(Stuff like bank accounts should ideally never be stored, use a payment processor instead. If you do need to store them, make sure to use proper encryption.)",
                "author": "Disgruntled__Goat",
                "score": 12
            },
            {
                "body": "It's called MS Access...",
                "author": "Noch_ein_Kamel",
                "score": 12
            },
            {
                "body": "Oh this is a deployed service where you want to persist multiple users' data?\n\nAbsolutely use a database. There are so many things the database does for you, that you likely don't even realize are important.\n\nGoogle ACID transactions and you'll thank me (here's a [good article](https://www.databricks.com/glossary/acid-transactions)). TLDR: use a database.",
                "author": "CampaignTools",
                "score": 12
            },
            {
                "body": "Yes, these are examples of observable problems that switching to SQL might fix. If there is enough data, updated often enough, that it becomes noticeably slow, switch to SQL. If concurrent access becomes a problem, switch to SQL. If data integrity is important, switch to SQL. Storing data in a JSON file is far from optimal, but for a large number of small-scale applications, it's probably good enough to get the app off the ground, or they might be abandoned before any of these problems become serious concerns. If SQL is a barrier to getting started, start with a JSON file and fix it later.",
                "author": "raserei0408",
                "score": 10
            },
            {
                "body": "If you're storing things like settings, and you don't need them to be private, then sure fire away it's fine to use json.\n\nIf you're storing *records*, i.e things that are going to expand over the life time of the app, like oh, I want to use json to store items I add or remove in my todo app, don't use json, use a database. Just go for the lightest weight db you can, SQLite, and use that.",
                "author": "Alundra828",
                "score": 9
            },
            {
                "body": "This is the way",
                "author": "lowtoker",
                "score": 9
            },
            {
                "body": "cloudflare d1 has a pretty generous free tier: https://developers.cloudflare.com/d1/platform/pricing/",
                "author": "ssnepenthe",
                "score": 9
            },
            {
                "body": "Oh yeah, Mongo is web scale and works blazingly fast!",
                "author": "Fine-Train8342",
                "score": 9
            },
            {
                "body": "> It doesn't take more work, and it works better.\n\nWhile I agree sqlite would be an excellent choice over JSON, it really does take more work and depending on OP's skill level might be more cumbersome to work with.\n\nLike in Python, it can be as simple as this:\n\n    import json\n    \n    file = open('test.json', 'r')\n    data = json.load(file)\n    file.close()\n    \n    print(data[\"name\"])\n\nSuper easy to remember and do off the top of your head.\n\n&nbsp;\n\nNot to mention you have to put more thought into the creation of tables and relationships.",
                "author": "_Xertz_",
                "score": 9
            },
            {
                "body": "Do you want your app to be able to change the data? That would be a problem because transactions don’t exist and you have to handle file locks by yourself",
                "author": "Svensemann",
                "score": 8
            },
            {
                "body": "I started teaching myself relational databases at the age of around 14 with something called Paradox, for DOS. For the next twenty years or something, almost every project where I could use a relational database, I did.\n\n\nThen NoSQL databases became a big thing and many people started using all kinds of key value stores or whatever that looked like JSON or even more basic. And for most projects, it actually didn't matter if it was keys or JSON or what. But when it was popular, I tried the NoSQL options out quite a bit. So that was like a second paradigm for me.\n\n\nAfter NoSQL stopped being popular, I realized I could do a lot of projects just with JSON. So I switched to a third paradigm of JSON for many things a few years ago. Many of my projects just don't need a relational database at all, or don't need it until there are 1000 customers.\n\n\nI strongly believe at this point that whether you use a graph database, JSON, relational database, key-value store, NoSQL, or whatever you want, you are going to be fine for most projects. You will just have slightly different problems to solve. Most projects do not have a ton of data or extreme complexity and you can approach them successfully with any type of DB or file structure you want.\n\n\nIf you just want other programmers to accept it without arguing, Postgres or sqlite seem like the best bets these days though. ",
                "author": "ithkuil",
                "score": 8
            },
            {
                "body": "What about for a site that uses Cloudflare Pages or the like (free tiers). Are there free database options there?",
                "author": "crazybabyeater",
                "score": 8
            },
            {
                "body": "you can slam-dunk mongodb atlas on pretty much anything with an internet connection.",
                "author": "kekobang",
                "score": 8
            },
            {
                "body": "Tangentially, filesystems were the document DBs of their day. You were meant to store your data hierarchically in the filesystem. Then new layers got built on top of them.",
                "author": "creamyhorror",
                "score": 8
            },
            {
                "body": "Filesystems still are databases! :D",
                "author": "Supermathie",
                "score": 8
            },
            {
                "body": "SQLite’s WAL mode allows for safe concurrent writes by enabling readers and writers to operate without blocking each other.",
                "author": "__north__",
                "score": 8
            },
            {
                "body": "You are probably going to see a difference in terms of writes before you see a difference of reads. If you are updating the json file every time you are likely to have to rewrite everything each write. That still won't take that long as SSD can write hundreds of MB a second.\n\nIn the end it depends on how big is your data and how many writes per second you need.",
                "author": "username-must-be-bet",
                "score": 7
            },
            {
                "body": "That's why I said \"also\". Json is great",
                "author": "Able-Bar-5446",
                "score": 7
            },
            {
                "body": "I mean SQLite is just two more lines:\n```python\nimport sqlite3\n\nconn = sqlite3.connect(‘your_database.db’)\ncursor = conn.cursor()\n\ncursor.execute(“SELECT * FROM your_table_name”)\nrows = cursor.fetchall()\n\nconn.close()\n```\n\nSo I don’t think we should go by code length here.\n\nIf it’s really just about fetching data from multiple frontends, with at most minimal modification, then there’s no reason to use an ACID database, just a raw json (maybe tracked with git?) should be fine.\n\nAlso, json is human readable.\n\nJust feels like an apples to oranges question, why is OP even using a database if a static file would even work?",
                "author": "Snoo35017",
                "score": 7
            },
            {
                "body": "Multiple reasons.\n\nThe biggest being \"99% of the time, your data in your database is structured and relational\".\n\nWhich makes nosql a totally terrible choice.\n\nMongo is then one of the worst implementations of nosql on top of that.\n\nBut just being bad isn't as annoying as tons of new people learning it thinking it's good, and using it everywhere it doesn't belong.\n\nIt doesn't provide any actual benefits over any other db for any of the kinds of things people seem to use it for.",
                "author": "thekwoka",
                "score": 7
            },
            {
                "body": "why not using sqlite?",
                "author": "alexrada",
                "score": 6
            },
            {
                "body": "So use an excel spreadsheet? Jj",
                "author": null,
                "score": 6
            },
            {
                "body": "Postgres has native JSON support.",
                "author": "Fidodo",
                "score": 6
            },
            {
                "body": "If you are storing any sort of dynamic user date... then you absoluetly will need a db (at least something like SQLlite). \n\nYou don't want to deal with the complexity of multiple users writing to the same file at onc.e",
                "author": "versaceblues",
                "score": 6
            },
            {
                "body": "You probably should before you use a JSON file lolol",
                "author": "GuyManDude2146",
                "score": 6
            },
            {
                "body": "Sounds like you know a single language. Wanna finish your editorial?",
                "author": null,
                "score": 6
            },
            {
                "body": "To add to this, you end up rolling your own bad version of all the things a proper relational DB does for you, in the application layer, as the application grows. You will not do it as well as relational systems have because there has been literally over 50 years of brainpower put into improving the relational model.\n\nPeople select Mongo because it seems easy to get up and running, but they do so because they do not have the experience to know you are going to end up in a hell of your own creation.\n\nI worked at an org that had the third largest install of Mongo in North America, it was an absolute nightmare and cost the company a fortune to keep it going, software was brittle because of all the home grown solutions that where implemented that are just baked into a relational DB. They ended up spending 10's of millions of dollars to port it all to postgres.\n\nRelational Databases are really good at answering questions you don't even know you are going to ask yet. Document oriented DB's can be good for purely transactional systems that do not have depth or interconnected data and the scope of what the application will do will not increase (you will not ask new questions of the data). As soon as it does, they become a tar pit. As for Mongo there are far better choices for NoSQL DB's but honestly if a person does not know why they should use a relational DB over a NoSQL and the few cases that a NoSQL DB can be good for, they should just go the safe route and use a relation DB.",
                "author": "FRIKI-DIKI-TIKI",
                "score": 6
            },
            {
                "body": "It’s better for a small project if rapid development and simplicity is a goal (which is totally legit). Imho, the only reason to use a database in a very simple project would be to learn the ropes better and create patterns & workflows to use on bigger projects.\n\nAlso remember a database usually has an API coupled with it and any language can easily interact with a web API. Is it just local static data you want? Or will it need to be updated regularly?\n\nAnyway. Another option is to just use JSON now and upgrade it later if need be. Always more chances to learn different things. So long as you’re building something that’s the main thing.",
                "author": "Half-Shark",
                "score": 5
            },
            {
                "body": "Firebase is basically json right?",
                "author": "dillonlara115",
                "score": 5
            },
            {
                "body": "Realise that filesystem will re-write the complete .json file on change. A database will use transaction / caching methods. \n\nIf your .json becomes somewhat large, you might risk file corruption. ",
                "author": "Wobbliers",
                "score": 5
            },
            {
                "body": "It's okay for a set of data that isn't going to expand much other than just replacing existing values. I wouldn't use it as a database that you keep adding to, though. At a certain point it will become very slow to process any request if you do.",
                "author": "IONaut",
                "score": 5
            },
            {
                "body": "Use a sqlite database. You can thank me later.",
                "author": null,
                "score": 5
            },
            {
                "body": "everyone recommending sqlite is kind of mind blowing. It's not a _bad_ choice, but I can only imagine that they've never heard of MongoDB/NoSQL which fits your situation (all JSON all the time) much better.",
                "author": "Yoduh99",
                "score": 5
            },
            {
                "body": "Isn't MongoDB storing in JSON format? I thought it was fast and scalable",
                "author": "Shacrow",
                "score": 5
            },
            {
                "body": "Yeah it's crazy. I had to scroll past so much stuff before I could see someone talk about MongoDB.\n\nIt's super quick and easy to set up and learn.",
                "author": "Shacrow",
                "score": 5
            },
            {
                "body": "Sliced bread",
                "author": "tnnrk",
                "score": 5
            },
            {
                "body": "In our case each partition is a separate geography and generating the source data for each is a distinct processing event, so it is pretty natural break.",
                "author": "dsartori",
                "score": 5
            },
            {
                "body": "Serious question... why does Mongo get a bad rap?",
                "author": "AmbivalentFanatic",
                "score": 5
            },
            {
                "body": "these are the same people that are paying $100,000 AWS bills",
                "author": "freecodeio",
                "score": 5
            },
            {
                "body": "So how much data is that and what kind of data are you talking about? Is it changing, how is it accessed?",
                "author": "NeuralFantasy",
                "score": 4
            },
            {
                "body": "I’ve used this approach in production on sites with a national audience in my country. We did it because the data is stable for long periods and easily partitioned into small, individual static subsites. Eliminates a lot of maintenance and performance headaches. If it will work in your use case for the life of the application, why not?",
                "author": "dsartori",
                "score": 4
            },
            {
                "body": "I, for one, would like to see the source code. I think the answer to your question depends a lot on your use case, and the data you want to send.",
                "author": "QuantumCrane",
                "score": 4
            },
            {
                "body": "Mongo",
                "author": "bbellmyers",
                "score": 4
            },
            {
                "body": "I think this is the right advice here -- go ahead and keep it as simple as it needs to be for now. However, I would also suggest having a little library in the middle between the JSON and the rest of your code -- your code should not talk to the JSON directly but the interpreter library. It may look silly at first, but if you do need to upgrade to a full DB, then that could help keep migration from turning into a huge thing that touches every single file in the entire project.\n\nI did something similar for a proof of concept, everything was stored in a few JSON files, and I was accessing the file contents pretty directly in my API code. That was a pain in the ass to refactor when we decided it was ready to start the project up for real, and ended up sinking like... maybe 2 months?",
                "author": "jkidd08",
                "score": 4
            },
            {
                "body": "> (assuming the users aren't dumb enough to type their passwords there)\n\nI can guarantee you this will happen more than once lol",
                "author": "syntiro",
                "score": 4
            },
            {
                "body": "Yeah of course.",
                "author": "Shacrow",
                "score": 4
            },
            {
                "body": "Sounds like you're just using Json for configs and reading them only. That's reasonable. If you're interacting with the data then no, just use a DB. Even SQLite would be fine.",
                "author": "marvinfuture",
                "score": 3
            },
            {
                "body": "Something that gets kinda difficult is concurrent updates, if you have multiple clients connected. You'll have to think about having a lock and wait until someone else finishes updating. Or if there is a crash before finishing a write, a schema change or error, etc.\n\nHonestly I'm convinced that a simple DB (like SQLite) would be simpler in almost any circumstance. But it can be a good learning experience to try to implement everything yourself, and see what all the magic and simplification is that DBs do.",
                "author": "vasarmilan",
                "score": 3
            },
            {
                "body": "They want to send the whole file to the front end. So what does the backend even do? Sounds like a static site to me? Shared data between all users?",
                "author": "IQueryVisiC",
                "score": 3
            },
            {
                "body": "dude it's LITERALLY a JSON haha idk why no one is thinking about it as well",
                "author": "welch7",
                "score": 3
            },
            {
                "body": "MongoDB is pretty neat. Was quite easy to learn too",
                "author": "Shacrow",
                "score": 3
            },
            {
                "body": "No, BSON.",
                "author": "soicat",
                "score": 3
            },
            {
                "body": "What happens when you have multiple users writing simultaneously? What happens when the server dies while writing to the new file? What about while renaming?\n\nHow do you swap the names? One option is:\n\n1. Write to B.\n2. Rename A to C.\n3. Rename B to A.\n\nWhat happens in the above if you crash between step 1 and 2? What if you crash between step 2 and 3?\n\n...or you could just use an ACID compliant DB.",
                "author": "CampaignTools",
                "score": 3
            },
            {
                "body": "JSON, load at memory start, key'd to path and that should get you enough speed to work just fine.",
                "author": "rjhancock",
                "score": 3
            },
            {
                "body": "Sqlite does not allow any concurrent writes (any write locks the whole database file), so the number of concurrent users is likely the limiting factor.",
                "author": "frozenbobo",
                "score": 3
            },
            {
                "body": "No idea why you are telling me this.",
                "author": null,
                "score": 3
            },
            {
                "body": "Nah I didn't mean code length, it's just easier to look at and work with. LIke `data[\"name\"]` is so much easier to write and look at than having to deal with SQL queries.\n\nThough the human readable part of JSON is a good point. I can see that being useful if OP has only a few records.",
                "author": "_Xertz_",
                "score": 3
            },
            {
                "body": "You should check out the latest PHP. It's pretty good!",
                "author": "ryncewynd",
                "score": 3
            },
            {
                "body": "The problem is that it is possible that your data gets corrupted if there is something unexpected/the server crashes while writing. Imo this can cause you more problems than not using SQL will save you time. But if you're only reading and not writing it should be fine.",
                "author": "not_sane",
                "score": 2
            },
            {
                "body": "JSON is for passing data, not storing it, generally",
                "author": null,
                "score": 2
            },
            {
                "body": "Most databases can export your query as json now. So you get the best of both worlds.",
                "author": "teamswiftie",
                "score": 2
            },
            {
                "body": "Depends, is it read/write or just read? What's the size?\n\nIf a few hundred KB, in memory storage should be fine but may not be performant. If over that, a DB would be better.",
                "author": "rjhancock",
                "score": 2
            },
            {
                "body": "If you haven't touched a database yet, I highly, highly, highly recommend doing so just for the experience alone. SQLite is perfect for this.\n\nWill JSON work? Yes. Is it maintainable? Not really.",
                "author": "ShroomSensei",
                "score": 2
            },
            {
                "body": "It’s not ideal. For a very very small project, it might not be a huge deal. I know I used JSON for storage on a couple small university projects back in the day. What you will run into though is concurrency issues (not really a big deal if it’s readonly) if you’re not careful. I saw it in my projects under a small amount of load and had to add locks to the file etc. \n\nAlso, what happens if the JSON file gets thrown in a corrupted state because of an error? All of your applications that use this file break as a result.  \n\nI would recommend that you use SQLite. It’s small, lightweight and you can use it almost everywhere.",
                "author": "jambalaya004",
                "score": 2
            },
            {
                "body": "At [Healthline.com](http://Healthline.com) (and a lot of other sites we manage in the same CMS) we publish articles to .json files in an s3 bucket.  Then our front end reads from those files.  Our pages are heavily cached but still, yea, we kind of do this at some of the biggest websites on the internet.\n\nOur articles are in a database and that's how editorial works on them in the CMS.  But I got live time we just shoot the final, massaged data into a jsonfile.",
                "author": "DrLeoMarvin",
                "score": 2
            },
            {
                "body": "Just because you have a hammer (know and have parsed JSON before) doesn’t mean everything is a nail. Use the right tool for the job.",
                "author": "Key_Board5000",
                "score": 2
            },
            {
                "body": "SQL if you're storing session/user data. Or even consider Reddis which is something in between. Managing that in a file manually is more of a PITA than you'd think.\n\nIf you're not using it to store user data, but for a config file, then it depends on how you want to manage it. If you use SQL then you're going to have to create a way to interface with it. If you do JSON then anyone with a text editor can make adjustments. There's also the advantage of Git keeping track of changes for you.\n\nI find that using a JSON file like a config file is pretty standard. \n\ne.g. this is perfectly fine.\n\n    import PageData from './pagedata.js';\n    \n    let output = `<h1>${PageData.header}</h1>`;\n\nAlso, if it's a really small project, not having to setup a SQL server per environment (or share an .env file) is sort of nice.",
                "author": "montrayjak",
                "score": 2
            },
            {
                "body": "It’s slow when and not as flexible as sql database",
                "author": "Inevitable-Mirror-65",
                "score": 2
            },
            {
                "body": "I tried this on a person project recently - if the file gets too big then you essentially won’t be able to open it at all.",
                "author": "caleb_dre",
                "score": 2
            },
            {
                "body": "It depends what you are doing. If its just storing static data to render a webpage... then a normalized JSON config in version control, can be even better than a DB> \n\nIf you are storing user data with real time update... then just go with the DB.",
                "author": "versaceblues",
                "score": 2
            },
            {
                "body": "SQLite would be the best option for a small program. It is portable, works in all major languages and on all platforms.\n  \n Or you can use a NoSQL database with json, but for small applications, relational databases are usually the better choice. NoSQL was invented for high throughput and scalability.\n  \nYou can use an ORM as well, this allows you to set up your database code-first and threat database entries as objects instead of SQL calls.",
                "author": "RamBamTyfus",
                "score": 2
            },
            {
                "body": "Sqlite I would say for that scenario",
                "author": "ardicli2000",
                "score": 2
            },
            {
                "body": "People have built text-file-based wiki systems. If you need it to scale, it's obviously stupid to do it with JSON files. But if it's a tiny project with just a few daily users, no write concurrency requirements and just a few hundred kiB of data, files work just fine.\n\nThat said, it might be easier to just use a database regardless. An actual database gives you indexes and SQL queries. Both pretty useful stuff to have.",
                "author": "Oktokolo",
                "score": 2
            },
            {
                "body": "> \"I wish I hadn't gone with an actual database\" - no programmer ever.\n\nJSON has its uses. Config files. Template data.\n\n*As a database*? Nah. You're going to run into regrets.\n\nUnless you have a reason to want the admin to be able to edit data without anything more than notepad, then it's not an ideal answer.\n\nIf, however, your answer is \"just cuz I can\" then sure, do whatever you want. A shit load of things programmers have done is \"just cuz\" like running Doom on a pregnancy test screen.\n\nThere's no *good* reason to do it. There are several *bad* reasons to do it. But, again, \"just cuz\" is a valid reason.\n\nPersonally, if you're new, I say fuck it and do it. Come back and revisit it again in a few months. You'll likely want to re-write it \"better\" again anyways - as we've all done - and that's when you can tweak it to SQLite or a hosted database.\n\nRemember - if you're asking someone to setup a web server and run PHP - they likely should be competent enough to run postgre or maria/mysql. A mild amount of tech intelligence is going to be required *already*.\n\n> This is my first time using PHP, so don't expect good code.\n\nMy dude - let me tell you. If you don't look back after a year and you don't think your card is dog shit - you haven't learned much in the last year. Learning is a good thing. We've all been there. We've all done the \"who wrote this shit? Oh.. fuck.. that's *me*... damn\".\n\nPersonal projects are *very good* for things like this because *you* know what *you* want and you have a good feel of it. Re-write it later as needed. That's how you get better.\n\n> There is no sensitive information, and there aren't plans to store it.\n\nIf you ever want this project to be used by someone else: Expect them to be morons and to store personal information. Expect users to be idiots. Expect them to say \"well I didn't know!\"\n\n> But I don't know if it brings any kind of vulnerability.\n\nI mean no more than SQLite would offer. It's not a great idea however if it's just a learning project - fuck it. Play around with it. Come back later and re-think on your ideas.\n\nEven better - lock it down (relatively) and try to break it yourself. Assume you're some bitter user. Fuck yourself.\n\nThen try to lock it down from said actions. This is how one learns.",
                "author": "Hopeful-Sir-2018",
                "score": 2
            },
            {
                "body": "The real reason using JSON is a bad idea versus an actual database has to do with [Atomicity](https://en.wikipedia.org/wiki/Atomicity_\\(database_systems\\))",
                "author": "cshaiku",
                "score": 2
            },
            {
                "body": "\"I don't know how to setup a database and i can't be bothered\" that's what you wrote",
                "author": "Blender-Fan",
                "score": 2
            },
            {
                "body": "This is my point of view as well. So long as you abstract the actual usage of the data out, then it won't fundamentally change your program when you swap between json and sql.\n\nI very often prototype out web applications using json as the backend then switch to sql later when necessary and all that changes is the data repository object. Everything else just writes/reads/etc as if nothing changed.",
                "author": "DeadlockAsync",
                "score": 2
            },
            {
                "body": "I expect this answer to be higher ranked. Updating the file is a multi step process. First read the contents, update in memory, then write back to filesystem. Despite reads and writes being fast these days, there is still potential for race conditions, where parallel writes would overwrite each other. So you’d need some kind of mutex to prevent parallel access to the file.",
                "author": "nonrandomstring",
                "score": 2
            },
            {
                "body": "Around 3 KB for 10 (short) posts.",
                "author": "OptimalAnywhere6282",
                "score": 2
            },
            {
                "body": "Yeah, mine works basically the same, but with more limited resources.",
                "author": "OptimalAnywhere6282",
                "score": 2
            },
            {
                "body": "have a look at mongodb. it's pretty neat",
                "author": "Shacrow",
                "score": 2
            },
            {
                "body": "I think once you get to thinking about multiple threads reading and writing that file, acquiring and freeing locks and so on, you suddenly understand why people advice against using just a json file. It's actually a lot more work to handle all that by yourself, than use a database engine designed to do exactly that.",
                "author": "fletku_mato",
                "score": 2
            },
            {
                "body": "\"NoSQL\" tends to describe actual database tools, not raw JSON files sitting around in the filesystem.\n\nThis would be \"not SQL\", but it wouldn't be \"NoSQL\".",
                "author": "ceejayoz",
                "score": 2
            },
            {
                "body": "JSON has structure .",
                "author": "IQueryVisiC",
                "score": 2
            },
            {
                "body": "If the file is small enough to fit in memory (after parsing), JSON will be faster.",
                "author": "IQueryVisiC",
                "score": 2
            },
            {
                "body": "I raise you a ram drive where the file is merely ram",
                "author": "fasti-au",
                "score": 2
            },
            {
                "body": "Do seniors say to not use a database and just store it in a json file lmao",
                "author": "Slimxshadyx",
                "score": 2
            },
            {
                "body": "I used mongodb for my discord bot too. Was easy",
                "author": "Shacrow",
                "score": 2
            },
            {
                "body": "Yup that's a great idea. Creating various \"middle men\" layers of my apps have saved much stress when it comes to refactors.\n\nI'm currently working on the front end of a rather large site but the backend developer won't be starting for a month or so. There is even a package I use that \"simulates\" an API within your local React dev server so you can easily deliver hard-code JSON (+ simulate real world slow bandwidth/latency when fetching). It all helps when it comes to finally hooking it up to whichever backend is created.\n\nYardy yar, de-coupling and all that. it's a simple concept but quite amazing how many company's I've worked for where they pile everything together into a large soup mix.",
                "author": "Half-Shark",
                "score": 2
            },
            {
                "body": "I haven't used sql in years and was starting to wonder if I'm an outlier here lol",
                "author": "Majache",
                "score": 2
            },
            {
                "body": "If you are aggregating into, use DuckDB, but as long as you have an SSD, the row count is only a couple thousand, and you don’t mind an additional 100ms, it is fine.",
                "author": "mattindustries",
                "score": 2
            },
            {
                "body": "Omfg, such a terrible product. Say what you want about excel, but I can either save that bitch as a csv, or I can pull the data with a php5 script I have kept and put it in a proper relational db.\n\nAccess was invented to allow ineffectual people to have a job by gate keeping.\n\nMicrosoft Gate Keeping. That was what Bill Gates wanted it to be called, but marketing was like “let’s call it Access.”",
                "author": null,
                "score": 2
            },
            {
                "body": "I use it for the non relational data that's attached to relational data. So far I've never really encountered a use case where at least some important part of the data isn't relational",
                "author": "Fidodo",
                "score": 2
            },
            {
                "body": "VSAN is the MongoDB of filesystems",
                "author": "Supermathie",
                "score": 2
            },
            {
                "body": "Ah, so like at my work. We did not go into the cloud. Instead each customer runs our app on premises on their own server.",
                "author": "IQueryVisiC",
                "score": 2
            },
            {
                "body": "OP doesn't mentioned config or simple content though...",
                "author": "thekwoka",
                "score": 2
            },
            {
                "body": "I am sorry, not a DB expert, but aren't there some ORM-library thing, that allow you to store your object of any language without any SQL queries, so it could be even simpler?",
                "author": "lvvy",
                "score": 2
            },
            {
                "body": "I meant that there would be no need for a concept of tables and relationships in a JSON file.\n\nMaaaaybe it might come up if OP's use-case became monstrously complicated\n\nBut something as simple as storing \"rows\" of names+emails+nicknames or something wouldn't require anything like that. Just a simple array of objects.\n\nOf course I still suggest using the SQLite over the JSON but not because of the reason you mentioned. No need for tables/relationships in a non-overly complicated JSON file.",
                "author": "_Xertz_",
                "score": 2
            },
            {
                "body": "Excel Spreadsheet. JUST JOKING JJ, damn man.\n\nI don't use windows. Sqllite/PostgreSQL/MariaDB/MongoDB. And we are in the webdev subreddit. I'm pretty damn sure everyone else knew it was a joke.\n\nedit: Proudly created with Notepad",
                "author": null,
                "score": 2
            },
            {
                "body": "I thought you were going to say \"materialised views\" :D",
                "author": "Supermathie",
                "score": 2
            },
            {
                "body": "I could also run a script to convert the Excel document to a csv in task scheduler, that then uploads it to the server, which will run a cron job and parse it into the database.\nDamn man, it was just a joke. I can also make a flat head screwdriver out of a butter knife.\n\nEdit: To be clear, I was mocking management for using Excel spreadsheets as \"databases\" and joking that I keep scripts in my library for this exact eventuality. I was being absurdist, whilst I responded to the answer I upvoted.",
                "author": null,
                "score": 2
            },
            {
                "body": "Just use SQLite if you want portability and simplicity.",
                "author": "yasamoka",
                "score": 1
            },
            {
                "body": "What’s the nature of the data?  Is it something you need to do CRUD operations on?  How big is it? Is it just static configuration?  There’s no right answer to this without more details.",
                "author": "Darmok-Jilad-Ocean",
                "score": 1
            },
            {
                "body": "If you don't need a database for database things (relational data with a query engine) it can be quite fine.\n\nI have a pet project that inhales several megabytes of third-party data from a public CDN (it's pretty much an exercise in backend-less) and it's still surprisingly snappy (I cache heavily with web worker after initial load).",
                "author": "Rarst",
                "score": 1
            },
            {
                "body": "If you're only wanting to store a couple of megabytes for one or a couple of users at most then it's no problem at all.",
                "author": "dadibom",
                "score": 1
            },
            {
                "body": "If it's a tiny amount of data for a pet project, it might be okay\n\nBut you can also setup a postgres db. If you know what you're doing , I can be done in a few minutes, and it's going to be so much better to do with the data whatever you want",
                "author": "saito200",
                "score": 1
            },
            {
                "body": "Don't do this.",
                "author": "YadaYadadSex",
                "score": 1
            },
            {
                "body": "Honestly if it's just 4 paths (did I understand that correctly?) you can use JSON. It's literally just 4 lines, they could probably even be variables in the code and call it a day, it's not like 4 lines will be considered technical debt in the future.\n\nIf you need to store a bit more data use sqlite instead",
                "author": "GodGMN",
                "score": 1
            },
            {
                "body": "pocketbase",
                "author": "Radeon546",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "If you go with a json file, try to separate your code out so that changing to a database later would be easy.",
                "author": "tb5841",
                "score": 1
            },
            {
                "body": "If you're always returning the same data, and it doesn't change often. Then there isn't any real downside.",
                "author": "TracerBulletX",
                "score": 1
            },
            {
                "body": "if you are ONLY reading, and the dataset is relatively small (say, under 100kB) and dont need to change it regularly, then its probably fine.\n\nIf you any odd those qualifications arent the case, i would reconsider",
                "author": "armahillo",
                "score": 1
            },
            {
                "body": "Sqlite or pocketbase maybe",
                "author": "Satan-Himself-",
                "score": 1
            },
            {
                "body": "I’ve done this before for small fun projects using libraries like LowDB that are meant for it. \n\nPeople here are saying it won’t scale or whatever but you said it yourself it’s a small project so none of that matters.",
                "author": "duckypotato",
                "score": 1
            },
            {
                "body": "Probably, though I've done it myself for things I know will never scale into anything more extensive/complicated... generally configuration/temporary workflow data/status stuff.",
                "author": "fakehalo",
                "score": 1
            },
            {
                "body": "I legit just spent today installing mysql for the first time, and I've already got all the CRUD methods set up for my simple table.\n\n\nIt's not that much harder.",
                "author": "Freecelebritypics",
                "score": 1
            },
            {
                "body": "There is nothing wrong with reading your data from JSON, but as soon as you need to start making updates, or have to rapidly access the data across multiple threads, you are going to start running into complications.\n\nIf it's read-only, you may be able to load your necessary data into memory on startup.\n\nIf it's read with the occasional write, I would cache the data in memory, then when you  need to write to it, have a dedicated process that receives a message from a queue or other source to update the source JSON document, then reload it into memory.\n\nBut, as others have said, as soon as you have to start coming up with creative ways to write data, or have lots of access to the document, SQLite will serve you well. It's very fast and simple to manage if your data is okay being accessed by one application at a time.\n\nIf you need to have multiple web hosts or multiple applications access that data, you need to upgrade to something like PostgreSQL that allows for multiple clients to access the data.",
                "author": "midnitewarrior",
                "score": 1
            },
            {
                "body": "It's fine for small bits of data - configurations, or things that aren't going to be changed - either by the app or by the user. Otherwise... db... I'm getting ready to start a new project and thought about doing the same thing.. but then I REALLY thought about it, and didn't like how I'd havbe to manage all the files and data that was going to come with it... so SQLite it is...",
                "author": "IAmADev_NoReallyIAm",
                "score": 1
            },
            {
                "body": "Sqlite seems the sensible approach. That said, I don't really know how to handle that with modern PaaS hosting. The idea behind PaaS hosting is that your instances local filesystem is temporary, and can be dropped at any reboot or upgrade. Plus, it isn't shared between instances. So I know only the heavy PostgreSQL + S3 approach, but there must be a way to attach a persistent simple filesystem?",
                "author": "Vindve",
                "score": 1
            },
            {
                "body": "its fine, as long as you don't mess it up lol - but still the amount of work you're putting in is not that much more for sqlite and you get so much more for free, and you can use sqlite with any programming language also, so why not then? I would say only use json if its already what you are using",
                "author": "BubblegumTitanium",
                "score": 1
            },
            {
                "body": "XML file and JS to query/pull data from it …",
                "author": "buttithurtss",
                "score": 1
            },
            {
                "body": "Scalability, Maintainability. It’s better to do work at start than having problems later",
                "author": "CrazyEbb3222",
                "score": 1
            },
            {
                "body": "Can you describe what that JSON file is?",
                "author": "eccentric-Orange",
                "score": 1
            },
            {
                "body": "Sounds like you're talking about a kind of config file, which are often written in JSON or something similar like YAML. I don't know why people are so keen on adding a whole extra layer of complexity with SQLite or the like just for that.\n\nBut I am assuming the actual data doesn't vary depending on the client? That would be weird. \n\nAnything that's writable as well as readable by the application *should* be in a database though, and I personally wouldn't trust SQLite with non-throwaway data, so if that's the case, you should probably use Postgres.",
                "author": "chrisrazor",
                "score": 1
            },
            {
                "body": "It depends what the data represents and how you want to use it.\n\nIs it a static \"config\" file? JSON is probably fine.\n\nIs it data that the user provides, and can be returned to the user? Do you need to be able to search, filter and sort? Are there references across the JSON objects / DB records?",
                "author": "mothzilla",
                "score": 1
            },
            {
                "body": "If it's a small project and the Jason can be parsed quick, I'd probably go that route. \n\n Not sure about the security issue. Depends. All the data would be e easy to get.",
                "author": "jopel",
                "score": 1
            },
            {
                "body": "IMO the simplicity of working with a file \"raw\" is deceptive. If you want to, say, edit an existing record, you'll have to open the file, read the contents, replace the record (in the memory) with the new record, and write the data into the file again. Add the bother of using mutexes if you want to do it from several threads. Heavens forbid if you want to do it from several processes.\n\nI personally vouch for SQLite, as have done many before me, if only because it actually implements all this bother for you.",
                "author": "art-solopov",
                "score": 1
            },
            {
                "body": "That's the wrong question.\n\nThe data you want to organize and the kind it should be organized should lead you to the answer. If it does the trick for you it's fine either way.",
                "author": "lilith2k3",
                "score": 1
            },
            {
                "body": "> Works with almost any programming language --> any platform\n\nExcuse me what? 99.99% of programming languages should have support for most SQL Engines, same with platforms.\n\nThere are the edge cases but that's why you decide early on the scope of your project and use a Engine that covers it all.",
                "author": "FenixR",
                "score": 1
            },
            {
                "body": "One obvious problem with any file-based storage (JSON, sqlite) is concurrent access. In single-user apps there wouldn't typically be a problem, but OP mentioned accessing this from multiple frontends so the problem of multiple users trying to read and/or write the file at the same time comes up as a concern. There are various solutions to this but it is an aspect that OP probably shouldn't overlook.",
                "author": "UntestedMethod",
                "score": 1
            },
            {
                "body": "Have you heard of Sqlite ?",
                "author": "bbro81",
                "score": 1
            },
            {
                "body": "I've done something similar to this. Here's why...\n\nI had a particular web application that I wanted to be able to search a particular manifest. It was a small manifest (think 2 MB) and it RARELY changed.\n\nWhat I did was cache the manifest on the users machine when they would request it and then the application would parse and load the data into memory and persistently store it in IndexedDB. Then I had SQL-like query access to the data, but the database was local to the users brower. They could add notes, etc to their data. It was all ephemeral to the browser cache of course. But that worked for my particular use case.\n\nThe main benefit of this system was queries literally couldn't be faster, once the IndexedDB was populated. Absolutely 0 network overhead to search and filter through the data. It was great.\n\nThe manifest was pure JSON, so it's kind of like your problem. But again, this is only useful for a system where you want the users to have their OWN database instances. The moment you need to persist state outside of just the users browser, yeah you need a proper database.",
                "author": "CampaignTools",
                "score": 1
            },
            {
                "body": "Does the data need to be secure at all? Is it just configuration? Intent matters a lot here.",
                "author": "kameelyan",
                "score": 1
            },
            {
                "body": "why you don't use a NoSQL database, like mongo? it's literally a JSON file lmao",
                "author": "welch7",
                "score": 1
            },
            {
                "body": "If you don’t know what you’re doing and you need it to scale? Postgres. Supabase is a pretty solid vendor.",
                "author": "shockjaw",
                "score": 1
            },
            {
                "body": "its fun for personal projects, but you would have real issues if more than one app was in need of it at a time.",
                "author": "mmahowald",
                "score": 1
            },
            {
                "body": "Not a great idea, would definitely suggest SQLite, same single file concept and you also get the benefits of sql without having to maintain a server.",
                "author": "kush-js",
                "score": 1
            },
            {
                "body": "Depends on the size of the doc, and how many apps need to use it at the same time. \n\nif the doc is big, then consider breaking it into many smaller docs and giving the docs an index name... Oh wait, that's a nosql db! \n\nIf multiple apps need to talk to the doc at the same time, you're going to encounter race-conditions; meaning you'll either end up overwriting good data, or only letting one app use the doc at any given time.",
                "author": "Lustrouse",
                "score": 1
            },
            {
                "body": "Not ACID compliant, and database are like that for a reason.\nJson files are not able to handle concurrent edits",
                "author": "Pierma",
                "score": 1
            },
            {
                "body": "Use sqlight if you want file based searching",
                "author": "squidwurrd",
                "score": 1
            },
            {
                "body": "It really depends, if this is read only and you don’t mind the data being public then parsing a json file on the client is probably going to be faster than doing an api call. Ie it’s not stupid if it works. If you need to update it dynamically, you do need a single source of truth and you probably need a database.",
                "author": "vozome",
                "score": 1
            },
            {
                "body": "SQLite is the way to go for the middle ground. JSON is okay for just shipping something small back and forth, but if you need to store it for any length of time, SQLite is easy to use, one single file for everything, and has the basic power needed for a simple CRUD style app.",
                "author": "Ok-Win-3937",
                "score": 1
            },
            {
                "body": "If the data is sensitive then use a database because its going to be exposed. Also if its a professional project meaning you are getting paid, then use a database. Secuirty is paramount\n\nIf its just a hobby project and data is generic then knock yourself out",
                "author": "switch01785",
                "score": 1
            },
            {
                "body": "Reading and writing to a flat file (s) probably isn't advisable if you hope to scale your app out.  Your app will go down if your file system goes down.\n\nMultiple sessions accessing a single locked resource for write and read is a very risky proposition.",
                "author": null,
                "score": 1
            },
            {
                "body": "hey, you reinvented mongo. again. \n\nand same issues. as long as its just data, great. as soon as you need any sort of relation between objects, you end up patching more on top of it, and moving towards reinventing sql.",
                "author": "chmod777",
                "score": 1
            },
            {
                "body": "Ya i would never do this. Why not just use SqlIte? Probably as simple.",
                "author": "Prog47",
                "score": 1
            },
            {
                "body": "If it's read-only it seems fine to me.  If your application is going to do any writing, though, I'd pick something lightweight like SQLite.  Otherwise very quickly you start to make your own poor man's database and reinvent the wheel.",
                "author": "TinStingray",
                "score": 1
            },
            {
                "body": "If you'll only read the JSON, keep it's size small and not write to it, you can use it without problems (as long as it's not public).  \n\nIf you actually plan to write data to it, or store larger sized data, go with SQLite if you don't want a full database.  \n\nI doubt you'll find a platform/language that doesn't have at least one implementation for SQLite",
                "author": "coyoteelabs",
                "score": 1
            },
            {
                "body": "Not good. When you start with test data or a few real world / production data seems much better than a SQL database, but eventually, as more data is stores it becomes a mess !!!\n\nBut, if you want to use a SQL database, you will need someone that does know how to organize data into those tables, like \"table normalization\" and \"relational algebra\", either learn yourself or get other person ...",
                "author": "umlcat",
                "score": 1
            },
            {
                "body": "Unless u essentially create Mongo as a client for querying this JSON from scratch, performance will be atrocious. You also will likely run into issues with inconsistent data between client sessions.",
                "author": "Jaycebordelon1",
                "score": 1
            },
            {
                "body": "Depends - is it config that's mostly static? Then yes, for the vast majority of applications it's appropriate to store config in a json. Are you going to be reading and writing to disk, then it is absolutely never a good option to not use a database.\n\n\nWhat a DB does is manage writing to disk. This means managing locks between processes, managing integrity, enabling parallel operations, etc.\n\n\nJust think about how much effort it is to read a file, update a single value, and write it back to disk. You have to drop the entire file for a second and then write to it. That's actually scary when you think about it!",
                "author": "Vitalgori",
                "score": 1
            },
            {
                "body": "Where I work, we do this minimally. We will use a JSON file in situations where we will have a mainly static configuration file, say for a set controls, that we don’t intend to have change.  We use our SQL back end for more of the heavy lifting.",
                "author": "KaosAkroma",
                "score": 1
            },
            {
                "body": "I can tell you. At small scale not much as long as the structures are all the same, it’s when you get 30k+ entries is when it makes a big difference. My business directory loads instantly from the database practically. Off json files it took literal minutes to load the directory page up. I recommend only using json locally for handling raw data if say it’s scraped data. Then commit them into the database using an api, you’ll have to build that api but it’ll work.",
                "author": "Upbeat-Cloud1714",
                "score": 1
            },
            {
                "body": "Its a pretty bad idea. It has no real advantages over a simple SQLite DB.\n\nNot even compatibility wise, since pretty much all programming languages have libraries for it. It will almost always become a headache later.",
                "author": "eztab",
                "score": 1
            },
            {
                "body": "What do you mean? Obviously it won't scale..",
                "author": "pietremalvo1",
                "score": 1
            },
            {
                "body": "SQLite and transform data to JSON in the API.",
                "author": "oscarryz",
                "score": 1
            },
            {
                "body": "I would like to see this source code",
                "author": "BankHottas",
                "score": 1
            },
            {
                "body": "It's not going to be scalable at all. What happens if it gets to several thousand records? The language will have to parse the whole thing before it can return a single record.\n\nSeveral database flavors have a JSON type now. I've used that to store meta information, but querying it really isn't optimal.",
                "author": "DesertWanderlust",
                "score": 1
            },
            {
                "body": "You have to just admit to yourself that you are not going to make a better data store (more reliable, more secure, more performant) than the teams behind MySQL, SQL Server, SQLite, etc.   \nIf it's a small amount of low risk data, then fine. Whatever.   \nBut you are talking about any degree of scale (someone said 10k rows, I'd even say less than that) or any concerns about security, etc. just use a real thing. \n\nAs always, you need to consider not just you today, but whomever is maintaining and evolving this 4, 6, 12 months from now. (which might be future you)",
                "author": "gms_fan",
                "score": 1
            },
            {
                "body": "It's a very bad idea. Been there. Not scalable. Whole lot of a mess keeping data consistent during crashes. (Note, a process can crash while writing to the file and leave it corrupt -> backups -> data loss)",
                "author": "That_Unit_3992",
                "score": 1
            },
            {
                "body": "I prefer the JSON idea. You can even cache it in the browser if it’s only a few MB. Instant , client side search, no deployment complexity. Why use things you don’t need?",
                "author": "Philluminati",
                "score": 1
            },
            {
                "body": "Very small project. So you’re saying it will always remain very small? Why the need for three different UIs? That’s the first clue that we should be thinking about future use cases and scalability. \n\nSure, JSON will work but it won’t scale well when your recordset is in the thousands and you need efficient search ability.\n\nAlso, how are records added, updated or deleted? Are many people able to perform those actions concurrently? What happens if two or more people are interested in updating the same record?",
                "author": "badboysdriveaudi",
                "score": 1
            },
            {
                "body": "a lot of json haters in here. json flat files can take you far, especially if read/write is rare, there's only one process touching the files, and especially if you want the files to be human readable / editable in a text editor. post the source though and we can decide",
                "author": "ufffd",
                "score": 1
            },
            {
                "body": "I’m gonna get hate for this but if it’s hardly ever going to get updated. You might as well put it up there as a JSON file instead of making a whole database for it",
                "author": "Sleepy_panther77",
                "score": 1
            },
            {
                "body": "I'd say it is fine, it all really just depends on how much data & how often you'll be reading from this file or if you'll be writing to it.\n\nIf it's a couple of hundred kb that you're reading once or twice then i would say you're ok.\n\nNow if its a couple of mb that you're reading often and or writing to, then the added complications will make other options more feasible, like sqlite",
                "author": "desmone1",
                "score": 1
            },
            {
                "body": "It is definitely not as stable as SQL that's for sure and SQLite is pretty easy to implement with sqlalchemy",
                "author": "Typical-Ad-2138",
                "score": 1
            },
            {
                "body": "How will you treat json file corruption? E.g app, pod restarts unexpectantly only have the file is written, your json file is now invalid, how do you recover from that?",
                "author": "narcisd",
                "score": 1
            },
            {
                "body": "Doesnot harm much for small barely read-write needing websites. Though this method is not scalable and you may need to write sql or use ORM later if you wanna scale it..",
                "author": "WeedLover_1",
                "score": 1
            },
            {
                "body": "Most here are offering other db alternatives, but fail to catch the core issue: OP doesn't know how to setup and connect to the DB and is looking to skip that learning opportunity (obligation?). \n\nGotta overcome that learning deficit first before looking at everyone's alternate suggestions.\n\nIMO, just spend the extra week and do the tutorial for hooking up php to MySQL and SQL DB, table generation. Your project will be more impressive and you'll feel better about it.",
                "author": "PublicStalls",
                "score": 1
            },
            {
                "body": "S q l i t e",
                "author": "ImStifler",
                "score": 1
            },
            {
                "body": "If you do go the JSON route, back when I was newer to web development, 25 years ago or so, I knew nothing about databases.  I was coding in Perl and stored all my data in tab-delimited text files.  One of the things I made was a message board that also kept track of views, and every time someone viewed a message, it would increment the view count, which involved reading the text file into perl, parsing it, updating the view count, and writing it back to disk.  At the time, I wasn't too aware of file locking etc, and I ended up with lots of corrupt files as they were trying to be read from as they were being written to etc.  I used text files (later XML) for my data for more than a decade, and dealing with concurrency issues was always a pain.  I still like having my data stored in local files, but I use SQLite, and it's so much better not having those concurrency issues any more.",
                "author": "dangoodspeed",
                "score": 1
            },
            {
                "body": "I would say it depends on the amount of data you need to store and maintain. If the json file becomes larger than 100mb i would look for a micro database instead like SQLite or SQL Server Compact.",
                "author": "wahgwa",
                "score": 1
            },
            {
                "body": "You could use SQLlite which is a local file, or if you really like JSON, perhaps a document database (NoSQL) would better suit your needs?",
                "author": "Daka64",
                "score": 1
            },
            {
                "body": "Are you trying to only read, or write to it too?\n\nIf it is just read, then absolutely no problem storing your small data in a .json file or frankly even a bunch of variables.\n\nIf you're trying to write, doesn't sound like a good idea, here's why: first, many cloud hosts won't give you access to the file system so you can't. Even if you can, you'll probably be writing to some build folder in an execution environment, and your risk of losing the data is high. You'll need to start looking into ways to backup the data, at which point just using a database becomes much easier.",
                "author": "projectklub",
                "score": 1
            },
            {
                "body": "And this is why Ruby on Rails exists. \n\nOne scaffold command and you'd have the post system functionality of your app done, and the data would already be in a real database.",
                "author": "BruceBrave",
                "score": 1
            },
            {
                "body": "sqlite is the sweet spot for this.",
                "author": "longshot",
                "score": 1
            },
            {
                "body": "I assume by \"Json\" you mean \"a flat file containing serialized Json objects\"? By itself Json is just an interchange format while SQL is a program designed to allow flexible and efficient storage and retrieval of data. They are sort of incomparable ",
                "author": null,
                "score": 1
            },
            {
                "body": "It's less bad than other people might say, but more bad than tou might think",
                "author": "Everlier",
                "score": 1
            },
            {
                "body": "Have you heard of mongo ?\n  \nDon't use json files, I once had to maintain a project that was doing this; absolute head ache. It started out small but then it got bigger, then the guy who wrote the program left. \n  \nAlso he was making backups to google drive.. I didn't even know that was possible, but seriously that all sounded harder than setting up mongo DB",
                "author": "No_Chill_Sunday",
                "score": 1
            },
            {
                "body": "It isn't immediately apparent in the beginning, but databases (not necessarily SQL) do concurrent access scheduling, data organization optimization strategy, automatic index construction, transactions, access control, caching, and many more---apart from simply storing data.\n\nCommonly, those are eventually needed in a typically structured project.",
                "author": "stdmemswap",
                "score": 1
            },
            {
                "body": "books possessive cows grandiose elastic quiet work rainstorm steer instinctive\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": "Aranthos-Faroth",
                "score": 1
            },
            {
                "body": "You mentioned a number of different clients, what happens when more than one client needs to write to the JSON file at the same time?",
                "author": "greensodacan",
                "score": 1
            },
            {
                "body": "It’s fine you can also store json in a database",
                "author": "ashadeofblue",
                "score": 1
            },
            {
                "body": "We use a JSON field for field that won't be searched, like settings, or custom fields. \n\nUsing too many SQL in a table makes the table very inefficient. I've seen one company that has 200 fields and more in each table, with 95% of them empty.\n\nSearching JSON is inefficient, but so is searching non-indexed fields.",
                "author": "bibby_siggy_doo",
                "score": 1
            },
            {
                "body": "well... if it's a trivial structure that will not grow, is performant, and seldom changing it doesn't belong in a database, since all storing it in a database is going to do is give your app a json representation once it's been queried.\n\nBut, this is an odd question.....\n\n  \nUsually what you're describing in a situation like this isn't actually data. It's like configuration information or static content.",
                "author": "goonwild18",
                "score": 1
            },
            {
                "body": "If multiple users start using the website and writing to the file at the same time you’ll get locking issues and at some point you’ll have to switch to DB",
                "author": "alexlaverty",
                "score": 1
            },
            {
                "body": "JSON is like a briefcase. You use it to transport data.\n\nWhat you need is a filing cabinet, a place to store data.",
                "author": "tacticalpotatopeeler",
                "score": 1
            },
            {
                "body": "Hahaha -- yeah, no.\n\nIf you want to use a file-based DB, just use SQLite. You can think of it as doing all the file management, security, parsing, querying, etc for you.\n\nMaking something like this is fun for practice and learning, but in production, you're just recreating the wheel. And there's no way you're going to come up with something better than someone else who has spent 20+ years on their solution.\n\nWhen you want to graduate to the next level after SQLite, MySQL.",
                "author": "vinnymcapplesauce",
                "score": 1
            },
            {
                "body": "What happens when 2 or more people try making a post at the same time? Best case, you will lose 1 post. Worst case, you lose your entire storage.\n\nTake the time to learn SQL. It's so much better.",
                "author": "Lance_lake",
                "score": 1
            },
            {
                "body": "It’s a bad idea, just use SQL. All server side programming languages can work with SQL. You will run into much fewer problems down the road if you use SQL. Most modern SQL RDBMS offer JSON column types if you are insistent about using bad practices.",
                "author": "SirEiniger",
                "score": 1
            },
            {
                "body": "Why don't you just put the non index JSON data in an sql database? Lots of databases support JSON natively",
                "author": "Fidodo",
                "score": 1
            },
            {
                "body": "i would use sqlite",
                "author": "saintpumpkin",
                "score": 1
            },
            {
                "body": "There’s a place for it. If you’re not writing to it then outs ideal",
                "author": "SoilAI",
                "score": 1
            },
            {
                "body": "redis",
                "author": "Diligent-Jicama-7952",
                "score": 1
            },
            {
                "body": "If it will be easy for you to maintain that JSON, go for it",
                "author": "goranlu",
                "score": 1
            },
            {
                "body": "All comes down to size and complexity of data capture.  Big data SQL, quick data capture JSON",
                "author": "Federal_Lawyer_3486",
                "score": 1
            },
            {
                "body": "You can always dump the JSON files into data lake storage and pull them into an RDBMS using Spark, Databricks, or Snowflake quite easily, JSON is not as difficult to get into other formats as it used to be.",
                "author": "thetotalslacker",
                "score": 1
            },
            {
                "body": "If you store each entry on an individual json file you dodge some of the issues. But again it will be a pain to deal with locks if two people are updating a record at the same time. Go with sqlite.",
                "author": "beatwiz",
                "score": 1
            },
            {
                "body": "https://www.npmjs.com/package/node-json-db\n\nEdit: or use this for PHP: https://github.com/donjajo/php-jsondb",
                "author": "thermobear",
                "score": 1
            },
            {
                "body": "You might look at SQLite",
                "author": "easyEggplant",
                "score": 1
            },
            {
                "body": "If it doesn’t work you could always use SQLite",
                "author": "snuggy4life",
                "score": 1
            },
            {
                "body": "You want to see a really different way of doing things, checkout Tiddlywiki. Everything in a single HTML file, with the data stored in divs, powered by javascript and css. \n\nAbout 10yrs ago I got one up to around 15,000 records and it was still working well.",
                "author": "TJATAW",
                "score": 1
            },
            {
                "body": "Depends on your application. I have a use-case for this. The database is small. Each file is a record. Each record maps to a runtime data class that is immutable. All access is client side. And the flat file database is source controlled in git. That combination of factors meets much of the requirements, but it’s a very particular case.",
                "author": null,
                "score": 1
            },
            {
                "body": "Why not using sqlite?",
                "author": "savornicesei",
                "score": 1
            },
            {
                "body": "That’s pretty much what a nosql database is.  it is not useless, but it only makes sense in very specific situations.",
                "author": "AaronDNewman",
                "score": 1
            },
            {
                "body": "Many issues with your cost, your accepting RAW post input into your json database.\n\nYou Read the whole database into memory each time the page is loaded.\n\n```\n$data = json_decode(file_get_contents($jsonFile), true);\n```\n\nYour ID generator will produce duplicates.\n\n\nIt's a good learning experiance, however after you have done playing file a file store database look into sqlite, mysql or one of the many other databases that have solved these issues.\n\nyou also need to deal with the raw inputs.",
                "author": "ndreamer",
                "score": 1
            },
            {
                "body": "Sqlite is what you want.  JSON has a fine but SQLite is basically that with sql calls.",
                "author": "fasti-au",
                "score": 1
            },
            {
                "body": "I'm seeing allot of people saying to use tools, and others saying it depends but I haven't seen really anyone give a simple explanation on why one over the other (I did see one about locking and transactions but I think without knowing OPs level of experience that might go over their head).\n\nSo, can you use a JSON file instead of a db, the answer is yes, should you, maybe.\n\n*Disclaimer* on mobile so didn't look at code\n\nIf you are letting people post their own blogs via your app, then I would say no, don't use JSON. The reason comes down to race conditions, but what does that mean? For example, if 2 people post a blog at the same time, they both pull the same file, and save a new version of the file with their post, but since they pulled the file at the same time, their new file won't have each other's post, meaning someone is getting their post overwritten. Most DBs can handle this in a few ways, and you could too in your code, though unless you want to learn that, use a db.\n\nIf you aren't letting people update via the app, then you need to ask how many people will use your app, as the file grows, generally you'll find stuff starts to slow since normally you'll need to read the file from disk into memory, and THEN query for the results. If you don't expect GB level files (probably even hundreds of megs is too much), then JSON is probably fine, otherwise do the db. \n\nA final suggestion that I've seen, go the middle ground, sqlite, it punches above its weight and gives you much better performance",
                "author": "Drakeskywing",
                "score": 1
            },
            {
                "body": "Why not use sqllite?",
                "author": "itemluminouswadison",
                "score": 1
            },
            {
                "body": "Try sqlite. It's made exactly for this use case.",
                "author": "Wooden-Pen8606",
                "score": 1
            },
            {
                "body": "You can still make use of something like Elasticsearch on your JSON which makes use of distributed clusters to perform search. It is quite useful if your data is text heavy. There's integration with other software within its stack like Kibana which makes dashboarding for monitoring easy and scalable.",
                "author": "Pvt_Twinkietoes",
                "score": 1
            },
            {
                "body": "It would genuinely be simpler to use SQLITE \n\n1. sql lite is just a file\n2. You get a sql driver that allows you efficiently update and query this file\n\nTherefore you get all the benefits of a simple JSON file, plus you don’t have to write any code for updating or reading from the file , plus one day if you do need to scale up you don’t have to rewrite much code in order to use Postgres \n\nBut feel free to start with the JSON file if you like, but it sounds like you are shying away from a database because it’s unfamiliar to you",
                "author": "Turd_King",
                "score": 1
            },
            {
                "body": "Ages ago, a friend build a small website in php with a news database using ONE TEXT FILE with delimiters and tags for metadata.\n\nA Json object is as good as a in memory key-value store if you only have one node or even in a multi node scenario where data is small enough to be retrieved in angle digit ms",
                "author": "General-Jaguar-8164",
                "score": 1
            },
            {
                "body": "I've seen your code, and here are some comments on my part:\n\n- This is a small project that you've most likely built to practice, so it is alright.\n- You may run into problems if you wish to deal with authentication, other database entities and wish to relate them\n- If your forum has threads, and each post belongs to a thread, you will have to search and join it manually, while a simple SQLite will handle it more easily.\n- Race conditions like users writing to the JSON file simultaneously would be handled by the database, in your case, you risk losing a post or failing to write.\n- More complex queries will become harder and harder to to and optimize, as you would have to do it all by hand.\n- The more entities and features you have, the more complex it will be to maintain the database communication, things like editing posts, deleting, user authentication etc",
                "author": "nihas",
                "score": 1
            },
            {
                "body": "I used Jason for work on an ai project. At some point I was tasked to see how many records I can put in before it becomes unmanageable. I don't know the exact number, but probably it was over 100k, it didn't even want to open the file haha.",
                "author": "kamikazedude",
                "score": 1
            },
            {
                "body": "A lot of information is useless in json. For instance every bracket and “” is information that could’ve gone to storing your data. Time is lost parsing and reading through them too.",
                "author": "Username912773",
                "score": 1
            },
            {
                "body": "SQL and JSON both work in all languages with basic and lean dependencies (or none at all for some languages) and unlike JSON, SQL is searchable, you can process and send only parts of it cheaply. It’s ACID compliant and can be as hard as you make it. And whatever server you’re using in the first place can make sure the clients get JSON regardless. \n\nAlso, if ANYTHING ever changes about your data, SQL can be easily modified and if not, migrated. JSON is going to make you curse the day you decided to use it if you ever decide to make any changes.",
                "author": "Ieris19",
                "score": 1
            },
            {
                "body": "Don’t. Just use a DB, it’s not that difficult.",
                "author": "JasonBobsleigh",
                "score": 1
            },
            {
                "body": "For a tiny project, JSON can work fine if it's mostly read-only. But if users will add/edit posts regularly, go with SQLite. It's lightweight and designed for this kind of thing. Trust me, it'll save you headaches down the line",
                "author": "Adorable_Monitor_187",
                "score": 1
            },
            {
                "body": "sqlite is also just a file in storage. What is different is how data is read and written.",
                "author": "passiveobserver012",
                "score": 1
            },
            {
                "body": "If it's just a small project Scalability shouldn't be a huge issue, But what I would be most concerned about would be multiple accesses to the file at the same time -- Write Especially with File system only is a HUGE pain in the butt to make safe to any reasonable degree, And you're bound to have race conditions and bugs all over the place with Multiple application processes accessing and trying to write to a single file at the same time. Depending on your architecture and use case (Again Write is the issue, Read is no problem at all), If you could set it up for example that every User has it's own file and only the user can write something to the file one time for a single page load, and you've got no fancy independent functionality (Cron Jobs, Queue workers, etc) that would try to write to the file at the same time, and one user can't write to the file contents of another user, Then that should be safe enough to function without any issue. But if you have any situation at all where Multiple processes could write to the same file at the same time, Just use an SQL database and save yourself the headache and system issues that will inevitably screw up your application someway somehow at some point.\n\nEDIT: After reading the details, It looks like you're wanting a blog content stored with the file system. If you make a Single File per blog id and each file contains just the single json object for that blog id and it's created once and accessed read only, That should be no problem at all. If you want to use a single file with the Json Object containing all blog details (Not sure why you'd want to do that over making multiple files with the ID of the blog, Maybe ease of access / search?) Then that could be dangerous unless you can ensure you only have one update to the file at any given time say from a single admin account, and everyone else would be read only.  \n  \nAgain it should work on a small scale, But 1) Multiple Concurrent writes to the file system are DANGEROUS when directly accessing the filesystem yourself through your application, and 2) It's not scalable -- Depending on the size of your server running the application, it will slow down / crash after the file (Or number of files) gets too big (However Files with just plaintext like JSON objects can get REALLY Big before running into trouble like crashing, so I'd think performance speed would be your biggest issue after maybe a few tens of thousands of objects / files on a small server)",
                "author": "Stone_624",
                "score": 1
            },
            {
                "body": "Sounds like you want a document database? Like MongoDB..",
                "author": "fanfarius",
                "score": 1
            },
            {
                "body": "A json file is basically a flat document database, similar to MongoDB. If you don’t need transactions, rollbacks, or referential integrity, it’s the best and faster option. Don’t add complexity when it is not necessary. \n\nStart with the flat json file, upgrade to Mongo when the need arises.",
                "author": "Prize_Bass_5061",
                "score": 1
            },
            {
                "body": "It really depends on the data and the way it is being accessed. If there is any level of write/update then I’d say it’s a very bad idea. \n\nYou could always use redis/kafka/etc.",
                "author": "truNinjaChop",
                "score": 1
            },
            {
                "body": "I agree, it is sqlite the bad idea",
                "author": "thelastlogin",
                "score": 1
            },
            {
                "body": "Yes. I had the case when was considering storing very simple data in a file. However, sqlite is much more functional without any overhead. Fast and convenient also.",
                "author": "QwuikR",
                "score": 1
            },
            {
                "body": "Definitely thought about it at one point as a rushed junior, then realized there's way more optimizations and less chance of incorrectly overwriting my entire file if I just use a simple db. Not worth the headache unless i was actually building a db, in that case it wouldn't be in node.",
                "author": "Majache",
                "score": 1
            },
            {
                "body": "Not planning on storing passwords.\n\nAt most, Discord user IDs in case I use Discord for logins, to match their on-site usernames with their Discord usernames.\n\nThe most sensitive information would be the name (assuming the users aren't dumb enough to type their passwords there), which can be faked or even skipped.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "Why exactly would a NoSQL database be much better than a relational database for OP's situation?\n\n> all JSON all the time\n\nDoesn't really mean anything. As if you couldn't pretty much automatically deserialize what ever format your database returns into whatever type of object your language of choice utilizes.\n\nOP mentioned user ids and such things which point towards his data maybe being relational at least to some extent.",
                "author": "fletku_mato",
                "score": 1
            },
            {
                "body": "Parsing nested json sounds a little awful. I get that this is done for you but.. why not just use postgres?  It scales and translates easily if you have to change db platforms for some reason",
                "author": "cyclonewilliam",
                "score": 1
            },
            {
                "body": ">Also, what happens if the JSON file gets thrown in a corrupted state because of an error? All of your applications that use this file break as a result. \n\nThat's a good point. Didn't think of that.\n\nIn the worst case I could try fix it myself (if the possible problem is what I think it is), since it's just a JSON file.\n\n>What you will run into though is concurrency issues\n\nThat's also possible, but I don't think enough people would use the app for that to happen. Will consider it tho.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "Basically yes, and ~200 people gave their opinions on it (I can't read that much 😭)",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "It happened to me, that I had a website that did the same thing I'm making now, but used SQLite (I barely understood); I had deployed it on Replit, but the data published one day wasn't available the next day. Luckily for me, no one needed that data. But since then, I tried to find better solutions.\n\nCurrently I'm using a simple server, which just has PHP (and, of course, serves files). I'm rewriting the website because I got the idea that a PHP backed would be lighter than a Python backend (and that the server didn't have Python available).\n\n(Unrelated: I'm at 6% battery and I'm traveling to another city, I may not reply in at least one hour).",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "[\n    {\n        \"id\": 1,\n        \"time\": 1723073204,\n        \"title\": \"Example post\",\n        \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        \"link\": \".\\/read.php?id=1\",\n        \"image\": \"\"\n    },\n    ...\n]",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": ">What happens if it gets to several thousand records?\n\nFor the time that happens I'll have better knowledge on databases.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "You assumption was right.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "Ooh yeah, I remember when I had just started with web development (11 years old) and believed that someone manually added posts containing text to an HTML file. Back then I had no idea that even Javascript, PHP or databases existed. 11 y/o begginer programmer me thought I could store passwords on server without https.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "tldr: I'm aware of every mistake the website has, they're intentional.\n\n>You Read the whole database into memory each time the page is loaded.\n\nYeah. I thought, apparently wrong, that since the data is no more than a few kilobytes nothing bad would happen if it got loaded into memory each time the page is loaded. I still knew that someone could just spam load the website and eventually crash it.\n\n>Your ID generator will produce duplicates.\n\nI'm aware of that, though it has a very low chance. Previous ID method was based on \"how many posts there are + 1\", but I didn't like how it looked when sharing the URL.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "Redis is an in-memory key store aka data cache. It’s not a database. It serves the same purpose Redux does on the client side.\n\nKafka is a messaging queue. It has nothing to do with data persistence.",
                "author": "Prize_Bass_5061",
                "score": 1
            },
            {
                "body": "I'm using a simple server. I had no other option (for backend) on it.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "So, right now, I'm screwing with a hobby project that is literally just a few React components that I'm running in Storybook with a JS object populating my \"real\" data.\n\nIf I were to move to sqlite, what's the constraint on that? What kind of threshold makes you say \"sqlite is bad, time to move to a 'real' database\"? Does it have to do with the volume of data people are putting in or is it more of a concurrency thing?",
                "author": "Brendinooo",
                "score": 1
            },
            {
                "body": "Honestly the threshold is probably when it gets annoying to use json.",
                "author": "claythearc",
                "score": 1
            },
            {
                "body": "I was about to ask the same thing",
                "author": null,
                "score": 1
            },
            {
                "body": "Access works but can corrupt very easily, I know about the old file format (2003 style). No idea about newer one. It is limited to 2GB per file, via connector you can use tables, queries (views), no triggers, the VBA functions or forms are not available in programmatic access on server, only the data. Make frequent backups and do not open multiple connections to it as it corrupts. Compact function works only when opened in exclusive mode, so you need to take website offline to perform this operation and sometimes db grows quickly for no real reason.\nSqlite is also an alternative, also single user connection, it has a log file to prevent corruption, has vacuum to shrink the database (when required), but needs to be closed to do this task.\nMicrosoft SqlExpress is a more reasonable option, 10GB max I believe, it has reliable log for recovery, transactions, multiple users, security, triggers on tables, clr functions, views, stored procedures with security, many other features from the full Sql Server. Will use only 4 cores or 1 socket, which can be a feature, as a query will not run with full cpu usage. Depends what you need. For small apps, it's enough.\nIt even has linked server support, so you can link to another sql server database, but queries on top will probably be slow.",
                "author": "DonutConfident7733",
                "score": 1
            },
            {
                "body": "Turso.\n\nOr just Cloudflare KV",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "This is honestly the best way to learn, you gotta see the problems these solutions solve first hand.",
                "author": "confuseddork24",
                "score": 1
            },
            {
                "body": "Says someone who has clearly never dealt with VSAM storage.",
                "author": "thetotalslacker",
                "score": 1
            },
            {
                "body": "While technically true, people often refer to databases but really mean DBMS, which is the program that can specifically query and edit that file to retrieve the correct binary representation of the data you need, because in the end the column name and the value of each row is all ones and zeroes, but the DBMS is the one that knows where in that file does one start and the other end.",
                "author": "Ieris19",
                "score": 1
            },
            {
                "body": "Because it’s json in, json stored, json out, which simplifies things massively if you want to work in json, which op does.\n\nThen you can search in the json - something you can’t do very well in a traditional database (even Postgres) and you don’t have to serialise or deserialise which comes with it’s own subtle issues IMO.\n\nWith a relational database you have to parse it ‘in’ to the normalised relational format and then parse it ‘out’ and then if there’s a schema change in the json you have to change all that code.\n\nMongo if you have a new document that needs a new field you just pump that field in, no changes to schema and code, and that field comes out when you query it. Means you can add fields on the front end without having to change your backend.",
                "author": "Close",
                "score": 1
            },
            {
                "body": "You would just dump the blogposts in as separate json files, then you can search by a json field (ie just give me a count of all blogposts before this date).\n\nIf you are using mongo you don’t want lots of complex transformations and parsing really - you are trying to avoid this complication altogether (as Postgres requires parsing IN to the database)",
                "author": "Close",
                "score": 1
            },
            {
                "body": "Databases such as SQLite guarantee that transactions that get interrupted by power failure get rolled back, they do guarantee that the DB won't be corrupted in that case: [https://www.sqlite.org/howtocorrupt.html](https://www.sqlite.org/howtocorrupt.html)",
                "author": "not_sane",
                "score": 1
            },
            {
                "body": "Ehh, that's only partially true. Software crashing is usually fine. It ends up in corrupted transactions which get rolled back on the next server boot.\n\nThe mid-transactional data is lost, but that's to be expected. There is no permanent corruption of the data.\n\nIf a text file is being written to, there is no transactionality to roll back, so a mid-write crash leaves you in a broken state with no automated method of recovery.\n\nThere is a significant difference in reliability. Sure you can flip a bit on hardware and corrupt a DB sector, but that's incredibly rare and it's what nightly backups/replicas are for.\n\nEven better are distributed DB clusters with replication. But then CAP theroem applies: https://en.wikipedia.org/wiki/CAP_theorem.",
                "author": "CampaignTools",
                "score": 1
            },
            {
                "body": "Markdown",
                "author": "haveacigaro",
                "score": 1
            },
            {
                "body": "Markdown",
                "author": "haveacigaro",
                "score": 1
            },
            {
                "body": "What happens if two people post at the same time?",
                "author": "crackanape",
                "score": 1
            },
            {
                "body": "just use sqlite or nosql, the more i read your comments it is clear your use case should not be using a json",
                "author": "runitzerotimes",
                "score": 1
            },
            {
                "body": ">That's also possible, but I don't think enough people would use the app for that to happen.\n\n\"not enough\" is not the issue. it takes just two people who try to write to a file each after the other, for one's changes to be simply lost. \n\ntake this case: \n\n1. Person A reads your JSON file version 1\n2. Person B reads your JSON file version 1\n3. Person A writes his version 2A \n4. Person B writes his version 2B.\n\n\nVersion 2A is gone... those changes are lost.\n\nTo safeguard against this you need to read the file again before each write, and merge any changes from another person. That means making code for that.\n\nAnd since there isn't any session or atomic reads, you're not guaranteed anything even then. \n\nThese are specifically one of the kind of problems  databases were made to solve.",
                "author": "MidnightPale3220",
                "score": 1
            },
            {
                "body": "Compared to what? I don't know it wasn't easier than sql for me.",
                "author": "Domeee123",
                "score": 1
            },
            {
                "body": "I have no experience with Replit but this sounds a bit like your db or application was deployed without any persistence and a modified json would've been lost as well.",
                "author": "fletku_mato",
                "score": 1
            },
            {
                "body": "This data seems like it could be fairly structured. Why not put it directly in the database?",
                "author": "eccentric-Orange",
                "score": 1
            },
            {
                "body": "You can definitely do that. There's no rule against it. After all SQL storage uses files under the hood. But you're going to quickly have issues with performance and complexity, as you're basically inventing a new type of database. Also if you have no server or auth then how do you prevent spamming or people uploading TB of data? Such things are basic aspects of web development for a reason. But hey if it works it works.",
                "author": null,
                "score": 1
            },
            {
                "body": "Thank for the definitions. \n\nLike I said. It depends on the data, and how it’s being accessed.",
                "author": "truNinjaChop",
                "score": 1
            },
            {
                "body": "I Dident think he meant just a single json file. But the structure of json itself for his data files",
                "author": "Caleb_Whitlock",
                "score": 1
            },
            {
                "body": "Who said it didn’t? I said it doesn’t have a *defined Schema*, which is absolutely true when it’s being saved in a text file.",
                "author": "reddisaurus",
                "score": 1
            },
            {
                "body": "Faster isn't better for databases/data stores. All you need is for two people to attempt a write at the same time and your data could be corrupted.",
                "author": "queen-adreena",
                "score": 1
            },
            {
                "body": "That could happen with as little as 0 data and 2 users. As soon as they try to create a thread at the same time, you’re going to have to deal with accessing that JSON in a way that doesn’t mess things up.\n\nJust use sqlite.",
                "author": "midwestcsstudent",
                "score": 1
            },
            {
                "body": "Or, you know, Cloudflare D1?",
                "author": "Fine-Train8342",
                "score": 1
            },
            {
                "body": "Ah thanks. Binary representation of JSON. Interesting.\n\nSo they still use JSON but there is a conversation to BSON in the pipeline before processed by the database storagi engine",
                "author": "Shacrow",
                "score": 1
            },
            {
                "body": "Depends on the use-case. \n\nA mid-level dev is more likely to just ***ALWAYS*** use a database\n\nA junior dev is likely to try and avoid a database as much as possible. \n\nA senior is more likely to have the experience to discern when a simple JSON file is enough as opposed to a full database",
                "author": "Ieris19",
                "score": 1
            },
            {
                "body": "It simplifies things in that tiny portion of application code (which could be automated to be as little amount of manual coding as is the call to MongoDB).\n\nIn exchange it massively complicates handling any schema changes and relational data. You either have a well defined schema with types, constraints and relations in the database, or you have checks and logic for all this in your application code.\n\nIt's like JS vs TS. One of them is bit more verbose but one of them also saves you a lot of headache.",
                "author": "fletku_mato",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "That article you linked details exactly how the database can get corrupted from power failures though. Many times it will just rollback the corruption, but there are some failures that cannot be recovered from.\n\nThat's why backups are important.",
                "author": "CampaignTools",
                "score": 1
            },
            {
                "body": "Hey, it was not my idea, but we can use Linux file locks. Those make debugging complicated, so I commented them out. I still wait for the ticket from UAT to put that back in. But then again the Users work in a team towards a common goal and this would all be consistent. Yeah, do not do that at home. Only in shitty companies with legacy code which is even worse.\n\nWe use a producer consumer pipeline. So actually the consumer deletes A at some other time. Until then step 3 is blocked. Yeah, not a real database. I am quite sure that Linux and windows don't corrupt the file system (too much) when they crash \"while\" renaming. I think this is basically an atomic operation. Disks use sectors to store data. I just hope that the whole directory fits into a sector. So the new version of this sector is written into local RAM of the HDD (or SSD) controller. Only a complete sector is written. I think that this storage hardware has big enough capacitors to finish this write even in case of external power loss. I don't quite know what a Journaling file system is. For me it is the responsibility of the hardware to make that write atomic. Just like RAM is supposed to make atomic 64 bit writes for pointers and floats. No threading issues there. Even 1993 Jaguar and later the N64 could do that. Java should not be used on 32 bit systems. At least, then stick to floats -- no double. I guess that pointers are okay because Java does not support 68k where pointers are twice the size of the databus. I wonder about 386SX.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "the universe explodes",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": ">how do you prevent spamming or people uploading TB of data?\n\nPHP configured with 25mb max file upload size, ~2400 characters limit per post, is this enough? I feel like it isn't..",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "I use C# and it has thread safe collections. I should probably check if the JSON document objects have thread safe versions. There must be a reason why Microsoft always ships 4 different JSON libraries with .NET  (changing from version to version). I dunno about webscale. A single (physical) server was good enough for me. Yeah, this all stops making sense if I would spin out this as a microservice.\n\nAnd I think 1000 threads max for a virtual machine in Java or C# plus this rate limiter for new threads severely limited the application of these languages in webservers. With node, of course, I would probably start with a separate database.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "You have to do WAY more thought into the creation of tables and relations in a JSOn file though.\n\nLike yeah, just reading a property...\n\nSure.\n\n\nBut thats not a db.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "He didn't disagree with that anywhere, what?",
                "author": "bigrealaccount",
                "score": 1
            },
            {
                "body": "Nothing.\n\nIt's a tool for handling json files as if they were databases. There is no guarding. Because that's not the purpose of tools like this.\n\nYou can buy a kitchen knife. Where is the guardian mechanism that you don't murder people with it? Right.\n\nIf you're a programmer and need extra built-in mechanisms to prevent you from doing stupid stuff with a tool, maybe you should learn the tool and read the documentation instead.",
                "author": "KaiAusBerlin",
                "score": 1
            },
            {
                "body": "Because excel spreadsheet can only be used as readonly data source from programs, while Access, SqlExpress are real databases with read/write features. A database is much more than a table or spreadsheet.",
                "author": "DonutConfident7733",
                "score": 1
            },
            {
                "body": "KV is a lot easier to use if you need something very simple but yes, d1 as well",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "I’d argue with so many abstractions built on them, actual Filesystems like NTFS, ext4, etc. I might agree are databases. \n\nBut what people think of as the Filesystem (Explorer, Finder, Nautilus, etc…) are just big clients to the database",
                "author": "Ieris19",
                "score": 1
            },
            {
                "body": "I don’t think that - in my own personal project I have a Postgres database with quite a few json/jsonb fields. But the support for json data (particularly if you are just working with json data) just isn’t good compared to mongo.\n\nAs a basic example, json documents don’t come out the way you put them in in Postgres (if you want to search them) - but in mongo the document structure is preserved.\n\nSearching is complex, documents are awkward to handle back to the client… it’s just chalk and cheese if you are just wanting to work with json documents like OP.\n\nTooling also isn’t there compared to mongo for this purpose - E.g. editing/inspecting/searching json documents easily in clients.",
                "author": "Close",
                "score": 1
            },
            {
                "body": "Man, what are you talking about? You write from a distributed system into a single file and have a UAT process?\n\nLet me guess, government contracting?",
                "author": "CampaignTools",
                "score": 1
            },
            {
                "body": "As a stakeholder in the universe, I can't be having that.\n\nUsing a database is less work than doing it properly with JSON files, so I'm not sure what you're gaining here.",
                "author": "crackanape",
                "score": 1
            },
            {
                "body": "What if I spread my 1TB of data across 40,000 uploads?",
                "author": null,
                "score": 1
            },
            {
                "body": "This is where the \"program to an interface not an implementation\" idiom comes in useful. If you keep all the data access code wrapped in a generic data access wrapper then the underlying storage mechanism can be changed at will.",
                "author": "Normal_Fishing9824",
                "score": 1
            },
            {
                "body": "Just to nitpick, there are knives having guarding features, like shells or not being pointy. The blades can be designed to cut fruits easy, but stabbing or sweeping make less damage. Your analogy will be better if it's about cutting one own finger, which I agree there is no much guarding mechanism on that.",
                "author": "Ooker777",
                "score": 1
            },
            {
                "body": "Great point. If the kid likes JSON, MongoDB is his friend. Or maybe his older abusive sibling.",
                "author": "jen1980",
                "score": 1
            },
            {
                "body": "You'd eventually get blocked. Or the server just won't respond to you.",
                "author": "OptimalAnywhere6282",
                "score": 1
            },
            {
                "body": "Because of those awesome security features nobody ever got murdered with a kitchen knife. 👍",
                "author": "KaiAusBerlin",
                "score": 1
            },
            {
                "body": "Noted. You weren't wrong, Excel file ca be used with oledb providers from programs as if it were a database, on Windows, to read data from the file. Fun fact, to find the column type, the driver looks at the first 8 rows on each column, if those are text and all other rows have numbers, it will consider it a text column.",
                "author": "DonutConfident7733",
                "score": 1
            },
            {
                "body": "Blocked by what? How do you know which user is sending the request if you don't have auth ",
                "author": null,
                "score": 1
            },
            {
                "body": "anyway, do you know why the idea of handling json files as if they were databases only happens from lowdb? I thought it should be as old as the idea of json itself?",
                "author": "Ooker777",
                "score": 1
            },
            {
                "body": "> People select Mongo because it seems easy to get up and running, but they do so because they do not have the experience to know you are going to end up in a hell of your own creation.\n\nIt's the \"fast at first\" issue.\n\nThat it seems (or may be but not in mongo it isn't) faster to get going to something that works.\n\nBut then you spend WAY WAY WAY more time getting it to actually be correct and decent.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "It seems that database design and product making really make conflicts in this case. From the product making perspective, you should make it quick and only change when it scales. But from the database design perspective, you should consider scaling prospective right from the start. In general, you should make sure your code is extendable right at the start, because refactoring is not an easy thing. Am I correct?",
                "author": "Ooker777",
                "score": 1
            },
            {
                "body": "Dude really what's wrong with you?",
                "author": "KaiAusBerlin",
                "score": 1
            },
            {
                "body": "In both cases people are very bad at predicting in what way their application will grow. New features are unforeseen until usage patterns are observed etc. Scale is not a single vector, there are many forms of scale and how extensible an application is, is one of those vectors of scalability. \n\nRelational data systems and proper encapsulation / boundary oriented programming try to maximize this type of scalability, let's call it, the ability to add to the program in the future while maintaining quality and predictability. Over the lifetime of software this usually becomes the most important cost associated with scaling, and not how many transactions per second the app can handle. The latter is a problem everyone faces no matter what they choose.   \n  \nWhen a developer opts for things like Mongo to get up and running fast it is because they generally have not experienced supporting a large application over its lifetime and do not realize that the small amount of velocity they gain initially is paid for in orders of magnitude of complexity over the lifetime of the app as they try to bolt on features, and patch around the things Mongo lacks when compared to something like Postgres.",
                "author": "FRIKI-DIKI-TIKI",
                "score": 1
            },
            {
                "body": "What's wrong with me?",
                "author": "Ooker777",
                "score": 1
            },
            {
                "body": "MongoDB is pretty solid and it's using JSON",
                "author": "Shacrow",
                "score": 0
            },
            {
                "body": "It’s a bad idea. Just store the JSON in a SQLite database. Write a simple set of getter and setter functions to have a table act like a key-value store, I.e. handle the upserts, if you really want to use JSON. \n\nOr use Postgres or SQL Server Express, which can build and parse JSON on the fly so you can have relational tables with define schema on the backend, and JSON in and out, without the brain damage of parsing in your application.",
                "author": "reddisaurus",
                "score": 0
            },
            {
                "body": "A SQLite database is a single file that can be saved in the file system  and far more performant than JSON.",
                "author": "queen-adreena",
                "score": 0
            },
            {
                "body": "Nothing wrong with that. In fact, if it reduces a db connection id imagine it’s better for performance. However I wouldn’t call it a database, just file storage, document stores exist obviously",
                "author": "Haunting_Welder",
                "score": 0
            },
            {
                "body": "Very bad.\n\nIf you need a db use a db.\n\nSQLite and rocksdb are good ways to have \"file as a database\"",
                "author": "thekwoka",
                "score": 0
            },
            {
                "body": "How about using mongo? Advantages of a database and you can just dump the JSON into it (ie that’s what you are supposed to do).",
                "author": "Close",
                "score": 0
            },
            {
                "body": "so it's in 2024, and you're starting, why still php? (not intended to say it's no good, just wondering)",
                "author": "tianze_ds",
                "score": 0
            },
            {
                "body": "Partition is the point where it is easier to just use a db (and don’t partition that).",
                "author": "IQueryVisiC",
                "score": 0
            },
            {
                "body": "A hard server crash will corrupt all application data, be it a simple text file (json) or an enterprise DBMS like Oracle.\n\nThat’s why servers are attached to emergency batteries (UPS) to allow them to shutdown gracefully when the power goes out.",
                "author": "Prize_Bass_5061",
                "score": 0
            },
            {
                "body": "Not the same as mongo though if you just want to store json - if you are just storing json then mongo is a way better solution.\n\nIf you are storing a bit of json but most your data is relational, then postgres",
                "author": "Close",
                "score": 0
            },
            {
                "body": "What's the difference in guarding users from doing stupid things?",
                "author": "Ooker777",
                "score": 0
            },
            {
                "body": "At this low level, anything other than just a file is actually a huge step up in complexity, and is overkill comparatively.",
                "author": "haraldsono",
                "score": 0
            },
            {
                "body": "Sounds like what you're after is a nosql database like mongodb.",
                "author": "w33quay",
                "score": -1
            },
            {
                "body": "Thats called nosql and its often valid",
                "author": "Caleb_Whitlock",
                "score": -1
            },
            {
                "body": "> Database can be connected from every programming language also.\n\nI don't support op but so can json",
                "author": "freecodeio",
                "score": -1
            },
            {
                "body": "We write a new file and then swap the names.",
                "author": "IQueryVisiC",
                "score": -1
            },
            {
                "body": "🎤⬇️",
                "author": "badboysdriveaudi",
                "score": -1
            },
            {
                "body": "> meant that there would be no need for a concept of tables and relationships in a JSON file.\n\nThat's not true at all.\n\nThe data is still the data.\n\nYou still have those things.\n\nBut JSON does not support them.\n\nSo you're fucked.\n\n> But something as simple as storing \"rows\" of names+emails+nicknames or something wouldn't require anything like that. Just a simple array of objects.\n\nSo then you wouldn't need relations in a database at all, and you already solved the table problem",
                "author": "thekwoka",
                "score": -1
            },
            {
                "body": "If I were doing what the OP is suggesting, I'd probably just hold it in memory and cache it every 5 minutes or so. Just build a simple ODM and excute from there. I've done it on a couple of library projects where the project's database would be unknown. In one, I exposed the odm via a property that would allow a project to replace the mem->cache->file method with a db connection, as those would always be more performant.",
                "author": null,
                "score": -3
            },
            {
                "body": "This reminds me of that bell curve meme. \n\nOn the left you have the dumb junior saying \"Just store it in a JSON file\"   \nIn the middle of the bell curve you have the stressed out mid level noivce saying \"WE MUST ALWAYS USE DBs\"  \nThen on the  right you have the sage senior saying \"Just store it in a JSON file\"",
                "author": "versaceblues",
                "score": -3
            },
            {
                "body": "Yes, though I have used a custom ODM in library projects where the final database is unknown. Mostly for debugging as I did expose the odm as a config where devs could pass in their own custom class to write/read values. The default behavior would have been storing the settings in a gitignored folder at the project's root.",
                "author": null,
                "score": -5
            },
            {
                "body": "JSON is literally just a file with a simple parsing step. Reading config and/or content from a file is totally legit. Get over yourself.",
                "author": "haraldsono",
                "score": -8
            },
            {
                "body": "[removed]",
                "author": null,
                "score": -11
            },
            {
                "body": "Absolutely this.",
                "author": "Conscious-Ball8373",
                "score": -12
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -13
            },
            {
                "body": "This",
                "author": "srlee_b",
                "score": -17
            },
            {
                "body": "sqlite is overkill if op doesn't need to search the contents of files",
                "author": "freecodeio",
                "score": -19
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1694208678.0,
        "title": "You are a freelancer building a typical portfolio-type site for a small business with some static pages and information on services, and a contact form which needs to have a client friendly content management system. What platform/tools/frameworks do you use?",
        "author": "soulvacation",
        "id": "16dmw4e",
        "selftext": "My answer to this would be Wordpress, but Statamic is rapidly gaining as a close second. But not quite enough to completely overtake Wordpress. I know Wordpress is clunky af but it still feels very much like the industry standard for supporting small clients with these kinds of non-eCommerce websites?! As a freelancer it also feels like the right option because of the amount of community support and to an extent “managed hosting” options.\n\nI’m just wondering what the most common answer to this question is nowadays, I’ve been out of the game for a year! It feels like one day it will be time for me to ditch Wordpress once and for all but… not yet?!?\n\nPs not a website builder like Wix/Squarespace etc please, I need more control than that.\n\nUpdate: I would also definitely need the ability to edit CSS/HTML/JS, and have something like the equivalent of Wordpress “post types” where the client can add “New Case Study” or “New Staff Member Page” etc. one of my reservations with builders is they don’t give you this control over the backend.",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/16dmw4e/you_are_a_freelancer_building_a_typical/",
        "num_comments": 12,
        "comments": [
            {
                "body": "Just do what I do. 11ty static site generator. Clone my website starter kit \n\nhttps://github.com/CodeStitchOfficial/Intermediate-Website-Kit-SASS\n\nIt’s got everything you need. It has the DecapCMS already configured with a working blog the client can edit themselves in a dashboard. The documentation shows you how to use everything. You can extend the cms to cover the text sections on other pages and make everything in your site editable from the cms. Just gotta create the new yaml collections for each page or section you want to edit. \n\nThis is what I use for all my sites now. I just launched this site using it\n\nhttps://grassrootsplumbing.com\n\nTheir resources page is a repurposed blog. The client can edit the current resources and add new ones without having to bother me. Here’s an example of an active blog a client curates\n\nhttps://www.yourherocare.com/blog/\n\nI use Netlify to host these sites for free and they also do free form handling for up to 100 submissions per month per site. No backend configuration needed. You go to your form settings on the site page and enter the email you want it to go to. That’s it. \n\nIf you need more help reintegrating into the freelancing world, I wrote this guide on how I built up my agency and how to sell yourself against page builders and cheap devs overseas. \n\n https://codestitch.app/complete-guide-to-freelancing\n\nAnd I wrote this on how to optimize your websites page speed scores to 100/100\n\nhttps://codestitch.app/page-speed-handbook\n\nThis is an important ability because it’s also one of the core pillars of my pitch. Google’s core vitals are a very important set of metrics that impact how your site ranks. The page speed insights scores tell you how those metrics are doing. Websites with similar content online trying to rank for the same keywords will battle it out for the rankings. But the one with the better page speed will win if all other factors are equal. It’s that competitive edge small businesses need online. And it’s why my work is worth what I charge - I know what google wants to see and I give it to them. Page speed isn’t everything though. Content is number 1. And this is where you as a freelancer need to nail if you want them to rank and be happy. \n\nEverything I do is called on page SEO. That’s the content, design, and load times. Things I can control as a developer. What I do is I do searches for my clients keywords in large city metro areas in a different state and open all the top ranking sites. I analyze the keywords they’re using and content, feed it into chatGPT and have it write new content based on that content from those pages and to pretend it’s a copywriter for websites. Then it gives me the content, I edit it to make it sound more human or change sentence structure, and add it to the site. I know what sections I need on a site and what order and what content I need and where to put the keywords. I do this for interior service pages called content silos as well. These content silos are pages dedicated to 1 service. That entire page is all about that 1 service. Like this page I did\n\nhttps://striveptwellness.com/multiple-sclerosis-treatment/\n\nThis ranks #1 for “multiple sclerosis therapy Montclair ca”. These pages are how you rank for dozens and hundreds of keywords and have these pages ranking front page for any and every service your client offers. That + my designs + my expertise in making a site load instantly and score 100/100 on google page speed scores and satisfy all of google core vital metrics for ranking I can make a website rank front page.\n\nI can do all that without being an SEO specialist. I focus on the fundamentals and what google wants to see. Sure traditional SEO helps like backlinks, blogs, guest posting, and content creation and outreach. But if you don’t have the budget for that then you can get by focusing on the stuff you can control on the page.\n\nThese content silos are bitchin for running ads to as well. They convert VERY well. Run an ad for interior painting services and send them to the interior painting services page. The user clicks on an ad for that and is taken to a page that talks all about it and they find exactly what they came there for. Most small business owners send ads to their home page. But when someone goes there they have to go  looking for that service they clicked on the ad for. And if it’s not there they bounce. And then the business owner wonders why none of their ads are converting.\n\nLet me know if you have any other questions about freelancing. I’d be happy to bring you back up to speed!",
                "author": "Citrous_Oyster",
                "score": 26
            },
            {
                "body": "I'm not op but I just want to say I've seen you comment on numerous posts and you're always so kind and helpful. You're generosity doesn't go unnoticed. You're so knowledgeable about freelancing and creating websites. As someone that inspires to be a freelancer front end like you, you have no idea how helpful your posts and comments have beenl! All in all I appreciate you.",
                "author": null,
                "score": 16
            },
            {
                "body": "WordPress can be incredibly intuitive and work very well if you know what you're doing. I often build websites using Wordpress + ACF and a custom theme that I built myself with nothing more than the bare minimum for it to load. Every page built on pure HTML while pulling raw/editable content from the backend which the client can manage themselves. It's blazing fast even if you don't use a cache plugin. Plus the endless amount of backend customization I can do.\n\nWordpress' fame is bad because anybody can set it up, install a shit page builder plus an even worse theme and then go \"wow this is so slow\".",
                "author": "metallzoa",
                "score": 6
            },
            {
                "body": "You’re very welcome! :)",
                "author": "Citrous_Oyster",
                "score": 5
            },
            {
                "body": "Any static site generator will do. Been using Astro lately and has been pretty solid. The form can be as simple as just embeding a google form.",
                "author": "krileon",
                "score": 3
            },
            {
                "body": ">This is what I use for all my sites now. I just launched this site using it\r  \n\r  \nhttps://grassrootsplumbing.com\n\nThat's damn sexy-looking.\n\nI'm sure the answer is somewhere in your comments/blog, but where does the actual design I'm seeing here come from? Are you repurposing HTML templates from somewhere? Does 11ty (which looks great) have a bunch you can choose from? Do you have just the one layout/design that works for services businesses, and you make a few tweaks? Or do you code up a unique html/css page for each client?\n\nAlso.... what's Netlify? Last time I built a site from scratch I'd just ftp the files up and since then it's been mostly Wordpress. From context, I'm guessing Netlify is used to take the generated static site and deploy it onsite?",
                "author": "RossDCurrie",
                "score": 2
            },
            {
                "body": "I want to look into Webflow as I kind of dismissed it as “well, that’s what people who don’t know how to code” would use. I get frustrated by page builders because they are very… I guess… literal. In my experience there is not as much flexibility by far. I guess if there are styling variables you can change (like with Scss) and the ability to make different kinds of posts (like with Wordpress post types) and the ability to control URL structure, categorisation of posts etc… those are the things I feel like the page builders are missing. I do appreciate it could save a lot of time though but I’d question if it could let me build and fine tune everything I would want to. Including on the backend.",
                "author": "soulvacation",
                "score": 2
            },
            {
                "body": "Thanks! I have a template library I built with my team that I use for all my projects. \n\nhttps://codestitch.app/app\n\nWhat I did with this one is the client had a boxy site that was boring. They wanted something more wavy and flowy. They gave me this example\n\nhttps://wondercow.com\n\nAnd I went to my template library, had their site open in a different screen and I went down my my library from the top of their site to the bottom and picked the templates I felt best worked to create the design I needed to in the style of the inspiration site they gave me. I had a couple with some svg waves like that, so I grabbed the figma design files form each template and pieced together a new figma design with them. I edited the svg waves, doubled them up, overlapped them, and edited the other templates to match the design style I was going for. I had the design done in about an hour or two. Then I go back to my library and click the button to copy and paste the code into my code editor inside the starter kit I have. It took another hour or two to add the templates and then customize them to match the design I made, then tweak the dark mode and remake the svg waves with the dark mode colors and hide the light version ones when dark mode is enabled and show the dark ones when it’s enabled. Then I tweaked the blog that my kit comes with to look more like a resources page that the client can edit themselves and not so much like a blog. \n\nNetlify is where I host the sites for free and they do free form handling for up to 100 emails per month per site. They host static html and css sites. Which makes 11ty that much more powerful because it basically does everything php does but statically without the server side language. With this workflow I have a really nice assembly line that allows me to make beautiful sites in only a few hours. I also built this site with my library \n\nhttps://www.yourherocare.com\n\nThis one was much more custom but if you look through my library, you’ll see the templates they were based on. The idea is the templates aren’t exactly what you need everytime. Sometimes they can get you 90% the way there and you finish the other 10%. That’s how I see them. I made the most beautiful weed shop site last week that I’m going to start putting together on Monday. I’m actually really happy how it turned out in the design process. That’s gonna be a nice one. And I have a non profit one I’m working too that was all made with my templates. \n\nhttps://pacificsafetycenterdemo.netlify.app\n\nThe Motorcycle pages don’t work as of today, still putting those pages together. But you can see the variety I’m able to create from just templates. The word templates often get a bad rap because it’s often seen as low quality and low effort. But if you’re using something that was made with care and purpose and detail then that template is actually a very valuable tool. When made properly, they can be used for anything!",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "Webflow does all of those things you listed, you can add custom code, setup CMS collections that are a lot more intuitive than WP add tags and change URL structure, you can do membership and e-com too.\n\nI resisted at first for the same reasons but would never in a million years go back to Wordpress.\n\nThe only thing it doesn't do is server side scripting, but I would argue if you're doing that you shouldn't be using either of them.",
                "author": null,
                "score": 1
            },
            {
                "body": "Ok, I will definitely check it out. Thanks.",
                "author": "soulvacation",
                "score": 1
            },
            {
                "body": "I had a little dive into Webflow last night. I can definitely see the appeal and that it has a place, so far the best builder I have used… but my main pain point is there seems to be no way to edit stuff via code? I know you can export code and insert code embeds on a paid plan, but I really wanted to be able to just tweak CSS classes quickly. Switching between the normal UI and a “code editor mode” would be great, even if just for individual CSS classes. For example, having to individually set padding on each edge is annoying rather than just being able to write ‘padding: 1em 2em’. Also that the only way you can edit global classes is to create a div with only that class applied and edit the options for that element. I also wish there was support for calc(). Any ways around any of these?",
                "author": "soulvacation",
                "score": 1
            },
            {
                "body": "*Not trying to throw shade here OP*\n\nI wish people would just get over Wordpress, it's such a dated way of building websites and performs terribly compared to almost all other solutions.\n\nTo answer your question I would use Webflow, because it's modern, easier to use and maintain, it performs better and it costs next to nothing in the grand scheme of things.\n\nI've been working in the digital space for 15 years and in that time worked in a lot of businesses including some agencies that were almost exclusively Wordpress and it's honestly terrible compared to everything from closed source SaaS options through to completely custom configurations. People often cite that it powers 30% of the internet to which I just quote Eric Kessells - \"a million people can be fantastically wrong\" and in my experience and opinion, they are.",
                "author": null,
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1735104433.0,
        "title": "How do Software Companies deliver web apps quickly?",
        "author": "MeatBoyed",
        "id": "1hluip6",
        "selftext": "Hi everyone,\n\nI run a startup software development agency that primarily focuses on creating web apps and platforms for clients. While I don’t struggle to find clients or projects, my challenge lies in reducing the turnaround time for delivering these projects.\n\nCurrently, our development timelines range from as short as three months to as long as six months, depending on the complexity and scope of the project. This feels too slow, especially given that many clients request similar features (e.g., user management, dashboards, content management).\n\nI’ve been considering solutions like:\n\nCreating reusable templates or components for common features.\n\nUsing low-code/no-code tools for rapid prototyping.\n\nStreamlining the onboarding and requirements-gathering process.\n\nStandardizing certain types of projects for faster configuration and deployment.\n\n\nHowever, I’m curious to hear from others in the industry:\n\n1. How do larger software companies or agencies manage to deliver complex projects so quickly?\n\n\n2. Am I being unrealistic in expecting shorter timelines for feature-rich platforms?\n\n\n3. What tools, techniques, or processes would you recommend to innovate and streamline development workflows?\n\nAny insights or advice would be greatly appreciated!\n\nThanks in advance 🙏",
        "score": 313,
        "url": "https://www.reddit.com/r/webdev/comments/1hluip6/how_do_software_companies_deliver_web_apps_quickly/",
        "num_comments": 165,
        "comments": [
            {
                "body": "Here’s a few tips from my perspective as a tech lead within my organisation:\n\n1. Don’t bother with no/low code solutions. You’ll end up hitting a wall and it will eventually slow down future progress because someone will inevitably want something not achievable or reasonably feasible from the platform. \n\n2. Look to replicate, not duplicate. This means find a way to consistently repeat and automate common patterns instead of doing the same thing over and over in subtly different ways. Auth is a good example that is basically the same everywhere and can be done once and then configuration driven. \n\n3. Set up a common template to bootstrap a product with initial dependencies, standards and process, structure, conventions to get a head-start on the core things. This could be routing layer + auth + state management for frontend, db + api for backend. Then it could be as simple as `git clone` every time. \n\n4. Define a sensible recommended tech stack with just the basics. This could be “we suggest this starting point with React, Postgres, and Express using this initial template” and let the product team decide if it’s suitable and what extras they need to do themselves. Start with one tech stack that covers your most common bases, add another only when you find out there’s enough demand for a new stack and not just because “we think we need every stack under the sun”\n\n5. Don’t put inexperienced people on a product in its first few weeks. Juniors are great for working/learning on the well-defined bulk of grunt tasks.. but setting up a project, establishing overall architecture, getting a “lay of the land” feeling and ways of working is best left to seniors. You’ll find that velocity will pick up very quickly when there are no juniors getting in the way early on.",
                "author": "skt84",
                "score": 717
            },
            {
                "body": "You’re typing this on Christmas Eve. This is a strong hint that if you’re America or Euro based you’re likely being unreasonable. \n\nIt is impossible to say if the estimated time is appropriate without knowing a ton more, but the way the question was phrased makes me think you may need to reframe your relationship with your dev team. Be kind to your devs. You get what you pay for. Be clear what your priorities are, commit to them, and empower your devs to meet those priorities.",
                "author": "Tombadil2",
                "score": 170
            },
            {
                "body": "This matches my experience 100% ^",
                "author": "dank_shit_poster69",
                "score": 79
            },
            {
                "body": "U doin ok? You sound manic",
                "author": "jaggyjames",
                "score": 42
            },
            {
                "body": "Short answer : mutualisation and reusability.\n\nStop reinventing the wheel all the time and use reusable parts of code : framework like Symfony or even CMS like Drupal.\n\nWith that starting point you will already have 60-80% of your app ready to go in about a few days and can focus on the complex needs.",
                "author": "Automatic-Branch-446",
                "score": 37
            },
            {
                "body": "More or less cringe than “senior engineer with a track record of getting shit done”?",
                "author": "jaggyjames",
                "score": 28
            },
            {
                "body": "By cutting corners and/or overworking their developers. This always results in shitty products, dissapointed customers and developer turnover, but hey for a brief moment, things will look really good on paper because you developed a (allegedly) fully fledged application in record time!",
                "author": "ButWhatIfPotato",
                "score": 27
            },
            {
                "body": "That depends entirely on the person, their aptitude for the subject, their commitment to learning it, how much time they spend thinking about the challenges surrounding app architecture just in daily life. Someone could become very proficient in a year, for others it may be impossible.\n\nApplying yourself is the key, really thinking about architecture and trying to solve real problems, not just reading articles.",
                "author": "Elshiva",
                "score": 23
            },
            {
                "body": "They don't (deliver them quickly)",
                "author": "jjopm",
                "score": 22
            },
            {
                "body": "The only way to operate quickly is good, experienced team that works well together. \n\nThey should work out their way, but for me ( out of order, probably last one is most important ):\n\n1. No agile, useless meetings and any useless project management stuff. Just a Trello board of things to do will do. It requires a lot of trust, but if deploying daily you can check progress yourself, without having to involve Devs. \n\n2. Constant iteration and client feedback. it kind of depends on client, but if I can I push everything to prod or staging ( depending if greenfield or no ), move the card to Trello column for my client to review and try them to review it in a week time at most.\n\n3. Using full fledged frameworks. For me it's symfony, but laravel, Django, spring and many others are in play. Using framework that your Devs didn't choose is pointless so they should pick it and stick to it whenever you can. Unfortunately JS kind of sucks when it comes to those, although it's getting better. Laravel is probably the speed king although I think spring and symfony are really close by while being more manageable ( very personal preference ). If you are on lower Dev complexity unfortunately wp takes the rains, even that no serious Dev wants to work with it.\n\n4. Boilerplates, code generators ( like make command in symfony ), static analysis, ansible/terraform recipes and much more on automation front.\n\n5. What one programmer can do in a month two can do in two months. You need to be careful about bus factor here though.\n\n6. Managing burn out. If you run your Devs like horses they will burn out and quit or just clock out and deliver 1/10. No way around it. Pay well, don't expect people to stay after hours. Be flexible with holidays/working hours especially to the people that put extra effort. Steady and constant is better than burst of performance.\n\nIt's very important to understand those rules are working for me. They might not for you or your team. It's important to work on those and it will take years to make everything work correctly.\n\nAh. And fire everyone who thinks it's all right to do a meeting about \"definition of done\" :)",
                "author": "edhelatar",
                "score": 22
            },
            {
                "body": "I have only an outsider view but where I work we built e-commerce websites and teams are of 6 peoples (front-end and back-end).\n\nThey would use Magento as a base for code and work full time for 3-6 months probably for one or two small features.\n\nThen you also have a lot of small adjustments everywhere (not necessarily on those features) in the meanwhile, which means you would need more people (probably one full time).\n\nIf you are a startup you are probably have half that (if not only a single dev).\n\nI hope you also don't hire peoples from India or newcomers, (aka low wage peoples with no good skills), because you will also get that you paid for.\n\nWe worked with India people and they will need 6 months to do what we do in one week (not even talking about the code quality)\n\nEDIT: Just to be clear about the India peoples in my sentence; it is an overall statement of the current situation. They are like with China, both can offer \"cheap labor\" (which come with cheap quality) and _most_ businesses use them for that. However, like China, if you pay the right price, you will get good peoples, services or/and products.",
                "author": "who_you_are",
                "score": 21
            },
            {
                "body": "Yes, I’ve been a full time web developer for nearly 20 years. A batteries included framework like Drupal already provides user and content management, dashboards etc. and is highly flexible to extend for custom business requirements. Pick something as a base and extend from there.",
                "author": "clearlight",
                "score": 18
            },
            {
                "body": "How you get your first clients?",
                "author": "Namenottakenno",
                "score": 14
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 14
            },
            {
                "body": "One thing no body has mentioned: hire passionate people that love their work. I've worked with many Devs, there are a lot of shit and/or lazy Devs that take way longer than they should need.\n\nAlso, if you have too many juniors that get stuck on menial tasks, without an accessible senior to unblock them, that can cost you more in the long run too.",
                "author": "No_Influence_4968",
                "score": 12
            },
            {
                "body": "\"Be clear what your priorities are, commit to them, and empower your devs to meet those priorities.\"\n\n\nhey team my priority is ... and this is why priority is set this way...\n\ni would like to hear feedback on how we can improve....\n\nhey ... great job on questioning the requirements. the client wanted something else.... keep it up... \n\n\nhey team, is anyone interested in participating on client requirement gathering? it would really help spread the context.\n\n\nhey team, i was reading domain driven design and realized its strategic pattern could be really helpful for our team... ",
                "author": "InformalMix8880",
                "score": 12
            },
            {
                "body": "Right, a lot can happen in two years. Idk why previous commenter easily dismissed this as a \"scam.\" It's such a weird innocuous thing to lie or be suspicious about.",
                "author": "mimnscrw",
                "score": 12
            },
            {
                "body": "Being agile and working “agile” are two entirely different things. For the most part, working agile is absolutely bullshit and just gets in your way.",
                "author": "Murkrage",
                "score": 12
            },
            {
                "body": "Adding on to the above, it's also very important to have an established CI/CD pipeline configuration, and making the deployment process as automated as possible but do make sure to add in a few approvals required gate lines for any deployment to prod. \n\nStandards are also important alongside templates. I found ourselves discussing technical decisions a lot that could be easily answered if we had some sort of a standard that we can adhere to and expand upon it whenever we come across a new situation",
                "author": "BritishDeafMan",
                "score": 11
            },
            {
                "body": "Hey there, it's pretty sweet that you've got a good inflow of clients. That's often one of the hardest bits. I could use a few tips on that. I freelance with agencies and the ones that tend to deliver quickly and on time have a combination of these qualities:\n\n* They are really good at requirement gathering and defining the scope.\n* They are often async-first, slack chats over meetings & such.\n* They use project management apps as a tracker for tasks, from simple ones like Trello to more fledged ones like NiftyPM.\n* They incentivize quick deliveries often with bonuses.\n* They have productized some of their common services.\n\nI would also recommend going through this: [https://37signals.com/](https://37signals.com/)",
                "author": "zaxwebs",
                "score": 10
            },
            {
                "body": "Drupal is more of an extensible framework, based on Symfony but also offers a comprehensive built in user and content management system. It uses Composer for package management. \n\nIt has a solid and secure API-first application architecture. All data can be made available via API, REST, JSON:API or contrib GraphQL, that also works well for headless applications. \n\nIt provides an entity framework where you can define different entity and content types and attach fields to them, such as text, entity reference and file fields, as well as build Views, tables etc from that data via the UI. \n\nThere’s also a module system where you can define modules and plugins etc. \n\nThe cache system supports cache tags which is excellent for event-based on demand cache invalidation. \n\nThe configuration system is all importable and exportable, both for individual components and the entire site, as YAML files. You can synchronise the site configuration anytime. \n\nIt’s mature software and also 100% free and open source. Recommended.",
                "author": "clearlight",
                "score": 10
            },
            {
                "body": "The line is thin",
                "author": "leflyingcarpet",
                "score": 9
            },
            {
                "body": "Whew, you're an angry one aren't you. \n\nPlease note that editing a comment after I've replied to it, then saying I've \"dodged\" the changes you made in that comment, that's not exactly productive.\n\nIn your experience, do you implement any agile frameworks? Do you find yourself adding agile-related meetings in your implementation of agile? \n\nIf we're just talking about approaching software development with a mindset of shipping iteratively, being welcome to changing requirements, etc., I think it's totally fine but not exactly groundbreaking advice.\n\nIn 95% of cases that agile is introduced to a company, scrum practices are introduced and I think those can be massively wasteful.",
                "author": "fkih",
                "score": 9
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 8
            },
            {
                "body": "Agile is a great way to introduce expensive middlemen and waste engineering time with long, useless meetings that get in the way of actually delivering. It just about killed a start-up I used to work at. The company I worked at before that implemented it *adequately*.\n\nThere are better ways to \"demand results\" in my opinion.\n\nSo I reiterate. Ship iteratively. Skip the agile bullshit. Agile is not the fix to your problems. Fix them first, and if you then decide you still need agile, give it a whirl, girl!",
                "author": "fkih",
                "score": 8
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 7
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 6
            },
            {
                "body": "Or they are 50 or hundreds into it lol",
                "author": "who_you_are",
                "score": 6
            },
            {
                "body": "Are we really *just* talking about subscribing to agile ideals? I'm talking more about the frameworks that surround it. (ie. scrum)\n\nSure, give the agile manifesto a read and then get on with your project. I don't disagree with agile principles in and of itself.",
                "author": "fkih",
                "score": 6
            },
            {
                "body": "Pick an opinionated stack and optimize.\n\n I'm a Laravel dev and I love it because it ships full feature apps like overnight. I have DevOps scripts, packages, everything pre baked. \n\nSpecialize in one stack and use repeatable patterns. I prefer Laravel / Rails / batteries-included type of frameworks but to each their own. The benefit of opinionated frameworks is speed and predictably.",
                "author": null,
                "score": 5
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 5
            },
            {
                "body": "r/LinkedInLunatics vibes",
                "author": null,
                "score": 5
            },
            {
                "body": "Brother how many medium articles have you read",
                "author": "goodboyscout",
                "score": 5
            },
            {
                "body": "I've said it a few times that I don't disagree with the agile principles on their own. I do disagree with the way they're often brought forward and the frameworks that surround them. I think they can be massive time and energy sinks.\n\nI feel obliged to mention to you that when I say something like that last sentence, it's not an attack on you, or on the agile methodologies. It's simply a comment. A comment that you don't have to take personally.",
                "author": "fkih",
                "score": 5
            },
            {
                "body": "Well I am a devloper I really wanna how do you get clients and what are the kind of projects they ask for the most if that doesn't bother u cause I'm really struggling to get clients",
                "author": "azizaissa",
                "score": 4
            },
            {
                "body": "You are having a selection bias about other companies. Many apps need an indefinite development path to provide what the market needs. \n\nRapid delivery is possible if you have the building blocks for it. Even then you need to invest the time beforehand...",
                "author": "mohammacl",
                "score": 4
            },
            {
                "body": "You should consult the guys with the Reddit ad who will build your application for 500/800/1000$ :D /s",
                "author": "GoOsTT",
                "score": 4
            },
            {
                "body": "I had to bootstrap a frontend team and I did all of these. I left back in January and I was talking to my old boss (we're good friends) and he said all that groundwork saved his ass several times since I left.",
                "author": "TheOnceAndFutureDoug",
                "score": 4
            },
            {
                "body": "I'm based in South Africa, and yeah my mind is still focused on work during Christmas day lol.\n\nWhat you said is fair, I should've worded it better focused on my process  and workflows  to speed up and systemize development. \nWe're in the process of scaling up as it's currently me running the business and developing along with my sales and junior dev.\nOnce we have scaled to a larger team, do you have any recommendations as to how implement the things you've mentioned, as I have noticed some devs are really good at what they do, but don't take business & client requirements as a priority when developing.",
                "author": "MeatBoyed",
                "score": 4
            },
            {
                "body": "Hire good folks from India. If you hire cheap, you get cheap.",
                "author": "QuotheFan",
                "score": 4
            },
            {
                "body": "Yeah that is where it kinda does go to shit.\n\nThis is where the knowledge of seniors and leaders really shines. They should have enough experience to identify the core parts of many apps and be able to extract that into a boilerplate designed for their use case (also, basically all of the public boilerplate templates that others publish will lack some critical area, like testing or linting or state management).\n\nSomeone has to be opinionated/senior enough or have enough autonomy to say “we do it this way for this reason” and achieve consensus among other contributors. There will always be a certain bias but a leader will be able to recognise that bias, the benefits and shortcomings, and work with others to bring it all together in a way that everyone can find common ground.\n\nIt doesn’t have to be perfect or spend months of effort on. Instead, set a baseline foundation that can and should evolve over time, leaning into its benefits and addressing its shortcomings. ",
                "author": "skt84",
                "score": 4
            },
            {
                "body": "They find you after a while. You can start by looking at recent funding rounds on crunchbase. But don’t send out automated emails send 10 good ones instead of 1000 bad ones\n\nAnyway, anyone delivering serious web apps not POCs in under 6-months is probably shipping poor product. I will caveat that with I’m usually called in to fix shitty builds. Usually involves full tear down and re-tooling of the architecture",
                "author": "Atomic1221",
                "score": 4
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 4
            },
            {
                "body": "Every agency I've worked for has had their own library or custom framework that they developed organically as a function of time.\n\nEach time a problem is solved or a feature is implemented the solution becomes part of the library, so the next time another client needs the feature the agency can leverage the prior solution. It becomes a matter of configuration as opposed to re-development.\n\nAs time goes on the library begins to snowball, and as it increases in size and functionality you start to see a proportional decrease in turnaround time for new projects.",
                "author": "moinsdemagie",
                "score": 3
            },
            {
                "body": "I work in enterprise and not rapid development startup, but I spin up multiple products a year for different aspects of our business as they arise.  The #1 time saver for us was to build a full site template with user management, permission and module management, a scaffolded and seeded database, and fleshed out terraform scripts.\n\n  \nAnytime we do dependency updates or structural changes, the template gets updated to match. \n\nSetting up a new product is all of 10 minutes of work, after that is determining the new architecture to drive whatever features are being asked for.  99% of the time a webapp with users is going to be required, so that cuts out a huge part of the work.",
                "author": "Rivvin",
                "score": 3
            },
            {
                "body": "There are several ways to reduce delivery times\n\n- Cut corners\n- Hire more experienced engineers (more engineers doesn’t mean quicker turnaround)\n- Plan things well and improve communication, most of the bottlenecks are related to communication\n- Try not to be too smart about things, this often leads to actually taking more time to do stuff \n\nIn short you have to find the inefficiencies in your process and remove them, most of the times cutting the time means cutting quality though, so be aware of that and plan for it\n\nA lot of startups fail because they’re obsessed with being efficient and planning for the future\n\nPlan for the present, fix it in the future is a better way of doing it, future proofing is nice if you have infinite money - find a balance that works for you and always think about how you’re going to fix things when you’re going to need to do it",
                "author": "heraIdofrivia",
                "score": 3
            },
            {
                "body": "We have a internal component library that is hosted on GitHub Packages. With a detailed docs portal for each component and how to use it in each situation. \n\nJust set a brand in the config provider and it will switch up all the colours. Have specific components for layout styles like if they want 2 columns or if they want a grid.\n\nCuts down the Dev time so much when building out new features.",
                "author": "BigManufacturer9247",
                "score": 3
            },
            {
                "body": "Support. especially point 5.",
                "author": "DryVehicle210",
                "score": 3
            },
            {
                "body": "This exactly, companies just promise this to get the job and then it takes 4 times as long",
                "author": "flashbang88",
                "score": 3
            },
            {
                "body": "How are you finding the clients if I may ask?",
                "author": "LastGuardz",
                "score": 3
            },
            {
                "body": "I focused my specialties on what I'm better at, business & engineering - managing clients is a chore for me. So I paired up with a mate who is a well connected salesman that likes managing clients & interactions. Just make sure they understand software & tech well, luckily that wasn't an issue for me.",
                "author": "MeatBoyed",
                "score": 3
            },
            {
                "body": "Ship iteratively. Make sure to skip the ~~agile~~ scrum bullshit. That'll only slow you down. 🫡",
                "author": "fkih",
                "score": 3
            },
            {
                "body": "There, I've fixed my comment.",
                "author": "fkih",
                "score": 3
            },
            {
                "body": "This, right there.",
                "author": "Automatic-Branch-446",
                "score": 3
            },
            {
                "body": "What’s wrong with php?",
                "author": "rainst85",
                "score": 3
            },
            {
                "body": "I agree with everything said here; even contributed modules are open source. That being said, Drupal does have a bit of a steep learning curve, but once learned it’s pretty easy to use.",
                "author": "Karekeshka",
                "score": 3
            },
            {
                "body": "Nothing.",
                "author": "clearlight",
                "score": 3
            },
            {
                "body": "Idk if this is appropriate to ask but can you share more about how to find clients? I'm at a point somewhat as you are right now but really struggle to find new clients. Tks in advance!",
                "author": "DarkUnlucky8424",
                "score": 2
            },
            {
                "body": "1. understand the problem and reduce scope and deliver quality on what is actually valuable. (this would cut down most of dev time even though it is not directly related to development.) imo most time to solution a problem(where the output is code) is spent to understand the actual problem. communication is hard. coding is easy part.\n\n\n2. trust your developer on what they think realistic timeline is. i am not sure if you are experienced developer or not. but if you are not, it might give you more context on why things take \"long\" by being in the trenches with the team and observe what is blocking them. it could very much be the client is blocking themselves or lack of communication or complex requirements or you have unrealistic expectations such as oversimplification (oh we are building dashboard for our clients why can't we speed up development for one client that asks for realtime data vs some other clients that require complex visualization but with polling - it's just a dashboard right? no it is not. you could make an argument on everything is sales then all you need is a sales platform. and no it is not. generic solutions give you generic result, no one is going to be happy with generic result in a such competitive world) \n\n\n3. good teams(people) over process and tools and techniques. trust them or fire them.\n\n\nbonus, speak to your team about this. they would have the most context to the concerns you have. everyone else is pretty much guessing on what your problem is. ",
                "author": "InformalMix8880",
                "score": 2
            },
            {
                "body": "I think you have a lot of good answers here, so just to know more, which stack do you use?",
                "author": "MatheusBIGG",
                "score": 2
            },
            {
                "body": "I use Tailwind with PrelineUI library, that helps with delivering beautiful frontend fast. \n\nIf you need support to implement that to your projects - contact me I may help 😄",
                "author": "mzrsocial",
                "score": 2
            },
            {
                "body": "Build everything as an API?",
                "author": "everandeverfor",
                "score": 2
            },
            {
                "body": "Body shops are not startups",
                "author": "gdanov",
                "score": 2
            },
            {
                "body": "I’m assuming we are talking about early stage startups. \n\nLet me talk about my startup and how we are able to deliver quickly:\n1. Founders aren’t limited by a 40 hour work week. Should it be this way? No, especially not for ICs. But as an owner, especially the first 18 months, I worked until I felt I did what was needed to be done for tomorrow. I would never have, expect, or ask one of my employees to do this, nor would I expect you to.\n2. We don’t get paid until we have a product. \n3. Our employees own parts of the business. So all incentives are aligned. \n4. We build things using the technology we are best at, not what our customer wants \n5. We don’t have to scope an entire project before starting work, or agree on a scope of work at all. We build what we need to build as we need to build it. \n6. The art of the bodge. We have thousands of automated tests, but sometimes you just need something to work. That type of decision is easier when I don’t have a client to report to. We can get it in production and add tests once we know it works. \n8. We are only ever building one thing, our product. We understand how our product works, what our market is, who our customer is. This allows us to be more autonomous and execute more quickly.\n9. Our test suite pays dividends. As we develop more features and expand the product all the work we did on tests before ensure nothing breaks. Investing that time when shipping for clients will really slow you down. \n\nWhat I would do is figure out where in each project you are spending the most time. All advice people are giving you is poorly advised because we don’t know where you are spending time.\n\nHow much time is spent requirements gathering. My team spends less than a few hours requirements gathering. How much time do you spend bootstrapping code before feature development. How much time do you spend in meetings each week. My team has 3 team syncs with the entire company for 30 minutes each and 1 engineering meeting directly after that. I have 1 1:1 with each employee and that’s it. 3 hours total of meetings and even that is pushing it. But all the meetings are also streamed in time so that we only have to break flow once. (A meeting from 9-9:30 then from 10-10:30 with lunch at 12 really means no one will work until after lunch.)",
                "author": "dabuttmonkee",
                "score": 2
            },
            {
                "body": "Hey, \n\nCut client delays, give them deadlines and limited choices. Use AI/code generators for boilerplate. Stop overengineering; ship a basic version fast and improve later. \n\nAutomate setups so you're not doing the same crap every project. If a feature isn’t core, find a tool that does it for you. \n\nBig agencies aren’t smarter, just better at skipping unnecessary work.",
                "author": "Acceptable-Area-8951",
                "score": 2
            },
            {
                "body": "Use a good framework that has all these things built in. My go to is Laravel.",
                "author": "aboustayyef",
                "score": 2
            },
            {
                "body": "Hi! It’s great that you’re proactively looking for ways to improve your development timelines. As someone who has worked on similar challenges, here are some practical suggestions to help reduce turnaround time while maintaining quality:\n\n1. Modular Architecture:  Beyond reusable templates, adopting a modular development approach can significantly cut down on development time. Build a library of well-tested modules (e.g., authentication, payment integrations, dashboards) that can be easily plugged into new projects.  \n\n2. Automated Processes: Automate repetitive tasks like code linting, testing, and deployment using CI/CD pipelines. This reduces manual effort and ensures consistent quality.  \n\n3. Low-Code/No-Code Tools: These are great for prototyping or less complex projects. They can help you deliver an MVP quickly, which can then be refined into a fully customized solution later.  \n\n4. Scoping and Communication: Spend more time upfront with clients to define clear requirements and scope. A solid understanding of what’s needed minimizes scope creep and unnecessary revisions.  \n\n5. Dedicated Frameworks or Platforms: Use frameworks tailored for rapid development like Flutter for cross-platform apps or Laravel for web apps. They have built-in tools to speed up common tasks.  \n\n6. Standardized Project Types: If many of your clients request similar features, consider offering pre-defined project packages. For example, a “dashboard package” or “e-commerce starter kit” with fixed timelines and costs.  \n\n7. Agile Methodology: Break projects into smaller sprints with well-defined deliverables. This allows you to deliver incremental value and reduces the pressure of delivering everything at once.  \n\nRegarding your questions:  \n\n1. How do larger companies deliver quickly? They achieve this through extensive resource allocation, larger development teams, and a higher degree of specialization (e.g., dedicated UI/UX teams, backend teams, etc.). They also heavily invest in automation and scalable processes.  \n\n2. Are shorter timelines unrealistic? Not at all, but they require optimization. By implementing the above strategies, you can reduce timelines significantly without compromising on quality. However, keep in mind that rushing too much can sometimes lead to technical debt, so balance is key.  \n\nHope this helps! Would love to hear how your journey progresses.",
                "author": "PuzzledEye1132",
                "score": 2
            },
            {
                "body": "I'm building a startup now. I've built a few MIT licensed products under it that fall under frameworks and tooling, but I'm building my first user facing product under this company now. Initially setting up OpenID/OAuth is a bit confusing, and having a template to clone from will be nice.",
                "author": "hidazfx",
                "score": 2
            },
            {
                "body": "This guy develops. Keep it simple.",
                "author": null,
                "score": 2
            },
            {
                "body": "Could you elaborate on that DoD statement?",
                "author": "estomnetempus",
                "score": 2
            },
            {
                "body": "I am also from India and thinks the same, Most people here just know how to land jobs by following a roadmap that helps them in interview. They know only what they have been tought. Most of them have never visited the official docs for the tools they are using.",
                "author": "JuryDesperate2699",
                "score": 2
            },
            {
                "body": "This is really insightful - through everyone's insights, relying on PM apps is very necessary in our workflow",
                "author": "MeatBoyed",
                "score": 2
            },
            {
                "body": "This is what I'm after! I've been using my own Nextjs start build of a great Nextjs boilerplate - however Ive been struggling to know specially Which systems & how to link these things in a well documented manner.\nI'm assuming terraform scrips are for code gen?\n\nAre there any resources online that detail this for me to research into?",
                "author": "MeatBoyed",
                "score": 2
            },
            {
                "body": "Keep things simple, stay connected, if you're shit at sales. Get someone more qualified to handle it",
                "author": "MeatBoyed",
                "score": 2
            },
            {
                "body": "So my stack is Nextjs, Supabase and Clerkjs for auth. I try focus on using react queries as I'm finding a better approach than server actions & API routes - they are quite insecure it's scary.\n\nIdeally I would like to use Laravel or any batteries included framework. However, ASP.Net is also appeal as I'm familiar with c# and like the structure, but haven't figured out affordable & easy hosting.\n\nReactjs, specially ShadCN is a kinda a necessity for me as I'm so efficient and simple to implement.\n\nId be interested to know your take on this stack, what you use, and why you chose it",
                "author": "MeatBoyed",
                "score": 2
            },
            {
                "body": "I mean when freelancing I did have clients where I could cover their needs with something like Umbraco or just being completely static but when working full time on established digital agencies nobody wanted something niche or simple. The majority of requests were basically people their own version of facebook/youtube/twitter. Also the amount of people who think they can get their own facebook/youtube/twitter for a 4 digit sum and have it delivered in weeks was just dumbfounding insane.",
                "author": "ButWhatIfPotato",
                "score": 2
            },
            {
                "body": "It's a joke about over thinking project management. Its done in the same companies that have to organise meetings about meetings and planning poker.",
                "author": "edhelatar",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "Old school! :) Just ask coding assistant",
                "author": "rguptan",
                "score": 2
            },
            {
                "body": "iterative shipping IS agile",
                "author": null,
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "I'll response to your edits. \n\nI don't disagree with agile methodologies in isolation. I disagree with the dogma and rituals that surround it. I think it's much more often a hit to productivity and effective output, not a fix.\n\nIt promotes expensive middlemen and excessive planning and rituals.\n\nCan it be implemented well? Sure. Is it typically implemented well? No. I've noticed that it tends to be implemented poorly by it's biggest proponents, as well.",
                "author": "fkih",
                "score": 2
            },
            {
                "body": "Cheers lads!",
                "author": "MeatBoyed",
                "score": 2
            },
            {
                "body": "I was about to say \"but PHP\"; however I am now checking out PHP and PHP isn't PHP anymore...",
                "author": "kizerkizer",
                "score": 2
            },
            {
                "body": "Dayumn! I'm definitely gonna try it out with a simple app  to get the feel of it, appricate the hell out this",
                "author": "MeatBoyed",
                "score": 2
            },
            {
                "body": "lol fair",
                "author": "LossPreventionGuy",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "You're playing on words, most of the time, devs have to deal with management's favorite child, sc(r)um. It's filled to the brim with ideology and rituals that are mostly here to give parasites a job in the well payed field of IT.\n\nThe most \"cult oriented\" aspect of scrum is the \"if you fail, it's because of you, if you succeed, it's because of us\" but there are leagues of toxic practices there. Scrum is a money making pervertion of agile.",
                "author": null,
                "score": 2
            },
            {
                "body": "I’m not well rounded enough to give you a full answer. I tend to work as a “fixer” for VC invested or VC investable projects, which I get from my rep as a successful founder, and those projects tend to be more complex. Like enterprise SaaS or SDK biz models. Some are web based but need things like wasms, c++ or rust to accommodate AI/CV etc. \n\nI’m sure the majority of projects can be done in < 3 months but those aren’t the ones I work on. Either way to answer your real question, most well planned projects can take 2-2.5x less time vs an off the cuff project.",
                "author": "Atomic1221",
                "score": 2
            },
            {
                "body": "I think the \"confusion\" simply came in the term \"agile project management,\" and when I heard that I immediately attributed it to the traditionally encompassing frameworks. I've edited my original comment to reflect this.\n\nAgile as you've described on the other hand is the prescribed mindset/philosophy around shipping software products - one whose ideals I do not disagree with in isolation. My mistake there for the misattribution of terms.",
                "author": "fkih",
                "score": 2
            },
            {
                "body": "What's your current stack?",
                "author": "Tontonsb",
                "score": 1
            },
            {
                "body": "What tech stack are you using?",
                "author": "Sharp_Independent_85",
                "score": 1
            },
            {
                "body": "By exploiting their employees and contractors.",
                "author": "ChristmasStrip",
                "score": 1
            },
            {
                "body": "How are you getting clients easily? Please share 🙏🏾",
                "author": "JohnnySweatpantsIII",
                "score": 1
            },
            {
                "body": "Frameworks often have solutions to common problems.",
                "author": "ddollarsign",
                "score": 1
            },
            {
                "body": "One of the tricks is to avoid building when you can buy or bring: some CMS platforms bring a lot of functionality to the game, like how Kentico has user management, content management, and even e-commerce",
                "author": "tnsipla",
                "score": 1
            },
            {
                "body": "A boilerplate of common features can be a very efficient starting point",
                "author": "JohnCasey3306",
                "score": 1
            },
            {
                "body": "Definitely many companies specialize in a certain niche and re-use templates or whatever reusable stuff they can to deliver products cheaper and faster than if you were to start from scratch. In fact if you don't do this then often the specialist agencies will outperform you and squeeze you out of the market.",
                "author": "Murky-Science9030",
                "score": 1
            },
            {
                "body": "They’re mostly frameworks glued together with duck tape.",
                "author": "Inuakurei",
                "score": 1
            },
            {
                "body": "1. Hire a ton of programmers and managers to rule them\n2. Yes.\n3. They do not waste a time for testing, instead they prefer YOLO releases and an continues development\n\nBasically, that's answer show us a general strategy of nowadays economics developed to meet demand, not a quality",
                "author": "vitonsky",
                "score": 1
            },
            {
                "body": "a must read: \"The Mythical Man-Month\" Book by Fred Brooks",
                "author": "Historical-Heat4083",
                "score": 1
            },
            {
                "body": "Quality, speed, cost. Pick 2.",
                "author": "coded_artist",
                "score": 1
            },
            {
                "body": "Solve this problem the same way engineers solve technical problems ... break it down, solve, and then scale.\n\nYou're right to assume you should standardize your development process around common requirements. Why custom build solutions for the same problem once you have a working solution deployed for one instance of the problem? Modularize the features so they can be treated as components of a base architecture that can be composed as needed for the client's requirements.\n\nAn assumption I'll make is that you're trying to provide a high service level and custom experience for your clients. While this sounds great on the surface, most clients would rather you deliver on shorter timelines and at lower cost. This means you need to find more efficiency ... where standardization and scaling become critical.\n\nThe best part of the problem you have is that you already know how to solve it. Connect with your team leads / senior devs and ask them for their observations on this. I bet you'll find more alignment with the needs of your devs and the needs of your clients than you'd imagine. The next part is finding ways to ensure profitability and positive outcomes for all stakeholders.",
                "author": "theDrivenDev",
                "score": 1
            },
            {
                "body": "from tech perspective, developing in house reusable project template (as was already mentioned) or purchasing some boilerplate solution on top batteries included framework helps a lot\n\nthere are a bunch available for django, laravel or rails",
                "author": "suisuaminaifu",
                "score": 1
            },
            {
                "body": "reusability, reuse components, common modules like login or dashboards. basically create a based repo then start from them that saves anlot of time.",
                "author": "DapperDate4434",
                "score": 1
            },
            {
                "body": "I can help voluntarily if you want extra hands",
                "author": "ImpossibleGuest4539",
                "score": 1
            },
            {
                "body": "I am new to it but there are really good templates present on GitHub that you can use once you are comfortable with them",
                "author": "ManashAnand",
                "score": 1
            },
            {
                "body": "They don’t it’s just your perception. Nobody can produce quality products in mystical magical speeds. If they’re telling you some other companies willing to do it in two months or a month then that company is pulling their leg and willing to deliver them a subpar product and then work on it later to fix the problems.",
                "author": "dsul3791",
                "score": 1
            },
            {
                "body": "They have previous projects which they change to your requirement.",
                "author": "mbsaharan",
                "score": 1
            },
            {
                "body": "I work for a company that's not specifically an app development studio, but we specialize in ML-related apps for a specific niche and 90% of the time it requires producing some sort of app. They've been around for \\~ 10 years.\n\nWe've had multi-million dollar contracts fulfilled by simply forking something we've worked on in-house, and re-skinning and re-integrating new endpoints. Total turnaround time 2-3 months. From scratch, those projects could easily take 6 months to a year.\n\nThe key is that your organization has produced IP that it can leverage. Every project that you do, take time to reinvest the learnings into something that can be reproduced very easily. Internal boilerplates, frameworks, components, etc. You'll be surprised how much time that saves the team.\n\nAt some point you find a niche that you can now leverage your IP to increase efficiency for.",
                "author": "jventura1110",
                "score": 1
            },
            {
                "body": "We don’t.",
                "author": "binocular_gems",
                "score": 1
            },
            {
                "body": "I own a webdevelopment agency myself.\n\nWe build web apps & websites\n\nThere is a lot of stuff that almost every web-app uses, as well a content management system to edit a website.\n\nThings like:\n\n* Logging in\n* Editable DataTables\n* Upload and store files\n* Settings\n* Having a frontend\n* User permissions\n* Editing pages or other entities (CMS functionality)\n\nThat's why we build our own CMS: [https://github.com/krazzer/kikcms](https://github.com/krazzer/kikcms), which serves as a CMS for regular websites, but also as a basis for any web application.\n\nWith this tool, we can very quickly and cheaply build any kind of webapp.\n\n>While I don’t struggle to find clients or projects, my challenge lies in reducing the turnaround time for delivering these projects.\n\nWe have opposite problems. I have no problem delivering these kind of projects, but struggle to find clients and projects :). Got any advise there?",
                "author": "krazzel",
                "score": 1
            },
            {
                "body": "One question: How do you find lead?",
                "author": "dazuwild",
                "score": 1
            },
            {
                "body": "You need a base project you can fork, something that you use as a base server setup that runs out of the box after adjusting a config file, modularize features to it, even with simingly obscure modules that you might think will never have a similar use case, force it by your architecture, whether those become maintained modules with a repo or if it stays part of that customers project. Same goes for your frontend, create components that are tested and proven, expand it overtime. Same for your rendering. This way it is also easier to update, enables modularity and hence improves maintainability. (Buzzword: Reduces Technical Debt)\n\nThe classic case for an app like that would be a cms and this type of architecture is the defacto standard for decades usually build as LAMP or with springboot and jsp.\n\nA good architecture can make or break a product line",
                "author": "adult_code",
                "score": 1
            },
            {
                "body": "So, to summarize, you need to have a great engineer or architect on your team who can design an reusable and scalable architecture.",
                "author": "Maximum_Sleep9013",
                "score": 1
            },
            {
                "body": "Simplify, rationalize, have regular incremental goals and overall heavily prioritize speed over quality",
                "author": "berlin-1989",
                "score": 1
            },
            {
                "body": "Hi there! At Diffco, we specialize in helping businesses like yours streamline development with reusable code components, efficient workflows, and advanced tools. Our expertise in custom software and rapid delivery can significantly reduce your project timelines without compromising quality. Feel free to reach out: [https://diffco.us/](https://diffco.us/)",
                "author": "VladaAtDiffco",
                "score": 1
            },
            {
                "body": "Number 5. A million times. This is why we have seniors.",
                "author": "Kyle292",
                "score": 1
            },
            {
                "body": "feel like 3 and 4 are where things go to shit. who gets to decide this. why do they pick what they pick? what biases do they have?",
                "author": "FluffyLobster2385",
                "score": 1
            },
            {
                "body": "Extra #3 if you use GitHub, they have a thing called template.",
                "author": "NOOTMAUL",
                "score": 1
            },
            {
                "body": "Sounds cool and great!",
                "author": "TSSFL",
                "score": 1
            },
            {
                "body": "I’m also a tech lead and this is exactly our approach as well",
                "author": "BankHottas",
                "score": 1
            },
            {
                "body": "I’ve personally, single handedly stood up several enterprise level apps and this list is 100% on the mark.",
                "author": "ceterizine",
                "score": 1
            },
            {
                "body": "As a lead this is 100% accurate for what we do too. Great thing about the template repo is that we also have the different layers in their own repos and can even use yeoman to build what you need. Great with basic test suites too, basically can start a project immediately.",
                "author": "Outrageous-Chip-3961",
                "score": 1
            },
            {
                "body": "Enjoyed your post. As a junior to mid level dev, do you recommend any books?",
                "author": "SmoothAmbassador8",
                "score": 1
            },
            {
                "body": "This! Can’t stress how important it is to have templates and possibly have a split for different industries to make things easier. Once you have the basic built, then it’s easier to delegate junior resources to take on new projects and do most of the dev work.",
                "author": "stalkmemore",
                "score": 1
            },
            {
                "body": "you’ve shared some solid points, especially around replicating patterns instead of duplicating work. That approach can really streamline development.\n\nCurious about your thoughts on balancing speed with flexibility—when time-to-market is critical, how do you decide whether to build from scratch or leverage frameworks/tools that might introduce some constraints but save dev hours upfront?\n\nAlso, regarding juniors on early-stage projects—have you found any mentorship strategies that help them ramp up without slowing down initial velocity?",
                "author": "Such_Advisor_7280",
                "score": 1
            },
            {
                "body": "This is such a plugg bro!",
                "author": "MeatBoyed",
                "score": 1
            },
            {
                "body": "Be good.",
                "author": "TheRNGuy",
                "score": 1
            },
            {
                "body": "Can't lie, I pretty much always avoid CMS platforms - they just seem like too much overhead & don't seem to configure well for more App like projects without major config and integration issues. However I'd be interested to know your perspective to this as someone who uses them often (I'm guessing)",
                "author": "MeatBoyed",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "I think that an important work experience is SQL. Only when a dev has kept a database normal in an agile project ( embrace changes late into the development or better from version 1.0 to 1.1 (in production) ) should they be allowed to recommend MongoDb.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "When speed to market is critical you should always know what your immediate need is and how long it should last. In many cases duplication or “less efficient” work is totally okay as long as you keep your eye on when it will - not has, will - no longer be a net benefit to productivity.\n\nA UI library is a good example of “it can help us get off the ground and test the waters, but it doesn’t align or it’s too much effort to customise to our brand, and will need to be replaced”. Being aware of what the point of usefulness is early on will enable you to be prepared. Preventing surprises this way will avoid stressful refactoring, mad scrambles, crunch, expensive overtime, and burnout.\n\nSome mentoring strategies I can attest to includes:\n\n- Have a junior sit with a senior as they talk about their thought process as they go. This is quite passive learning but it lets them absorb intrinsic knowledge through observation. In many ways a senior won’t be able to articulate why they do a certain thing since it does become instinctual over time\n- Give them room to explore and make mistakes and use them as teachable moments. Rather than endless “training” resources or hoping that they pick things up naturally as they go, when they inevitably hit a roadblock, give them a 1-2hr window to find a solution on their own. Then they can talk to a senior and say “I tried this and that but it’s not working, here’s where I’m stuck at the moment”. Use that as the starting point to teach why their initial approach didn’t work and guide towards the right solution. ",
                "author": "skt84",
                "score": 1
            },
            {
                "body": "Yes! This is what I'm after. I've really seen the need for \"out of the box\" /batteries included frameworks that have already solved these common solutions and turn development into a more configuration & customisation processes that implementing large/complex systems again and again (like in Nextjs).\n\nFrom my research and understanding, Php seems offer the best experience of this, and meets most of my needs, however solutions like Wordpress & no code platforms offer too much, security risk, too little customisation, and isn't developer focused enough. Does Drupal relate closely to this or is it more like a framework, like Laravel",
                "author": "MeatBoyed",
                "score": 1
            },
            {
                "body": "The ignoring priority is sometimes the sign of not understanding the why. If you like management books, extreme ownership is a good one even though it explains everything twice at least like the american renovation shows.",
                "author": "Lengthiness-Fuzzy",
                "score": 1
            },
            {
                "body": "Terraform is basically infrastructure scripting.  It lets us deploy the scripts through devops pipelines to automatically create and network the resources we need.  So in this scenario, the scripts would set up the web app server, api servers, file storage and databases.\n\nAfter that its just a matter of CI/CD rolling out the webapp code and shitting all the scripts into the database.\n\nThis is something I could go on about forever, but you get the gist.\n\nWhen I ran my startup we didn't do this, and looking back goddamn I wish i had documented and scripted stuff better lol",
                "author": "Rivvin",
                "score": 1
            },
            {
                "body": "I'm from a Data Science background so I don't use or know deep enough about dev but in my learning/personal projects I'm using Vue+NUXT because of its simplicity.\n\nBut from what I'm studying (like I do a lot of research about frameworks cause I like to see the \"battle about the better stack\" lol) yours seems the more stable and hyped one, but Laravel is kinda \"reliable and organized\" ones. But that's my humble impression from random conversations. You should try some minor projects with Laravel for smaller customers, maybe you find a niche or more enjoyable time doing it. But thats me, nowadays I'm just incentiveze ppl to do more what they want ![gif](emote|free_emotes_pack|grin)",
                "author": "MatheusBIGG",
                "score": 1
            },
            {
                "body": "Oh that's really cool! But I'd rather have local clients, and already found a solution :)",
                "author": "krazzel",
                "score": 1
            },
            {
                "body": "You could also start an inhouse engine for reusable template and start extending it with every project job taken",
                "author": "Ok-Secretary2017",
                "score": 1
            },
            {
                "body": "Yes, I have heard this too many times.",
                "author": "LastGuardz",
                "score": 1
            },
            {
                "body": "What do you mean? I've been doing this job for 10 years. I'm now often the guy that gets called in to make the bootstrapped code scale, so I've seen a lot of it.\n\nYou can get good enough to churn out shit code on a simple infrastructure in a single language quite quickly, but complex ones across multiple languages take more time to learn and get good at. Most people are unaware how little they know, and I'm sure I am too quite often.",
                "author": "erm_what_",
                "score": 1
            },
            {
                "body": "It depends on what tools you’re using. I come in to fix complex projects where there’s always something risky eg using an open source library for  web streaming which doesn’t work but would save you 2 months of time vs building a custom one via webrtc — but it ends up that you had to custom build it anyway because the client needs multiple streams open at once.\n\nBasically there’s generally some client req that makes using an off the shelf solution non-viable or only known to be viable/non-viable after implementation. I prefer the approach where you custom build the highest core competency of your business because it’s likely to be non-standard anyway. Save yourself the headache of wasting 2 weeks - 2 months building around something off the shelf, then retooling it for a month only to go and rebuild from scratch. \n\nThe whole point of a successful product is differentiation. So the top 1-2 things that are differentiated you should approach from a custom build out perspective while using off the shelf for everything else like auth or push notifications etc\n\nI would say it takes 4 months on average to build a valuable b2b SaaS business without the bells and whistles like billing and user management and sso. That may spike to 6-12 months easily if it’s highly technical like 3D modeling or supporting old file formats from the 80s.\n\nMy final answer is it depends on how complete the definition of production is at start and depends on if the definition of production changes throughout the build.",
                "author": "Atomic1221",
                "score": 1
            },
            {
                "body": "The learning curve is a lot easier than it used to be now it's working with Symfony under the hood.",
                "author": "Automatic-Branch-446",
                "score": 1
            },
            {
                "body": "Yooo I’m dead I checked both ur profiles. Of course u guys are bitter. Keep living on this app. I can’t believe I found wannabe nerds. Wild aspiration",
                "author": "Complete_Outside2215",
                "score": 1
            },
            {
                "body": "Keep it simple while scalable allows an agile approach to coding",
                "author": "Tera_Celtica",
                "score": 0
            },
            {
                "body": "This is a great comment. I would add that for point #4 considering what seem to be your use cases, I highly recommend looking into a Ruby on Rails and React tech stack.  Development speed and ease are impressive and creating template stacks is a breeze.",
                "author": "KaratePlatypus",
                "score": 0
            },
            {
                "body": "Very well said, you couldn’t have explained that better",
                "author": "ceirbus",
                "score": 0
            },
            {
                "body": "He stated his credentials because he cares about what he is saying and wants others to take him serious. You guys are in an echo chamber of toxicity. You don’t know who this individual giving his perspective which is based off of his experience, yet you guys berate for someone being proud of their experience. I’ve been coding since 2011 and know what it’s like, especially since I was 10. I have made some good accomplishments that I’m personally proud of and I know how others judge especially due to age. He may or may not have the problem with age, I don’t know, but what I’m telling you again is my perspective. Your vibe attracts your tribe and to see the downvotes shows that this isn’t going to be received well, but for those that it resonates with, I’m glad to respond against such toxicity. This guy wasn’t even doing anything, not harming you nor anyone else to deserve such negativity.",
                "author": "Complete_Outside2215",
                "score": 0
            },
            {
                "body": "I have no idea what your point is. no one suggested he adopt the  scrum framework. I asked if he had a project manager. I didn't suggest he adopt the scrum framework. \n\nyou don't like the scrum framework. okay. it has nothing to do with agile project management. \n\nyou've invented an entire line of conversation that never existed.\n\nI'm not angry, im confused why were four threads deep and youre arguing with yourself",
                "author": "LossPreventionGuy",
                "score": -2
            },
            {
                "body": "and I didn't edit my question, it's been the same question over and over. which of the twelve agile principles do you disagree with? \n\nand your answer is \" I don't like scrum\" \n\n... okay ... ? what the fuck principle is the scrum principle? not my fault you don't understand the difference man",
                "author": "LossPreventionGuy",
                "score": -2
            },
            {
                "body": "I don't know what YOU are talking about but I was very clear about what I was talking about. I asked you which of the twelve agile principles you disagree with.",
                "author": "LossPreventionGuy",
                "score": -5
            },
            {
                "body": "no. agile isn't bullshit. bullshitters hate being agile because it demands results, and bullshitters can't deliver results.\n\nif you don't like being agile, tell me which of the agile principles you disagree with. Is it \"working code over comprehensive documentation\" or something? you really like confluence documents?\n\nyou disagree with \"responding to change over following a plan\" ? you disagree with \" Our highest priority is to satisfy the customer\nthrough early and continuous delivery\nof valuable software.\"\n\nor\n\nWelcome changing requirements, even late in\ndevelopment. \n\n?",
                "author": "LossPreventionGuy",
                "score": -6
            },
            {
                "body": "you are confusing agile with something else, and I can't help you. agile has no dogma or rituals.",
                "author": "LossPreventionGuy",
                "score": -6
            },
            {
                "body": "You have more clients at the same time you are searching for jobs i have seen your previous post  how come that be true..? This is scam",
                "author": "Independent_Lynx_439",
                "score": -9
            },
            {
                "body": "It depends what the stack is. React, Firebase and Node will be quicker than Postgres, Terraform, Python, Angular and Swift simply because there are less languages and moving parts.\n\nGetting good at creating and building the right stack will take years. You need to do a lot of real projects, make a lot of mistakes, have a lot of false confidence early on, then finally realise you know things.",
                "author": "erm_what_",
                "score": -9
            },
            {
                "body": "I asked you a specific question. you avoided it. which of the twelve agile principles do you disagree with? why didn't you answer that? \n\nagile does not prescribe any meetings. prove me wrong. my\nfind me a single sentence, just one, in the agile manifesto that says you should have meetings. if you need the link to it (since you've obviously never read it) let me know",
                "author": "LossPreventionGuy",
                "score": -9
            },
            {
                "body": "Not cringe just confidence",
                "author": "Complete_Outside2215",
                "score": -15
            },
            {
                "body": "cringe",
                "author": "LossPreventionGuy",
                "score": -28
            },
            {
                "body": "wow. you've got rights to a gold mine but have never panned for gold. \n\nI'm a senior engineer with a track record of getting shit done...\n\nit's 1am here, on Christmas eve, and I gotta go to bed, but send me a DM with your email ..  I'll send you my linkedIn to prove my credentials and we will sort you out. \n\ntldr; your clients should see WEEKLY progress. They should be able to log in to the site and SEE what is being built and give immediate feedback about what they like and dislike. \n\nhave you heard of Agile project management? do you have a project manager running these projects? \n\nyea send me a DM, it's Christmas so I need a few days but let's zoom call next week or something. \n\nto answer your question - how do we ship complex things - the answer is iteratively. it's ... Darwin's theory of evolution... start small, and expand. constantly adding new value every day. piece by piece building LEGO blocks into rocket ships.",
                "author": "LossPreventionGuy",
                "score": -33
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1688848139.0,
        "title": "I am entrepreneur that has a small business I am trying to scale. We’re moving away from a custom coded platform (MVP1) to a no-code / low code web application (MVP2) I am in the process of building. I am not an engineer, but how likely could I learn enough web dev to manage MVP2?",
        "author": "avatar_cucas",
        "id": "14ueht8",
        "selftext": "Heyo! I am an entrepreneur that’s been in the music industry x startup space for a while. I’ve made a career move where I want to get closer to “tech x creators” and have found a pretty lucrative niche I am super amped about. I get to help creatives and a build useful web application that is actually being used and helping people. We have product market fit and validation and a very solid growth strategy. The hard part is the current website is breaking (it‘s JS and PHP) and I can’t scale rapidly without worrying about it breaking. Our cash flow isn‘t at a point where I can comfortably higher a quality full-time engineer (ya’ll ain’t cheap) but with a no-code / low-code app I’ve put together the skeleton for I can scale pretty quickly to a point where I can raise (we already have two very serious investors and a prominent record label with a “participation right” due to an accelerator we did with them)   \n\n\nI am in the process of hiring no code / low code engineers to help us put together all the moving parts, it’s not super complicated, but obviously takes time to do it right and as someone who doesn’t know coding I am at the mercy of foreign independent contractors.   \n\n\nOnce the new web application is done it’ll be a combination of webflow, active campaign, Auth0, typeform,  zapier, two no code applications, stripe, and Airtable. My question is how likely could I learn how to manage Webflow (CSS, HTML, JS) as well as some of the more backend automations and relations like Auth0 and Zapier? I just want to be able to fix my own copy, create and add my own marketing pages, manage and create the SSO between the apps, manage that integration of various apps and marketing and data needs and so fourth. Almost like a full stack no code engineer I guess? My skill set is on the business development, revenue growth, partnerships, marketing, client management side and I have little to none coding experience so I am just trying to get enough experience to manage MVP2 of my small little growing startup.   \n\n\nAny advice or resources or reality checks is super appreciated! ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/14ueht8/i_am_entrepreneur_that_has_a_small_business_i_am/",
        "num_comments": 9,
        "comments": [
            {
                "body": "This might not be the feedback you want to hear, but seems like your time is better spent on the strong part of your skillset instead of learning webdev basics to achieve your goal.\n\nIt seems like you are already hiring foreign developers for cheap and that was what I was going to suggest for you to do, maybe coupled with contracting a more senior developer for a few hours (not more than 5) a week to oversee the project and make sure that your freelancers are going in the right direction with what your product should be.",
                "author": "TheYuriG",
                "score": 2
            },
            {
                "body": "Oh damn, it seems like you already previously tried to follow my advice. In that case, try taking a full stack Udemy course on 2x speed just so you have an overall grasp of how the stack should work. The exposure is the most important part, then you can later just rewatch a specific section on 1x speed if it ends up being relevant for your product.",
                "author": "TheYuriG",
                "score": 2
            },
            {
                "body": "Damn, nice to know. Hope your product works out, man. Get back to me in 3 months to let me know how it went. :)",
                "author": "TheYuriG",
                "score": 2
            },
            {
                "body": "TIL that php has one thread per request. Maybe your coders did no proper SQL transactions.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "i appreciate this, i’ve tried this and spent too much on trial and error leads and teams - hired a friend who could build / consult for me and it turned out to be a colosal waste of money and time, have tried a few teams that didn’t work out. me being non technical is holding me back so i want to learn enough to be deadly, i also think it would help me level up in a good way, but i am in no way trying to do it all myself and become the engineer behind it \n\nMVP2 is just to safely scale to a place where i can find a CTO to join",
                "author": "avatar_cucas",
                "score": 1
            },
            {
                "body": "i wouldn’t know cause i don’t know code ¯\\_(ツ)_/¯",
                "author": "avatar_cucas",
                "score": 1
            },
            {
                "body": "I just mean that you don’t need to leave php in order to scale. Facebook and pornhub run on php.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "love this !! i’m like watching zapier and weblow courses case they have their university \n\nthrough posting this i found someone who might be able to help me finish the build and is willing to document a lot for me and also teach aspects of it all \n\ni feel like that ^ plus a full stack udemy course would be great, thank you !!",
                "author": "avatar_cucas",
                "score": 1
            },
            {
                "body": "Facebook and Pornhub both make $1B+ a year and can afford engineers that know php lol",
                "author": "avatar_cucas",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1706631265.0,
        "title": "Platform for user management / billing?",
        "author": "fiddlermd",
        "id": "1aes3mr",
        "selftext": "I have a product that runs on a php backend but is otherwise 95% frontend. I an considering a move to NextJS or similar, but also would consider staying with php for this purpose.\n\nWhat I need is something that'll do user management. That means auth, signups, billing (subscription billing specifically) and an easy api to tie user data/billing data into my product. I'd also like it to be flexible enough that I could set up something like \"parent/child\" accounts or enterprise accounts where one account is billed for sub-accounts and such.\n\nI am currently using something called AMember but it's very limiting and a bit awkward to use.\n\nIdeally, I'd like something that I just host on my server, but would consider some sort of SaaS solution as well.\n\nThanks!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1aes3mr/platform_for_user_management_billing/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1725488553.0,
        "title": "Just Bombed a React Interview",
        "author": "Hamperz",
        "id": "1f96fux",
        "selftext": "I finally managed to get an interview after tons of applications and immediate rejections. However, this was though a recruited who reached out to me. The job was for a pure frontend React position and I studied my buns off ahead of it. I've been working as a frontend dev with some backend chops for a few years now but only using Vue and PHP (mostly Laravel) so I spent a ton of time learning React through developing. In a couple weeks I built out a CMS from scratch using Next + Supabase and felt so confident going into the interview.\n\nDuring the interview I crushed every React question thrown my way and used examples from my experience. Then the live coding part came... I had submitted a form on Codepen using React and walked through the code and made the updates they wanted. The last thing they wanted me to do was write a mock Promise and that's where I tripped up. So much of my experience in the last few years has been with some fetch API and not writing actual raw promises. I fumbled horribly and my confidence was shot so things got worse... Eventually they helped me through it and it worked but it was soul crushing.\n\nI know there are a lot of products/platforms out there to help prepare for coding interviews but I don't know which to go with. I realize there's always going to be a \"gotcha\" part to these interviews so I want to prepare for the next one.\n\nDoes anybody have any recommendations or experiences with any of these platforms? Or even just stories of similar experiences :)\n\nEdit: I definitely did not expect this many reactions and I'm super grateful for all the motivating and reassuring comments! I've always loved the online dev community for this reason but have never really leaned on it. Super appreciated for everyone that has taken the time to say something and I'm more motivated to continue becoming a better developer and interviewee.",
        "score": 367,
        "url": "https://www.reddit.com/r/webdev/comments/1f96fux/just_bombed_a_react_interview/",
        "num_comments": 165,
        "comments": [
            {
                "body": "Doesn’t sound like you bombed. Just got hung up on one part.",
                "author": "dpidk415",
                "score": 607
            },
            {
                "body": "I'd agree. Also in these situations the hiring party should be assessing how you react (lul) to situations where you don't know the answer. Your character and ability to learn are hugely important in terms of being a good team mate. Of course you still need a sound technical base, depending on the seniority of the role.\n\nYou definitely didn't bomb it though my friend, just take some learnings and move forwards.",
                "author": "visualdescript",
                "score": 156
            },
            {
                "body": "Learn JavaScript not react :)",
                "author": "Beneficial_Ear4282",
                "score": 155
            },
            {
                "body": "They just wanted you to write ```new Promise(...)``` and resolve a setTimeout and some fake data or something?\n\nNot knowing the promise API isn't a good reason to reject an otherwise good candidate.\n\nThey must have someone else that completed it fully or with better soft-skills already.\n\nDid they give you a comprehensive why they rejected? Or was that the sole reason?",
                "author": "barrel_of_noodles",
                "score": 129
            },
            {
                "body": "Lol. I wouldn't say you bombed it. Ask me to write promises right now, I can't. I know what they are and I know that If I want to send multiple requests and wait for all of them to complete for example before I move on, I can do that with promises but I don't have the syntax on the top of my head. Im sorry, but who does? Seriously??? I can work with Python, JS, C++, have years of experience and yet every time I have to set up a new Django project I google what the URL configuration looks like, it's just not something I remember, even though I perfectly well know what it does and how important it is. The docs are there for a reason. Everything is googleable nowadays, it would be a shame if they deny you for not aceing it right away...",
                "author": "No_Indication_1238",
                "score": 98
            },
            {
                "body": "heh that's definitely my biggest takeaway.. amazing how years of working in frameworks doesn't really teach you JS",
                "author": "Hamperz",
                "score": 73
            },
            {
                "body": "I've been rejected for the same thing, but that was years ago when Promises were still new. You can't know everything, but just for reference, native promises are super simple.\n\n`let results = await new Promise((resolve, reject) => { ... your code ...})`\n\nIf you have multiple requests use Promise.all, which just takes an array of promises\n\n`let [result1, result2] = await Promise.all([Promise1, Promise2)`\n\nThere. Now you know native Promises. There's of course some other pieces to them (chaining, and error handling are the big ones), but that's 90% of what anyone will use.",
                "author": "bagel-glasses",
                "score": 55
            },
            {
                "body": "You know how most technical interviewers are. If the candidate doesn't immediately solve every question exactly like the interviewer had in mind then the candidate is obviously just a dumb imposter and therefore must be rejected. Admittedly I used to be like that before I grew up quite a bit.",
                "author": "JoeBidensLongFart",
                "score": 46
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 41
            },
            {
                "body": "Yeah this was definitely done to test your panic mode",
                "author": "ntr89",
                "score": 34
            },
            {
                "body": "Sadly, you're not the first one to make this mistake. I started learning web dev in 2019 and specifically avoided frameworks and libraries in every size or shape possible.",
                "author": "Hirayoki22",
                "score": 32
            },
            {
                "body": "Depends on what “write a mock promise” means.\n\nCould be “write a non-native implementation of Promise” which wouldn’t actually be a terrible interview question for a senior “needs to know deep JS” interview.\n\nYou could get something like \n```\nnew MyPromise((resolve) => setTimeout(() => resolve(\"world\"), 100)).then((s) => console.log(`Hello ${s}`)\n```\nAnd have to write an implementation of `MyPromise` that gets it working, while explaining the things you’re missing out like catching & finally etc",
                "author": "monkeymad2",
                "score": 31
            },
            {
                "body": "The idea of testing you for syntax seems so stupid to me. It's 2024, you don't have to remember specific syntax, you just google that shit. The only thing worth testing for is how you think and approach problems and solutions.\n\nIf you need a promise, and you haven't written promises in ages, you will find an example in 5 seconds, and move on.\n\nI've been a frontend developer for 6 years now, and remembering syntax is still my weakness, my brain is just bad at it, and it doesn't matter.\n\nIf I ever find myself in a position to interview someone, I will test how they think and approach problems. Not if they write correct syntax in an uncomfortable and unfamiliar environment.",
                "author": "-CerN-",
                "score": 30
            },
            {
                "body": "I still have to look up basic stuff all the time, and I make a lot of money writing JS.",
                "author": "wronglyzorro",
                "score": 26
            },
            {
                "body": "I'm sorry but I have to be honest, I'm not able to answer this question without asking for help.",
                "author": "Devnik",
                "score": 25
            },
            {
                "body": "I've had live code tests recently where I performed about as well as OP but I was still rejected. I wish him the best and maybe he did enough to get the offer, but it's 100% a sellers market right now and they are sometimes asking delusional levels of perfection, especially if there are multiple shortlisted candidates. Doesn't help if the feedback is also vague sometimes too.  \n \nAs the top comment said, best to learn JS inside and out.",
                "author": "Milky_Finger",
                "score": 22
            },
            {
                "body": "Not really. I'd expect an experienced frontend developer to know this, but if they don't remember the exact thing, it's no big deal, I'm sure they can google it and remember the whole thing in like two minutes.",
                "author": "Fine-Train8342",
                "score": 18
            },
            {
                "body": "To answer your question... Try https://GreatFrontEnd.com, I built it to help front end engineers in interview preparation. It contains exercises related to implementing JS polyfills, among others.",
                "author": "yangshunz",
                "score": 17
            },
            {
                "body": "You definitely will, but the chances of you writing new Promise(resolve, reject) over fetch() is almost zero, so people naturally forget things they never use.",
                "author": "budd222",
                "score": 16
            },
            {
                "body": "For live coding tests, always ask if you're allowed to use resources like Google to look up API documentation. In practice day-to-day you'll always have access to the internet, so a good evaluator will appreciate your demonstration of your skills in unblocking yourself, especially under time constraints.\n\n\nAnd if you get really stuck, ask the interviewer questions. \"I'm unfamiliar with what you're asking for, can you be more specific?\". Worst case, admit you're stuck and save your time for the next parts of the interview/challenge. If I'm interviewing someone, showing humility and keeping your composure in the face of failure is also valuable information.",
                "author": "Madscurr",
                "score": 15
            },
            {
                "body": "Thanks! And you are totally correct. I will still forget the exact syntax in about a few hours, but I guess that is just me :(",
                "author": "No_Indication_1238",
                "score": 15
            },
            {
                "body": "Or stop asking stupid fucking interview questions, if they’re hiring him for a pure front end React position he does not need to be able to re-implement the Promise API from scratch in front of someone he needs to be able to create React apps and use the already existing Promise API. ",
                "author": "MrCrunchwrap",
                "score": 14
            },
            {
                "body": "This is definitely the way to go. Unfortunately I've just been in framework world for a while now and got tripped up on the basics. It's definitely more important to have a stronger grasp on JS than the modern frameworks.",
                "author": "Hamperz",
                "score": 14
            },
            {
                "body": "pocket yam tan sleep party like follow obtainable school plough\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": null,
                "score": 14
            },
            {
                "body": "Piece of advice. In the future explain how you don't usually work with raw promises and a lot of modern frameworks provide methods that do the heavy lifting around promises. Explain how In this situation,  you'd likely just Google to get a quick reminder. Explain what a promise is instead and how you'd want to use it or how it's useful. Every dev at every level Googles things at some point.",
                "author": "kameelyan",
                "score": 13
            },
            {
                "body": "So a great way to acknowledge your stumble and have some class is to write the interviewer a thank you note a day later. Admit that the question threw you for a loop for a moment, and that afterwards you were a little thrown off. I would try to focus on that question about the mock Promise and mention a way you could have implemented it better, or a scenario where you've interacted with that previously.\n\nA lot of companies don't just want you to be perfect in everything, they want you to admit mistakes, learn from them, and maintain your professionalism throughout.",
                "author": "kylethenerd",
                "score": 13
            },
            {
                "body": "Eh… imo simple things like this is that it can easily be looked up and won’t take up much longer than knowing it off the top of your head. It’s better to know what a Promise is, how to handle errors etc. that’s far more important. As long as you can pseudocode and explain your answer, it shows you can problem solve - you just might not know how to get there for vanilla JS (which is easily solved in this case) since everything is abstracted out nowadays. But I understand both sides of the argument, the interviewer might only see the surface level metric, and unfortunately that’s not usually the best metric in finding good candidates.",
                "author": "ItsTacoLaco",
                "score": 13
            },
            {
                "body": "Seriously. Someone familiar with Observables could Google that and figure it out in 15 minutes.",
                "author": "alkaliphiles",
                "score": 13
            },
            {
                "body": "Great response, as a Lead Dev who tries to break candidates' momentum, character and knowing how they would find a solution is what we look for.",
                "author": "RickZebra",
                "score": 12
            },
            {
                "body": "As an experienced engineer who has taken interviewing as a serious dimension of the field to hone, please everyone, put actual _thought_ into the goals and challenges of the tech talent hiring problem.\n\nWe can do so much better, but it starts with breaking cycles.",
                "author": "mypetocean",
                "score": 12
            },
            {
                "body": "Same. I can't live code without google and I know that sounds bad. Bubble sort? Yes, I have some vague memory of implementing it, yes, I know you bubble a number to the right or left or something using recursion or if you wanna flex how you can save some RAM and time, a few for loops but I couldn't write it right now. Let me google what the algorithm did and I will have it done in less than 2 minutes, but am I really expected to memorize the whole CS degree curriculum for an interview?",
                "author": "No_Indication_1238",
                "score": 11
            },
            {
                "body": "And in no way is my comment disputing that.\n\nI actually haven't written a promise for quite some time. We're using graphql through urql and useQuery hook in our current project.",
                "author": "-CerN-",
                "score": 11
            },
            {
                "body": "What do you suggest would be a passing reaction to panic mode? “May I call a friend?”",
                "author": "yvcdkkp",
                "score": 11
            },
            {
                "body": "heh I guess I'm just being a bit dramatic. I completely agree though, I constantly google stuff and have been a professional, full-time dev for about 8 years now. Live coding just always makes my stomach turn.",
                "author": "Hamperz",
                "score": 9
            },
            {
                "body": "Doesn't mean I'm copying and pasting code wildly. But I forget things I don't write fairly regularly, and need to see an example to remember.\n\nHad to look up padStart() and padEnd() earlier today. Can't remember the last time I used that for something. I just knew there were functions for padding, and that's all I needed to remember.",
                "author": "-CerN-",
                "score": 9
            },
            {
                "body": "Standard javascript dev",
                "author": "xxMasterKiefxx",
                "score": 9
            },
            {
                "body": "You didn’t bomb that at all. I’ve had candidates choose their preferred language for a coding exercise and still passed them through to the next round after slipping up. One guy froze up on arrays so I asked him to talk me through it which he did so I said good enough for me. \n\nIf the team you’ll be working for doesn’t take into consideration that candidates get nervous or anxious then you shouldn’t want to work there. Keep your head up, you’re doing fine.",
                "author": "codesmash",
                "score": 8
            },
            {
                "body": "I read JS as jack sh*t in your sentence and was unfazed and in complete agreement with you, lol. ",
                "author": "ampersandandanand",
                "score": 8
            },
            {
                "body": "On my first job interview, I got a question about writing SQL queries - I was kinda scared as I thought the question might be something advanced. I just asked if I can use google.\n\n  \nThe question was actually trivial (select \\* from whatever limit 1)\n\nBut anyway they said that it was a big plus that I actually asked for googling because googling everything is just the way to go. Nobody just writes production code using pen and paper",
                "author": "brzez",
                "score": 8
            },
            {
                "body": "I've somehow gotten away with never having to do a technical interview like that, and the idea of doing one terrifies me. I think I'm pretty good at my job, great actually. But put me on the spot like that? I feel like I'd fall apart.\n\nIt sounds like you did a pretty good job overall and just tripped up on one thing.",
                "author": "mca62511",
                "score": 7
            },
            {
                "body": "So I have used promises/async-await/observables in my technical screenings.\n\nHave in mind, if I have 10 candidates and 9 other candidates know what Promises are and know how to use them, the one guy who doesn't is going to stand-out.\n\nUnless that 1 out of 9 shows something ***else*** remarkable, I have 9 other candidates to  choose from.  \nWhy settle for someone who has 80% attributes when there are 9 other people who hit 10 for 10?\n\nPromises **will  be** used where I work. It is fundamental in many API driven content. Where you have a page that could be calling 3-4 different APIs to paint a select list, a navigation toolbar, user notification, you will be actively be using promises or observables.\n\nWhile I don't have someone write it out, I will ask for the difference between promised vs observables, the specific use cases. And I'd set up race condition scenario. E.G. What happens if you pull from API 1 in a select list, and choose options in that list to render another piece of content.\n\nSo I do expect someone with 4YOE experience to be versed in this. And I am not looking for framework specific implementations. I want to know if the person understands the JS fundamental.  Like what happens if you call one API to get a list of cities then get that city zip code to call a second geo-location API to get nearest stores. Like what happens if the first API call fails? How do you trap that?",
                "author": "originalchronoguy",
                "score": 7
            },
            {
                "body": "Why would you reject a promise chain?",
                "author": "thaddeus_rexulus",
                "score": 7
            },
            {
                "body": "My brother in Christ, I got nervous and fucking FORGOT the ‘DISTINCT’ key word in SQL for my interview, similar situation it was the one thing I ended up getting hung up on but I still made it, so my hopes for you are higher than they were for me and somehow I still made it",
                "author": "77SKIZ99",
                "score": 6
            },
            {
                "body": "what are your ideal responses to this? I apply for junior front end roles and when this happens, I remain calm but don't know how to express that in words.",
                "author": "Bulky-University-908",
                "score": 6
            },
            {
                "body": "man who died up your ass",
                "author": "IllegalThoughts",
                "score": 6
            },
            {
                "body": "never said I didn't know it, just that I couldn't live code it",
                "author": "Hamperz",
                "score": 5
            },
            {
                "body": "I am so old that I once worked with a guy who has started out writing code in a book of squared paper. His version of hitting \"compile\" was to send the book to be typed up onto punched cards and submitted to be run overnight. One typo and the whole thing would crash, and he wouldn't even know untill the next day. I think about that every time I get annoyed by intellisense interfering on a line I haven't even finished typing yet.",
                "author": "pineapplecharm",
                "score": 5
            },
            {
                "body": "I bombed one so bad they stopped halfway through. The question was something about effects and what order to do things and I’m just not good at pulling up documentation in my memory. I was at ~9years total experience at that point. \n\nSo don’t worry! We all goof",
                "author": "-bubblepop",
                "score": 4
            },
            {
                "body": "# When you're applying for a job, you're not just applying, you're competing with other candidates.\n\nSo when people say \"I wasn't chosen for this stupid reason\" or something similar, remember that it's not the company's obligation to give you the job, it's their obligation to choose the best candidate and u were not.\n\nStrong words, I know. But sometimes they need to give you a little tough love so you'll be better next time. When they reject you for whatever reason, keep trying, remember that sometimes your application gets lost in the crowd even if you're better than them, or sometimes you don't win a race but maybe the next one.",
                "author": "os_nesty",
                "score": 4
            },
            {
                "body": "Points for that, interviews are pretty stupid nowadays, as if internet was a non existent thing in your day to day,... Heck even books",
                "author": "Beneficial_Ear4282",
                "score": 4
            },
            {
                "body": "For the most it’s simply knowing what to google.",
                "author": "pink_tshirt",
                "score": 4
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 4
            },
            {
                "body": "Same here and I’ve written promises many times. I don’t know about what is meant by a ‘raw promise’ though. They probably just wanted to see more about you handling errors but I’m just speculating here.",
                "author": "britnastyboy",
                "score": 4
            },
            {
                "body": "Exactly. I deal with promises constantly but it’s extremely rare that I’m calling the Promise constructor. Whenever I do, I have to remind myself what that API is like",
                "author": "BloodAndTsundere",
                "score": 4
            },
            {
                "body": "I'm guessing using the constructor that takes a callback.\n\nnew Promise(resolve => setTimeout(resolve('hi'), 1000));\n\n  \nSo many of web apis are event driven it seems odd your only use of promises was fetching data - that means you weren't writing any other event handling code.",
                "author": "natmaster",
                "score": 4
            },
            {
                "body": "It was the writing that I forgot, I know the concept and have used and applied it but honestly I just froze. I talked through it and showed understanding but couldn't get it to work in the final few minutes I had in the interview.",
                "author": "Hamperz",
                "score": 4
            },
            {
                "body": "I’ll say this about learning platforms—I’ve used most of them. I think [learnjavascript.online](https://learnjavascript.online/app.html?id=1435) is by far the best one. Mix of teaching and exercises, with spaced repetition and a very very extensive list of lessons. \n\nAlso, who the fuck is making g you write a promise instead of async/await? You would not do that in production code. Async/await is just better.",
                "author": "stormthulu",
                "score": 3
            },
            {
                "body": "I had a similar experience except kinda opposite; I have experience with react/angular and reviewed beforehand but the interview was completely vanilla JS. There were a few questions where they wanted me to set up apis and fix a broken UI but it was vanilla js with DOM manipulation which I had not prepared for. I was miffed because I felt they were just looking for an experienced js dev who could rattle off js trivia and not a well rounded dev who was good at problem solving but not great at memorizing js syntax. But oh well. even the best devs have failed some interviews. I guess I’ll find something some time or another",
                "author": "vrt7071",
                "score": 3
            },
            {
                "body": "You far from bombed. Bombing would mean you didn't even make it to the live coding session.\n\n\nTo me on the spot live coding tests are shitty and don't resemble at all how someone will actually code or work. \n\n\nMissing one small piece that is easily something you could learn seems like an odd thing to reject someone for. \n\n\nJust learn promises for the next one and put it in your wheelhouse.\n\n\nAs far advice for the next interview. Don't hesitate to reach out to the interviewers to thank them for their time and ask if there's anything they think you could improve on.\n\n\nAlso good companies don't have gotcha parts in interviews. In my experience.",
                "author": "omgdracula",
                "score": 3
            },
            {
                "body": "If you were honest about not knowing but you tried anyhow, I wouldn't worry too much about it. I always ask a question or two that I think the candidate won't know, mostly to see if they can say \"I don't know\". Admitting you don't know is the first step to learning, and your pride could cost the prospective employer a lot of money.",
                "author": null,
                "score": 3
            },
            {
                "body": "Dude you’re fine … promises are hard",
                "author": "jande48",
                "score": 3
            },
            {
                "body": "Is this a mid level role? I would doubt self proclaimed multi-years experience but can't write a promise. It's not a syntax remembering thing it shows to me your experience in javascript framework might be less than what is advertised on your resume, hence makes me have doubt on their character and would probably prefer other candidates.",
                "author": "vcii_vcii",
                "score": 3
            },
            {
                "body": "Oh man, I have to Google mock promises whenever I have to implement one. And that's only if I can't find my code to copy it from the last time I did one.",
                "author": "xDominus",
                "score": 3
            },
            {
                "body": "That's when you say \"I don't typically work directly with promises as there are built in tools that handle that for me.\"  That being said, you should probably be able to explain the concept of a promise",
                "author": "jabeith",
                "score": 3
            },
            {
                "body": "Unfortunately, there is rarely a 100% rate of getting the job from any given interview. Thinking it will definitely happen is a little premature. You need to be interested in the position and be qualified and the employer needs to select you from a vast selection of candidates. \n\nIt's possible there were more interesting candidates available and they went with someone else. \n\nBut depending how recent this interview experience was, if you didn't get any news, I would wait a little before calling it a dead lead.\n\nI would definitely practice to make sure I got the interview question figured out for the next interview. That's how you improve your interview skills, through practice.",
                "author": "dphizler",
                "score": 3
            },
            {
                "body": "Yeah I would absolutely crash any live coding task in an interview, that's brutal. \n\nAre these common? Most interviews I've had have been scenarios that you complete prior to the interview and then talk them through your logic at the interview.\n\nThat said all my dev jobs have been enterprise roles of varying types.",
                "author": "mindsnare",
                "score": 3
            },
            {
                "body": "I'm commenting, so that I can come back when op updates that they got the offer. Good job, OP!",
                "author": "one_more_black_guy",
                "score": 3
            },
            {
                "body": "You dont get it... is no reason to reject a good candidate if it where the only one... but if they got 2 good candidates and one cant write a simple JS code? They will go with the one who can.",
                "author": "os_nesty",
                "score": 3
            },
            {
                "body": "Harsh words appreciated! I totally get it and have been on the other side hiring many times so I know how these things can go.  It is definitely a good learning opportunity on how to react and ways I can improve in the future.",
                "author": "Hamperz",
                "score": 3
            },
            {
                "body": "I was thinking the same thing in the moment haha literally wanted to say 'this is when I would look back to previous code to find how I did it before'",
                "author": "Hamperz",
                "score": 3
            },
            {
                "body": "man, doing ANY coding while you have someone looking over your shoulder is a nightmare heh.",
                "author": "mindsnare",
                "score": 3
            },
            {
                "body": "I feel like bubble sort is a bad example here. It's usually the first sorting algorithm devs/students learn simply because it is so easy to remember and write down. You also wouldn't use incursion as opposed to 2 for loops. \n\nMerge-/Quicksort are the ones that are easy to understand but a bit harder to implement.",
                "author": "Varzul",
                "score": 3
            },
            {
                "body": "word",
                "author": "Hamperz",
                "score": 3
            },
            {
                "body": "Interesting. \"I don't know how to do that, but I can learn\" easily sounds like what I'd say in a situation like that",
                "author": "Bulky-University-908",
                "score": 3
            },
            {
                "body": "You use a Promise or you write your own promise?",
                "author": "mattjspatola",
                "score": 3
            },
            {
                "body": "Food for thought. Thank you",
                "author": "Bulky-University-908",
                "score": 3
            },
            {
                "body": "I kinda struggled too to write promises without looking a code snippet, but it was because I wasn’t using them at all unless I needed to do a fetch with a simple async await or then catch, the thing is that now I can write any type of promises and I wouldn’t say by memory, it started making sense to me, and it just took me just a couple of days of reading, watching a couple of videos, asking a few stuff to chatgpt and practicing, if you are comfortable with JavaScript it shouldn’t take you that long to learn it. I have 1.5 years of experience with js btw :)",
                "author": "Satankid92",
                "score": 2
            },
            {
                "body": "Relax. As a senior (for a long time now lol) that interviews devs from all camps, we want to see how you dig out of it, how you adapt outside of your comfort zone. I guarantee that I can find that one obscure React/Vue/Angular question that even the most experienced dev won’t immediately know or have experience with.",
                "author": "JohnnyEagleClaw",
                "score": 2
            },
            {
                "body": "I would never fail someone in an interview for that.  No one knows everything, and with Google or ChatGPT available next to you, knowing the concepts is more important than remembering an exact syntax.  Nailing it all except one is an excellent outcome.  Failing all except the promise, would be bad.\n\nThe most important thing is to admit you forgot how to do it, and offer to talk through the problem or get some google help with the syntax and function names.",
                "author": "Psychological_Ear393",
                "score": 2
            },
            {
                "body": "master js first then react",
                "author": "sheeda-shampoo",
                "score": 2
            },
            {
                "body": "live and learn, some people will interview to aptitude , not whatever bs you can remember",
                "author": "therealdongknotts",
                "score": 2
            },
            {
                "body": "It's as much about knowing how to interview as it is knowing how to code. It's a bullshit process, but it is what it is. You'll now be more prepared for the next one.",
                "author": "crazedizzled",
                "score": 2
            },
            {
                "body": "I feel you man, keep your head up and keep trying",
                "author": "Affectionate-Year-94",
                "score": 2
            },
            {
                "body": "I would bomb the hell out of this test, but I can ship working full-stack code all day. If they want somebody who memorizes syntax, they'll get them. I use AI and google and write software quick and understand how it works.",
                "author": "No-Transportation843",
                "score": 2
            },
            {
                "body": "You did nothing wrong. I learned promises a year or so ago and I already forgot about their syntax because I don't use them on my job. I'd rather know they exist and then use google whenever I need to implement them.",
                "author": "Competitive_Talk6356",
                "score": 2
            },
            {
                "body": "They want to see how you behave in a situation where you have to rely on help, either from docs or from colleagues. Either way, I hope they saw the effort and dedication of yours, that makes a lot.",
                "author": "noid-",
                "score": 2
            },
            {
                "body": "Best to practice what to do in an interview when you don't know the answer to one question - you'll never know everything and yet might still be the best person for the job!",
                "author": "Luke2Launch",
                "score": 2
            },
            {
                "body": "I've been stressed with interviews as well. Good ones are more about communication skills (such as between interviewer and interviewee) and understanding how the person being interviewer problem solves.\n\nAs others have said, take this as a learning opportunity and a badge of honor. You'll do better on your next opportunity, you did great on this one!",
                "author": "EWU_CS_STUDENT",
                "score": 2
            },
            {
                "body": "Learn javascript not react, I cracked a nodejs interview for back end role without even knowing node, I just answered all the questions with js point of view. Now I have 60 days to learn nodejs",
                "author": null,
                "score": 2
            },
            {
                "body": "I would recommend leetcode javascript questions there are hand full of these around 100 interview questions. They will teach you intricacies of promises and generator and proxies.",
                "author": "earlyryn",
                "score": 2
            },
            {
                "body": "I totally feel your pain! I’ve bombed a live coding interview before too, and it can be super demoralizing, especially when you're crushing everything else. First off, don’t let it get to you too much—you’re clearly qualified, and messing up on one thing doesn’t define your abilities.\n\nFor platforms, LeetCode and HackerRank are great for general coding practice, especially with algorithm questions, but if you want something more tailored to frontend dev and React, I'd recommend checking out **Frontend Mentor** and **Exercism**. They have more real-world UI problems and can help you brush up on those trickier JS concepts like Promises.\n\nAlso, consider doing mock interviews with sites like **Pramp** or **Interviewing.io**. They simulate the pressure of live coding interviews, which can help you stay calm next time.\n\nAnd hey, don’t sweat the Promise thing—next time, you’ll crush it. We’ve all been there!",
                "author": "Repulsive_News1717",
                "score": 2
            },
            {
                "body": "It’s important to make sure your react devs know how to implement recursive tree traversal. Just in case. Can’t know react if you don’t know the basics",
                "author": "exception-found",
                "score": 2
            },
            {
                "body": "As others have said, sounds like you did well on parts of the interview and got stuck on one thing, so ya don't need to beat yourself up.\n\nTalking about promises/async programming while we're at it, they factor massively into the interviews we do at my work. How a candidate demonstrates their knowledge & application of promises often determines the level we place them at.",
                "author": "FuriousDrizzle",
                "score": 2
            },
            {
                "body": "I refuse those types of interviews these days.  Never do you need to code like that on the job so why do they test for it?",
                "author": "nasanu",
                "score": 2
            },
            {
                "body": "I've been rejected for bullshit like this. A lot of companies/interviewers have no idea what actually matters to test in an interview. If it can be solved in 20 seconds by googling and reading some stuff, it's not an important knowledge gap. Every single developer is going to be doing that all day in the real world.",
                "author": "anomaly13",
                "score": 2
            },
            {
                "body": "Yeah I couldn't write a promise right now without looking it up either. I know what they are and how to work with them though. Don't worry too much, it's a tough market out there",
                "author": "CharlesCSchnieder",
                "score": 2
            },
            {
                "body": "Boooo no I want to stay half baked forever boooo",
                "author": "weinermcdingbutt",
                "score": 2
            },
            {
                "body": "I’m learning Frontend right now and getting ready to learn JavaScript, and planned on building projects with vanilla JavaScript and then rebuilding them with a react. Thanks for confirming I am not wasting my time!! 🫶\n\nAlso OP I am nowhere near qualified to give opinions or advice but I hope you get the job! Good luck",
                "author": "EspressoOverdose",
                "score": 2
            },
            {
                "body": "That gives me hope. It’s just hard being put on the spot! I work in a chill environment from home and have time to figure things out so it was rough lol",
                "author": "Hamperz",
                "score": 2
            },
            {
                "body": "That’s rough! I’m definitely feeling better now some time has passed. It was disheartening but I haven’t interviewed for a few years so I needed to dust off the cobwebs",
                "author": "Hamperz",
                "score": 2
            },
            {
                "body": "Oh my gosh you are amazing!!! Thank you so much for this resource, I’m going to start using it right away for html & css. Spaced repetition is amazing for language learning, and it makes perfect sense to use it for learning programming languages!! Also the site looks beautiful and very user friendly. You’re the best thank you so much.",
                "author": "EspressoOverdose",
                "score": 2
            },
            {
                "body": "It's valid if you want your ideal candidate to already know about this BUT it's absolutely possible that even senior developer didn't need to work with this specific language features so far.\n\n\nLanguage features are easily learnt. It's stupid to pick candidates based on which they regualry use.\n\n\n You should look for talent, not specific knowledge.",
                "author": "OnlyTwoThingsCertain",
                "score": 2
            },
            {
                "body": "lol that's amazing. Obviously you have a good enough understanding of JS to pass the interview so I'm sure you'll do fine learning from there.",
                "author": "Hamperz",
                "score": 2
            },
            {
                "body": "This is how it's been in my experience interviewing. They will reject on the basis that the other candidate was \"stronger\", despite both candidates performing very well. Sometimes arbitrary moments in the interview will determine whether you get picked over someone else",
                "author": "Milky_Finger",
                "score": 2
            },
            {
                "body": "If it’s hard (writing code with other people) then that’s what you should practice. Then you just calmly look at the docs for Promise and discuss it while you learn it right in front of the interviewer.",
                "author": "sheriffderek",
                "score": 2
            },
            {
                "body": "HA honestly it could be interpreted either way lol",
                "author": "Hamperz",
                "score": 2
            },
            {
                "body": "Just tell the truth. We are looking for a set process of how you deal with issues. Every dev has run into doing something they never have done before. We want you to do a step by step on how you would figure out the problem or learn how to do it. This shows that you have ran into this before ( === some experience), and it gives us an ideal of your logical thought process. \n\nDO NOT just say, \"I don't know how to do that, but I can learn.\"  Most Leads are too busy to build someone from the ground up, but if you have a sensible approach it makes you trainable. Asking for help is never a bad thing, just as long as you try to figure it out for yourself first.\n\n Bonus points if you keep time constraints in mind in your awnser.",
                "author": "RickZebra",
                "score": 2
            },
            {
                "body": "Lol, well, don't say it like that. A lot of candidates do, and they get lost amongst all the other candidates.",
                "author": "RickZebra",
                "score": 2
            },
            {
                "body": "How is this bombing",
                "author": null,
                "score": 1
            },
            {
                "body": "Every single dev has stories of crashing and burning interviews. It’s super normal. It sucks. Onward and upward",
                "author": "SingShredCode",
                "score": 1
            },
            {
                "body": "Sounds like you did okay.  If I'm an interviewer I'm less concerned that you didn't know the thing as I am that you seemed to panic when you didn't know the thing. \n\nEveryone has gaps in their knowledge, God knows I do but I think it's okay to just say that's not actually something you're very familiar with, rather than lie in the fetal position on the floor sucking your thumb (metaphorically!)\n\nChin up, it sounds like it was a good interview.",
                "author": "DeficientGamer",
                "score": 1
            },
            {
                "body": "Focus on solving vanilla JS problems. There are tons of resources on interview prep questioner on Github also Leetcode for algo and DS. They have covered most of JS questions. No need of paid platforms just practice, practice and practice.",
                "author": "kexcaliber",
                "score": 1
            },
            {
                "body": "All I’d like to add is that you’re not alone.  I recently bombed an interview after spending hours of studying.  At one point I fumbled and then quickly lost every ounce of confidence I had built up.  The interview ended rather quickly after that and I didn’t hear back.  No surprise there.    After I got over myself, I realized I would have been very unhappy working for the hiring manager.",
                "author": "Really-398",
                "score": 1
            },
            {
                "body": "lol I just write a hook using async/await. If they want us to write code using .then, I move on.\n\nFor what it is worth, I have conducted a heap of tech interviews and would not fail you for that. The entire purpose of the interview for me is to work out how much you know, and get to know a bit about you + how you communicate.\n\nI also never do a whiteboard test, just chat with you, give you a scenario and hear how you would go about solving it. After you give me your solution, I then chat to you about your solution and ask you some questions around testing, styling, structure, performance.",
                "author": "No_Garlic_4883",
                "score": 1
            },
            {
                "body": "We've hired people who have bombed a part of the interview. Sometimes as the person hiring, we just need to know where you are at.",
                "author": "OutdoorsNSmores",
                "score": 1
            },
            {
                "body": "I actually have a Hackerrank React test to do next week. Fuck knows what it will be about! I've been doing React for 8 years or so, but anything live or timed and I typically get very anxious and can't deliver my best self. It's ironic because I have built startups from scratch and mentored other FE engineers.",
                "author": "Accurate-Schedule-22",
                "score": 1
            },
            {
                "body": "I've also struggled with these tech interviews, but I finally memorised tons of questions they like to ask on tech interviews after playing with JS Interview Hell - [https://www.javascript-interview-hell.com/](https://www.javascript-interview-hell.com/) .",
                "author": "niecnasowa",
                "score": 1
            },
            {
                "body": "Was the Promise a matter of using fetch, or xhr?",
                "author": "gimmeslack12",
                "score": 1
            },
            {
                "body": "Agreed. And how OP responded behaviorally to being \"helped\" by the interviewer would've been taken into consideration.",
                "author": "shak_attacks",
                "score": 1
            },
            {
                "body": "Also means that they could see you problem solve. It’s not a bad thing. ",
                "author": "isitreal_tho",
                "score": 1
            },
            {
                "body": "I would definitely reject anyone who does not know the promise api lol that’s like basic javascript",
                "author": "casualfinderbot",
                "score": 1
            },
            {
                "body": "Yea that would have been a good move, I was flustered in the moment but advice like this is awesome for the next time.",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "Good advice, I hadn't even considered that tbh but I definitely will.",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "I’ll check it out!",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "Thanks that’s great to hear :)",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "Thank you for saying that. I'm teaching a salesforce class right now, and I encourage my students to say, I don't know when they really don't know. I do encourage them to try and answer the question though. But admitting they don't know is the first step. It was very hard for them at first, however, just saying those three words, I don't know, I can feel so Rewarding sometimes. I think that's why I got rejected from a  job interview as I didn't admit that I didn't know. I also did not admit that I've forgotten some things.",
                "author": "ke7zum",
                "score": 1
            },
            {
                "body": "It has been mixed throughout my career. In this case, I submitted a bit of code and walked through it in the interview, making various changes to achieve different functionality they wanted to see. Just couldn't get the promise to work without their help cause I blanked. But the tone definitely shifted lol",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "That’s how I was looking at it, as a filter question. Granted I know what they are and explained, but botched the implementation. I’m probably being dramatic but it felt like a filter nonetheless.",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "If(!cities){notFound()}",
                "author": "Puzzled_News_6631",
                "score": 1
            },
            {
                "body": "Your interview technique is testing for knowledge not wisdom. Any good developer can learn how to use promises. That’s knowledge/experience. Not every developer can be taught advanced problem solving skills - that’s wisdom. It’s reasonable to expect developers of a certain number of years of experience to have some level of knowledge, but it should be way more important to focus on hiring developers with innate wisdom; they will be your all stars in the end.",
                "author": "vrt7071",
                "score": 1
            },
            {
                "body": "Just signed up and started going through the questions. Great recommendation! Thanks a lot",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "Thanks, I'll check them both out!",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": "I mean it is simple in knowing the basics of how it works.   I would expect a candidate to walk through the process of how to implement it.  Having syntax memorized for implementation is not always the case.  I don't write these every day.  I would have to look up an example, to remember the exact implementation, but I can walk you through and explain the process of how it works.",
                "author": "baconmehungry",
                "score": 1
            },
            {
                "body": "I've written _a lot_ of Javascript over the years. I've used the promise api. I don't remember the promise api off the top of my head and would probably need to look it up if I had to use it",
                "author": "riasthebestgirl",
                "score": 1
            },
            {
                "body": "I don’t typically use async/await with the promise api, I use one or the other. Might need to refresh my knowledge but curious why you do that?",
                "author": "quinngbh",
                "score": 1
            },
            {
                "body": "It is simply a filter question. I have about 20 in a screener. Not everyone gets all of them. I judge based on the breadth of their answers as a whole. As a I wrote, I don't care if they don't know how to write it based on proper syntax. I am fishing to know how they handle front end consuming multiple APIs at the same time to render dynamic content. How they handle race conditions and disruptions when you. have multiple nested processes.\n\nThose are real scenarios regardless of a specific language. How do you handle multiple API calls from  multiple components on the same page. You don't want to call an API 5 or 6 times. How do you handle the order of the content if one time comes in first and you click on it, what happens next? These scenario can happen in any framework. You pick \"Rick\" from the drop down in an employee menu, it is fetching and now you accidently clicked on \"Mary.\" Then Rick's data comes in. And I never phrase it any framework. I even let them choose their stack and explain how they solve these scenarios. Vanilla JS preferred.\n\nSo I give out those types of rendering issues when fetching APIs and you can then tell who has experience in this type of SPA/CSR work. As most have encountered some variation of these cases.",
                "author": "originalchronoguy",
                "score": 1
            },
            {
                "body": "Hah!! I did too! But didn’t notice until I saw this.",
                "author": "sheriffderek",
                "score": 1
            },
            {
                "body": "No I'm with you. I copy paste boilerplate code like this constantly. I can't write a promise off the top of my head, but I know exactly how and when to use them. I use try/catch/finally blocks all the time. I still don't write them by hand. Who does, when we have LLMs?",
                "author": "No-Transportation843",
                "score": 1
            },
            {
                "body": "It's mostly a style thing, but it also keeps the return values from the Promise in the scope of the rest of the function.",
                "author": "bagel-glasses",
                "score": 1
            },
            {
                "body": "definitely, years ago I struggled with just live coding basic css concepts lol meanwhile the interviewers just looked bored and disinterested and when I finished they pretty much just said \"thanks, bye\"",
                "author": "Hamperz",
                "score": 1
            },
            {
                "body": " angular sounds terrible ",
                "author": "MrCrunchwrap",
                "score": 1
            },
            {
                "body": "How would using an LLM speed up writing try/catch/finally blocks?",
                "author": "bagel-glasses",
                "score": 1
            },
            {
                "body": "Because they were talking about, \"fetching APIs to render content on a page\"",
                "author": "budd222",
                "score": 1
            },
            {
                "body": "I actually have to use it quite regularly, usually just to await a timeout in a unit test or something, but also to promisify non-async functions like when working with readable streams or old APIs.\n\nIf you're not using it at least once in a while, you probably don't do a lot of backend development.",
                "author": "Opposite-Piano6072",
                "score": 1
            },
            {
                "body": "I write one around once weekly, usually in unit tests or when trying to promisify non-promise functions. Full stack dev with nodejs and typescript.",
                "author": "Opposite-Piano6072",
                "score": 1
            },
            {
                "body": "\"I need a card in tailwind, react, typescript which has a title, subtext, and body text. Please make me that, along with a parent component that does an API query to X url with a try/catch block, then maps the data into the cards. \"\n\nI'm not asking it to write me a blank try/catch block. I'm asking it to write boilerplate code I know how to do, then going back to doing the finishing touches after.\n\nAnd tbh I use TRPC now so it's more useQuery and useMutation. Sometimes i have TRPC endpoints that do the API requests server side though.",
                "author": "No-Transportation843",
                "score": 1
            },
            {
                "body": "What do you mean? I use the Promise constructor to create a promise.",
                "author": "Opposite-Piano6072",
                "score": 1
            },
            {
                "body": "That's just using a type that is provided to you by calling its constructor. Writing your own promise would be implementing an equivalent type, ie: writing a Promise constructor and the prototype to provide the necessary behavior, so that you can construct a promise.",
                "author": "mattjspatola",
                "score": 1
            },
            {
                "body": "Erm no, it's not a type. Promise is an implementation.\n\nI understoodd this thread is not about writing your own implementation of Promise.",
                "author": "Opposite-Piano6072",
                "score": 1
            },
            {
                "body": "This is something we're talking about at my company.  In React there seems to be just too many ways to do everything to test for.  We've been discussing removing React entirely as an option on the front-end interview, but what then?  What if the applicant's primary experience is React?  It's a tough problem.",
                "author": "inermae",
                "score": 0
            },
            {
                "body": "This so much 🙏",
                "author": "JohnnyEagleClaw",
                "score": 0
            },
            {
                "body": "Yea Im being a bit dramatic but it felt like it. I froze up and I felt like I had stage fright. Reminded me of bad public speaking experiences lol",
                "author": "Hamperz",
                "score": 0
            },
            {
                "body": "That would fail an Angular race condition.\n\nIf you had a select list that only renders if there is a cities list from a fetched API. And a second sibling component (say a map)(  that depends on the select list to exist. E.G. Select list renders different maps in sibling component.  \nSince notFound() was rendered, no value list exist for city. Secondly, map component will never ever render.\n\nSo in Angular, you'd use a BehaviorSubject with an Observable. So cities will be null and exists so second map component will always render. And once the API is finally fetched after that race condition, the observable will update the cities list and draw out the select options.",
                "author": "originalchronoguy",
                "score": 0
            },
            {
                "body": "I wouldn't say I write them often, but I definitely write custom promises many times a year. I'm very curious how you never use them. \n\nAlso, why do you compare promises to fetch? Promises only relate to network requests in the sense that network requests happen outside of the main thread",
                "author": "thaddeus_rexulus",
                "score": 0
            },
            {
                "body": "If I reasoned the way you did I'd assume that you are not aware of existance of async await.",
                "author": "doker0",
                "score": 0
            },
            {
                "body": "This probably is something I expect a \"professional\" javascript dev with 2 months of experience knowing since it's a basic practice for over 8 years now and most things in the language have been rewritten to promises since then.",
                "author": null,
                "score": -4
            },
            {
                "body": "Imagine spending years of wasting to learn a framework just to get the reality check that you don't know the basic language.. must be tough man.",
                "author": null,
                "score": -5
            },
            {
                "body": "Uhhhhhhh. What",
                "author": "voxalas",
                "score": -5
            },
            {
                "body": "Chaining promises is a good way to get a PR rejected.",
                "author": "OrangeOrganicOlive",
                "score": -9
            },
            {
                "body": ">So much of my experience in the last few years has been with some fetch API and not writing actual raw promises\n\nThis, to me, shows a fundamental lack of understanding of what a promise is but let's agree to disagree. I do agree that this shouldn't be a disqualifier for a junior assuming there weren't other factors as well, I said as much already",
                "author": "couldhaveebeen",
                "score": -9
            },
            {
                "body": "Promises is basic core Javascript fundamental. You will encounter it sooner or later when fetching APIs to render content on a page.",
                "author": "originalchronoguy",
                "score": -10
            },
            {
                "body": "With this mindset you sre bound to introduce bugs 100%.\n\nYeah sure you can Google stuff, everyone does it, but filling the role as x language and not knowing common core features of said language does not help your case.\n\nLive coding is hard though.",
                "author": "runtimenoise",
                "score": -10
            },
            {
                "body": "What?  \nPromise is basic Javascript. It will show up sooner or later once you start consuming APIs from a front end to render on a page. Simply due to the fact javascript runs asynchronously.\n\nEither use async await, promises, or observables.",
                "author": "originalchronoguy",
                "score": -13
            },
            {
                "body": "Not really.. it is harsh, but if you can build a CMS in a couple of weeks but can't write a `new Promise` or `Promise.resolve`, that to me shows a pretty fundamental gap in knowledge. Now, if hiring a junior, this is fine and teachable, but anything above that it shouldn't really be happening",
                "author": "couldhaveebeen",
                "score": -14
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1747819218.0,
        "title": "I Built a YouTube Alternative to Help My Kid Avoid Screen Addiction – Update",
        "author": "thunderberen",
        "id": "1krtgc4",
        "selftext": "Hey fellow devs and parents,\n\nWe managed to keep our son completely screen-free for his first two years—no TV, no phones, no YouTube. As he got older, we gradually introduced some carefully chosen videos: slow-paced documentaries, classical music performances, and older, calm animations with meaningful storytelling. But even with strict supervision, YouTube itself became a problem.\n\nEven when I chose the video myself, the homepage and recommendations bombarded him with flashy, hyper-stimulating thumbnails. Something I didn’t want him to see. And YouTube Kids wasn’t an option (not available in our country), but honestly, YouTube Kids and other similar apps are algorithm-first platforms, filled with overstimulation, and not designed for calm, intentional viewing.\n\nI wanted an app that starts from **zero content**, and only shows what I explicitly added.\n\nSo I built [**GoodTube**](https://goodtube.io) — a lightweight, YouTube-style app with a single goal: **total control over what’s watchable**.\n\n# What Makes It Different\n\n✅ No recommendations or “Up next” autoplay  \n✅ No YouTube links or external redirects  \n✅ No thumbnails designed to bait clicks (unless you yourself add that type of content)  \n✅ Just your approved YouTube videos, playlists, and channels\n\n✅ Available as PWA for app like experience\n\nYou go to the Add page, paste a link to any YouTube video, playlist, or channel, and it appears in your own curated “My Feed.”\n\nI also built a small blog section where I write short posts about YouTube hidden gems—beautiful lullabies, gentle music, slow nature docs—things that are truly worth watching and co-viewing with your child. For example, you might read aloud to your kid a quick story about an obscure Scandinavian lullaby and then watch a peaceful performance of it. It’s designed to be a slow, mindful experience.\n\n# How It Works With My Son\n\nMy son is now a little over three. When he asks to watch something, I open GoodTube, and he scrolls through a calm, minimal interface. No cartoons by default. Sometimes he picks a music video or documentary. Often, he gets bored within a few minutes and moves on to play with his grandma or paint. That’s a **huge win** for us. I believe this setup might work well until kids are about 5, when they actively seek stimulation.\n\nSome other users have mentioned it also helps them detox from YouTube as adults—for example, to watch yoga or meditation playlists without algorithmic distractions.\n\n# Technical Notes\n\n* **Frontend**: Next.js + React\n* **Backend**: Firebase (Firestore)\n* **Hosting**: Vercel\n* Public pages (blog, homepage) are statically generated. User feeds and features are client-rendered for simplicity.\n\n# Why I Built It\n\nGoodTube isn’t meant to compete with YouTube or become another platform. It’s the opposite—it’s meant to **decrease screen time**, not extend it. If your child gets bored and walks away, that’s a feature, not a flaw. It’s not supposed to be convenient, addictive, or “sticky.” Your kids watches a video, that’s it, no auto play, you either close it or specifically navigate to another video. Done.\n\nI’d love feedback, ideas, or to hear from others trying to manage screen habits for their kids. This started as a personal tool, but if it helps even a few other families, I would like to spread it.\n\nCheck it out: [https://goodtube.io](https://goodtube.io)\n\nLet me know what you think. This post is an update to my previous [post](https://www.reddit.com/r/webdev/comments/1j0blfl/i_built_a_youtube_alternative_for_my_kid_to_avoid/): ",
        "score": 305,
        "url": "https://www.reddit.com/r/webdev/comments/1krtgc4/i_built_a_youtube_alternative_to_help_my_kid/",
        "num_comments": 83,
        "comments": [
            {
                "body": "Am I able to self-host this? I'm really interested in something like this, but am concerned about privacy and continuation.",
                "author": "travelan",
                "score": 38
            },
            {
                "body": "I have been lamenting the fact that there are no good curation tools for building a YouTube library experience without all of the algorithms recommended slop. \n\n\nThis is a great idea! Hope it lasts for a bit before Google sends a cease and desist. \n\n\nHow did you handle the app install bit? I haven't seen that before. ",
                "author": "Cast_Iron_Skillet",
                "score": 33
            },
            {
                "body": "I have no skin in the game (no kids), but I think this is an amazing concept and admirable goal.\n\nI feel like \"please open source\" is hugely valuable feedback.  If your goal is to protect children, making it self-hostable would really be a logical next step.  Being able to self host (as an option, not the default) keeps your kids' data local and completely out of the corpos' grubby hands.  Even a little gmail and firebase puts data into google's hands.\n\nFrom a less altruistic perspective, open sourcing would also get you some extra help building this into something huge.  I can see the audience for this thing (likely tech-savvy users who value privacy and protecting their kids from the tech they deal with daily) willingly and gladly contributing to the community.  And potentially throwing in some donations to keep the SaaS version running/development going.\n\nJust my 2 cents.  Well done and keep up the good work.",
                "author": "benabus",
                "score": 15
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 14
            },
            {
                "body": "I think what OP is concerned about is the risk of data leaks - if an accident happens, your information could end up exposed to the public. That, and being able to host it yourself also allows someone experienced to make some of their own changes here and there. I personally would love to use it, but I self-host a lot of my personal apps to keep control of what goes in and out.\n\nWould you kindly mind sharing the reason why you chose to have it closed source?",
                "author": "maartenyh",
                "score": 14
            },
            {
                "body": "I haven't considered it, and left it for the future.\n\nMaybe I will. But you are right, it is a valid concern. Right now I am interested in the user feedback and engagement and will see from that.",
                "author": "thunderberen",
                "score": 14
            },
            {
                "body": "What I have in my database is simply what Firestore auth gives me. It's not open sourced. Maybe give it a try ? Basically youtube data and gmail users is all this app has.",
                "author": "thunderberen",
                "score": 8
            },
            {
                "body": "I love the why behind this! What a great project! I’m still trying to keep my kid off screen, but I can definitely see myself using this to detox from YouTube for myself 😅",
                "author": "thewonderponder",
                "score": 7
            },
            {
                "body": "Oh thanks. Just a typo in the return statement. Resolved now.",
                "author": "thunderberen",
                "score": 7
            },
            {
                "body": "Awesome reasoning and cool project! When I click the 'add' button on my phone I just see a blank screen fyi",
                "author": "CharlesCSchnieder",
                "score": 6
            },
            {
                "body": "Dude what you’ve built here is absolutely incredible. I had the same idea when I became a parent but went a different route but I think your solution works way better.\n\nMy solution was to run a plex server and use yt-dlp to download videos daily from specific channels. It works great for the most part but my kid goes through the daily content pretty quickly and the downloading takes up a lot of space on the hard drive.\n\nI know a lot of parents who have wanted this type of control but had no solution so I think your idea could get quite popular. I’d post this in the parenting sub or daddit if you haven’t already.",
                "author": "FishFart",
                "score": 6
            },
            {
                "body": "I assume he means there's something in the terms of service from Google saying something you can't reskin youtube and put it on the app store. Not saying that's what you're doing, it's more that Google won't let you profit from an app which is primarily using youtube content.",
                "author": "xaustin",
                "score": 6
            },
            {
                "body": "Not a bad idea!",
                "author": "sharyphil",
                "score": 5
            },
            {
                "body": "Woah",
                "author": "arifalam5841",
                "score": 5
            },
            {
                "body": "Hey! This is really amazing solution with such a thoughtful and important reason. I am curious - what do you think about YouTube's suggestions after the video ends.",
                "author": "Intelligent_Sun7531",
                "score": 5
            },
            {
                "body": "That is a PWA with minimal configuration - it doesn't cache practically. \n\n[https://nextjs.org/docs/app/guides/progressive-web-apps](https://nextjs.org/docs/app/guides/progressive-web-apps)\n\nCheck it out.\n\n\"Google sends a cease and desist\" - what do you think could be a reason ?",
                "author": "thunderberen",
                "score": 4
            },
            {
                "body": "Legit concern and I solved it.\n\nYes, sometimes there will be autosuggestions, but the good thing is I disabled them from being clickable.  They may show up, but any links in the player are disabled. So, it is safe. No redirects. \n\nSo:\nTitle redirecting to Youtube itself- disabled\nRecommendation thumbnails on pause - may show up, but links are disabled\nSuggested videos in the end - may show up, links disabled",
                "author": "thunderberen",
                "score": 4
            },
            {
                "body": "Yes, I want users who use it.",
                "author": "thunderberen",
                "score": 4
            },
            {
                "body": "What quiet part? It’s not quiet, it’s very clear - they’ve created a nice thing and they want to share it with as many people as possible.\n\nWhat’s the treachery here?",
                "author": "JimmytheNice",
                "score": 4
            },
            {
                "body": "So needed! As a fellow dad, hats off to you. PWA looks great. I wish it could be supported on Androidtv.",
                "author": "MhilPickleson",
                "score": 3
            },
            {
                "body": "This is really lovely \n\nI built something similar which revolves around a shopping cart experience. The kids can see videos on YouTube via my YouTube store but they have to add specific videos to their shopping cart which results in an order I approve from an admin portal \n\nOn approval the video is queued to be downloaded from YouTube, and then ingested into Plex, so it’s meant to add friction and intentionality \n\nThey can, for instance, request some videos but not immediately play them, and I’ll often say “I see this chore needs to be done, can you finish it before the video downloads” \n\nI struggled to open source mine given the layers of automation I’ve built to support my workflow \n\nI really like yours though! I will give it a thorough look",
                "author": "1RedOne",
                "score": 3
            },
            {
                "body": "This isn't that hard to recreate, I'd give it an easy-medium level of complexity.",
                "author": "Paddington_the_Bear",
                "score": 3
            },
            {
                "body": "What a creativity and discipline. I applaud you!\n\nNice to hear that, and thanks!",
                "author": "thunderberen",
                "score": 3
            },
            {
                "body": "Hmmmm I wonder... let's think about this for a second. A person spent a substantial amount of their personal time to create a useful app for parents, what could they _possibly_ want to achieve by sending it to multiple subreddits?\n\nTruly a mystery.",
                "author": "JimmytheNice",
                "score": 3
            },
            {
                "body": "to even use the official youtube API (https://developers.google.com/youtube/v3), you have to jump through a lot of hoops. for example, to even get an API key, you have to submit your entire app architecture, as like a powerpoint slide, to their team, and describe it's functionality extensively, and have lots of privacy policy agreements on your site, in order to even get approved.  they re-review it on an annual basis too\n\nI did this for a small app so I could use the youtube API to download playlist contents... it was a lot of work for what is effectively a personal project\n\nIf you are scraping their website to get these resources, they might not like it",
                "author": "bzbub2",
                "score": 3
            },
            {
                "body": "It takes less than an hour to build it yourself. It's basically a list of links with embedded youtube.\n\nCool idea, but if OP is not willing to share the code / make it open source (because he probably wants to turn it into profit) someone else can.",
                "author": "oopiex",
                "score": 3
            },
            {
                "body": "Google wont let him profit of this tho",
                "author": "I_will_guide_you",
                "score": 3
            },
            {
                "body": "This is a great idea! I haven't tried logging in / on mobile / pwa, but the desktop experience is smooth.  \n\nI will second the comment about youtube's recommended videos after the current video ends, but I can't seem to go to those videos by clicking which is good.  \nI wonder if there's any way of detecting when the video ends through the embed?  \n  \nI don't have kids but will recommend to some friends who do, as they also have issues with the runaway addictive flashy-clickbait loop that kids can get in with youtube.",
                "author": "JoeTheWiltshire",
                "score": 2
            },
            {
                "body": "This is really cool, could work as a tool for schools to curate specific learning programmes without so many distractions etc.",
                "author": "Gorgottz",
                "score": 2
            },
            {
                "body": "That is an amazing solution.",
                "author": "Piece_de_resistance",
                "score": 2
            },
            {
                "body": ">\"If your child gets bored and walks away, that’s a feature, not a flaw.\"\n\nNice work OP.",
                "author": "binocular_gems",
                "score": 2
            },
            {
                "body": "Great idea. The site appears broken in iOS 15.1.1, it’s an outdated safari but since so many kids have old tablets maybe something to test on and see what you shouldn’t use. I think it’s CSS",
                "author": "saposapot",
                "score": 2
            },
            {
                "body": "As a father of a toddler we have followed the same path. Removed TVs from the house and just started very limited screen time of Ms. Rachel(helps get him talking) and 1 Bluey episode during bath. \n\nI could definitely see this being helpful once he starts trying to use devices on his own, but we don’t plan on that for a little while longer. \n\nI’ll definitely take a look and see if I have any feedback.",
                "author": "jbrux86",
                "score": 2
            },
            {
                "body": "if anyone is looking to use these ideas on the real thing, you can find almost all of these with youtube extensions. i have done pretty much the same thing on my end. no recommendations, no sidecards, no shorts, no homepage, thousands of blocked channels. i pretty much just search for what i want and then i can only see comments. everything else is disabled. highly recommend it.",
                "author": "rivenjg",
                "score": 2
            },
            {
                "body": "I just sent the link to my daughters. Thanks for building this!",
                "author": "1986Human",
                "score": 2
            },
            {
                "body": "Maybe set a cron job to auto-delete videos after X amount of time?  Maybe stick a \"keep this video\" mechanism for stuff your kid goes back to?  Could just be a text file you update manually or something.\n\nProbably not telling you anything you haven't thought of.  I like the idea, though.  Simple and hacky :)",
                "author": "benabus",
                "score": 2
            },
            {
                "body": "Look into TubeArchivist. It is built around yt-dlp and has a plugin to connect to plex. It can automatically download from a list of channels daily and Plex can auto delete after a video is watched. I use mine with a VPN in case YouTube decides it doesnt like my IP anymore.",
                "author": "dlegatt",
                "score": 2
            },
            {
                "body": "Thanks!\n\nYes, please post if you used it and found it useful.\n\nThat's the best subreddits out there for that exact topic, and I actually did post there, but I didn't hide the fact that I am self-promoting - and obviously mods took down. But when I did, the comments would be bursting in the first minutes before the post was deleted. Thanks, that means a lot.",
                "author": "thunderberen",
                "score": 2
            },
            {
                "body": "Thanks! Give it a try.",
                "author": "thunderberen",
                "score": 2
            },
            {
                "body": "Yes, actually, from my previous post the \"unhook\" extension was suggested. Which is quite nice, and I really liked its extensive and aggressive customization (you can basically wipe out the homepage feed, all recommendations - basically removed whatever you want)\n\nIt's really nice, but I think its a bit of hassle to make it work on mobile browsers. I am not even sure it will work.\n\nGoodTube is out of the box solution if you want few channels for your kids, or you want few channels and playlists on yoga or exercise to be there without any external thumbnails first thing in the morning. And its mobile first style-wise.",
                "author": "thunderberen",
                "score": 2
            },
            {
                "body": "Not open source.\n\nCreators on youtube can choose to make their videos embeddable or not embeddable. So, as long as it is embeddable, it will render in the player on other websites - which is what my app does.\n\nSo, I am not aware of other limitations. If any video becomes nonembeddable, it will just not play. I think that's it.\n\nOf course, you can never be very sure about legal implications)))",
                "author": "thunderberen",
                "score": 2
            },
            {
                "body": "Disabling the \"watch on youtube\" link may become an issue. I hope not though.",
                "author": "plusninety",
                "score": 2
            },
            {
                "body": "Boots meet face is the reason. Google is corporation and Kids are big part of how they make money. \n\nI truly hope you don't have any issues; I would like to see Google back you actually. This is the right direction. I am proud of you as a father!",
                "author": "kewli",
                "score": 2
            },
            {
                "body": "I could be wrong, but I don’t think android tv supports a browser unless you jail break it sadly.",
                "author": "MhilPickleson",
                "score": 2
            },
            {
                "body": "You can just iframe / embed their videos.",
                "author": "Paddington_the_Bear",
                "score": 2
            },
            {
                "body": "Thanks for the heads up, I actually tried this one out and saw no obvious difference (besides no tracking).\n\nMaybe in production could be different. Will check this one out, thanks!",
                "author": "thunderberen",
                "score": 2
            },
            {
                "body": "\"How dare people create a thing and then want people to use it!\" I said to myself as I type on my Apple iPad® while sipping on my Starbucks® coffee.",
                "author": "ThrowbackGaming",
                "score": 2
            },
            {
                "body": "Very nice!! Is this open source? And are there any legal limitations on how many vids you can embed in your own site?",
                "author": "takelongramen",
                "score": 1
            },
            {
                "body": "There is the YouTube Kids App that works pretty well for this also.",
                "author": "cport1",
                "score": 1
            },
            {
                "body": "Mind posting this to /r/daddit?  I'm sure they'd love it!",
                "author": "pat_trick",
                "score": 1
            },
            {
                "body": "Did you look into adapting PeerTube at all in the course of this? Just curious as it would be my first inclination I am wondering if it was rejected for some reason.",
                "author": "abeuscher",
                "score": 1
            },
            {
                "body": "Hey, is it opensource and are there any issues open? I would love to contribute since I will be boarding the dad train soon.",
                "author": "arm1997",
                "score": 1
            },
            {
                "body": "Awesome! The end of the video has some recommended videos for me, though. I don't think it's possible to change that part since its just an embedded YouTube video, right?",
                "author": "velfarre-delight",
                "score": 1
            },
            {
                "body": "You made a wrapper....",
                "author": "rubixstudios",
                "score": 1
            },
            {
                "body": "Interesting",
                "author": "Inside-Wants-Out",
                "score": 1
            },
            {
                "body": "Love this! I don’t have kids (yet), but this is an amazing product.",
                "author": "barqsHamley",
                "score": 1
            },
            {
                "body": "so good!",
                "author": "csblanchard",
                "score": 1
            },
            {
                "body": "Not bad, I just prefer the hosting either via Netlify or Infomaniak.",
                "author": "AcanthisittaMobile72",
                "score": 1
            },
            {
                "body": "What an awesome project you’ve created! Even though having kids still feels far off for me, I’ve recently been concerned about how much time future kids might spend watching online videos. The project you built completely put my mind at ease. Def saving the link!",
                "author": "Vegetable_Boat7540",
                "score": 1
            },
            {
                "body": "This is basically how my customer YouTube store works as well. But I require the kids to add specific videos to a shopping cart and submit an order, which j then improve which results in the videos going into ytdlp",
                "author": "1RedOne",
                "score": 1
            },
            {
                "body": "Thanks for the heads up, will check for sure later the compatibility with large screens. At least I could make some style adjustments for in browser view.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "That's correct. What works for now is that, yes, suggested thumbnails may appear on pause and on video end, however, since some iframe parameters being enabled, they (hopefully) are limited only to what the original creator allowed to. Secondly, none of autosuggested thumbnails, nor the suggestions in the video end, no \"Watch on YouTube\" links are clickable (links are disabled). So, so far so good.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "Thanks!\n\nMeans a lot to me.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "Thanks, that means a lot.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "Thanks for the heads up! Will look into it, most probably the feed bar slider.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "Thanks, give it a try. Hope many more will find it useful.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "OP already wrote: \"YouTube Kids wasn’t an option (not available in our country)\"",
                "author": "guitarromantic",
                "score": 1
            },
            {
                "body": "Please, of course, share or post about it if you found it any useful.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "Hi, thanks.\n\nThe ads are tricky. But I am 70 percent sure the ads may run in western regions. In my region, ads run rarely or never run. I haven't seen any ads in my YouTube app, nor in the browser YouTube, nor in GoodTube embeds. \n\nI made all possible configurations for the iframe to disable ads, but it is not 100% robust. Some configurations either work, or are outdated, but still seem to work.\n\nBut one thing I could do is to circumvent one feature (embed video as part of the playlist), which for sure disabled external links. Almost always youtube embeds show related videos on pause, and those thumbnails are clickable. Also the video title itself is clickable, and it redirects to the original YouTube link.  What I did is disable those links, so, when a child watches, the links will not redirect to other places.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "Your link can't be reached, I think there is a typo.",
                "author": "thunderberen",
                "score": 1
            },
            {
                "body": "You can right click on the suggestions and open them in a new tab.  I understand though there's no way to prevent them from showing up entirely (thanks Google!).\n\nWas wondering if you considered using the more private Youtube domain to embed from, youtube-nocookie.com.  If you use that in the embed, it gives you an embed that's not tracked by Google.  This is what Khan Academy uses on their site to prevent Google from tracking its users since some of its users are protected by COPPA.  I wonder if that might help stop the autosuggestions from showing up as well.",
                "author": "tech-mktg",
                "score": 1
            },
            {
                "body": "Or probably,   \n\\`\\`\\`  \nplayer.addEventListener('onStateChange', function(event) {   \n  if (event.data === YT.PlayerState.ENDED) window.location.href = 'https://goodtube.io/';  \n});  \n\\`\\`\\`  \nmight be a good workaround",
                "author": "Intelligent_Sun7531",
                "score": 1
            },
            {
                "body": "though i didn't tried, wanted to know does ads run on video? adding video means link or embedding here?\n\nim happy to help in coding, since now or in sometime in future will definitely need this for kids. \n\nif you want check out [https://rohnayeole.com](https://rohnayeole.com)",
                "author": "fullstackdev-channel",
                "score": 0
            },
            {
                "body": "Yes, but…\n\nThis is a screenshot of the YouTube Kids homepage (taken while accessing it via VPN): [https://ibb.co/7Jn4K9tJ](https://ibb.co/7Jn4K9tJ)  \nAnd this is my homepage: [https://ibb.co/zVj4ghBd](https://ibb.co/zVj4ghBd)\n\nThe filtering on YouTube Kids is highly questionable. Its machine made, maybe  with occasional human reviewers. But I am pretty sure it's simply algorithm driven with some minimally viable machine screening for inappropriate content. So, it's no surprise the homepage is exclusively brainrot.\n\nSecondly, YouTube Kids — like many of its alternatives — is built as an **algorithm-driven social media platform**. Yes, there are options to whitelist specific channels or videos, but I’ve heard plenty of stories where recommendations still found their way through, regardless of parental settings.\n\nThirdly, YouTube Kids is just a **subset of YouTube**. That means genuinely good content — mature yet still appropriate for kids — often doesn’t make it past the filters. With **GoodTube**, you’re free to include *any* content from YouTube that *you* consider suitable. Hopefully, YouTube Kids will eventually acknowledge its failure. For now, though, it happily promotes content that feels more like brainrot than enrichment.",
                "author": "thunderberen",
                "score": 0
            },
            {
                "body": "Okay, well good luck. I thought it was a cool idea, but I don't think your motives are genuine. I think others will pick up on that as well. You might think I'm just being a dick, but I was a potential user til I saw how you were marketing this. I'm sure there are more like me who simply move along without a word.",
                "author": "Stratose",
                "score": -2
            },
            {
                "body": "I want them to say the quiet part out loud.\n\nThere's an art to calling out shitty behavior. I find asking leading questions and playing dumb more effective than confrontation personally.",
                "author": "Stratose",
                "score": -4
            },
            {
                "body": "Is there any particular reason you are spamming this thing everywhere? It's one thing to bring up that you created it for your own needs, but you are forcing this idea into 10+ subreddits at this point and I can't help but question your motives.",
                "author": "Stratose",
                "score": -6
            },
            {
                "body": "Good thing you're not a lawyer. But I'd recommend not \"guessing\" legalize in comments.",
                "author": "WoodenMechanic",
                "score": -8
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1652383399.0,
        "title": "The Definitive Guide to Becoming a FullStack Developer (2022)",
        "author": "mini-dev",
        "id": "uo8v25",
        "selftext": "## Introduction, Background, & Disclaimers\n[⠀](https://www.simplilearn.com/ice9/free_resources_article_thumb/full_stack_banner.jpg)\n\nThe post is finally back! I've posted this guide to [GitHub here](https://github.com/aaltarazi98/fullstack-guide-2022) in case it gets taken down again.\n\nTHIS IS NOT A PROMOTION! None of the resources listed here belong to me, they are ALL FREE! I am not trying to promote myself or anyone else, just wanted to provide a resource for everyone. Thank you.\n\nHello everyone, in this post I will be writing a detailed guide on how to get a full-stack engineer job the self teaching way. This will include a more efficient version of what I did so you don't waste time. I will be going over what you need to learn, resources, and what you need to do after. It is critically important that you take EACH section to heart\n\nA little background about me, I have been a construction engineer for a year when I decided construction was not for me and I wanted to go somewhere else. I took quizzes on what I should become, I landed on fullstack development and I haven't looked back since. Since then, I have learned a lot, built great projects, made connections, worked a contract, and landed a full time job. This process took me 8 months and it may take more or less time for you depending on who you are.\n\nI want to preface this by saying, this is NOT the only way to learn full-stack development and there are many other stacks you can learn. This guide is focused on MERN & PERN which are very popular in the USA. For instance, [the Odin Project for JavaScript](https://www.theodinproject.com/paths/full-stack-javascript?) is a great alternative.\n\nDo NOT be overwhelmed with the sheer amount of content here. It is a lot, but it will all become secondhand knowledge with time. Take it one section at a time and do what you can. Now without further ado, let's get started.\n\n## Roadmap\n\nHere is a general roadmap of how your process should look like, I will provide you with resources and guidance at each step.\n\n- CSS & HTML\n- JavaScript\n- Git & GitHub\n- Build a project with Git, vanilla CSS, HTML, and JS\n- Node.js & NPM\n- React.js\n- TypeScript\n- Build a project with React.js in TypeScript\n- Express.js\n- MongoDB & PostgreSQL\n- Build a full-stack project with either MERN or PERN (or BOTH)\n- Bonus material, and projects with bonus material\n- Build your portfolio & resume\n- LC & Sending out Applications\n\nAlways remember that you need to tailor some things to what works for you. This is by no means a size fits all approach, but it will work if you follow it as closely as possible.\n\nA VERY IMPORTANT NOTE ABOUT PROJECTS: You need to build something UNIQUE and OF YOUR OWN DESIGN/STRUCTURE. Do NOT look up easy examples of projects because they will NOT get you far. You must hold yourself up to a standard. This will give you a better understanding of full stack development and systems design which is critical for a lot of jobs.\n\nNow, let's break down each section.\n\n## CSS & HTML\n\nCSS & HTML are the bread and butter of every website. They determine the overall structure, content, and looks of every website. Here are the only things you need to cover them so make sure to follow along the course:\n\n- [HTML Crash Course](https://www.youtube.com/watch?v=UB1O30fR-EE&t=1s)\n- [CSS Crash Course](https://www.youtube.com/watch?v=yfoY53QXEnI)\n\nGreat, now you know how to build a basic website. Let's move on to JS.\n\n## JavaScript\n\nIf you are a full stack engineer, this can be the only language you ever need to know, Thus, it IS critical that you come to learn it DEEPLY and understand how it functions. It is always up to you how you want to learn but I will recommend this e-Book which is FREE and EXHAUSTIVE and will contain all the info you will ever need on JavaScript as a vanilla language. You need to go through both Parts 1 & 2 to understand JS as a language and how it interacts with the browser.\n\nNot all of the book will make sense to you now, but I promise you will use its information once you move on to React, Node, and LeetCode. Furthermore, watch the event loop video which is important to understand JS in the browser and will allow you to do some cool stuff.\n\n- [The Modern JavaScript Tutorial](https://javascript.info/)\n- [What is an Event Loop Anyway?](https://www.youtube.com/watch?v=8aGhZQkoFbQ&t=1s)\n\nCongrats, you now understand HTML, CSS, and Vanilla JS\n\n## Git and GitHub\n\nGit is a version control system that allows you to manage your projects and code via versions. Furthermore, it will allow you to post things to GitHub and host them online. GitHub, which I'm sure you've interacted with at this point, is an online platform where you can share and post your code on the internet. It is crucial for hosting websites and servers. Git Bash is a CLI for Git that will allow you to execute Git commands in the terminal.\n\n- [Git Bash](https://www.educative.io/edpresso/how-to-install-git-bash-in-windows)\n- [Git & GitHub Course](https://www.youtube.com/watch?v=SWYqp7iY_Tc&t=1077s)\n\nNow that you've learned these two. Let's move on.\n\n## Build a Project\n\nNow that you learned Git, HTML, CSS, and JS, you will be building your first project. Use ```git init``` to start a project and take it from there. I will leave the details to you.\n\nFor each and every single project step in this process, you NEED to THINK of what YOU WANT to build and build it! Since this is your first project, be realistic with what you can accomplish but CHALLENGE yourself. What you have learned so far will NOT be everything you need to make this project happen. Google is your friend as you will need to visit MANY websites to learn how to make a certain thing work.\n\nHere's a big hint: there are a lot of great free API's online that you can use for your project (Star Wars API, Weather API, Google Maps API, the list goes on).\n\nFurthermore, you have to make your projects dynamic and mobile friendly. Look up CSS media queries as a starter on how to do that.\n\nChallenge yourself, prepare to be humbled, learn, and build an AWESOME first project. Start strong!\n\n## Node.js & NPM\n\nSo far, we've made JS run in the browser, but how can we run it on our computer? That's where Node.js comes in. Node is a JavaScript runtime which allows your computer to understand and run JavaScript. All you really need to understand is that.\n\nNode Package Manager (NPM) will allow you to install and manage packages via node, which allows you to customize your project with pre-built packages and services. This one is fairly straightforward and you will naturally pick it up as you're building projects.\n\n- [Node Crash Course](https://www.youtube.com/watch?v=fBNz5xF-Kx4&t=1s)\n\n## React.js\n\nCongrats, you've reached the big boy stuff. React is the single BIGGEST JS framework and the most widely sought out skill if you are looking for either a front end or full stack job. It is CRITICAL that you become REALLY good with React. Thankfully, this scrimba course IS A PERFECT FREE LEARNING ENVIRONMENT for React. Go through it step by step as the instructor says. This is how I learned React and became VERY good at it.\n\n- [Scrimba Learn React for Free](https://scrimba.com/learn/learnreact#)\n\n## TypeScript\n\nTypeScript is a superset of JavaScript that adds static typing to data. What does that mean? It means that your IDE will know exactly what data type each constant/variable will be and will make your life A LOT easier. TypeScript's power comes when you're building a project as it builds a structure where you will KNOW if your code will run. Anyone who built a JS project knows how many times you will run into runtime errors.\n\nIt's important to understand that TypeScript does NOT actually run in your browser. It gets compiled down to Vanilla JS when it's being run. It is fairly straightforward and you will mostly pick it up just by using it.\n\n- [TypeScript Crash Course](https://www.youtube.com/watch?v=BCg4U1FzODs&t=1s)\n\nLet's move on.\n\n## Build a project with React.js in TypeScript\n\nNow that you know TypeScript and React, build a React TS project using the same general guides for your first project (unique, ambitious, and awesome). Again, I will let you decide what you want to build for yourself. Make it a front end only, don't worry about servers and databases for now. Some resources to help:\n\n- [React & TS environments](https://www.youtube.com/watch?v=Z5iWr6Srsj8&t=23s)\n- [Create React App TS](https://create-react-app.dev/docs/adding-typescript/)\n\nOnce you've built a project you're happy with, let's move on.\n\n## Express.js\n\nExpress is a Node.js framework which makes running a server/API REALLY EASY for any project. Understand that when building your projects, your front end and back end will run on DIFFERENT ports. For instance, I like to run my react apps on 3000 and express apps on 4000. Now, let's learn some Express:\n\n- [Express Crash Course](https://www.youtube.com/watch?v=KgnJNJk9-to)\n\n## MongoDB & PostgreSQL\n\nMongoDB is a NoSQL database, which means each data type is unrelated to other data types and it uses it's own query language. That's not to say these schema do not interact with each other. PostgreSQL, on the other hand, is a SQL database which means it uses Structured Query Language (SQL) to work and the different tables can interact with each other. You should definitely learn both, but it doesn't hurt much if you just learn one. Some jobs will look for SQL others will look for Mongo, up to you but I recommend both.\n\n- [MongoDB crash course](https://www.youtube.com/watch?v=-56x56UppqQ)\n- [Mongoose crash course](https://www.youtube.com/watch?v=DZBGEVgL2eE)\n- [Get started with PSQL](https://www.youtube.com/watch?v=fZQI7nBu32M)\n- [SQL for Beginners](https://www.youtube.com/watch?v=5hzZtqCNQKk&t=8218s)\n- [PG Node](https://node-postgres.com/)\n\nYou should learn PG node if you want to use PSQL in your node environments.\n\n## Build a full-stack project with either MERN or PERN\n\nCongratulations, you now know everything you need to build your first full stack project. As with the other two, build something UNIQUE TO YOU. You will be putting these projects on your portfolio, be proud of them. You have two options here:\n\n- Build a PERN or MERN project.\n- STRONGLY RECOMMENDED: Built 2 different projects with both (one MERN one PERN).\n- [Here is an EXCELLENT tutorial project](https://www.youtube.com/watch?v=-0exw-9YJBo&list=PLillGF-RfqbbQeVSccR9PGKHzPJSWqcsm), again from Traversy Media. You don't need to use every technology he uses, but they are covered in the Bonus Material section so you should try to learn them.\n\n## Bonus Material\n\nThis is incredibly important if you want to stand out, here is some extra stuff you can learn to take your full-stack projects to the next level.\n\n\n- [Material UI](https://mui.com/) - A library of components that makes building frontend projects easy and uniform. Highly sought after in candidates and I use it on each and every single one of my projects.\n- [Redux & Redux Toolkit](https://www.youtube.com/watch?v=iBUJVy8phqw) - A state management library that makes managing global state in your projects really easy. Strongly recommended.\n- [React Router](https://www.youtube.com/watch?v=Law7wfdg_ls) - A library that helps manage pages on your apps.\n- [JWT & bcrypt](https://www.youtube.com/watch?v=mbsmsi7l3r4) - Straightforward packages that help secure your backends: \n- [Socket.io](https://www.youtube.com/watch?v=9HFwJ9hrmls&t=429s) - Websocketting is a powerful alternative to traditional REST API's. This establishes a two way connection between your server and frontend where the server can send information to the client at any time! It allows you to build things like multiplayer games, chat apps, streaming services, and more!\n- [Next.js](https://nextjs.org/) - A powerful React/Express framework built on top of React Router. It allows your website to be statically served by the server (SSR). Improved performance and overall security!\n\nWhatever you decide to learn (I recommend all) you MUST either build a project with all these technologies or implement them in your old projects. \n\n## Build your Portfolio & Resume\n\nTo build your portfolio, you will need to host your projects online. To do so, you must get familiar with Heroku; where you will host your servers, and Netlify; where you will host your websites. \n\n- [Heroku (Backend)](https://www.heroku.com/)\n- [Netlify (Frontend)](https://www.netlify.com/)\n- For databases, there are a lot of options for SQL, but you should use MongoDB Atlas for MongoDB.\n\nNow that you're familiar with these two, push all your projects to GitHub and use Heroku & Netlify to host them as needed. Pin your projects on your GitHub, make a clean readme for each one, and a readme for your profile to stand out.\n\nFor your resume, you will highlight your projects and all the skills you learned. [Here is mine as an example](https://www.reddit.com/r/resumes/comments/tk4r5h/hey_all_im_a_self_taught_full_stack_developer/)\n\n## LC & Sending out Applications\n\nYou may or may not need to LeetCode to land a job, however I strongly recommend it because it will teach you a lot on how to improve as a developer. Sure, it gets a lot of hate from the dev community but it's part of the game you need to play to get a job. Better to learn and work than to complain about it. Here are the only resources you need:\n\n- Go through [this repo](https://github.com/Chanda-Abdul/Several-Coding-Patterns-for-Solving-Data-Structures-and-Algorithms-Problems-during-Interviews) pattern by pattern and look up how to solve problems of each pattern until you understand them and can solve them.\n\n- [A very helpful and structured guide for LC problems](https://neetcode.io/)\n\nBuild your LeetCode experience and solve problems as much as you can.\n\nNow that you have a resume, GitHub, projects, and LC under your belt you can start applying. I won't get too much into this because it is beyond the scope of what I'm trying to convey so you will need your own research. Build a strong LinkedIn and AngelList profile. Apply to companies on both, email them, call them, sell yourself. You NEED to hustle on the jobs you REALLY want if you want to get them. After enough applications, you will land something. Each failure is a learning experience for you, so your soft skills better be sharp as a knife. Good luck.\n\n- [Referrals are King](https://www.reddit.com/r/cscareerquestions/comments/uczkay/referrals_are_king_a_shithead_guide_on)\n\nYou can still land a job by cold applications, and that's what I did. There are plenty of guides on this section online, I'll leave that research to you.\n\nAt this point, your projects and the knowledge you've built while working on them will CARRY you through your interviews. Believe in yourself and what you've accomplished.\n\n## Closing Remarks\n\nThis by no means is a one size fits all, and you will likely deviate from it a little bit and that's completely okay. I intentionally left a lot of details out because you will need to be comfortable running on your own, be ready to do LOTS AND LOTS of research to get what you want.\n\nWishing you all luck on your journeys. Stay strong, ambitious, patient, and hungry my friends. Please let me know in the comments if you have any questions or input and I will be glad to answer.\n\nEDIT: Thanks to everyone for the feedback, I will be updating this list to be better. I plan on keeping it up-to-date as much as I can so it can always be a go-to on Reddit.",
        "score": 1121,
        "url": "https://www.reddit.com/r/webdev/comments/uo8v25/the_definitive_guide_to_becoming_a_fullstack/",
        "num_comments": 166,
        "comments": [
            {
                "body": "I would argue for git and GitHub to be a bit higher up but otherwise this is great",
                "author": "catalyst2542",
                "score": 109
            },
            {
                "body": "Good work, but…[the odin project](https://www.theodinproject.com/) is still king",
                "author": "Final_G",
                "score": 63
            },
            {
                "body": "I would caution against learning mongodb, more often than not jobs are going to want mysql or mssql over mongo in any sort of corporate environment. I would also strongly recommend dipping into another backend language such as PHP, C# or Python",
                "author": "kakusei",
                "score": 57
            },
            {
                "body": "Being the most popular makes it currently the biggest, by far. Go and compare the weekly downloads on npm for instance.\n\nSure, things might change in the future but from the statistical point of view and to maximise the chance to land a job, React is the clear winner and there is and arguing, at least in the UK.",
                "author": "kazabodoo",
                "score": 37
            },
            {
                "body": "no debate odin project is great, just providing an alternative !",
                "author": "mini-dev",
                "score": 27
            },
            {
                "body": "a little hard to place git somewhere because you need to have some code before you can do much with it, it’s kind of how i learned git but definitively valuable ahead",
                "author": "mini-dev",
                "score": 26
            },
            {
                "body": ">React is the single BIGGEST JS framework and the most widely sought out skill if you are looking for either a front end or full stack job. It is CRITICAL that you become REALLY good with React.\n\nI have some issues with this.\n\n* React is not the biggest framework, it's just currently most popular.\n* It's not a framework, it's a view library.\n* It's not that critical. There are loads of jobs for Vue.js and Angular developers as well. And I'd say getting a good feel for web development in general is critical, as frameworks and libraries change over time, frontend developers should be able to surf those waves.\n\n&#x200B;\n\nBut all in all, quite an extensive list, well done! Also, I'd say that testing (unit, integration, e2e) are crucial skills for fullstack developers as well.\n\nLove the reference to Philip Roberts and the event loop. That's a great talk.",
                "author": "UnicornBelieber",
                "score": 25
            },
            {
                "body": "Y’all gotta pin this to every CS and software engineering and development thread cause I get a little miffed when I see someone ask, “hOw dO i gEt stArteD” I get it, you want help but look around man.",
                "author": "Shamal1211",
                "score": 19
            },
            {
                "body": "Why tf did you delete this post?",
                "author": "canadian_webdev",
                "score": 13
            },
            {
                "body": "What's wrong with learning C# with ASP.Net Core?",
                "author": "_Invictuz",
                "score": 11
            },
            {
                "body": "Odin isn't mostly video tutorials, and makes you think for yourself. It is geared to making you look for answers on your own if you get stuck. Also TOP has a discord to help folks out. \n\nThe two seem similar though.\n\nAlthough git is used right from the start and teaches you to use it on all the projects you build with branching and cleaning up your versions ..ect.\n\nI'd recommend picking one and sticking with it. OP has done a nice job collecting resources and presenting it cleanly. \n\nI'd say do the TOP fundamentals for HTML,CSS, and JS personally. I tried watching crash courses and nothing is explained to a degree of complete understanding. Odin will give you the tools and then make you apply them continually.",
                "author": "ZyXer0",
                "score": 11
            },
            {
                "body": "Great guide, but to learn bits and pieces of a stack takes a long time. The fastest way to become full stack developer is to pick up a batteries included / monolith / one person framework such as:\n\n-\tAdonisJS (Node and TypeScript)\n-\tLaravel (PHP)\n-\tRails (Ruby)\n-\tDjango (Python)\n\nOpinionated frameworks like these allow you to learn fast and move fast.",
                "author": "gustix",
                "score": 9
            },
            {
                "body": "fair point I just feel like right before one of the big projects would be a great time to introduce it so people could further learn and experience it via those",
                "author": "catalyst2542",
                "score": 9
            },
            {
                "body": "This isn’t true. React can run fine in the browser. How do you think people deploy statically generated pages? Some Node tools are provided if your project is bootstrapped (eg. with CRA or Next.js) but these really only exist for catching errors during development and creating Webpack builds. NPM is a given of course, since you will need some way to install packages. Other than that though, there is no reason you should require Node to run React code.",
                "author": "KickflipFB",
                "score": 9
            },
            {
                "body": "This is amazing, I'll save this one for sure\n\nOne question though, why learn NodeJS before React, aren't you supposed to learn frontend completely before making the move to the backend",
                "author": "Careless-Aspect-2371",
                "score": 8
            },
            {
                "body": "You’re being really pedantic",
                "author": "GoodLifeWorkHard",
                "score": 8
            },
            {
                "body": "For sure, give everybody easy access. I wish I had this when I started.",
                "author": "mini-dev",
                "score": 7
            },
            {
                "body": "we use php at my work mostly from inheriting projects built with laravel, though we are also starting a new project in laravel, it’s much more popular outside of north america. I still have yet to see a professional use case for mongodb",
                "author": "kakusei",
                "score": 7
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 6
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 6
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 6
            },
            {
                "body": "they took it down again so i put it on GH https://github.com/aaltarazi98/fullstack-guide-2022",
                "author": "mini-dev",
                "score": 6
            },
            {
                "body": "I agree, learning version control should go hand in hand with the project.  Basic git and github tutorials often use editing a readme as a first example so you can get into it without any code already written.",
                "author": null,
                "score": 6
            },
            {
                "body": "they took it down again so i put it on GH https://github.com/aaltarazi98/fullstack-guide-2022",
                "author": "mini-dev",
                "score": 6
            },
            {
                "body": "Great resource! This really covers a great range of practices that one should learn as a full-stack developer. [https://roadmap.sh/](https://roadmap.sh) also provides a similar roadmap of sorts for variety of disciplines.\n\nRegarding referrals, I had come across [https://www.rooftopslushie.com/](https://www.rooftopslushie.com/) a while ago, sad that it has closed now.\n\nBut again, thanks for sharing this! also provides a similar roadmap of sorts for a variety of disciplines.",
                "author": "rishabhrawat570",
                "score": 5
            },
            {
                "body": "React uses node to run on your computer. Sure you can learn React before Node, but you will not be able to use React locally if you do that!\n\nAlso, there’s nothing wrong with doing backend before frontend.",
                "author": "mini-dev",
                "score": 5
            },
            {
                "body": "As a software engineering professional who has been in the field for years, working on world class open source projects, take it from me:\n\nDo not leave your civil engineering job for \"the lure of a tech profession\".\n\nThis industry is in a bubble, and it will collapse, despite what everyone in this subreddit thinks. Every company is trying to transform into a \"tech company\" and every VC is pouring money into start-ups. That will not last. The next .com bubble burst is coming, and it's going to be a wake-up call to everyone who thought they could make a career out of building React apps.",
                "author": "sexy_silver_grandpa",
                "score": 5
            },
            {
                "body": "> It's not that critical\n\nI know it's said often enough but having strong web fundamentals will be much more beneficial in the long run than jumping straight into the latest framework/library. It's hard to listen to that as a beginner though when you want to dive into something \"cool\" and build stuff.\n\nThat's what I did and it wasn't until years later I sat down and really learned how CSS works instead of trial and error. And gaining deeper JS knowledge has made understanding what React or Vue are doing a lot easier.\n\nI'm aware these are covered in OPs post but I'd put in a note before React that says \"stop and repeat from Step 1\"",
                "author": "not_all_kevins",
                "score": 5
            },
            {
                "body": "😆 haha, that's true. Hopefully there are a ton of posts that are never posted because the people find the stickies or use the search. At least, that's what I convince myself.",
                "author": "Locust377",
                "score": 5
            },
            {
                "body": "MongoDB is arguably one of the least used NoSql databases in production. But all web dev guides recommend it because its very easy to use.",
                "author": "Mean_Video7619",
                "score": 4
            },
            {
                "body": "Removed, not deleted, so seems like the mods did it.",
                "author": null,
                "score": 4
            },
            {
                "body": "Glad you think so man! Would definitely help a lot of people.",
                "author": "mini-dev",
                "score": 4
            },
            {
                "body": "i’m sure you’re doing great, keep at it! You are an inspiration.",
                "author": "mini-dev",
                "score": 4
            },
            {
                "body": "Hi OP, I have a similar background as you, currently in Civil Engineering, with a BSoME, being drawn into the lure of a tech profession. One question, did you continue your construction position while pursuing the knowledge listed here or did you quit and take it on full time?",
                "author": "_Nocturnal__",
                "score": 3
            },
            {
                "body": "Award worthy post right here(My poor ass couldnt afford). Thank you sooo much.",
                "author": "NimbleShade",
                "score": 3
            },
            {
                "body": "You think mf's ever read sticky posts before making posts? You could post this on their foreheads with a thumbtack and they'd still make a post asking. Mods can probably relate.",
                "author": null,
                "score": 3
            },
            {
                "body": "I continued working my job full-time, it was very difficult and challenging to balance with my personal/social life but I knew it had to be done. Happy to answer any other questions!",
                "author": "mini-dev",
                "score": 3
            },
            {
                "body": "no idea what her course is like, but i strongly suggest you look over my guide and do what you haven’t done in her course. On top, I would build 2-3 projects and pay attention to everything from the bonus material on.\n\nyou shouldn’t have any problems transitioning, there are plenty of self taught people in this field. Yes, you will be able to find remote jobs just make sure to filter for them when you are applying on linkedin and angellist, there are plenty of remote opportunities. Good luck!",
                "author": "mini-dev",
                "score": 3
            },
            {
                "body": "this is a valid point, i will have to update my post",
                "author": "mini-dev",
                "score": 3
            },
            {
                "body": "hey man, thanks for the feedback! Definitely everyone’s journey will be different and my path is very US based!\n\nI actually landed my contract & full time job at the same time. I got my contract by cold applying on LinkedIn and calling the company directly, they really liked me an offered me the contract. My full time job was also by cold applying on angellist, got to speak to the start up team and they really liked me as well. This is of course after going through the interview process at both. That said, connections and referrals certainly help!",
                "author": "mini-dev",
                "score": 3
            },
            {
                "body": "I don't like GitHub pages because integrating it is annoying and it causes problems with React Router and will make multiple projects randomly intersect with each other. I prefer Netlify by large margin because it'll keep your projects separate.",
                "author": "mini-dev",
                "score": 3
            },
            {
                "body": "Useful for me! Good work and thanks",
                "author": null,
                "score": 3
            },
            {
                "body": "No u",
                "author": "omfgtroy",
                "score": 3
            },
            {
                "body": "again, what is the website? you’re making a bold claim that you can’t back up with anything",
                "author": "minicrit_",
                "score": 3
            },
            {
                "body": "Thanks so much for this.  I'm an arborist and my body won't take it until retirement age, I've been learning html and css to mastery and I'm soon going to be cracking open Javascript.  The path you've laid out looks less daunting than all of this did when I started a month and a half ago, so I hope I'm making good progress.",
                "author": "omfgtroy",
                "score": 2
            },
            {
                "body": "This is a fantastic list. Thanks for the useful insights!",
                "author": "ProgrammingNobody",
                "score": 2
            },
            {
                "body": "Post saved.  I'm doing The Odin Project, but I will definitely take a look at your links.  It never hurts to get a little extra information or a different style of information delivery.",
                "author": "Fuegodeth",
                "score": 2
            },
            {
                "body": "I have started the journey and i am going through the course of Angela yu in udemy. After the finishing the course ,what should be my steps?? \nI am aged 30 and working in Hr related jobs, how can i make a successful switch?? \nAlso, I would prefer full time remote jobs as it would be difficult to switch location because of my family obligations. \nAny suggestions??",
                "author": "Ecstatic_Depth2781",
                "score": 2
            },
            {
                "body": "What are the free options to host a PSQL database? I was forced to use MongoDB because Atlas is the only free solution I know.",
                "author": null,
                "score": 2
            },
            {
                "body": "I’m here in 2024, any updates to the original guide?",
                "author": "FutureNobodyHere",
                "score": 2
            },
            {
                "body": "yup, this is covered by the node & express sections",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "You can always give me your free daily award :D Haha thank you though!",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "no problem!",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "I did lol, it gave me what I needed to start applying myself and learn by doing",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "So people can make a more informed decision: in what ways is yours different than Odin and why?",
                "author": "InterstellarDiplomat",
                "score": 2
            },
            {
                "body": "yup, no clue why",
                "author": "minicrit_",
                "score": 2
            },
            {
                "body": "Nah fr. You’re a godsend. Thanks for helping us out. People like you are the reason why junior devs like myself cause even attempt to be better.",
                "author": "Shamal1211",
                "score": 2
            },
            {
                "body": "You somewhat read the future.\n\nI'm a bit worried as I'm 3 months into learning and the market is shitting the bed. Hopefully when I'm applying in 6-10 months, we will be in a better place!",
                "author": "Huckleberry_Ginn",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "it was a lot easier back then for any bozo to just get a computer, learn this stuff and get a job, these people just think they were smart, but back then any idiot with a computer could get a job in tech, today you still need to learn skills like that, but you also need to know how to make more than just a shit todolist, make applications that can be scalable to millions of users, master the technologies required to do so, grow your linkedin presence, attend hackathons and coding events / programs, make sure to make the most out of your community and their tech landscape, you need a lot of skill and recognition or friends to get a job in this shit market and especially the will to apply to a fuck ton of jobs, make projects that are actually useful or unique and not some shit copies of other super common ideas that already exist, then MAYBE, just MAYBE you can have a shot at an internship\n\nA CS degree would also help and being a part of any organizations that helps you pursue a career in tech, if you are going for a master's degree, you've failed to prepare, for actually getting a job for an interested company, be proficient in your problem solving skills, this is where leetcode comes in, then prepare for an assessment related to what job you're applying for, if it's web dev it might be to make a react component or something, if its machine learning it might be to implement a simple clustering or regression algorithm to a dataset in python, and then of course be prepared for any live interviews, these may be technical and require further problem solving or behavioral, or systems related, think how would you design ebay if it has to be able to serve 1 million users a week or something, etc., also dont buy books on this shit, books are useless, you learn the most by asking chatgpt to teach you, actually making projects, and actually implementing statistics, algorithms, and theory into code to truly understand it",
                "author": "tyronethebigblackguy",
                "score": 2
            },
            {
                "body": "that is kind of what happened, I read an old guide that covered like half of this stuff and did not provide the best resources.\n\nYou’re welcome!",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "Good luck.\n\nI'm worried about nuclear war now though, let's hope I'm wrong about that prediction.",
                "author": "sexy_silver_grandpa",
                "score": 2
            },
            {
                "body": "this varied a lot for me, at the beginning i would put 1-3 hrs 4 days a week. By the end, I would be coding like 4 hrs a day every day almost. Take your time with it and let your effort grow naturally. It will click eventually.",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "yes! I still am. My pay was pretty solid from the start I would say.",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "I updated it to reflect that :)",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "But why they remove?",
                "author": "TheSportBili",
                "score": 2
            },
            {
                "body": "This is a great explanation.",
                "author": "mini-dev",
                "score": 2
            },
            {
                "body": "I would disagree in terms of your job hunting method, no networking?\n\nJust blindly clicking apply is the worst way to apply for jobs in today's market in our industry, unfortunately. The bots that scan our resumes have a very strict algorithm that you need to please for it to land on someone's inbox which is a 5% chance. \n\nWhat you should be doing is reaching out and networking and getting someone from the inside to refer you to skip potentially 1-2 steps so you're straight in the interview process, also when being referred from someone they get a nice kickback bonus of usually $5-$10k for like 5mins work of them talking to their manager and if you land the job you get a job too so it's win-win.",
                "author": "OFFRIMITS",
                "score": 1
            },
            {
                "body": "Saved",
                "author": "XVll-L",
                "score": 1
            },
            {
                "body": "would it be worth doing the odin project as your main source, and then supplementing this as a secondary learning source, since its roughly the same but different type of learning? or would it be too much?",
                "author": "NotNorman112",
                "score": 1
            },
            {
                "body": "I'm curious, which career/skill assessments did you take that lead you to choose FullStack?",
                "author": "GaylorMcNaylor253",
                "score": 1
            },
            {
                "body": "I'm curious, what career/skills assessment/s did you take that lead you to choose FullStack?",
                "author": "GaylorMcNaylor253",
                "score": 1
            },
            {
                "body": "Would anybody recommend this today?",
                "author": "Remarkable-Window-29",
                "score": 1
            },
            {
                "body": "back when things used to be super easy, ah the good ol' days",
                "author": "tyronethebigblackguy",
                "score": 1
            },
            {
                "body": "How much time have you spent to learn all these languages and frameworks??",
                "author": "Unfair_Criticism_202",
                "score": 1
            },
            {
                "body": "[https://www.youtube.com/@FullStackDev-channel](https://www.youtube.com/@FullStackDev-channel)\n\nit's not for beginners, but if you're looking to take the next step in full stack automated testing and deployment you can check it out.",
                "author": "NetIntelligent7108",
                "score": 1
            },
            {
                "body": "I was searching on Google for a \"checkpoint guide for full stack developers,\" (actually it's from [roadmap.sh](http://roadmap.sh) hyperlink) and this reddit post was on top. I'm feeling overwhelmed, but I will do my best to keep learning. Thank you for this.",
                "author": "shogekelp",
                "score": 1
            },
            {
                "body": "so are you working as a full stack dev now?",
                "author": "PopularFoundation528",
                "score": 1
            },
            {
                "body": "Awesome!",
                "author": "OPM_Saitama",
                "score": 1
            },
            {
                "body": "In 2022 I think you should really be recommending `fastify` over `express`",
                "author": "j_tb",
                "score": 1
            },
            {
                "body": "Tysm!",
                "author": "lovelightwisdom",
                "score": 1
            },
            {
                "body": "This is a great entry post, I'm going to link this to anyone who asks me how to code.",
                "author": "Silent_Statement_327",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Where’s the e-book?  Great post btw",
                "author": "GoodLifeWorkHard",
                "score": 1
            },
            {
                "body": "This is a really cool guide, nice of you to take the time to put it together!  Maybe it will help some of the people who are always posting asking how to get started.\n\nThe order of everything seems pretty reasonable except I would STRONGLY advise putting Git/hub WAY higher on the list, like probably step two.  You don’t need any of the future steps to know how to use it and the only way to start feeling comfortable with it, which is essential, is to use it over and over and over again.  Definitely a habit that should be drilled into your brain basically from the start.",
                "author": "CutlerSheridan",
                "score": 1
            },
            {
                "body": "X. Find a small company desperate for help and learn on the job. Boom, professional full stack developer.",
                "author": null,
                "score": 1
            },
            {
                "body": "Very helpful list of resources, huge post! That algorithms coding patterns repo looks like a hidden gem. \n\nGood point on leaving out the details and forcing people to do their own research. I say this for a different reason though. Reality isn't always the same as what you see on the internet, especially if you come from another country. For example, I don't think companies in my area (Canada) are hiring many self-taught fullstack (as opposed to frontend) developers over CS graduates. I also rarely see a MERN or PERN stack for fullstack. It's usually a mix of Angular, asp.Net, Java or PHP.\n\nAs always, take what I'm saying with a grain of salt. It all depends on your reality, so research for yourself to figure out what's really going to get you hired. There is no single post or formula to success. Every success story might have a secret ingredient that you're not aware of. In this case, it sounds like it was OP's connections that landed him a contract and eventually a full-time job. Also 8 months fullstack self-taught is very impressive, some people struggle with getting a frontend job with that timeline. I struggled for much longer so I might be projecting. \n\nI'm actually curious of how OP was able to network and land his first gig, because getting that first job is the hardest part.",
                "author": "_Invictuz",
                "score": 1
            },
            {
                "body": "A compelling argument for learning Angular over React can be made and I do see discussion in the comments about it. I think at the end of the day knowing a full stack no matter what gives you a leg up on searching for a job.",
                "author": "TheSonOfDionysus",
                "score": 1
            },
            {
                "body": "git github should be at the top of the list, learn to use it the fastest possible. bash aswell.",
                "author": "Hiyaro",
                "score": 1
            },
            {
                "body": "Can’t you use GitHub pages instead of Netlify?",
                "author": "numbersev",
                "score": 1
            },
            {
                "body": "Just want to say, amazing post. Everyone should see this. I've got a year experience as a FE Dev and some of the resources here are exactly what I've been looking for.",
                "author": "Capital_Bid7389",
                "score": 1
            },
            {
                "body": "you‘re not going to learn everything you need to know about a topic in 1 or 2 crash courses. crash courses should be supplemental material / refresh material at most. you literally just linked a 50min video on half the topics covered. nobody will learn anything watching a 50min video",
                "author": null,
                "score": 1
            },
            {
                "body": "Lots of Bang, act smarter than everyone else, complain that everyone else is idiot. Got it! lol 😂\n\nI mean we’ve all seen these types.",
                "author": null,
                "score": 1
            },
            {
                "body": "Ahh really wish I hadn’t missed out on the post. Anyone still have the info?",
                "author": "lipgrease",
                "score": 1
            },
            {
                "body": "Why removed?",
                "author": null,
                "score": 1
            },
            {
                "body": "why is the post deleted?",
                "author": "lovelightwisdom",
                "score": 1
            },
            {
                "body": "Did a single web dev even went to college? Seems they all just learn it on udemy or freecodecamp.",
                "author": "Mean_Video7619",
                "score": 1
            },
            {
                "body": "Dishan",
                "author": "Girajja_samajja",
                "score": 1
            },
            {
                "body": "Would you suggest doing TOP then your system or is one or the other enough?",
                "author": "BigBFee",
                "score": 1
            },
            {
                "body": "Thanks for this info, I'm doing UX /UI, but I can't land even an internship, so I'm trying to see for other options where the entry point might be a bit in more need, let's say, since devs are more needed to be compared to a UX designer.",
                "author": null,
                "score": 1
            },
            {
                "body": "is computer science a good career path for autistic people?",
                "author": "s-coups",
                "score": 1
            },
            {
                "body": "Has anyone tried making a 2023 version of it?",
                "author": "rikku10",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "How long did this take you?",
                "author": "nella-arts",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "I think maybe the point was to learn some kind of NoSQL database. Yes I agree in the corporate world there’s a high chance that they will go with something like MySQL or SQL server, but that is a relational database tech. One should also know NoSQL via CosmosDB or CassandraDB or any other popular NoSQL db solution today. Yes MongoDB is losing popularity due to having a lot of issues.",
                "author": "jayerp",
                "score": 1
            },
            {
                "body": "I personally wouldn’t use this path but I wish I saw this exact post with all the comments when I first wanted to be a dev",
                "author": "II_Dante11",
                "score": 1
            },
            {
                "body": "Basically learning this \"batteries included/monolith/one person framework\" like django is better than learning Node/Express if i want to learn full stack quick and get my feet into learning data science and ml?",
                "author": null,
                "score": 1
            },
            {
                "body": "they took it down again so i put it on GH https://github.com/aaltarazi98/fullstack-guide-2022",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "wouldn't hurt",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "it is still very relevant, I recommend checking out the github repo as I made more updates there",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "about 7 months, probably 20-30 hours a week",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "yes, I have been for 2.5 years",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "Done :)",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "it’s linked under the JS section, the Modern JavaScript tutorial",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "they took it down again so i put it on GH https://github.com/aaltarazi98/fullstack-guide-2022",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "they took it down again idk why so i put it on GH https://github.com/aaltarazi98/fullstack-guide-2022",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "no idea why, but i posted it on GH if you want",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "It looks like the post was pruned by Reddit's automated system. Sorry about that, we have no control over it. Restored now!",
                "author": "Locust377",
                "score": 1
            },
            {
                "body": "it can be depending your exact role, some require communication others don’t",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "Not much has changed since, but I've made some updates to it on GitHub. You can find the link in the post.",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "yup, look at the github repo that one is more up-to-date",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "as I noted in the post:  \n\n\n\\> This process took me 8 months and it may take more or less time for you depending on who you are.",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "The post is removed for me :(",
                "author": "mental_rock",
                "score": 1
            },
            {
                "body": "golang is new generation language for backend",
                "author": "MuaTrenBienVang",
                "score": 1
            },
            {
                "body": "What if you had something similar but less comprehensive/quality when you started? Wed not have this then, I'm sorry mate, but thank you for taking one for the team xD",
                "author": "leo9g",
                "score": 1
            },
            {
                "body": "Yeah…. That’s fair.",
                "author": "Shamal1211",
                "score": 1
            },
            {
                "body": "React does not need NodeJS to work. You need Node, or any other backend languages to build the dependencies.",
                "author": "kazabodoo",
                "score": 1
            },
            {
                "body": "Appreciate the response",
                "author": "Careless-Aspect-2371",
                "score": 1
            },
            {
                "body": "Thanks so much for this, I am considering a career change into this field. I know a little about HTML since I have a marketing background.",
                "author": "AggressivePhoto761",
                "score": 1
            },
            {
                "body": "> , at least in the UK\n\nI know, right?\n\nWhen did *every* Full Stack job on LinkeDin UK become React?! Total takeover.\n\nNot the case so completely elsewhere.",
                "author": "singeblanc",
                "score": 1
            },
            {
                "body": "Yeah, it's difficult to understand what pain these frameworks/libraries are sparing you from until you've at least tried to do a little without them.",
                "author": "singeblanc",
                "score": 1
            },
            {
                "body": "Ok.  I forked it just for posterity purposes.  Thanks for the heads up.",
                "author": "Fuegodeth",
                "score": 1
            },
            {
                "body": "Thank you for the insight....!!",
                "author": "Ecstatic_Depth2781",
                "score": 1
            },
            {
                "body": "I wish you hapiness and comfort",
                "author": "Remarkable-Window-29",
                "score": 1
            },
            {
                "body": "Are you still in the industry and how has it been so far, how long did it take you to catch up in pay?",
                "author": "akarawx",
                "score": 1
            },
            {
                "body": "nice good to know i am a fresher at dallas college just starting out. im at the javascript part i wanted to know should i read thru all of that?",
                "author": "PopularFoundation528",
                "score": 1
            },
            {
                "body": ">https://github.com/aaltarazi98/fullstack-guide-2022\n\nThank you so much!",
                "author": "lipgrease",
                "score": 1
            },
            {
                "body": "Can you please share the link if possible!? It was pretty cool to go through!",
                "author": "lovelightwisdom",
                "score": 1
            },
            {
                "body": "which roles require the least soft skills?",
                "author": "s-coups",
                "score": 1
            },
            {
                "body": "OP has a website with content about trending stuff he promotes with posts like [this](https://old.reddit.com/r/learnprogramming/comments/uo7r1z/2022_the_definitive_selftaught_guide_8_months_to/)",
                "author": "upuonqs",
                "score": 1
            },
            {
                "body": "hi can we connect in one to one chat? need help regarding the same topic",
                "author": "Sensitive-Flatworm74",
                "score": 1
            },
            {
                "body": "https://github.com/aaltarazi98/fullstack-guide-2022",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "what website? that was the same post as this but it got taken down on another sub",
                "author": "minicrit_",
                "score": 1
            },
            {
                "body": "The fact that you are worried about nuclear war just defeated the point you made before about the industry. Makes me happy :-D",
                "author": "ImportantLog8",
                "score": 1
            },
            {
                "body": "Thank you so much dude!!",
                "author": "lovelightwisdom",
                "score": 1
            },
            {
                "body": "thanks",
                "author": "tommytrickyblues",
                "score": 1
            },
            {
                "body": "no clue, they wouldn’t tell me",
                "author": "mini-dev",
                "score": 1
            },
            {
                "body": "Yeah, the link is gone because that post was removed.  I guess he sort of just pasted the content into a post here, and I guess the mods eventually acquiesced, and let that be OK.  But the first one still remains removed.  I saw the website, it's there, and he was promoting it.  Breaks the spam rules.",
                "author": "upuonqs",
                "score": 1
            },
            {
                "body": "I guess you're not reading the news.",
                "author": "sexy_silver_grandpa",
                "score": 1
            },
            {
                "body": "Yeah I get out the rhetoric is scary and annoying but it’s only posturing. If anyone was seriously worried about nuclear war, russia would not strip its border of its military personnel/tanks/etc. with the baltic countries. If you really are at the stage of nuclear war, you don’t open your border to western forces like that (NATO or to become NATO). Russia do not feel threatened by the west attacking them *at all*. It’s only posturing. Anyway, a good podcast would be this one: \n\nhttps://www.youtube.com/playlist?list=PLbCbj03gdsWwxEZNyy_b0aHKFgmVT3G-3\n\nThis guy has done his homework. Best place to start for a real objective analysis of what’s going on in Russia/Ukraine.",
                "author": "ImportantLog8",
                "score": 1
            },
            {
                "body": "Ajax and/or Fetch should be around 3.5 or 4.5. Apache or Nginx should be on here somewhere. I would add an explicit section about the DOM. There should be something with HTTP and HTTP verbs.\n\nAlso, it is event loop, not even loop.",
                "author": null,
                "score": 0
            },
            {
                "body": "Hm, yeah, I suppose I am. It's my profession, the thing I'm good at and care for. And I like seeing others become competent in this field as I like having competent colleagues. So yeah, just wanted to add my nuanced take on this post. It was meant in good spirits and constructive.",
                "author": "UnicornBelieber",
                "score": -5
            },
            {
                "body": "> Being the most popular makes it currently the biggest, by far. Go and compare the weekly downloads on npm for instance.\n\nI get a feeling it's an expression thing, but I'd say being the \"biggest\" boils down to the number of features a library/framework offers. More features = bigger library.\n\nAgreed on maximising chances for landing a job.",
                "author": "UnicornBelieber",
                "score": -7
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1742087716.0,
        "title": "I built an open source Heroku that costs 1/10th as much to use",
        "author": "czhu12",
        "id": "1jca7oa",
        "selftext": "I've been working on [https://canine.sh](https://canine.sh/) for the past year. Tldr: its your run of the mill Heroku, Flyio, Render, etc, except that its fully open source, and free to use (including just using the cloud hosted option) \n\nBuilt it based on some learnings I've had in the past building startups where we quickly outgrew the single VPS type deployments, moved onto managed platforms like Heroku and Render, and watched our costs explode, with an annoying amount of vendor lockin. Our peak year, we hit over $400k in hosting costs.\n\n[Made with shots.so](https://preview.redd.it/iz76slvhcyoe1.png?width=1920&format=png&auto=webp&s=bb271c7d861b0b9748490559b719da67833cfe88)\n\nGoal for this project was to build something that indie hackers can start with and get up and running fast, but has no problem being flexible enough to scale to future needs.\n\nManaged Kubernetes is now widely available and dirt cheap ($10 / month), so you don't have to worry about, and supported by pretty much every single cloud vendor.\n\nThis lets you take advantage of a ton of things that Kubernetes does really well, like automatic healthchecks, zero downtime deployments, auto scaling, etc, while also making it easy to use for solo developers or small teams.\n\nThe additional benefit of Kubernetes is that it's also possible to host a bunch of other stuff in your cluster via Helm charts, that you’d normally have to pay for like:\n\n* Sentry\n* Wordpress\n* Metabase\n* Dagster\n* Airflow\n* MongoDB\n* Redis\n* PostgreSQL\n* … And basically every single open source tool under the sun\n\nI've been hacking around on random projects like[ Reframe](https://reframe.canine.sh/) and[ Whiteboarder](https://whiteboard.canine.sh/) for myself, and deploying it with Canine and been really happy with it so I figured it was worth a shot sharing it.\n\nWould love feedback, roasts, suggestions!\n\nSource code: [https://github.com/czhu12/canine](https://github.com/czhu12/canine)\n\n",
        "score": 590,
        "url": "https://www.reddit.com/r/webdev/comments/1jca7oa/i_built_an_open_source_heroku_that_costs_110th_as/",
        "num_comments": 59,
        "comments": [
            {
                "body": "Sounds interesting. What would you say is the biggest difference / benefit to Coolify?",
                "author": "Which_Lingonberry612",
                "score": 80
            },
            {
                "body": "good question! I’ve used coolify a bunch in the past, but not recently so my information may be out of date.\n\nCoolify runs on a single VPS instance, so there’s no way to do something like auto scaling or disk resizing. It’s also hard to run replicas in a meaningful way, so I think it’s mostly for applications that aren’t expecting much traffic\n\nCanine takes advantage of the kuberenetes ecosystem, so all those things are provided natively. If there ever comes a day where your application outgrows canine, you can drop it, and just keep the kubernetes set up underneath.",
                "author": "czhu12",
                "score": 52
            },
            {
                "body": "Great project and really nice landing page, looking forward to use it. I was looking for a solution like this, currently using  coolify",
                "author": "rohithexa",
                "score": 32
            },
            {
                "body": "FWIW, my experience with coolify 6+ months ago was awful. It didn't even automatically clear orphaned containers, leading to the system very quickly running out of storage when doing 10+ build jobs a day. It most definitely wasn't, in my experience, production ready.",
                "author": "FlipperoniPepperoni",
                "score": 27
            },
            {
                "body": "Fyi, you can add other servers to coolify to build a Cluster https://coolify.io/docs/knowledge-base/server/multiple-servers",
                "author": "mulokisch",
                "score": 19
            },
            {
                "body": "This is fricking amazing OP. I was searching for something like this too. Let me spend some time experimenting with this. When you mention cloud hosted. How does it work out. I don't see a pricing page in there",
                "author": "techtariq",
                "score": 15
            },
            {
                "body": "Yeah apologies, it was just the fastest way to get this up and running. Will add a email / password login this week! Actually have a PR open now :) [https://github.com/czhu12/canine/pull/104](https://github.com/czhu12/canine/pull/104)",
                "author": "czhu12",
                "score": 15
            },
            {
                "body": "Makes sense, it's just there is a sweet market spot where you don't pull a full ripoff like cloud vendors do but still charge a tiny bit more than hertzner and make a decent profit you know. Allowing yourself to maintain and build it long term. The less I need to do, the faster the time to value, the more I'm willing to pay and this way even you have incentive to build it out long term you know.\n\n\nLike, I'm decent enough as a programmer that I can deploy a docker container, handle databases. Full Infra setup from scratch is still not my forte. I do get a lot of value using managed services but the premium I pay for the efficiency tastes like ash in my mouth and it just becomes a matter of when I will have to optimise or migrate rather than if\n\n\nI'm just trying to provide feedback to help you out too because a managed service with kubernetes like reliability and potential scaling with heroku like interface with a reasonable pricing like say 2x hertzner which is still cheap in comparison to others but very attractive would be very attractive to me to be honest if I didn't have any of the hassle. Right now, I would really really love to take things up for a spin but as I go through documentation I see parts that are missing, I see the language is ruby. I'm only well versed in python /js. It makes me a little hesitant to actually push production stuff. \n\n\nYou don't owe anyone anything and this is open source and it's still wip I get that. Just trying to provide constructive feedback from a potential user who wants to use it in prod rather than a developer who sees this as a cool project to tinker with. I really really want to see this get successful. Thanks for sharing once again and sorry for the long ramble. ",
                "author": "techtariq",
                "score": 15
            },
            {
                "body": "You get a ton more bang for your buck. I have a todo to build a pricing comparison calculator to help visualize just how big of a difference it is, but here are some prices with comparable performance that I’ve pulled:\n\nAll of these are for a machine with 4GB of memory\n\nHeroku\n$260\nFly.io\n$65\nRender\n$85\nHetzner\n$4\n\nTypically, you’ll get more performance for more $ but the margins are gigantic for hosting vendors",
                "author": "czhu12",
                "score": 14
            },
            {
                "body": "Ah, didn’t know that, will check it out! Thanks for sharing\n\nI’d say the other big thing that is a focus for Canine is to try to build a tighter UI / UX",
                "author": "czhu12",
                "score": 14
            },
            {
                "body": "Any particular reason for this?",
                "author": "tetraeeder",
                "score": 13
            },
            {
                "body": "This looks really great and I'd love to try it, but I'm not seeing a way to sign up that doesn't grant a crazy level of GitHub permissions, both to personal and organization level repositories, so that's a no go for me unless I create a burner GitHub account. Would love to try it with a personal project but can't grant the organization level permissions. Can they be made optional?",
                "author": "rylab",
                "score": 12
            },
            {
                "body": "Yeah it’s totally free. The only thing the cloud hosted version has to do is issue some api calls to your cluster.\n\nI run the whole thing off a $40/m server, so it didn’t seem like there was much of a need to charge for it :)",
                "author": "czhu12",
                "score": 12
            },
            {
                "body": "Don't bother with coolify, go with dokploy",
                "author": "candouss",
                "score": 10
            },
            {
                "body": "Very cool project. If I understand correctly, this is not a hosting platform like Heroku which owns the serers as well as the deployment orchestration tool ? Is Canine more like a middleman service that connect your code to other cloud providers and manages the deployment for you - you still own your actual DO droplet, not Canine. Is that correct?\n\nAnd it seems that Canine is actually a (free) SaaS, and not a self-hosted tool? Seems like it costs you money to run all Canine's database and backend to orchestrate these connections from user's code to the underlying compute ?\n\nAnyway, amazing project.",
                "author": "waferstik",
                "score": 8
            },
            {
                "body": "That's awesome! How does it compare performance-wise to [Fly.io](http://Fly.io) and Render?",
                "author": "Millendra",
                "score": 7
            },
            {
                "body": "I will have time to check this in the next few days but I am very interested!\n\nI created an open source tool to quickly create a Laravel application, the goal being to extend it to almost all consumer languages in the long run. It must be seen as the equivalent of shadcn but for the init and deployment even if I still have a lot of work to do.\n\nIt automatically configures the dev AND prod environment according to the user’s choices via a web interface or a cli (dockerfile, compose.yaml, etc.). No tools are needed.\n\nCurrently the deployment is done via docker compose and I plan to add first the blue green deployment and later docker swarm and Kubernetes because I think each of these tools is adapted to different projects.\n\nMy question: to what extent could I integrate your tool with mine? My goal is that in the long run is to have NO dependencies if the user uses the cloud version (free), or the self-hosted version.\n\nHere is the link to my tool, you will find the github link on it if necessary: https://fadogen.app\n\nPS: I love the name of your tool",
                "author": "fouteox",
                "score": 6
            },
            {
                "body": "Yeah the only thing that I got stuck on is the fact that canine requires docker to perform docker builds and pushes. \n\nGetting docker working in docker within kubernetes was a little confusing for me, it was something I was going to look into after clearing through a backlog of bugs, but it’s a really good point.\n\nBeen on the back of my mind for a while.",
                "author": "czhu12",
                "score": 6
            },
            {
                "body": "Let me know if you ever get started! I’d love to help you get set up if I can!",
                "author": "czhu12",
                "score": 5
            },
            {
                "body": "Is it possible to deploy canine with canine? The documentation only showed running it using docker-compose, which surprised me a little. I thought there would be a helm chart or something. Considering that it's all about deploying things _to_ k8s, I figured the expectation would be that you would also deploy it to k8s.",
                "author": "nevon",
                "score": 4
            },
            {
                "body": "He said it costs him $40/mo so he didn’t wanna bother to charge for it. And I think you’re right about it being a middleman orchestrator",
                "author": "sneaky-pizza",
                "score": 4
            },
            {
                "body": "Nice project! Another open source alternative to Heroku built on Kubernetes is Cuber. It is focused more on expressive code (DSL) rather than providing a UI.",
                "author": "collimarco",
                "score": 3
            },
            {
                "body": "Amazing product! And great video example right on the main page. I think I’m going to try this with my next app",
                "author": "SoSeaOhPath",
                "score": 3
            },
            {
                "body": "I’ve not seen this before!\n\nI have more of a focus on ui, I found it’s less intimidating to get started and also, on a small team, it’s really useful to be able to see who did what recently, like a deployment or configuration change.\n\nIt might just be a personal preference also but I’ve always preferred the UI based approach heroku, render, etc provide over stuff like terraform, kubernetes, etc 🤷‍♂️",
                "author": "czhu12",
                "score": 3
            },
            {
                "body": "Looks interesting. Is the ‘installation’ script just a big wrapper around ‘PORT=3456 docker compose up -d’? I think you should mention that you can just run that in the getting started docs for those that really do not like piping external scripts straight into bash. Save the next person from having to manually review the shell script to know what to run manually as well :)",
                "author": "selexin_",
                "score": 2
            },
            {
                "body": "How does it compare to dokploy?",
                "author": "dailytadpole",
                "score": 2
            },
            {
                "body": "Yes second this, it looks really great and I’m eager to try it out but the level of permission required with the GitHub signup, to all my organization’s repositories + read and write permission to my profile makes it an absolute no no. \n\nI might play around with the local version but would be interested to check out the hosted one too. I will wait for more signup options.",
                "author": "samnolland",
                "score": 2
            },
            {
                "body": "Yeah exactly, I had plans to make a cli but been a little swamped with feature requests 😬, so for now it’s a pretty lame wrapper\n\nI can put that into readme — how to install from scratch",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "In the past, if you want to pay close to $0, I think google cloud run works, it basically lets you write a simple script that runs everytime an endpoint gets called.\n\n  \nIf you want a persistent server, then yeah I think Canine would help you there. It's super trivial to deploy a node.js / python app with Canine on a cheap $4 / month cloud server, or if you have a home server. \n\nThe issue with a home server is that typically the IP address changes after a few months if its a residential ISP.\n\nTo mitigate that, you can check out cloudflare tunnels which basically runs a daemon on your machine and creates a network tunnel to cloudflare. Then cloudflare can route to it.",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "Dokku I believe is a cli only tool. To use it within a team I think youd typically have to set up a github action so that everyone can see who deployed when.\n\nIt also only supports single node deployments, where as kubernetes can support a large number of clusters, which can be helpful.\n\nLast thing that’s a huge plus is that almost everything under sun (name your favorite open source project) can be easily deployed to kubernetes, there’s a huge community of tools, features, etc",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "Yup! Being able to run data tasks on the same compute pool as everything else is a big reason why I built this. Discovered first hand how expensive cloud data processing can help really quickly.\n\nI have a pretty complex data pipeline developed with the add-ons feature in Canine that has Dagster running next to Metabase, running next to Kafka and Postgres for storage.\n\n  \nMetabase is already supported as a preconfigured add on, the other ones you mentioned (spark, kafka, etc) are available if you click on helm chart.\n\n  \nThe add-ons feature in canine just uses helm charts under the hood, and almost all open source projects are deployable via help charts.\n\n  \nI'm trying to add more pre-configured add-ons but theres over 15k deployable artifacts so it'll take some time 🤣",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "All good, thanks and looking forward to checking it out!",
                "author": "rylab",
                "score": 2
            },
            {
                "body": "Well that means people like what you've done! It looks great btw. I recently set up a new app backend on flyio but I'm not loving their postgres, and as always looking to reduce costs. I'll test-running canine out when I get a spare moment this week!",
                "author": "selexin_",
                "score": 2
            },
            {
                "body": "Yeah for canine, you’d be fine! All you need is a kubeconfig file that is able to issue API requests to your cluster. So a multi node Hetzner set up is actually perfect. Let me know if you run into any issues setting up\n\nBut yeah it’s a good point, I’ll try to set up a few more examples of deploying as a todo, so far I have wip tutorials for rails, next js, Django, supabase, Postgres redis, and a few others.",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "i can make one tomorrow!",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "Looks really promising!",
                "author": "krimpenrik",
                "score": 1
            },
            {
                "body": "Looks awesome, great work!\n\nOnly thing that could make it better would be the ability to add things like:\n\n- external-dns\n- Crunchy data's PGO\n- (Dedicated) Load Balancers (difficult, would require hoster integrations)\n- ... other great \"kube-native\" tooling that makes life just so much easier",
                "author": "bbjurn",
                "score": 1
            },
            {
                "body": "This looks really good and I also really appreciate the k8s crash course in the docs, the visuals really help! \n\nWill be trying this out at some point!",
                "author": "Veloxy",
                "score": 1
            },
            {
                "body": "!RemindMe 33 hours",
                "author": "lord31173",
                "score": 1
            },
            {
                "body": "Looks great. Will try for [rankit](https://rankit.no) as I'm hosting on Google Cloud, and I'm looking for a cheaper option. \n\nI discovered that the curl command given in the get started section is not optimized for mobile, so it only shows parts of the command. Just wanted to let you know. Otherwise, Great work!",
                "author": "Current-Status-3764",
                "score": 1
            },
            {
                "body": "I'm running a HA cluster with 5 nodes on Hetzner and have been looking for something like this. I run it myself so its not managed. Is it true that Canine only support single VPS instances? Would that mean for my use case I would not be able to use Canine, since I am running 5 VPS'ses.\n\nAnyway great tool, will definitely be following and deploying myself to test it out. Would be nice if there would be a docker image (arm64 and amd64) available on docker hub as well as some example k8s deployments/services etc.",
                "author": "roempie12",
                "score": 1
            },
            {
                "body": "I have a noob question, hopefully you'll forgive me.\n\nI run a marketing agency and we help our clients automate workflows. Most things can be done in Zapier/Make but their options are sonetimes limited and we need to custom code to integrate two APIs together. \n\nIn the past we've used Pipedream or Google Cloud Functions. I've been playing around with the idea of setting up a server here at home that can catch webhooks, do really simple processing, and send it to various marketing APIs. The volume is crazy low so the processing power wouldn't need to be anything special...our clients only pay about $50/no on Google Cloud. \n\nWould this solution let me do that?\n\nFor example, if we set up webhooks in Hubspot CRM can your app catch them, then we use Python or Node.js to send that info over to another platform like Google Ads?\n\nThanks!!",
                "author": "dillwillhill",
                "score": 1
            },
            {
                "body": "How does it compare to Dokku?",
                "author": "ClikeX",
                "score": 1
            },
            {
                "body": "Don't use heroku",
                "author": "Altugsalt",
                "score": 1
            },
            {
                "body": "I might have to look into this 👌\nGonna need to start upgrading all of that with our startup",
                "author": "Unknown-Developments",
                "score": 1
            },
            {
                "body": "Is this something viable for data engineering projects on cloud? Tools I'm working with are postgres, kestra (workflow orchestration), apache spark (batch processing), dbt (for ELT), kafka (via PyFlink for streaming), few tools for dashboard (tableau, powerbi, metabase).",
                "author": "AcanthisittaMobile72",
                "score": 1
            },
            {
                "body": "Nice.\n\nI see you are using DaisyUI 4. You know they just released version 5 like a week or so ago. Consider upgrading ;)",
                "author": "wpdigitaldash",
                "score": 1
            },
            {
                "body": "Thank you! And feel free to reach out if you run into any issues. I'd love to help however I can!",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "I will be messaging you in 1 day on [**2025-03-17 17:47:09 UTC**](http://www.wolframalpha.com/input/?i=2025-03-17%2017:47:09%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/webdev/comments/1jca7oa/i_built_an_open_source_heroku_that_costs_110th_as/mi25sd0/?context=3)\n\n[**4 OTHERS CLICKED THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fwebdev%2Fcomments%2F1jca7oa%2Fi_built_an_open_source_heroku_that_costs_110th_as%2Fmi25sd0%2F%5D%0A%0ARemindMe%21%202025-03-17%2017%3A47%3A09%20UTC) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201jca7oa)\n\n*****\n\n|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|\n|-|-|-|-|",
                "author": "RemindMeBot",
                "score": 1
            },
            {
                "body": "How did you set that up actually? I’m curious how folks are doing multi node set ups on hetzner",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "On the todos!",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "Hey dude if you want I can run down issues with Coolify. Basically they have a great concept but terrible execution.\n\nIMHO you're better off building a better Cleavr alternative. This is a crappy software but it does server orchestration without using Docker. This is also something I can pay you for.",
                "author": "shash122tfu",
                "score": 1
            },
            {
                "body": "Sure I'll do that",
                "author": "rohithexa",
                "score": 1
            },
            {
                "body": "Its quite simple actually. Something like [terraform-hcloud-kube-hetzner](https://github.com/kube-hetzner/terraform-hcloud-kube-hetzner) lets you spin up multi node clusters within minutes. \n\nHowever, my question still stands; no support for multi node clusters i presume?",
                "author": "roempie12",
                "score": 1
            },
            {
                "body": "Amazing, do you have video tutorial related to data engineering project deployment?",
                "author": "AcanthisittaMobile72",
                "score": 1
            },
            {
                "body": "Would love to hear what you think is not great with coolify!\n\nI think the only thing with raw server orchestration is that it seems difficult to get it working correctly for all systems and OS without a common runtime",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "Let me know how it goes! Happy to help in anyway!",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "It would be tremendously helpful if you can make the tutorial about end-to-end data engineering solution using tools I mentioned above, so that it would be easier for me to get through the tools configs on Canine and able to focus on data engineering project itself. Cheers!\n\n  \nP/s: Where does Terraform fits in this workflow? Or Canine is the \"terraform\" replacement in this case?",
                "author": "AcanthisittaMobile72",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1694716259.0,
        "title": "For websites with basic cookie banners, but NO cookie consent managers. So, no way to disable non-essential cookies. Is that a violation of the CCPA? California Consumer Privacy Protection Act. What CPPA penalties, fines, etc. are associated with this?",
        "author": "DigitalFidgetal",
        "id": "16iq0kb",
        "selftext": "For context, here is some info about cookie consent managers:\n\n[https://termly.io/products/cookie-consent-manager/](https://termly.io/products/cookie-consent-manager/)",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/16iq0kb/for_websites_with_basic_cookie_banners_but_no/",
        "num_comments": 1,
        "comments": [
            {
                "body": "[deleted]",
                "author": null,
                "score": 3
            },
            {
                "body": "Let's take this scenario:\n\nCookie banner with the following text, on bottom of webpage:\n\n\"This website stores cookies on your computer. Cookie Policy\"\n\nWhen you click on \"cookie policy\", it does NOT take you to a \"do not sell my info\" page, it just circles back to the same webpage.\n\nI don't see any way to initiate a DM to you. I guess you have it disabled?\n\nCan you send me a DM please, so we can discuss more in private?",
                "author": "DigitalFidgetal",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1689889224.0,
        "title": "How do platforms like AlgoExpert and Leetcode manage their content?",
        "author": "MERIEGG",
        "id": "155468x",
        "selftext": "Hello there, I need some help.\n\nI want to know how do platforms like AlgoExpert and Leetcode manage their content / questions (the bread and butter of their platform).\n\nDo they use some sort of framework for managing all of their data (solutions, test cases, etc.) or do they just use their own dashboard? I am am trying to build a similar project for my portfolio and I am finding it hard on how I can manage this type of very dynamic content in a relational database (I am using MySQL with Prisma and PlanetScale).\n\nEdit: To include more information to the post, I tried to look on the response type of the data on AlgoExpert in the network tab. I saw that there are a lot of JSON fields which are not easily represented and validated in a database schema. If I use a NoSQL database like MongoDB which supports throwing JSON inside of it how can I handle validation and check if what I am getting is correct and that there aren't any errors in the response? It's a very tricky subject for me, if any of you have any experience with this type of platform any help is welcome.\n\nThank you in advance!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/155468x/how_do_platforms_like_algoexpert_and_leetcode/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1691673972.0,
        "title": "Looking for insights: Central user management for multiple platforms",
        "author": "Kenthony",
        "id": "15ncian",
        "selftext": "My team and I are working on a project and would love to have some input from others. We are working on several platforms for our client: website, dashboard, e-learning environment and more are planned in the future.\n\nUsers can log into these platforms and have different roles and rights depending on their personal role and/or platform. Some users also have access to multiple platforms.\n\nTo ensure smooth development in the future, we aim to store all accounts centrally. This would allow users to use the same login credentials for different platforms they have access to.\n\nOur current stack is Craft CMS or Laravel for the platforms. We are curious about your experiences and insights. How would you guys approach this? Are there any best practices, tools or technologies you would recommend?\n\nThank you!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/15ncian/looking_for_insights_central_user_management_for/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1759137949.0,
        "title": "Client asked me to build a cross-platform health app (iOS + Android). Is it too big for a junior?",
        "author": "10dahora",
        "id": "1ntdg8k",
        "selftext": "Hi everyone,\n\nA client reached out to me asking for a quote to build an app. The idea is a popular, modern, cross-platform health app for iOS and Android where patients can sign up, pick a plan or one-off consultation, pay online, book appointments, and have integrated video calls with doctors. It also needs a patient area (plans, history, appointments), a professional area (agenda and history) and an admin panel for managing users, payments and appointments. The interface should be clean, responsive, secure (GDPR-style privacy) and ready for future features like electronic medical records and digital prescriptions.\n\nMy background is mainly in building websites, and I’ve never developed a mobile app like this before. Do you think a junior dev with mainly website experience could realistically take on something like this? How long would it take roughly for an MVP on iOS and Android? Is it too much to start with? Any tips or experiences would be super helpful!",
        "score": 69,
        "url": "https://www.reddit.com/r/webdev/comments/1ntdg8k/client_asked_me_to_build_a_crossplatform_health/",
        "num_comments": 75,
        "comments": [
            {
                "body": "hey, fullstack with 4YOE, I wouldn't touch it myself, do not try.   \nMVP is fine, but as soon as you have to deal with real medical data, you will likely not be able to follow all the guidelines and rules associated with that",
                "author": "GwentBoomer",
                "score": 233
            },
            {
                "body": "10+ YOE full-stack mobile, app and some infra guy here, I've successfully delivered projects like this in the medical space with much larger scopes successfully both as a lead for the project and earlier on as an IC (as part of my job).\n\nIf somebody offered me this job as a contractor/solo developer I wouldn't touch it with a ten foot pole unless there are healthcare regulatory experts there to support me and we have a very long timeline. And even then it would be a huge hassle with the amount of regulatory requirements something like this brings.",
                "author": "itwarrior",
                "score": 144
            },
            {
                "body": "Rofl if this client thinks that ONE JUNIOR can build something of this scale they need medical help.\n\nThis sort of app is built (and maintained) by an entire start up.\n\nYou need the full suite of Product managers, back end/front end engineers, devops/cloud engineers etc etc.\n\nThat's like asking a 2nd year architecture student if they can build a skyscraper (not just design it, but actually build it) on their own.\n\nIf I were you I'd swerve this like the plague.",
                "author": "pragmatic84",
                "score": 101
            },
            {
                "body": "As a 20 year full stack, I wouldn't do this solo. It would take a full team (devs,pms,testers, legal,etc) and a shit ton of cash a year maybe longer to do this. This has to be a joke right. We're being baited...",
                "author": "rbmako69",
                "score": 77
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 63
            },
            {
                "body": "You left the most important role out for this kind of work, lawyers/privacy/healthcare data specialist. The others roles could theoretically be done by one guy (not as well, not fast. but a lot of people build apps solo). But the privacy/security aspect of this ask is far from simple and if negligent the developer could also be partially liable.",
                "author": "itwarrior",
                "score": 20
            },
            {
                "body": "This is at the very least, 3 or 4 experienced engineers plus a number of people who understand the medical regulation space r.e. data protection / handling, and that's before you get to the post-release cycle of maintaining it indefinitely.\n\nI mean this with love: you cannot do this, and you should be honest about that.",
                "author": "Euphoric-Neon-2054",
                "score": 19
            },
            {
                "body": "Reminds me of the over the top beginner projects, like build a YouTube clone.",
                "author": "SpeedCola",
                "score": 14
            },
            {
                "body": "Exactly this is the main pain point, the type of data this app would be handeling is not just any data. And depending on the country you might need much much more than just GDPR. \n\nEven if this was a website (instead of a native app) unless you have experience handling this kind of regulatory requirements or experts to support you in this domain then I wouldn't touch it with a ten-foot pole.",
                "author": "itwarrior",
                "score": 11
            },
            {
                "body": "Zero chance by yourself.\n\nI've worked for a startup that has a version of this specifically for dietetics and also involves PHI. The initial work was done by a team of five. This was approximately seven years ago. One native app developer each for iOS and Android, a backend developer (who also set up the infrastructure and CI/CD), and two front-end developers. As a solo, I'd estimate a minimum six month engagement and subcontract the native app development and charge appropriately. No I don't think a single junior with no backend or native app experience should do this. If you're experienced in React Native you might be able to get away with doing all the frontend yourself, but if you have little backend experience you're likely to fail or produce an unmaintainable mess. Don't underestimate how much work the backend will be.\n\nEDIT: Forgot to mention, there was also a PM and a designer on that initial team. If you're going to do this, ask for enough money to subcontract extensively.",
                "author": "willdone",
                "score": 10
            },
            {
                "body": "This reminds me of a search feature that a few co-workers were telling me about. Basically, they had a basic search on this internal application that was running slowly, but it was also a wildcard search through 100s of millions of records in a SQL database (I know). The stakeholders didn't like the response time when they searched for something, and were like, \"Just make Google. We need it to be as fast and to autocomplete just like Google.\"  Admittedly, they got it faster through clever DB tricks, static lookup tables, indexing, etc., but still, the fact that they wanted Google and Google-like performance with very little money was funny.",
                "author": "rbmako69",
                "score": 10
            },
            {
                "body": "I have built exactly what you are describing. It is a huge undertaking, bigger even than you are probably imagining it is.\n\nThere’s probably no reasonable quote that your client will accept, and I don’t honestly know why they would ask for it without being prepared to pay what something of that size will cost. \n\nAnd this is even factoring in the use outs AI tools to help with the coding and planning. It’s still a huge undertaking.\n\nI’ll echo what someone else commented, this is way too big for a solo.",
                "author": "sleeping-in-crypto",
                "score": 8
            },
            {
                "body": "This is definitely too big for a junior and too risky an app tht handles health related matters (eg appointments history and health history) is prone  to security attacks. This is not for a junior, sorry. I am a senior  web developer and I would even get advice from a security specialist. Not to mention this is an app for a team, not one free lancer.",
                "author": "poponis",
                "score": 7
            },
            {
                "body": "As a 50 year experience in Flutter and 35+ years experience with Docker, I wouldn’t do it myself.",
                "author": "Consistent-Chart-594",
                "score": 7
            },
            {
                "body": "Huge project. Save future you a headache and years of stress by turning this one down buddy. \n\nSr. web dev here with 15 years experience and I wouldn’t touch it with a barge pole.",
                "author": "andy_19_87",
                "score": 6
            },
            {
                "body": "When you're done you can also program the fighter yet in my garage",
                "author": "AppealSame4367",
                "score": 6
            },
            {
                "body": "They’re idiots and you don’t know wtf you’re getting into. Like others have said mvp is fine. You don’t have the skillset to estimate this. It would run into the 6 figure digits for a full complete implementation that is thoroughly tested and works as it should in all cases with customers.",
                "author": "kokoricky",
                "score": 6
            },
            {
                "body": "Also the fact they’ve even offered this to a one man band tells me their budget is on a shoestring and they don’t understand the complexities of the project, but they’re still going to want it done in some unreasonable time frame. And when it goes to shit… guess who they’ll blame?",
                "author": "andy_19_87",
                "score": 6
            },
            {
                "body": "No way.  \n  \n1000% no.",
                "author": "Licantropato",
                "score": 4
            },
            {
                "body": "It’s absolutely way to big for a junior. \n\nA case can be made that it’s too big for a solo senior developer. My entire career has been in health tech and healthcare admin roles. HIPAA compliance alone should give you pause. Building an MVP and proof of concept is fine but handling medical data is incredibly risky for someone who has no experience working in the healthtech space.",
                "author": "JustTryinToLearn",
                "score": 4
            },
            {
                "body": "lol this is like a 25 million dollar budget and a team of 30",
                "author": "ninjabreath",
                "score": 4
            },
            {
                "body": "Fullstack dev with 20 YOE professionally (\\~30 including hobbying):\n\n>Do you think a junior dev with mainly website experience could realistically take on something like this? \n\nMobile development, even when you're doing PWAs or responsive designed sites, is a different kind of animal. I don't know what \"junior dev\" means to you, but you should definitely consider \"how much of what they're asking for do I know how to do already?\" If you can't envision the process you would take for building this to where you can give a fair estimate of labor, it's probably not a good idea to take it on.\n\n>How long would it take roughly for an MVP on iOS and Android? \n\nThis is something *you* need to answer. The amount of time it would take another person to do is irrelevant, unless they're the one doing the work.\n\n>Is it too much to start with?  ... My background is mainly in building websites, and I’ve never developed a mobile app like this before.\n\nIt's a beefy app. I wouldn't take this on  unless they were willing to pay me a lot of money for it, and even then, I would want to bring on at least one other person. \n\nIf you've never done this before, I recommend declining the job. It's not fair to yourself or your client to be wearing your student hat and contractor hat at the same time.",
                "author": "armahillo",
                "score": 4
            },
            {
                "body": "Way too big for a Junior, especially solo.",
                "author": null,
                "score": 3
            },
            {
                "body": "Nope. I wouldn't touch it! Thats a huge project",
                "author": "oJRODo",
                "score": 3
            },
            {
                "body": "My friends nephew could have that done in like a weekend probably. So you have a whole week! What's the problem? Oh you must just be terrible.. /s",
                "author": "nedal8",
                "score": 3
            },
            {
                "body": "As everyone is saying. It’s a very large app to make. The issue isn’t in making the app, but healthcare is one of those things you have to have right 100% from the start. You stated your housing patient data. That puts you into hippa and pia territory. Making sure their data is protected, encrypted, and your organization has minimum privileged access. \n\nI worked in healthcare tech before too. Doctors and hospitals hate new tech and new apps. They like stuff that’s been around forever and they know works. Meaning selling to doctors is difficult and expensive.",
                "author": "IAmRules",
                "score": 2
            },
            {
                "body": "absolutely do not touch this project no matter what!! at most, you can deliver an MVP, but in your shoes, i absolutely would not be trying to properly handle medical data myself. this type of thing needs an actual team behind it with people there to make sure you’re following all the regulations and privacy laws correctly.\n\napart from that, doable, unless they want you to build it native instead of something like react native :p a single person is not gonna have a good time maintaining multiple codebases simultaneously",
                "author": "TimeToBecomeEgg",
                "score": 2
            },
            {
                "body": "1) Security will actually need to be higher than GDPR. You're looking at HIPAA and PCI compliance.\n\n2) Yes, this is too big for a junior. This is for a team of people with experience.\n\nCould a single person do all of this? Yes, BUT they would already need to have experience with HIPAA, PCI, infrastructure, security, etc. before even adding in iOS and Android support. Few have that much experience.\n\nEven with my 30+ years experience, I would be hesitant to touch this kind of project without a team of developers AND access to SME's on the relevant compliance and legal areas.",
                "author": "rjhancock",
                "score": 2
            },
            {
                "body": "Is the client a medical practice looking for a technical solution for their office, or is the client an entrepreneur looking to build and sell a product? \n\nIf it's the latter: you're probably going to have to decline involvement unless he's offering an actual job in a well funded startup. This is the kind of thing that requires a non-trivial technical team on top of subject matter experts and legal assistance to get the privacy stuff right. \n\nIf it's the former, you might be able to salvage some kind of payday out of this. Offer them a modest fee to advise them and research what off the shelf tools might work and how they should go about integration with their existing systems and workflow. The medical industry is very confusing: a non technical doctor might need somebody technical to just steer them in the right direction and give general advice about what kind of systems and tools they might need.",
                "author": "irespectwomenlol",
                "score": 2
            },
            {
                "body": "I am a full stack developer and am currently working on a large mobile app. \n\nThis project is absolutely massive, even without taking into account all the medical regulations and stuff. \n\nHard pass - this is not a solo dev project.",
                "author": "mattaphorica",
                "score": 2
            },
            {
                "body": "React Native to unify both iOS and Android in \"one\" platform OR pass up on the offer.",
                "author": "Outofmana1",
                "score": 2
            },
            {
                "body": "it is too big for a client.   \nI highly doubt they realize what they ask for. \n\nFor one junior person it would take 3 years for a crappy app that isn't secure and you'll be likely be sued for data-theft.",
                "author": "UseMoreBandwith",
                "score": 2
            },
            {
                "body": "LOL. In one Word: DECLINE",
                "author": "funkyzitrone",
                "score": 2
            },
            {
                "body": "You are not qualified whatsoever, do not take it/",
                "author": "sexytokeburgerz",
                "score": 2
            },
            {
                "body": "I’m one of two dozen engineers on a team that supports an app less complicated than this. \n\nIf client wants to give you several million dollars to hire the necessary staff for a few years, then maybe.",
                "author": "Watsons-Butler",
                "score": 2
            },
            {
                "body": ">they need medical help.\n\nBut they need the app first to get the help they need.",
                "author": "Competitive_Cry3795",
                "score": 2
            },
            {
                "body": "This is a team job in a regulated space; if OP takes it, narrow the MVP hard and bring a security pro in up front. Do a paid discovery (2–3 weeks) to map data flows, do a simple threat model/DPIA, list BAAs needed, and lock scope. Keep MVP to auth, scheduling, payments, and video; avoid storing PHI and skip EMR/eRx for now. Use Zoom for Healthcare or Daily (BAA) for video and Stripe for payments; I’ve shipped with Auth0 for OAuth/RBAC, Stripe for payments, and DreamFactory to spin up locked‑down REST APIs from SQL without hand‑rolling. Expect 4–6 months with a small team; solo junior is 9–12+ months and risky. Either cut scope and add security help, or pass.",
                "author": "CharacterSpecific81",
                "score": 2
            },
            {
                "body": "\"can't you just use ai? How long will it take? Should be no more than a week. Can't you just ask ai?\"",
                "author": "roynoise",
                "score": 2
            },
            {
                "body": "🤣🤣🤣",
                "author": "pragmatic84",
                "score": 2
            },
            {
                "body": "\"It's just a simple app\"",
                "author": "mr_jim_lahey",
                "score": 2
            },
            {
                "body": "Okay the tricky thing with this kinda app isnt about building it, its the risks that comes with it, youll need to have some certificates that patients data will be stored correctly and have taken care of all the things by some board, our company works on apps and websites but when it comes to medical related app we mostly back off because most of the customers who come to us dont even have proper permits",
                "author": "thejaz21",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Hahahahaha good luck with that one.",
                "author": "Thaddeus_Venture",
                "score": 1
            },
            {
                "body": "I am a senior at an EMR software company. I can assure you that you would be in over your head with this project. There is so much more than you would believe about creating apps like this. To complete this in a reasonable timeframe, you would need multiple people on your team that have EMR experience.",
                "author": "longjaso",
                "score": 1
            },
            {
                "body": "Yes crazy complex not for junior . at least your need 5 developer ( i work before apps something like that (react native , swift storyboard,node,react)",
                "author": "alien3d",
                "score": 1
            },
            {
                "body": "This app already exists and has thousands of employees. Do not try to compete unless you have equal resources. Tell them to look at [https://jane.app](https://jane.app)",
                "author": "Produkt",
                "score": 1
            },
            {
                "body": "10 y full stack here\n\nit's patient data?! That's crazy. No way Jose!",
                "author": "moriero",
                "score": 1
            },
            {
                "body": "Pick based on your team's skills and project needs, not hype. A boring, well-understood stack that your team can maintain beats the latest shiny framework.",
                "author": "RRO-19",
                "score": 1
            },
            {
                "body": "Run.",
                "author": "bengriz",
                "score": 1
            },
            {
                "body": "I wouldn't even bother trying to do this.  The client is living in a fantasy world if they think one person can do this all on their own.  \n\nThis will also be the type of client that will want this done as quickly as possible and will be expecting a fully developed application and not an MVP.",
                "author": "cleatusvandamme",
                "score": 1
            },
            {
                "body": "Quote 3 million on a 1.5 year timeline. \n\nIf he balks tell him he’s not a serious client. \n\nIf he signs a check, hire the people to do it right.",
                "author": "MeanShibu",
                "score": 1
            },
            {
                "body": "FYI you would just develop in React Native, which automatically compiles down to native Android and iOS code. You would not implement the same thing twice for each platform.\n\nSome companies do make Native iOS and Android apps separately because they have enough people and money, but that's unrealistic to pull off otherwise. \n\nAlso as others have mentioned, this is a big undertaking typically reserved for a full team and it's too much to solo in a reasonable timeframe. Not to mention you would need knowledge in backend, devops, UI/UX, etc on top of learning mobile development. ",
                "author": "Nikurou",
                "score": 1
            },
            {
                "body": "As others stated, this is not a job for a single junior dev. What I did in similar cases was to give a quote that would allow me to contract 4-5 other people to help me build it + like 30% on top of that for myself for managing thr whole thing and if the client agrees then you hire sub-contractors and deliver an app. Project scope needs to be very precise so you deliver only what's in the contract and not a line of code more, otherwise any profit will be eaten by \"adjustments\", etc.\n99.99% chance they will decline and find someone naive and/or delusional to build it cheaper, they will fail and only lose money. If not, then you suddenly have a quite a big project under your belt 😁",
                "author": "wheresmyskin",
                "score": 1
            },
            {
                "body": "Well depends how much you vest in you capabilities",
                "author": "Fantastic-Storage258",
                "score": 1
            },
            {
                "body": "Thanks for the tips, guys. I honestly didn’t realize it was way too much for me. I also found the request a bit strange since I only post freelancing offers in my neighborhood. I’ll probably just try making something simpler to study",
                "author": "10dahora",
                "score": 1
            },
            {
                "body": "You're hugely out of your depth on this one. Turn it down. Your client has zero idea of the project scope, and probably no clue about the legal side of dealing with medical information.\n\nRun like the wind.",
                "author": "Lord_Xenu",
                "score": 1
            },
            {
                "body": "I worked at a startup for a year doing exactly this, only I was one of the 3-4 FE guys. 2 of which were also doing React Native. there were 3 doing BE, a team of QA and that's not including all the PM's and legal. this is ridiculously complicated, most of my time there I was working with WebRTC, which worked most of the time, but when it didn't I've spent weeks debugging things. keep in mind that for security/privacy reasons you can't just P2P, so it becomes even more complicated. I also remember that the PM's and their managers spent months trying to receive some certifications/approvals or whatever to be able to even contact clinics to partner with them. healthcare is tough man, and I'm not even sure which part is more - the technical stuff or the bureaucracy/paperwork",
                "author": "shuraman",
                "score": 1
            },
            {
                "body": "Lol that's s whole company there",
                "author": "chk75",
                "score": 1
            },
            {
                "body": "Depends, how up on you on the latest laws and regulations around HIPAA and user privacy requirements as they relate to sensitive health information?\n\nIf you just went \"uuuhhhh....\" don't fucking touch this.",
                "author": "TheOnceAndFutureDoug",
                "score": 1
            },
            {
                "body": "Yeah, this is way too much for a junior. The security for a medical app alone requires specialised legal knowledge and how to implement it, fetching medical records also requires a bunch of special knowledge. Then there’s also the technical knowhow for video calls. \n\nAvoid this job at all costs tbh. This is a job for an entire company with a legal team, someone to take responsibility for the app if God forbid data gets leaked or something, devops, cloud, backend and front end teams.\n\nI’m a senior developer in a cyber security company you’ve likely heard of and I would turn this down within a heartbeat. It’s not worth the trouble and even for me solo the security surrounding the app isn’t doable.",
                "author": "SirVoltington",
                "score": 1
            },
            {
                "body": "That's a pretty massive project for a junior, especially with no prior mobile app experience. It's definitely not a learn as you go kind of project if you're the sole developer. For an MVP, you're looking at a minimum of several months, probably 6+ months, even with a solid plan, because of all the moving parts and the learning curve for mobile development and health tech specifics. My advice would be to seriously consider the scope. If you're going to tackle it, you'll need to be super organized.",
                "author": "freezedriednuts",
                "score": 1
            },
            {
                "body": "You're not ready.  They got quoted by a multi billion dollar company and didn't want to cut the check so now their seeing if you'll bite or quote them low for a comp.  You could quote them start up money with a plan to build a company to support it, but not as a solo.  I worked in Fintech and have had to sit for HIPAA compliance, you'll lose more than you'll gain if it's not perfect.",
                "author": "virtualmadden",
                "score": 1
            },
            {
                "body": "Ask them to pay by the hour, and pay for the first 4 weeks upfront. Then evaluate after these 4 weeks",
                "author": "akie",
                "score": 1
            },
            {
                "body": "Run away from this, run fast. They're asking for something *entire* companies have been built around creating. And as others have said, the data you'd need to touch is highly regulated (health data and payment data).\n\n\nRun away.",
                "author": "TheTacoInquisition",
                "score": 1
            },
            {
                "body": "Every cheap, horrible client typically has the same set of ideas.... you will realize ( or may not with the emergence of AI ) that there are about 10 of these ideas total... This is one of them.... I've been approached about this same idea about 100 times, and exactly none of those times did the person ever have more than 20-30k available. \n\n\nIf this person is dumb enough to think a web developer can do a massive app development project like this... they are going to be a nightmare to work with....  \n\nYou will either not get paid completely, get threatened with a lawsuit, or any manner of craziness in between the two.",
                "author": "coreyrude",
                "score": 1
            },
            {
                "body": "This is $300k project minimum… if it were to ever even have a chance that is.\n\nThat or the right people with the right skill sets decide to  found a startup and make it themselves and spend about a year minimum on it",
                "author": "7HawksAnd",
                "score": 1
            },
            {
                "body": "I do a lot of this type of work, but my experience is in mobile dev, not web.\n\nYour ability is an unknown, would you be comfortable doing this as a web app? Not mobile?\n\nIf so, then I think you've got some chance of managing it, but it's still a big effort.\n\nWithout a proper scope, can't really give a time estimate.\n\nVideo calling would be a big job, there are 3rd party providers who can do this, but even the integration will be non-trivial.\n\nYeah, it's probably too much, but I'd consider in the next few days getting React Native setup on your machine and trying it out before you rule yourself out.\n\nSometimes you need to throw yourself into the deep end, but evaluate the risk. What happens if you totally fail? Lose a valuable client? Or is the client not that big of a deal, think it through.",
                "author": "Slow-Bodybuilder-972",
                "score": 1
            },
            {
                "body": "That is a big & juicy project. Don't touch it solo - you'd need a team to pull that off.",
                "author": "tswaters",
                "score": 1
            },
            {
                "body": "HIPAA regulations in if self with murder you 😂 \n\nLet a pro handle it.",
                "author": "CarnageAsada-",
                "score": 1
            },
            {
                "body": "This is a $5 million project.",
                "author": "LeadingPokemon",
                "score": 1
            },
            {
                "body": "Mobile and website uses different architecture and since you are not experienced in mobile, I recommend avoiding such projects.\nYou could practice on your own using flutter and firebase. It's powerful enough to achieve apps like that.",
                "author": "CaesiumStudios",
                "score": 1
            },
            {
                "body": "You're right. \nBut I had very bad experiences while expecting the client to know anything about my dev job. :-)",
                "author": "xenatis",
                "score": 1
            },
            {
                "body": ">Meaning selling to doctors is difficult and expensive.\n\nTbf that wouldn't be OPs job. They've already been asked to make this app.  \n\nIn fact that probably wouldn't be anyone's job, if you were selling a product you already had you'd be selling to the managers and stuff",
                "author": "turtleship_2006",
                "score": 1
            },
            {
                "body": "Well, the scope is really huge. I wouldn’t say it’s impossible for you, unlike others in the comments, but it’s better to be straightforward with the client. To be honest, for this level of application, it’s better to have a team of at least 3 to 4 developers.\n\nSecondly, maintain clear communication with the client. Sometimes the description is so AI-generated that even the client hasn’t fully read it and just copy-pasted it to you. Saying this from a personal experience 40% of the clients i communicate with do this. \n\nMake sure of a few things before you decide to work with them: they’re paying you a fair amount with a proper contract, start on milestones basis or phases, you have a crystal-clear idea of what you’re building for the client, and you can onboard at least one or two experienced developers alongside you.",
                "author": "edge_lord_16",
                "score": 0
            },
            {
                "body": "You can outsource the project and take your commission from it",
                "author": "amitkemnie",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757363737.0,
        "title": "I tried my hand at creating a \"Twitter for gaming\" and I've grown to regret it",
        "author": "AlanOC91",
        "id": "1nbz30a",
        "selftext": "I own and run a site called [gametips.gg](https://gametips.gg/timeline) and part of my daily process usually involves me going \"this might be neat!!\" and then diving into it without thinking it through too much.\n\nI don't know why but I've always admired that Moxfield (MTG website) have [announced they'd so something similar](https://untapleagues.com/what-moxfield-needs-to-do-to-make-their-magic-the-gathering-social-media-website-a-success/) for MTG fans back in 2022 (not out yet) by building a social media platform in-site and it's basically been living rent free in my head since then. I've always wanted to try my hand at something similar so I decided I'd try it on my [gametips.gg](https://gametips.gg/timeline) website.\n\nWhat I thought would be relatively easy turned into hours upon hours of work and bugfixes to the point where I have a sort of viable MVP without any fancy bells or whistles like timeline algorithms and I've just ended up feeling kinda bad about it. \n\nI managed to implement the following;\n\n* Basic timeline view\n* A semi-optimized mobile view \n* Video/Image support with optimizations (image is converted and video is transcoded and replaced automatically post uploaded)\n* Opengraph support\n* Hashtag support \n* @ mention support \n* Reply / Repost / Like\n* Websocket support for \"x amount of posts have been posted, click to load\" on the top of the timeline\n* Misc functionality like delete tweet, etc etc\n\nIt still needs a ton of fixes and tweaks but I'm now hesitant to progress with it. \n\nEven with all that. It doesn't feel like BlueSky or Twitter and I'm not sure why. It almost feels like a Forum but presented differently. I don't know, maybe that's what Twitter and Bluesky essentially are but I can't shake the feeling that I haven't captured what makes Twitter, Twitter and what makes Bluesky, Bluesky. It's almost like I am missing a magic ingredient and I don't know what it is. Maybe this is just self-developer guilt where I feel like the thing I made isn't good enough versus x or y.\n\nAnd now that I've spent countless hours and time down this rabbit hole I'm starting to wonder was this just wasted dev time when my focus should have been elsewhere. How do you all manage these feelings when you jump into a feature, go at it headfirst without giving it too much thought and before you know it, it's already too far ahead for you to throw away the work you've put in. I've had to put a halt to my feature-list to try put a level head on and gauge if they are a good idea before jumping into them else it becomes feature after feature instead of refinements where needed. \n\nI think I'm just looking for advice for those who have been down this route of developing something that you end up feeling bad about and maybe I can start feeling a bit better about it once I know I'm not alone lol\n\nHow do you battle the horrible feeling of wasting your own time?\n\n[Timeline Home](https://preview.redd.it/omms6kn340of1.png?width=1498&format=png&auto=webp&s=82ac832a205dc3a9a1684d9ed436e54d0f2047b2)\n\n[\\\\\"Tweet\\\\\" view](https://preview.redd.it/xf4fzgg440of1.png?width=1497&format=png&auto=webp&s=5b22775c3d11d49cf713c82aa0b81a4ed095e5c4)\n\n",
        "score": 173,
        "url": "https://www.reddit.com/r/webdev/comments/1nbz30a/i_tried_my_hand_at_creating_a_twitter_for_gaming/",
        "num_comments": 52,
        "comments": [
            {
                "body": "I'm usually building something to either learn a new skill, have fun, or make money. If I'm not doing any of those 3 I move on. Time is never 'wasted', you should be proud of anything you build. Hopefully you learned a bunch of skills that would translate to whatever you work on next assuming you didn't vibe code the whole thing.",
                "author": "Stratose",
                "score": 261
            },
            {
                "body": "Unfortunately we live in a society that doesn't do a great job of teaching this, but how you spend your time is entirely up to your discretion. Bare with me as I get philosophical for a second.\n\nWe have a 'finite' time to live here, but there's no scorecard at the end. The only person who can tell you whether you wasted your time or not is you. If you don't feel like it's a productive use of your time to focus on that project, then maybe start up a new one for a week and see what that feels like.\n\nPersonally, I have gotten to a point where I very rarely feel like I am 'wasting' my time. When I'm not working, I am focused on hobbies and passions. When I am working, I try to do my job the best that I can. Some days, my best is pretty trash. Other days, I'm a beast and get a ton of shit done. Both are okay.\n\nI also happen to think anyone who builds something where nothing existed previously is always a worthwhile thing. Even if it leads to a dead-end, there's so many obstacles that are in our paths that it's pretty fucking cool people overcome them to create cool stuff.",
                "author": "Stratose",
                "score": 98
            },
            {
                "body": "IMO, it only feels like a forum because of the UI decisions. Eg, the feed should be the center third of the screen.",
                "author": "DamnItDev",
                "score": 80
            },
            {
                "body": "I guess wasted was a harsh way of putting it but I suppose I'm more struggling with \"maybe I should have built out x or y that I've had on the back burner instead\" sort of feeling. \n\nI guess it's more to do with how much time we have available in the day and the choosing how to best use that time and not feel bad about it.",
                "author": "AlanOC91",
                "score": 49
            },
            {
                "body": ">I don't know, maybe that's what Twitter and Bluesky essentially are but I can't shake the feeling that I haven't captured what makes Twitter, Twitter\n\nA toxic userbase?\n\n  \nSerious answer, your design looks like Discord. Which makes sense, it's gamery. But makes those microblogs websites stand out is how their content is narrow and in the middle of a 1/3 column. Your content is off center in a 2/3 wide column. \n\nThat narrow column is what makes it look like a feed.",
                "author": "ClikeX",
                "score": 35
            },
            {
                "body": "If anything, I think you've made me feel a bit better tonight. I'm going to try look at it from this point of view going forward.\n\nI really appreciate you taking the time out to send this.",
                "author": "AlanOC91",
                "score": 30
            },
            {
                "body": "Also the reply box looks very forum-like, while modern sites would at least initially hide styling elements and inline media/gif/emoji.\n\n  \nBasicly the site would need to be styled around mobile first and then partially upscaled for PCs.",
                "author": "Mognakor",
                "score": 25
            },
            {
                "body": "It feels more like discord than anything else.\nUI/UX is not socialmediaesque",
                "author": "TaiKahar",
                "score": 22
            },
            {
                "body": "If nothing else, I like what you've made.\n\nI wouldn't look at this and feel bad about any of the time you've put into it. If you've learned more and honed your craft you've done something great. If the whole point was for this to be the next twitter or facebook, then sucks you didn't make it. But if this was just for yourself, and possibly maybe some day for some other geek that wants to talk about their favorite games, then I think even just the effort is valiant.\n\nYou did good. pat yourself on the back.\n\nAnd if you feel like putting this on the backburner for a while, then go for it. See if there aren't som greener pastures for it and you can always come back.",
                "author": "Skriblos",
                "score": 9
            },
            {
                "body": "Building “Twitter for X” sounds simple until you realize how much invisible glue makes those platforms feel alive. What you’ve shipped isn’t wasted, you learned a ton about real-time features, media handling, and UX, and those skills will carry into whatever you build next. The missing “magic ingredient” is usually network effect, not code. Even if you never take it further, it wasn’t wasted time, just an expensive prototype in experience.",
                "author": "Enough_Tumbleweeds",
                "score": 7
            },
            {
                "body": "No problem! And good luck!",
                "author": "Stratose",
                "score": 7
            },
            {
                "body": "Social Media platforms are the new CMS. Everybody thinks it’ll be fun until they start doing and realizing that it will essentially never be finished.\n\nGood to learn from. Not fun to maintain and deal with all the edge cases.",
                "author": "Gipetto",
                "score": 6
            },
            {
                "body": "Your first mistake was thinking “I’ll make Twitter for gaming”. Twitter was built and maintained by a large team of developers. If you could make a clone of it 100% on your own and rival it, you should be working somewhere where they would pay for that skill.\n\nYou didn’t waste your time, you just don’t have the product you envisioned because you grossly underestimated the work involved.",
                "author": "raybreezer",
                "score": 5
            },
            {
                "body": "I was thinking “these are screenshots of steam”.",
                "author": "its_all_4_lulz",
                "score": 5
            },
            {
                "body": "Great message.",
                "author": "McNoxey",
                "score": 5
            },
            {
                "body": "Well socials have 1 big issue chicken egg problem, bringing people to your socials, and an empty social making no one want to use it, unless you aggressively market it.\n\nSo socials always have a VERY Slow and painful linear growth, unless a big name, youtuber, influencer pushes it and enjoys it.\n\nBut another social in the wild wont do much, what is ir solving others cant do right now? Socials is made for quick fast exposure, what are you doing different to cater to gamers?",
                "author": "stormblaz",
                "score": 3
            },
            {
                "body": "Most project fails (9 out of 10 and that's a real stat). I never succeeded in my personal projects and I'm close to 40 now. On the other end, I became better than the average developer, always got a better salary and better conditions because of the skills I gained by \"failing\".",
                "author": "oncledan",
                "score": 3
            },
            {
                "body": "Sorry I should clarify that I'm not feeling bad over lack of usage but moreso \"this didn't end up feeling how I expected it to feel\" once I had gone so far into development. \n\nI appreciate the points though!",
                "author": "AlanOC91",
                "score": 3
            },
            {
                "body": "Yeah, that feeling of putting in a ton of work and then questioning it is super relatable. For the 'magic ingredient' of Twitter, I think it's less about the features and more about the network effect and the specific kind of content that gets shared. It's really tough to build that from scratch. As for avoiding that regret, maybe for future ideas, try to really nail down the core user experience and get some early feedback before diving into all the dev work.",
                "author": "imnotfromomaha",
                "score": 2
            },
            {
                "body": "OP, you've done awesome - The finished(ish) product isn't what you wanted, but you learned what to do on a project and more importantly, what **not** to do. That experience is very valuable, even if you feel right now that you are wasting your time.\n\nStart on a new project, on that isn't trying to rebuild this project better. You'll see along the way that you will recognize mistakes before you make them. It will make you a better developer.",
                "author": "Johnny_WalkerBOT",
                "score": 2
            },
            {
                "body": "Is your ADD diagnosed or undiagnosed ?",
                "author": "Brachamul",
                "score": 2
            },
            {
                "body": "Also, good for CV what OP did",
                "author": "Vas1le",
                "score": 2
            },
            {
                "body": "Well said. Every project teaches something valuable even if it doesnt achieve its original goal. The accumulated experience compounds over time",
                "author": "TerribleLeg8379",
                "score": 2
            },
            {
                "body": "lol don’t call me out like this",
                "author": "IhasTaco",
                "score": 2
            },
            {
                "body": "Your comment really resonated with me. Thank you ",
                "author": "randybanks_",
                "score": 2
            },
            {
                "body": "here king, you dropped this W 👑",
                "author": "NotSoProGamerR",
                "score": 2
            },
            {
                "body": "Its pretty good😅",
                "author": "HumbleRabbit97",
                "score": 1
            },
            {
                "body": "I like it, specially the tier lists. I was looking for a site that did that and I could not find one. But it's really hard trying to build social media because you fight against bigger outlets. Maybe you could surrender instead and make tools to post in those places? \n\nI recently made this site [Steam Buzz](https://steambuzz.vercel.app), it's a steam reviews aggregator. Since it's related I would appreciate your take on it.",
                "author": "Duerkos",
                "score": 1
            },
            {
                "body": "I think you're being a little bit too hard on yourself. If you've learned something, if you aren't missing out on any financial opportunities that you need to pursue, or if people like or use the things you've made, then it wasn't a waste. \n\nThe best advice I can give you, on how to manage feature and scope bloat, is to build features that your users want. Certainly you're a user of your own product, but you also need to build something that the other people who use your product want to use. Something that fits their needs too. \n\nOf course, if nothing is pressing, go at it. I think it'll help keep things on track if you prioritize the features and needs of your users. Ask them what they want and let them vote on what to prioritize. Ask yourself what you **need**, and not want, to use this more often.",
                "author": "mookman288",
                "score": 1
            },
            {
                "body": "I love the idea but I think maybe one strategy is to narrow focus and be really purpose built for the best way to share tips for one game -- then branch out once that latches on.\n\nI know there is really a void right now for fighting games with people trying to boycott twitter but not having a really great alternative. Become the best way to share fighting game tips/clips (as you have with your example sagat screenshot) and see if you can get some big streamers to share their clips/tips using that functionality.\n\nMaybe one way to address that is to tailor/purpose build your tags and make it a super nice experience beyond hashtags. Example: Have a nice UI around the full roster of SF6 and make it really easy to navigate/view those tags to access those clips. Maybe see if you can make this work for the upcoming games 2xko thats coming out or marvel tokon.",
                "author": "hackeclipse",
                "score": 1
            },
            {
                "body": "IMO, you just need UI changes. Looks very mid 2000s.",
                "author": "Scienti0",
                "score": 1
            },
            {
                "body": "I would say that regarding design you did solid work. You should be proud of what you built, you learned few things which is great. Also this doesn’t look like a forum to me, you made it in your own style, it doesn’t have to look like Twitter.",
                "author": null,
                "score": 1
            },
            {
                "body": "Looks and works pretty well! You've got a metric ton of spam in the forums though.",
                "author": "Prizem",
                "score": 1
            },
            {
                "body": "What specific parts made you regret it? The technical complexity, community management, or just the time investment vs results? Always curious about the 'what I wish I knew' moments.",
                "author": "RRO-19",
                "score": 1
            },
            {
                "body": "I am really impressed! How many years / months do you already work on this project?   \n  \nI've been working on a private project for 14 years now, and it generates relatively little money for the effort. But yes, I feel your pain :-/ But your GUI looks really good.",
                "author": "Remarkable_Entry_471",
                "score": 1
            },
            {
                "body": "That's a sick antialiased header though",
                "author": "bob_do_something",
                "score": 1
            },
            {
                "body": "I think this is awesome! Whether or not it becomes successful, I think any large-scale project like this is a rewarding experience all on its own. We're conditioned more than ever to feel like any time spent being \"unproductive\" (not profitable in the short-term or at all) is somehow wasted - especially if that time spent wasn't some form of entertainment either (Capitalism \"thrives\" on this notion). Ultimately this will all serve to enrich your future projects, but it's also just cool that something that didn't exist before exists now.  \n\nI agree with others here that the only thing that makes this feel like a forum is the layout. However, I think what makes that the defining style of such platforms is that they are mobile-first. Personally, I think a lot of sites waste a lot of space by adding huge margins on either side of the content, which is maybe what would make this look more Twitter/Bluesky-esque. If you look at Bluesky on desktop (https://bsky.app/) this is indeed the case. It makes sense, since they prioritize being a mobile app, and this was the easiest way to still make it responsive for less popular layouts. I personally like that the site you made isn't a clone of one of these, but actually makes great use of space and is overall very easy on the eyes. If you just made a \"Twitter for gamers\" that was practically identical to Twitter, I think people would just use Twitter for that (or the less insufferable Bluesky). This, on the other hand, combines that functionality with the vibe of Discord / Steam / Twitch, which I think is perfect. Regardless, whatever you end up doing with this in the long-term, you should be proud.",
                "author": "greenbean-machine",
                "score": 1
            },
            {
                "body": "Nice job. The social media site looks incredible. Don't need to look like Twitter or Facebook. Just be gametips and that's all!",
                "author": "Objective-Lion-5673",
                "score": 1
            },
            {
                "body": "I have straight up wasted years on projects that didn’t turn out how I wanted them. I think how you deal with that feeling is realizing how much you have learned and improved during that process, and noting what you can do differently for your next project!",
                "author": "Telescopeinthefuture",
                "score": 1
            },
            {
                "body": "You did good.",
                "author": "CatGPT42",
                "score": 1
            },
            {
                "body": "At and they got far enough to show what they’ve accomplished.",
                "author": "pikapp336",
                "score": 1
            },
            {
                "body": "Second this. \n\nIt's natural to feel that your work is for nothing, all that time spent goes down the drain. \n\nHowever in our industry, it's rarely that way since you do accumulate knowledge and experience. \n\nThe time you spent building this only goes to waste if you did not learn anything or not applying the learning in the future.",
                "author": "Glittering_Mud_780",
                "score": 1
            },
            {
                "body": "Thanks! \n\nHuh? I don't see any? I just went through the forums and there's no spam.\n\nEdit: Ah I see what you mean. These are actually imported games from IGDB which auto created a forum category once the game is imported. It definitely looks a bit spammy considering some of the eh 'games' it imported.",
                "author": "AlanOC91",
                "score": 1
            },
            {
                "body": "Thanks! I really appreciate it! I was lightly working on it starting December 2024 but really kicked things off April onwards of 2025",
                "author": "AlanOC91",
                "score": 1
            },
            {
                "body": "I feel like all your learning is that sometimes things that seem easy to build just arent",
                "author": "justaguy1020",
                "score": 1
            },
            {
                "body": "What were you trying to achieve?",
                "author": "stormblaz",
                "score": 1
            },
            {
                "body": "I mean the whole \"I randomly poured my soul into this thing and now I'm looking for an excuse to stop and pour my soul into something else tomorrow morning\" is calling out by itself :D",
                "author": "Brachamul",
                "score": 1
            },
            {
                "body": "I probably would've tried a system where you have a number of \"important\" games, and then you'd dynamically add the video game upon submit.\n\nLets say that um.. Minecraft wasn't there, when you create a thread, it would contact the IGDB api (or preferrably a local cache) to retrieve the game information so its an option and then upon submit it would add the category and create the post.\n\nMight not be the best way of handling it, but that's how I'd avoid that problem. I haven't fully thought it through fwiw.",
                "author": "TertiaryOrbit",
                "score": 1
            },
            {
                "body": "ah I see it's just 283k prepopulated titles like \"I Wanna Fuck My Mom's Best Friend,\" \"В ПОДЪЕЗДЕ\" and \"4294967296\" that made me think it's spam. I don't think I like that approach, trying to capture everything under the sun in a massive dogpile of forum topics over 25k pages. Not only that, but there's no sorting, filtering or any sort of curation.",
                "author": "Prizem",
                "score": 1
            },
            {
                "body": "Its always the same, you make a project, make a ton of mistakes, learn from them and be able to write better code for your next one, rinse and repeat for your entire career. (Or just even massive refactors within a good codebase you get it).\n\n\nThe magic ingredient is ui / uw, try mobbin if you're willing to pay the price, also consider posthog or to see client retention\nhttps://mobbin.com\n\n\nIf you can't easily refactor the ui to something people will actually be attracted and get users, just kill the project, useless to maintain otherwise\n\n\nYou should be happy when code gets replaced because what comes next is probably better and even simpler.\n\n\nI dont over engineer my code, I write the bare minimum functionality needed at the moment and make sure I have no technical debt. Probably the best \"mentality\" to make progress. Also value user base and try to make paid plans (clerk billing is easy to implement).\n\n\nIf you want to make a dozen demos of SAAS' mvp's get a cursor subscription, once you find the right idea build it yourself. ",
                "author": "BigBoicheh",
                "score": 0
            },
            {
                "body": "Like my rule for girlfriends. If i’m not getting married, I move on after a year.",
                "author": "Iron_Madt",
                "score": -13
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1630449665.0,
        "title": "For those of you profiting from your web app as a service, what platforms or libraries do you use to manage and integrate automated subscriptions and users?",
        "author": "shootwhatsmyname",
        "id": "pfgo06",
        "selftext": "Supabase and a few others use Stripe, but if there’s something that’s worked really well for you I’d love to hear about it!",
        "score": 30,
        "url": "https://www.reddit.com/r/webdev/comments/pfgo06/for_those_of_you_profiting_from_your_web_app_as_a/",
        "num_comments": 5,
        "comments": [
            {
                "body": "Firebase and Stripe",
                "author": "Zachincool",
                "score": 13
            },
            {
                "body": "Stripe until you reach a certain size, because Stripe is easy to integrate and work with, and your time is better spent doing other things.\n\nOnce you're above a certain size, of which it depends on your industry and business model, you'll either want to do a contract w/ stripe or find a different provider once its worth building a more customized integration.",
                "author": "noodlez",
                "score": 8
            },
            {
                "body": "I've used Stripe and [Braintree](https://www.braintreepayments.com/) in the past. Stripe is easier to onboard with better docs, but if you aren't careful being able to swap one provider for another is real tough if you directly use their tokens (following their internal modeling) in your database, as they're often different enough from each other that you can't drop-in replace them.\n\nYou might want to consider creating an abstract class that has an implementation powered by Stripe, which helps avoid that problem and may also make interactions with billing simpler from the rest of your codebase, but it will also add friction any time you want to use another feature from your payment provider as you need to think about how you want to abstract it. And if you aren't reading the docs on how the competitors work, your abstraction may end up being not-abstract-enough and still tied too tightly to Stripe and you've just played yourself.\n\nSo maybe only do that if you're willing to put some time reading *multiple* providers' docs and figuring out what's common/different between them?",
                "author": "isv-damocles",
                "score": 3
            },
            {
                "body": "Stripe all the way for both one time payments and subscription. They even have a checkout page and a dedicated customer portal for basic subscription manage, so you don't have to spend time creating those unless you want something more complex. \n\nI'm also using PayPal for one time payments alternative.",
                "author": "Ibrahim_AA",
                "score": 1
            },
            {
                "body": "Paddle?  I'm really interested to hear people's opinions about it",
                "author": "LetsGo",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1656443544.0,
        "title": "Announcing playCTF and Beast - An open source Jeopardy style CTF creation and management platform and tool!",
        "author": "FireFistAce_10",
        "id": "vmv7s3",
        "selftext": "CTFs are much more than just an event or a competition, they are an adventure. And being able to host them on a great open source platform with ease adds to the fun.\n\nSDSLabs is proud to announce the release of playCTF, a Jeopardy-style CTF challenge deployment and management platform.\n\nIts intuitive and user-friendly deployment interface enables anyone to set up a CTF competition in a couple of minutes.\n\nplayCTF incorporates BEAST, our CTF creation platform, which provides container-based isolation of each challenge.\n\nCheck it out on https://playctf.sdslabs.co.\n\nExperience playCTF on the [playCTF playground](https://playground-playctf.sdslabs.co), or have a peek at the [source code](https://github.com/sdslabs/playctf).\n\nAlso, check out the [Beast GitHub repository](https://github.com/sdslabs/beast) and the \n[Beast User Documentation](https://beast.sdslabs.co),\n\nGive it a chance, and Beast will surely live up to it's name for you! \n\nSDSLabs feels ecstatic to announce the release of Beast, an Open Source platform to host and manage deployment, lifecycle, and health check of CTF challenges.\n\nBeast provides features like container based isolation, easy configuration, SSH support for challenge instances to name a few.\n\nBeast is the perfect open source alternative to proprietary CTF organizing tools like CTFd and HackTheBox.\n\nHead over to [Beast User Documentation](https://beast.sdslabs.co) to know more about it or check out the [code](https://github.com/sdslabs/beast)\n\nMade with 💖 by SDSLabs\n\nIntrigued and wanna chat more with the team behind it? ([https://chat.sdslabs.co](https://chat.sdslabs.co)) our [Discord](https://discord.gg/dXkVEgTPu9) is open to all visitors and questions 😉",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/vmv7s3/announcing_playctf_and_beast_an_open_source/",
        "num_comments": 2,
        "comments": [
            {
                "body": "Whats a CTF?",
                "author": "no-one_ever",
                "score": 2
            },
            {
                "body": "u/no-one_ever CTF (Capture The Flag) is basically a game where you are given challenges which can be in the form of static files, web services or even executables and you have to exploit their security vulnerabilities to extract a flag. To know more, you can visit [https://ctftime.org/ctf-wtf/](https://ctftime.org/ctf-wtf/).",
                "author": "Darkflux_102",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1626061343.0,
        "title": "Starting a Web Dev Agency - How do you manage the agency's email/platform accounts?",
        "author": "LuckiestAlien",
        "id": "oija43",
        "selftext": "My brother and I are starting a web development agency. I want to do things right and not have everything linked to our personal emails. \n\nWhat is the recommended best practice for creating accounts with hosting platforms and affiliate websites? We already have a separate LLC created for the business. Logically seems appropriate to have a separate administrative email of the business which would be the main account for web hosting,bookkeeping, affiliate links, all leading to the business bank account. \n\nI know some business owners and they linked it to their personal emails, but this becomes extra impractical since the two of us are partners without access to each other's personal emails. Just wondering how fellow web dev agencies have handled the situation.",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/oija43/starting_a_web_dev_agency_how_do_you_manage_the/",
        "num_comments": 8,
        "comments": [
            {
                "body": "Don't you just buy a domain and set up an email address?",
                "author": "Rhym",
                "score": 13
            },
            {
                "body": "Keep it simple and use the gmail suite",
                "author": "Frosty-Ad1416",
                "score": 7
            },
            {
                "body": "Often, your hosting provider will be the easiest to set up because they automate the dns changes.\n\nGsuite is next easiest because they walk you through changing dns so you can use Gsuite.\n\nI like to create departmental email addresses (or groups in gsuite) like accounting@, sales@, hello@, support@",
                "author": "difficultAce",
                "score": 2
            },
            {
                "body": "Mxroute.com is who I use for email hosting. Very stable and high uptime. Very easy to deal with company owned by a really nice guy. \nI highly recommend their email hosting. \n\nI have a custom webmail login for my site at mail.mysite.domain\n\nI can pick what webmail front end to use. It's amazing.",
                "author": "dk0de",
                "score": 1
            },
            {
                "body": "Buy domain, setup G-Suite (or whatever the hell they are calling google apps these days).",
                "author": "vinegarnutsack",
                "score": 1
            },
            {
                "body": "If you're going to be hiring permanent employees, Microsoft exchange can be used.",
                "author": "Blazing1",
                "score": 1
            },
            {
                "body": "You mean gsuite? Would you recommend having a central account just for the platforms and services I mentioned above?\n\nIt seems logical but I'm curious what others are doing",
                "author": "LuckiestAlien",
                "score": 1
            },
            {
                "body": "migadu",
                "author": "dzigizord",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1642095137.0,
        "title": "I've been asked to create a job recruitment website for a small local agency. How would you approach this? Is there a decent platform that you recommend that could manage the jobs and inputting new people etc that's user friendly for the client?",
        "author": "Vespaman",
        "id": "s34rwi",
        "selftext": "I don't have a lot of web design knowledge but the guy knows me well and so he wanted me to make it for him. \n\nIt doesn't need to be ground breaking, just user friendly and nice to look at it. Nothing complicated.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/s34rwi/ive_been_asked_to_create_a_job_recruitment/",
        "num_comments": 3,
        "comments": [
            {
                "body": "You could use Wordpress coupled with Job Board plug-ins. Check their website",
                "author": null,
                "score": 1
            },
            {
                "body": "Ah that's a good idea. Cheers.",
                "author": "Vespaman",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1713706286.0,
        "title": "Are we overcomplicating web dev in 2024?",
        "author": "Affectionate_Power99",
        "id": "1c9hyug",
        "selftext": "Hello fellow developers,\n\nI’ve been working with Astro for creating websites and love its performance benefits and DX. However, I'm facing challenges with the client handoff process, especially when compared to more integrated platforms like Webflow, Framer, or WordPress.\n\n**Here’s the scenario:** When building websites with platforms like WordPress, Webflow,  etc., the handoff is straightforward — I simply transfer the project to the client's account, and they have everything in one place to manage and make updates as needed. **HOWEVER**, with Astro and most likely other modern frameworks, the process seems fragmented and potentially overwhelming for clients, especially small to medium-sized businesses.\n\nFor instance, to fully hand over a project:\n\n* Clients need a GitHub account for version control.\n* A Netlify/Vercel account for hosting.\n* An account for where the self-hosted CMS is (I am considering options like Directus or Payload to avoid monthly fees for my clients).\n* An account for the CMS itself to log in and make changes to the website.\n\nThis setup feels complex, particularly for clients who prefer owning their site without ongoing maintenance fees. They may find managing multiple accounts and interfaces daunting.\n\n**My questions to the community are:**\n\n1. Have you encountered similar challenges with modern frameworks like Astro?\n2. How do you simplify the handoff process while maintaining the autonomy and cost-effectiveness that clients desire?\n3. Are there tools or strategies that can integrate these services more seamlessly?\n4. If you've implemented custom solutions or found effective workarounds, could you share your experiences?\n\nAny insights, experiences, or advice on managing client handoffs in this context would be greatly appreciated. I'm particularly interested in solutions that could apply not only to Astro but also to other modern front-end frameworks facing similar issues.\n\nThanks in advance for your help!",
        "score": 278,
        "url": "https://www.reddit.com/r/webdev/comments/1c9hyug/are_we_overcomplicating_web_dev_in_2024/",
        "num_comments": 139,
        "comments": [
            {
                "body": "You’re using a stack that’s too complicated for your problem. All of these tools are great and provide really simple tools _for developers_. They aren’t really fire-and-forget setup like Wordpress.\n\nYou’re dodging around like 4-5 different tools that aren’t unified, stitching them together manually and trying to hand the result off to non-technical folks. That’s just not going to work easily. You’ve optimized for a lot of cool and interesting things, but not for ease of handoff or ongoing maintenance. If your business involved a small retainer for maintenance (IE, anything that’s not done via the CMS) you’d likely avoid a lot of the problems here. Full handoff with no fees to non-technical users is a fairly large ask.\n\nSSGs are wonderful, but they require a full deploy pipeline with all kinds of connections in order to cause data updates to populate everything. It’s a lot more steps than just having everything built together like with Wordpress. Wordpress comes with its own costs, too — paying monthly hosting bills, etc. There are always tradeoffs.",
                "author": "mq2thez",
                "score": 212
            },
            {
                "body": "Yes people make it more complicated than it needs to be because the frameworks sell themselves to these devs.",
                "author": "DustinBrett",
                "score": 105
            },
            {
                "body": "Then it sounds like your stack will need to shift. You’re using great tools, but they aren’t great for handoffs or turn-key solutions.",
                "author": "mq2thez",
                "score": 70
            },
            {
                "body": "The goal of the CMS is also to not have to do a handoff. You let the access to the CMS and keep managing everything else.\n\nThe handoff is made only to be transferred to other devs for those type of projects. Otherwise it means your choice of techno is not adapted to your customer.",
                "author": "Quentin-Code",
                "score": 61
            },
            {
                "body": "Then use wordpress, wix or squarespace and stop over engineering your sites if you don't want to do the hosting for them. Asking normal people to have access to github and vercel is too much.",
                "author": "Demonox01",
                "score": 53
            },
            {
                "body": "If part of your business model includes handoff you need to make wildly different stack decisions than people who are building for themselves or building SaaS products or what have you.\n\nTo put it another way: *we* aren't overcomplicating things, but *you* are!",
                "author": "themaincop",
                "score": 43
            },
            {
                "body": "I have a partner in the UK with access to everything. They take over. And if he dies then I have another in the states that’s also got access to everything. And if she dies they my buddy in Toronto has access to everything and takes over. And if he dies, clearly this whole thing was cursed and doomed from the start and it’s best people stay away from us for their own safety.",
                "author": "Citrous_Oyster",
                "score": 37
            },
            {
                "body": "That's not what they said. Your client needs to be aware the site you've built requires a developer to maintain, you should not hide that fact. The CMS is so they can upload content to the site without dev support - not maintain the code that keeps it running.\n\nMany clients will be looking for a SPA/MPA with the works. They will understand they either need to keep you on retainer for 5-10 hours a month, or bring in an internal developer to continue maintaining the site after you've finished designing/building it.\n\nSome clients are not looking for that at all. They just want a content-driven website they can manage themselves and don't need any bespoke features that can't be found in a Wordpress/Squarespace/Drupal, site. Those clients will likely not want a solution that requires ongoing developer maintenance, they want you to use a system that can be accessed by non-technical staff.\n\nIf your client is the latter and you've built them a Next.js Astro site then you've used the wrong tools.",
                "author": "Front-Difficult",
                "score": 34
            },
            {
                "body": "You’re doing it wrong. You don’t actually hand off the site to the client. They don’t know what any of these things are or how to use them. So having access to them means nothing. Sell yourself as a service. Do it for them. I have one GitHub, one netlfiy account, and one porkbun account for everyone. Thats how it makes edits and things easy for me. I don’t need to manage 80 different logins for 3 providers or more. Clients like not having to do things. I relieve them of that burden. Everyone always hands off a site to them that they don’t know what they’re doing with. I don’t. I set it all up for them and manage it and its edits for a monthly fee. \n\nI charge $0 down $150 a month unlimited edits, 24/7 support, lifetime updates, hosting, the works, or lump sum $3500 minimum and $25 a month hosting and general maintenance. $50 a month add on for unlimited edits and 24-7 support. \n\nI build custom coded sites in 11ty myself, and use the decap cms for blogs that the client can edit themselves or a marketing team. \n\nI currently make $8700 a month from these monthly subscriptions and do less than 10-20 hours of edits a year. \n\nI don’t think web dev has gotten too complicated. I think many devs just are overcomplicating it for the client. Simplify it for them. They will pay for you it. The Less they have to do and think about the better for them. Sell a service. Not just a website.",
                "author": "Citrous_Oyster",
                "score": 33
            },
            {
                "body": "Yes, business owners who hire web devs are very busy and the last thing they wanna learn is all this tech stuff.  Getting them to use Wordpress properly is already unnecessary complicated as it’s bloated, slot and yet underwhelming.  Getting them to understand version control wow I can’t imagine",
                "author": "olcoil",
                "score": 27
            },
            {
                "body": "Depends totally on what your client need. Im a big believer that simplicity is underrated",
                "author": null,
                "score": 23
            },
            {
                "body": "Get a hosting contract signed and let them pay you for it. That's the easiest way for your chosen stack.",
                "author": "julianw",
                "score": 21
            },
            {
                "body": "I'm so glad people are finally understanding this.\n\nFind the tech that is quietly doing it's job, projects trying to align to standards. Anything trying to make itself obsolete-- That's what we need more of.",
                "author": "deadwisdom",
                "score": 21
            },
            {
                "body": "Publii is a SSG which is portable and doesn't need any deploy pipeline - just an FTP(S) account, no MySQL, no PHP and it's faster than Wordpress.",
                "author": "niutech",
                "score": 20
            },
            {
                "body": "I find it amusing good old PHp WordPress just works , and has a shit ton of functionality via plugins , whereas these advanced frameworks are a shit ton of effort to cobble together just something with the approximate functionality of WP.or similar tools..\n\n  it really tells you all you need to know.  Devs fall for all this over engineered tech which usually originates out of FAANG because they have special cases due to their scale, but for 95% of site it's.not needed...keep it simple people, remember your average end user doesn't care how the sausage is made , but you will when you need to explain or debug it...",
                "author": "abrandis",
                "score": 18
            },
            {
                "body": "Headless CMS are the wrong tool for most SMEs.",
                "author": "LagT_T",
                "score": 16
            },
            {
                "body": "tub punch payment crowd escape voracious dinner entertain station lock\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": null,
                "score": 16
            },
            {
                "body": "WordPress",
                "author": "jan04pl",
                "score": 16
            },
            {
                "body": "Wrong. I sell retainer Maintenance. None of my clients can edit their sites and they’re happy with that. Less they gotta worry about.",
                "author": "Citrous_Oyster",
                "score": 15
            },
            {
                "body": "Just for fun: php is still game in 2024, it's the simplest to host for any client.\n\nIf your client can't use version control, zip your project with .git included, the next dev will thank you for it.\n\n90% of your projects can be done with a micro framework laravel/vuejs. Anything more complex should be reflected in your pricing.",
                "author": "bendem",
                "score": 12
            },
            {
                "body": "Yes. People use needlessly complicated frameworks like Next plus additional 20 equally as complicated packages to create the simplest things. I am not saying that something like Next doesn't have pros but if I can make something that works as intended in 3 days why spend 2 weeks on it.",
                "author": "chajo1997",
                "score": 11
            },
            {
                "body": "I would say, you are quite experienced. \n\nThere is a lack of common sense, most of the time. \nInstead of focusing on what needs to be done, devs look for a tool how to do it.\n\nUse a hammer to screw..",
                "author": "UXUIDD",
                "score": 11
            },
            {
                "body": "Honestly, what you're handing off doesn't seem *too* bad for complete ownership of the site and codebase. That said, yes, everything about web dev has grown ridiculously complicated. Even most profitable *companies* have massively overcomplicated solutions. I've been interviewing a lot recently, and there's like a ton of business management software out there that caters to maybe a few hundred users that, instead of using an MVC framework hosted on a VPS (or EC2, which is basically a glorified VPS) with a simple database, is using like nineteen different unnecessary AWS services, a bunch tightly coupled microservices that don't need to exist, etc. -- what the is the *point*, other than making development, deployment, and maintenance a giant fucking headache?",
                "author": "I111I1I111I1",
                "score": 9
            },
            {
                "body": "What if you die?",
                "author": "Numerous_Fix_6207",
                "score": 9
            },
            {
                "body": "And if he dies there’s a carrier pigeon named Swift ready to fly to Dover with the login creds. It’s got an upkeep, but clients appreciate the foresight.",
                "author": "Profuntitties",
                "score": 9
            },
            {
                "body": "Every developer will eventually reach a point where they realize that **you cannot use technologies that your client cannot support.**\n\nFor many small businesses or internal orgs, this means you can’t use any service or technology:\n\n- where your client cannot afford to hire another dev of your caliber once to help them when you are gone (aka nearly all small businesses or low-skill internal organization)\n\n- that cannot be quickly understood by a complete beginner\n\n- that cannot be easily deployed by a complete beginner \n\nIf your client or job fits within this criteria, you need to **dumb it down.**\n\nFor a small business, this means using something other than PHP (Wordpress, Statamic, CraftCMS) is likely a poor choice.",
                "author": "30thnight",
                "score": 8
            },
            {
                "body": "WordPress is used because it's cheap, reliable and proven... And it does likely 90% of what folks need out of the box and 99% with the right plugins,  there's nothing out there even remotely close  that's not some custom site built costs 10x what  a basic Wp would do... \n\nYou need to realize most folks that use WordPress for business don't care about the tech they care about the utility, this is the problems with folks like you so enamored by new shiny tech you don't realize the complexity is not  worth it for.most small businesses. Again like I said provide me a specific alternative to Worpress  that's simple to spin up ,configure and use.... You'll be hard pressed to, and tell me you'll do that for under $1000",
                "author": "abrandis",
                "score": 7
            },
            {
                "body": "In 99% of the cases, even WordPress is too complicated. Why would we host static sites with news sections that are never updated on a dynamic platform?",
                "author": "RecognitionOwn4214",
                "score": 6
            },
            {
                "body": "Build in a memorial page to yourself which becomes the homepage if a dead man's switch is not reset every 24h.",
                "author": "betelgozer",
                "score": 6
            },
            {
                "body": "Seems like React/Next has become so forced and widely used mainly by \"self-made\" web devs which got on the programming hype in the last 2-3 years that it's become a staple for building literally any site big or small here and you are forced into it.\n\nMy current work colleague and \"boss\" forces react due to his exposure to the web development community and being a modern programmer himself. He also imposes too many \"practices\" which are mostly subjective and cost so much time on projects that aren't worth it money wise specially for a small development firm like ours which has 2-3 programmers. This made the development time needlessly long and if your pay is based on the finished project then you are screwed. So I have a very bad taste left from modern web development.",
                "author": "chajo1997",
                "score": 6
            },
            {
                "body": "Oh nice, I’ll have to check that out. Thank you! Always cool to find new tools.",
                "author": "mq2thez",
                "score": 5
            },
            {
                "body": "No pressure, but any chance you could link a WordPress site or two that has some particularly interesting functionality?  I'll do some searching myself, just curious what kind of things I can accomplish with wix/WordPress and when you really have to draw the line and upgrade your stack.",
                "author": "got_no_time_for_that",
                "score": 5
            },
            {
                "body": "1. What do you define as corporate websites? You don’t build a brand in social media. You build awareness around a brand with it. I think that’s the biggest distinction. You can’t build a brand using homogenous social media platforms where you can’t actually customize its look and feel other than a profile and cover photo. Thats not Branding to me. Branding is about creating an experience or feeling around a company or product. You do that with your logo, color and branding guide, assets, website, and marketing materials. Social media is where you build awareness around that brand and add social validation to it. That’s what I’d tell them. They’re missing out on a huge part of branding and sales funnel by ignoring getting a good website to establish their brand. \n\n2. Nope. New pages are $100 per page. And the blog comes with a cms for them to add their own blog posts.",
                "author": "Citrous_Oyster",
                "score": 5
            },
            {
                "body": "Wordpress, Wix or similar.",
                "author": null,
                "score": 5
            },
            {
                "body": "Web development has been intentionally overcomplicated and over-frameworked and over designed by paeudointellectual hipster valleybros that get a chub from fancy sounding acronyms with cute icons that represent their favourite starbuck caramel soy latte or their avocados and cranberries for the past 15 years or so. It's the reason the entire subset of programming is a laughing stock to the rest of the industry.\n\n\nWhat do you mean, \"in 2024\"? This exact question gets asked every quarter, and every web guy begrudgingly agrees before going to try out the latest js framework and downloading the new almond-milk rapid jellyfish framework because in web development you get hired based on your knowledge of buzzwords and fads backed up by bootcamp certificates than for actual talent.\n\n\nCome back soon and then you can reply to a thread asking the exact same thing from the other perspective. ",
                "author": "ScapingOnCompanyTime",
                "score": 4
            },
            {
                "body": "I don't see why anyone would want to use react or next for public facing static sites. Or for that matter anything with a build step.",
                "author": "Blazing1",
                "score": 4
            },
            {
                "body": "Don't forget to download dinky (formerly fuckface+) then install swizzle so that you can deploy it to your lentil instance. While you're at it, don't forget to back up your lentil with the security that clitty offers, but no one uses clitty anymore so chode or 69ly might be your best bet. Honestly though, I normally skip all those and just go straight for a cunty + cowpat stack, normally only costs $5000 a month, but I manage to get it cheaper with their migration discount. Got it 75% off when I migrated from my farthuff and pecan-pie stack",
                "author": "ScapingOnCompanyTime",
                "score": 4
            },
            {
                "body": "This right here. I still do the majority of sites in Wordpress, even though I can go custom. Why change? WP is fantastic, it's both client and developer friendly, has a ton of plugins, great back-end editors. Leave well enough alone. I've felt that Web Devs have been overcomplicating this for YEARS and clients really just don't care whatsoever as long as they can get what they want.",
                "author": "NYCHW82",
                "score": 4
            },
            {
                "body": "Simple text changes. Making sure the forms still work. Checking search console for any errors.",
                "author": "Citrous_Oyster",
                "score": 4
            },
            {
                "body": "I use Wordpress a lot, but generally I use only two third party plugins. ACF Pro, because custom post types and fields are hella tedious to do manually and it already uses best practice ways of doing that - and Duplicator, to move from dev to prod effortlessly. \n\nAnything else I write the code myself. There’s nothing superfluous being added and what is being added is correct without any further fuckery. \n\n9/10 times it’s not even particularly complicated or difficult code. \n\n(Edits have turned this into a much longer rant I’m sorry!)\n\nLast week I had a custom archive that would’ve needed several plugins for a no-code solution, most of which would’ve had a bunch of unused features included for no purpose. Said archive needed to be grouped/organized by tax terms, alphabetical under each term, then reference a set of related posts in another post type for each main post, their tax terms, and a custom string attached to each of those tax terms. Then it needed to be heavily filterable on up to three different criteria, but the dataset for filter selects wouldn’t be complete until after the place in the document flow where those filters had to be. \n\nOne WP_Query Object is all I needed. A plugin route would’ve queried the DB dozens of times, one for each tax term, on each main post for each related post, just… no ugh.\n\nSure, I used that one query to build a four-level deep array. I did have to ksort the outermost array, and I still had to iterate through the nested arrays. But I only had to do it once. \n\nWhile generating and sorting the post/term object arrays I simultaneously built the filtering logic in the same iterations. Any faceting plugin would’ve had more queries and more iterations since, by necessity and by virtue of not being written around this specific scenario, it would’ve had to basically repeat the entire set of queries and iterations (the less optimized way, not my one-query way) just to get all the options. \n\nSome simple string concatenation and output buffering made the whole logic and output location discrepancy thing a complete non issue as well. \n\nI’m almost curious enough to try building the same thing with plugins just to see the performance difference. I honestly don’t even know if I could… but I can’t help but wonder. Like I used one query and one set of for each loops. I think with the amount of data that is actually used in this archive, using premade plugins could’ve easily been 100+ queries and loops for the same task. Actual nightmare scenario. \n\nAnd like, yeah it’s complicated by the standards of a WP post archive, but as far as writing php (and I guess a few dozen lines of vanilla JS for the DOM part of the filtering) it was actually pretty basic. The whole thing only took a few hours to write, test, debug, refactor, and call good. \n\nIf you wanted to point out that I had also written some other code for reusable components and templates that would be fair, but also… a function that takes an array + a string then returns html for a sorted dropdown out of it, or a simple bootstrap grid with ACF fields aren’t exactly day ruining tasks either. Maybe add another hour or two into it. Still well within what can be done in one day without even rushing.\n\nI’m not even a super experienced senior php dev or anything. Before late 2022 the last time I so much as looked at php was pasting phpBB mods into files circa 2004. Shoot, I dropped out of a CS program circa 2008 and turned my back on coding entirely for over a decade, minus the occasional leetcode style challenge (usually in Java) once or twice a year. \n\nNone of the syntax I used is anything that would be unfamiliar to an average intermediate dev. None of the logic I used was particularly outlandish. Honestly I probably didn’t even think of the single most performant solution either. Like I’m not that great of a dev. But if I can do that task in an efficient manner without plugins then I feel comfortable saying anyone who isn’t on their first month of php could do the same. \n\nAnd if you’re so adverse of code you can’t learn the basics of WP functions, string manipulation, and array traversal… what the hell are you doing building web sites at all?",
                "author": "Synthetic_dreams_",
                "score": 4
            },
            {
                "body": "Relax , if WordPress was such a POS it wouldn't the presence it has today , including lots of sites with plugins , you're right lots of the plugins are low quality, but for most sites those are not being used.\n\nAs for the other solutions , kindly tell me which are the way ones that you don't have to cobble together?",
                "author": "abrandis",
                "score": 4
            },
            {
                "body": "Web dev is definitely overcomplicated, but that’s just the marketing and business side of it. It’s still important for devs to know when and where to use the tools we have. In your case, I just wouldn’t be using Astro. If your clients would rather add things in themselves, give em Wordpress and a login. I love Astro, I use it for my agency website and my personal portfolio, but my small business client just wants some info updated here and there, so I wouldn’t overcomplicate it for them",
                "author": null,
                "score": 3
            },
            {
                "body": "We're kind of in the golden age of web development right now.  You have an incredibly broad range of tools at your disposal, and one of them is likely just right for your client.\n\nIt's a sign of maturity to be able to recognize that maybe the tools you like are not the best tools for a given project.  I feel like it's getting a little better recently, but the js world has been relentlessly immature on this point for the past decade.  Kind of a: \"When your only tool is react, everything looks like an SPA\" situation.\n\nLet's say your client needs a 6-page brochure website that they can edit on demand, and a drag-n-drop page builder that their niece can use a couple times per year to make seasonal landing pages.  Can you build that from scratch with jamstack tools? Probably.  Can you build a cheaper, simpler version with comparable perf in wordpress? probably.\n\nDon't be doctrinaire about tools.  Pick the one that's right for what your client needs, not the one that you really like to use.",
                "author": "_listless",
                "score": 3
            },
            {
                "body": "Segment your handoff, this is for you and this is for a future dev should you need one. Ezpz. Black box all the dev shit and say nothing other than “a dev has all they need in here” then guide them to the cms so they can undo all your hard work over the next 6 months/year.",
                "author": "Folofashinsta",
                "score": 3
            },
            {
                "body": "Vanilla JS, CSS, HTML never went anywhere. All these frameworks are doing is streamlining tools that would typically be hard-coded and in turn we assume it’s bloat.\n\nIf you understand vanilla JS, CSS, and HTML then these frameworks should never ‘hinder’ anything. You are eating food that everybody else likes and you don’t, just shop around.",
                "author": "Stock_Price1261",
                "score": 3
            },
            {
                "body": "It's the culture.  If its simple its considered terrible and done by a junior.  I have seen it with so many projects, start out with a basic json API with some crud just getting data from mysql and shoving it to the fe.  Then its all this is stupid, it cannot scale and it will be a hassle to maintain.  So we get micro services and a number of databases, need to spin up a proxy to communicate between all the different backend servers and expand to team 5x to cope with all the new dev.  Then the backend is always out of date with the spec and to solve this you switch to graphgl on the front, so all the backend work is now on the front too. \n\nWhat could have been built by two guys in 6 months is now a multi year project with a team of 30 and full of bugs. Literally seen this happen.",
                "author": "nasanu",
                "score": 3
            },
            {
                "body": "> Are we overcomplicating web dev in 2024?  \n\n\nAlways has been 🔫",
                "author": "truechange",
                "score": 3
            },
            {
                "body": "> tightly coupled microservices\n\nOxymorons are very common in this industry. For instance in most companies with microservices they are tightly coupled, so they are not microservices at all. Most companies are \"agile\" but only use 1/3 (at most 1/2) of the agile workflow and are in the end not agile at all.\n\nI am sure we could find a lot more examples.\n\n>what the is the point, other than making development, deployment, and maintenance a giant fucking headache?\n\nFollowing trends and FOMO, probably. Everybody does it, so the client asks for it and if you don't do it too you risk missing out on contracts. A lot of mid to large sized clients ask for agile and microservices, for example. It's now in the core package, a given, expected.\n\nNowadays the new bullshit trend is that you must put AI in your product, because competitors do it and the client asks for it. Nobody knows why there is AI in the product and what value it actually brings, but that's irrelevant as long as it's there.\n\nSelf sustaining trends of bullshit.",
                "author": "Eclipsan",
                "score": 3
            },
            {
                "body": "Get better clients.",
                "author": "zxyzyxz",
                "score": 3
            },
            {
                "body": "'anything trying to make itself obsolete' \n\nThat's a pretty neat idea for a filter and something to think about beyond programming as well.\n\nThanks for that.",
                "author": "Rich_Top_4108",
                "score": 3
            },
            {
                "body": "I know it's wrong but this made me laugh.",
                "author": "relentlessslog",
                "score": 3
            },
            {
                "body": "Something like Wordpress. It can be self-host but I'd advice the client against it. The WP creator plan costs 300 bucks annually, the maintenance cost of self-hosting it in work hours alone will probably exceed that.",
                "author": "LagT_T",
                "score": 3
            },
            {
                "body": "Agree, a lot of the complexity in tech stuff has to do with corporate environments, where the have the money to afford complex teams and systems, but that really doesn't apply to midsized to small businesses.. in smaller business they just want reliable tools not complicated infrastructure",
                "author": "abrandis",
                "score": 3
            },
            {
                "body": "Devs are particularly prone to falling in love with [Golden Hammers](https://en.wikipedia.org/wiki/Law_of_the_instrument), at which point there's a terrible tendency to skimp on the requirements-gathering (that allows them to understand the problem and select an appropriate tool for it), and instead to *assume* which tool  will be used, which then requires them to bend and mutilate the problem until it fits the tool they've selected.",
                "author": "Shaper_pmp",
                "score": 3
            },
            {
                "body": "Changing hours or some headers and contact info. Very strict contracts that prevent scope creep",
                "author": "Citrous_Oyster",
                "score": 3
            },
            {
                "body": "Bingo - so I work in enterprise.  Headless CMS + Astro, and then there's all the pipelines and glue to make it work.\n\nI actually spoke to a supplier who is looking at a headless CMS for the Small-Medium sized company market, which would sit well with some companies using WP, Wix, etc. - my main advice was to provide the full end-to-end solution, even if it's headless - Pick a framework (like Astro or 11ty) and build a out-of-the-box site, with components for the content types and make it part of the product.\n\nIf they don't, then most small companies will fail or abandon",
                "author": "tanepiper",
                "score": 2
            },
            {
                "body": "The more and more I work as a programmer the more I realise how awesome wordpress is for an average client. We just hate it cause the dev experience is kind of bad. On the other hand client experience is great and we have to do what's best for the client.",
                "author": "salamazmlekom",
                "score": 2
            },
            {
                "body": "Yes",
                "author": "blancorey",
                "score": 2
            },
            {
                "body": "You could create a new email account for each client, then use that email account when registering all the services. So when you hand off, you just need to pass them the keys to that account, along with a doc listing the services.",
                "author": "HuWeiliu",
                "score": 2
            },
            {
                "body": "We've been overcomplicating web dev since 2014",
                "author": "Mysterious_Bet_6856",
                "score": 2
            },
            {
                "body": "Most of my income is based on the idea that people think Wordpress is \"fire-and-forget\" and the inevitable shitshow that follows.",
                "author": "devolute",
                "score": 2
            },
            {
                "body": "And once (if they try) they find functions like \"Blame\", lol.",
                "author": "SzektorBp",
                "score": 2
            },
            {
                "body": "Yeah thats the world we live in ![gif](emote|free_emotes_pack|dizzy_face)",
                "author": "Affectionate_Power99",
                "score": 2
            },
            {
                "body": "But if Astro you're not \"drag and dropping\", I don't really get your point.\n\nI completely agree for the rest, you have to use the tools that the client cares. What tools would you suggest?",
                "author": "Affectionate_Power99",
                "score": 2
            },
            {
                "body": "Wordpress is fire-and-miss when update come its likely to explode by every corner",
                "author": null,
                "score": 2
            },
            {
                "body": "Hasn’t been a problem yet",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "That's the thing.  If it's too complex for a client, you don't want them.  If they want to manage all that backend etc they can use someone else.  I think it's a great setup (if you have a rock solid contract to eliminate the inevitable scope creep as to what constitutes a text update).",
                "author": "mc7263",
                "score": 2
            },
            {
                "body": "I wrote extensively about the business side of things here actually \n\nhttps://codestitch.app/complete-guide-to-freelancing\n\nI did not have much experience beforehand. Went to school for business and marketing but dropped out a year or two before graduating. Started a business once besides that was successful but didn’t make me much money in the end. Everything I know now I learned on my own and from other professionals like bankers and accountants",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "My bad, I thought you meant \"astra WP theme\".\n\nWhat tools would you think the client needs? Again, client only cares they have a website, it achieves their business objectives, they can update content and it's available and fast for their potential customers. Anything else is kind of irrelevant.",
                "author": "tex0gen",
                "score": 2
            },
            {
                "body": "I think it's a Taoist thing for me. The sage moves mountains and it looks effortless. If people were more sensitive to the idea, there would be less praise on the con-men making a big fuss of their hollow ideas.",
                "author": "deadwisdom",
                "score": 2
            },
            {
                "body": "I'm with you. I won't go custom for most of my projects. My personal websites are all in wordpress because I don't have time to design and make a website for personal use - and its not a portfolio anyway.\n\nFor most clients like small businesses, cafe's etc. Wordpress will be perfect, easy to use and manage. Unless you need to do something different. For example I'm writing my own website for my wedding because I found the wordpress RSVP plugins (that are free) to be all crap, and I could do a better one for myself in firebase with less work. So I did.",
                "author": "minimuscleR",
                "score": 2
            },
            {
                "body": "I don't know man, a lot of people have access to everything, hope nobody dies though.",
                "author": "StoneColdJane",
                "score": 2
            },
            {
                "body": "I agree wholeheartedly.  Nothing says I'm not a legitimate business than one that only has a Facebook page.  It just feels amateurish.  (And also if a company has no social media presence it doesn't look great either).",
                "author": "mc7263",
                "score": 2
            },
            {
                "body": "> Relax , if WordPress was such a POS it wouldn't the presence it has today ,\n\nlol",
                "author": "timschwartz",
                "score": 2
            },
            {
                "body": "Because they probably aren’t selling it well. When given the option and it’s reasonably priced they go for it. The service itself is very valuable to them.",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "From my personal experience a lot of people simply overcomplicate it and force next due to it being the hip thing atm.\n\nI also know a lot of good React/Next/JS devs but all of them have a firm knowledge of core programming and have been around before the IT hype. They know how things should work and base everything on core principles. When the first thing you pick up is React you have no understanding of fundamentals as react deviates from that and does its own thing kind of. The docs are usually bad at explaining things and you cant be expected to understand how everything works behind the scenes when there are a million modules on top of each other. \n\nSo in short, Next for example, isnt programming to me and everything I learn and know from doing JS, PHP, Python etc. doesnt apply usually in a logical sense. Thongs I know are simple take me more time than needed in Next for no pros.\n\nIf my code runs twice and crashes a third time without any changes made in the same scenario, that to me is bs.",
                "author": "chajo1997",
                "score": 2
            },
            {
                "body": "Ah there it is - the reply that uses purely anecdotal evidence. In the 'real business world', I've been making a living providing turnkey solutions to folks for over 20 years. I am well aware of what clients expect and how to deliver products that exceed expectations. Yep, in some cases that has been Wordpress!\n\nAnd I imagine that's why I still don't think Wordpress for anything more than a basic blog is worth it, I know better from experience and/or research. There simply are better delivering options that aren't as riddled with poorly coded plugins (or at the minimum some of the other options require *less* plugins). Not to mention that sweet Wordpress award of being used in **83% of hacked websites** (2022). Imagine, thinking business' want things that 'get it done', then telling them to use a platform with such a poor track record. Sounds like you've got a bit to learn yet, 'kid'.  Here is a tip: It's all about the 'right tool for the job' and being able to match risk/rewards for them.\n\nGood luck to ya'.",
                "author": "chaoticbean14",
                "score": 2
            },
            {
                "body": "Web dev has been overcomplicated since corporations tried to replace JS with bloated pointless transpilations, acting like middlemen, herding hype zombies through propaganda, promising quality and delivering garbage, just to increase their market share. It's been going on for more than a decade now.",
                "author": "anonymous_sentinelae",
                "score": 1
            },
            {
                "body": "Using a variety of these tools are only considered efficient, if you’ve spent the time to template them for your customers. This is usually only viable for someone per say, working for React primarily as a freelance for a long period of time, and that React code tends to be backwards compatible and reusable for future proofing, as a freelancer working this long with the tool you probably have templated many things.\n\nThats the only way using multiple different tools would be considered efficient as I seen some freelancers do this.\n\nBut if you’re just starting off with newer tech, low amount of years establishing your tech stack for clients to use with multiple setups your clients may need, then I wouldn’t suggest this.\n\nOtherwise there’s nothing wrong with working on CMS’s.",
                "author": "Cuzah",
                "score": 1
            },
            {
                "body": "Just use WordPress and recommend them to use WPEngine for hosting.\n\n\nNo need to overcomplicate things.",
                "author": "helloLeoDiCaprio",
                "score": 1
            },
            {
                "body": "What's with everyone putting \"in 2024\" in their thread titles lately?",
                "author": "greensodacan",
                "score": 1
            },
            {
                "body": "I just zipped the project, named it ‘final_final_projectname and plopped that on their desktop. I do occasionally wonder what they did with that heap, but then I remember what I was paid. \n(Not really, I enjoyed that project a lot)",
                "author": "Profuntitties",
                "score": 1
            },
            {
                "body": "Oh my god, absolutely. The whole industry is full of people misusing frameworks and coding techniques.\n\nWe are what the building industry would be if there was no gravitation.",
                "author": "Fisher9001",
                "score": 1
            },
            {
                "body": "People were over complicating web development in 2004. Yes, it’s still needlessly over complicated",
                "author": "DSPGerm",
                "score": 1
            },
            {
                "body": "I've spent most of my career puzzling over this; yes everything is needlessly complicated, but there's nothing you can do about it as an individual, it's just the way things are gonna be.",
                "author": "MKorostoff",
                "score": 1
            },
            {
                "body": "> A Netlify/Vercel account for hosting.\n\nCloudflare Pages is cheaper (often free), especially for a static site like Astro.",
                "author": "decimus5",
                "score": 1
            },
            {
                "body": "Yes",
                "author": "timesuck47",
                "score": 1
            },
            {
                "body": "Probs",
                "author": "fuki5362",
                "score": 1
            },
            {
                "body": "You're missing some seriously important bullet points if your intention is to fully hand off a hand-rolled code base.  Mainly design documents, code documentation, commented code, and (ideally) test and regression-test scripts.  \n\nOtherwise (in my experience) it will be cheaper and less time consuming for the next programmer to open the project to just trash everything and rebuild.",
                "author": "RealBasics",
                "score": 1
            },
            {
                "body": "Who's \"we\"? WordPress still exists and you can use it if it makes sense for you and your clients. I don't personally care for WebFlow but that's even simpler and even has an agency pricing model that might fit you well. Astro is designed for developers. Right on their web site their pitch is \"used by the best developers and teams around the world.\" I don't personally like Astro either but I'm their defense they're definitely still targeting developers here. The drawbacks you mentioned aren't really drawbacks if you were handing off to other developers. I mean, having a GitHub account is dev 101. Maybe you just need a different option. There are dozens out there....",
                "author": "CodeAndBiscuits",
                "score": 1
            },
            {
                "body": "\"This setup feels complex, particularly for clients who prefer owning their site without ongoing maintenance fees. They may find managing multiple accounts and interfaces daunting.\"  There be the rub.",
                "author": "hatchheadUX",
                "score": 1
            },
            {
                "body": "We are, but I've also seen the alternative and it's not much better. Just horrible in different ways. Have a partner that I'm still trying to convince there's value in source control. It's a real adventure.",
                "author": "Distind",
                "score": 1
            },
            {
                "body": "Host everything on a vps in docker containers , and give acces to that.\n\nI personally do howting for clients with no sla, and make money mainly off that, in return i kinda xk cheap dev work\n\nI basicly have a subscription model",
                "author": "sasmariozeld",
                "score": 1
            },
            {
                "body": "I suggest that you look past the very popular WordPress solution and the technical frameworks to Joomla. It is quite easy to set up ACL to specify exact editing options for specific content. Not only that, you can establish workflow paths for control of each step of the development or maintenance process. This can be accomplished without complex Git accounts or code editing except in the most advanced cases that only the developer can access. It’s a very easy interface for novice, unskilled users to do simple content updates without the risk of them damaging the site design.",
                "author": "Round-Lecture-4837",
                "score": 1
            },
            {
                "body": "3/4. I have built a CMS for Hugo. I never do hand overs. I charge for hosting.",
                "author": "tsoojr",
                "score": 1
            },
            {
                "body": "I don't think we overcomplicate the web dev.\n\nThere is a cloud in webdev, where a lot of startup want to add their cents : \"Hey, you find auth difficult, we can help you, pay only 50$ per month and we'll do it for you\"\n\nI saw a startup litterally using the worst cloud tool to help some startutp go faster on weird thing, and it worked for them ...\n\nMany people try to learn you \"the best practice\" etc\n\nBut in fact, no.\n\nWhen i tried to learn web dev, i took a benevol project. \n\nI set up a WordPress website for a retirees' association, and they managed to tame it. The manager's only skill was proficiency in Word.\n\nThe only \"hard thing\" was the hosting. But it wasnt ... because the hosting was preconfigured to host wordpress site ...\n\nThat was my first entry in the \"web world\"\n\n  \nThe thing  i learn is the way to enter in, isnt easy, but it still not that hard. (You dont need computer science for example, even if it can help)\n\nBut, there is so many people that want to make money on your back ....\n\nMy first rule when i try  to learn a new tech is : Does it need a payment ? Yes ? go away. No ? ok, let's try it.\n\n(Some time, i go for humble bundle books, and pay for a bundle of book) Or if a book is heavily recommend ( very rare in js env. maybe look at this one : [https://eloquentjavascript.net/](https://eloquentjavascript.net/) i love it, and it's free ...\n\nCommunity is stronger than startup. But they have less propaganda...",
                "author": null,
                "score": 1
            },
            {
                "body": "hey dude! I am new to Web Dev still learning wanna know a few things like what is cms and how you avoid monthly fees and do web developers charge maintainance costs too??",
                "author": "ListenGloomy5197",
                "score": 1
            },
            {
                "body": "There is too much fatigue in modern web dev, especially with JS frameworks, which are overcomplicated and bloated. Even Astro is too complicated for a static website, better use Hugo or Publii with a good old (S)FTP upload to static web hosting.\n\nAs for web apps, I suggest you to step back to plain HTML & CSS with my [PHOOOS](https://news.ycombinator.com/item?id=40070792) technique (see [demo](https://kodus.pl)).",
                "author": "niutech",
                "score": 1
            },
            {
                "body": "2 things here...\n\n1. What web dev? If you're using Astro, you're not \"developing\". You're drag and dropping. You're over complicating it for the client when using those systems as they have FAR too much granular control.\n\n2. You're over complicating the handover process. The client gets a website. That's all they care about. If they choose to move away from you, you supply the next person (client or otherwise) the site. The client doesn't need git repo access as 99.9999% of the time, they have no idea what it is or how it benefits them and even when they do learn that, they still won't use it. A git repo is primarily for making development changes trackable. No idea why you'd be using it if you're not developing custom themes or making theme changes outside of the database.\n\nAs for hosting, that's up to them. Your job is to advise from that perspective. You should be looking out for them and what's best for their project. Free hosting usually isn't up to much and so I'd deem that to not be in the best interest of the client. Availability, hosting location and host performance are paramount. Again, client doesn't usually care so long as the site is fast and available so the technical aspects are up to you to decide.\n\nYou're giving the client too much and complicating it for yourself. Strip it back to what the client DOES care about and you can't lose. Bare in mind you need to also make it easy on yourself for site portability.\n\nAs to the tools you use to make the site, that's again on you. If the client finds it difficult to use, the solution is incorrect. It's as simple as that.",
                "author": "tex0gen",
                "score": 1
            },
            {
                "body": "Exactly this. I didn't understand the problem here when I first read the question.",
                "author": "SzektorBp",
                "score": 1
            },
            {
                "body": "What do you normally include in the general maintenance?",
                "author": "Fluffy-Figure6734",
                "score": 1
            },
            {
                "body": "Hey Citrous, I've been seeing your comments everywhere on web dev and I sincerely thank you for all that you do. I have two questions,\n\n1. Are corporate websites still relevant because some of my clients are just choosing to build their brand in social media instead.\n\n~~2. For the unlimited edits that you are offering, does that include the creation of new webpages (for blog purposes)?~~ {Decap CMS got it)\n\nThank you for all that you do.",
                "author": "Main_Battle_7300",
                "score": 1
            },
            {
                "body": "You mentioned porkbun, do you always buy the domain or do you let them bring their own domain? I feel like a lot of businesses already have a domain that they bought on something like bluehost or godaddy",
                "author": "cmv99",
                "score": 1
            },
            {
                "body": "> This setup feels complex, particularly for clients who prefer **owning their site without ongoing maintenance fees**.",
                "author": "Eclipsan",
                "score": 1
            },
            {
                "body": "This is a great piece of advice! Completely agree.",
                "author": "dhirarmaan",
                "score": 1
            },
            {
                "body": "So what would you suggest?",
                "author": "Affectionate_Power99",
                "score": 1
            },
            {
                "body": "What would be an example of a tech stack or tool for webdesign that you consider simple?",
                "author": "Affectionate_Power99",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Vercel and Netlify are also free",
                "author": "Affectionate_Power99",
                "score": 1
            },
            {
                "body": "What are you talking about? 😭 I’m just saying that having all theses logins for clients is a bit cumbersome and I’m looking for alternatives. Not gatekeeping anything here",
                "author": "Affectionate_Power99",
                "score": 1
            },
            {
                "body": "If they already bought one I just use what they have. If they don’t, I buy it for them and bulk them yearly",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "I'd suggest Publii.",
                "author": "niutech",
                "score": 1
            },
            {
                "body": "Only for small sites. Next.js is designed to get to you pay money to Vercel by requiring SSR for image optimization -- something that could easily be done at build time (like Gatsby, Astro, etc.). I personally don't like the whole system around it. Once a site gets larger, it's going to be expensive there, and if you tie into their services, it might be difficult to migrate away.\n\nThere was a Reddit post about someone with a free Netlify site who received a $104,000 bill. If the incident hadn't gone viral, the person might have been stuck with at least $5,000 of it. As far as I know, it isn't possible to put Cloudflare in front of Netlify sites to cache some of the data.",
                "author": "decimus5",
                "score": 1
            },
            {
                "body": "Use roots radicle for Wordpress!",
                "author": null,
                "score": 1
            },
            {
                "body": "I mean you can make a “social network” with buddypress, a Zillow clone If you buy enough IDX feeds, etc",
                "author": "7HawksAnd",
                "score": 1
            },
            {
                "body": "So you must have a pretty solid contract?  How do you eliminate scope creep from overzealous clients?  IE, what constitutes a simple text change in their minds?",
                "author": "mc7263",
                "score": 1
            },
            {
                "body": "It has been for OP it seems.",
                "author": "Eclipsan",
                "score": 1
            },
            {
                "body": "If your pay is based on a finished product and your boss is forcing you to take a lot longer for basically no reason, that's fucked up.",
                "author": "Blazing1",
                "score": 1
            },
            {
                "body": "I'm one of these new 'self made' web devs.\n\nIn the last 3 months I've used the \"much loved\" Electron/Nextron and next js, now moving to react native.\n\nHaving only had a bit of python experience and some 10 year old html and c++ experience it was easy to get animations rigged and stuff I wanted.\n\nAs a guy just getting into this can you help me understand this further. I have not worked for a company yet. Are you saying that react breeded a bunch of extra needless middle managers? If so does this relate to all these failed \"agile\" implementations I keep reading about?",
                "author": "Rich_Top_4108",
                "score": 1
            },
            {
                "body": "Thats nicely said. Or written. Chapeau!\n\n\nWhen are we already here about tools & not using what we should, i have a goodie; \n\n- One should think about the concept of 'reusable' components.\nWe have all this havoc because some people thought that everything should be reusable. \nSo we have now a plague of Reusability. \nI do understand the concept when there is a really large website. \nI have been doing that. \nAnd I was constantly asking 'why all this havoc and chaos ... ?\" \nbut I got the answer \"it's gonna be reusable!\". \nHowever, there was nothing and no one to 'reuse' any component. Except 3 buttons. \nOther sections of that huge organization have chosen Vue while we were on Angular. \nAnd still proud of being 'Reusable'.\n6 months of work and we moved  .. nowhere. \nNot to mention Agile/Scrum approach where a selective part of the   huge project would be chosen to produce.\nThat would be like, you want to create a new plane, there is a drawing but not a real blueprint with calculus that would garantie that the plane would be flying. \nAnd you start making bearings for the landing gear, for example .. \n\ncrazy world ..",
                "author": "UXUIDD",
                "score": 1
            },
            {
                "body": "That's a good point.",
                "author": "Eclipsan",
                "score": 1
            },
            {
                "body": "Do you think there is enough of this sentiment going around for change to happen in time? \n\nI've seen a lot of more experienced developers speaking of a return to basics lately and wonder if I should be splitting my learning more.  I do sometimes scratch my head at the fact that most of my typescript experience is only in web frameworks, that I have neglected learning more JavaScript and Typescript because of how and where I use it.\n\nMy creations lack the desired cleanliness and efficiency I want as a result. I write very patchwork code that I certainly would not want to read, despite attempts at improvement.",
                "author": "Rich_Top_4108",
                "score": 1
            },
            {
                "body": "I honestly have no idea. I feel like people are finally realizing that it should be better and simpler instead of just going with the flow, but at the end of the day it all depends on what you are working on, for what reason and who you work with. I was forced into frontend frameworks from backend because no one else was there to do it and I don't like it.\n\nIf I am working on my own projects I don't care what the stack is as long as I'm comfortable. When it comes to larger companies, as long as you know the basics you can adapt to anything.",
                "author": "chajo1997",
                "score": 1
            },
            {
                "body": "Good luck man. \n\nYou win. Well done",
                "author": null,
                "score": 1
            },
            {
                "body": "Yes.",
                "author": "csDarkyne",
                "score": 0
            },
            {
                "body": "You're right, the handoff process for modern frameworks like Astro can be more complex compared to platforms like Webflow or WordPress.  \n\n\nFirstly, create handoff document that includes step-by-step instructions and explore headless CMS options like Directus or Strapi that offer self-hosting capabilities.\n\nSecondly, choose a CMS with a user-friendly interface that is easy for non-technical users to navigate and manage. Explain the long-term benefits of using a modern framework like Astro, such as improved performance, SEO, and security.\n\nLastly, Set up support channels such as email or chat to answer client questions for example chatbots. Also, If projects with a mix of static and dynamic content, consider a hybrid approach that combines a static site generator with a headless CMS.",
                "author": "ExpertTaste5334",
                "score": 0
            },
            {
                "body": "You can simplify this by a lot if you use Decap CMS (formerly Netlify CMS), which is git based. You can connect it directly to your Gitlab using PKCE auth ([docs](https://decapcms.org/docs/gitlab-backend/#client-side-pkce-authorization)). This will allow you to push commits to your Gitlab repo anytime content in CMS changes directly from the client. Git based CMS works very nicely with [Astro content collections](https://docs.astro.build/en/guides/content-collections/). You can also host it on Gitlab pages and set it to build and publish on every push to main branch. So in the end you only need Gitlab account.",
                "author": "lele3000",
                "score": 0
            },
            {
                "body": "Complaining about giving clients git repo is totally fucked up.\n\nThe only devs I know who does any gatekeeping are the kinds I want to tell clients to avoid.\n\nEverything the client is asking for looks pretty reasonable. Giving clients git a repo shouldn't have any reservations if you are transparent because there is ALWAYS that risk of the \"bus factor\" if you die tomorrow. The git repo shows the commit history where another developer can come in salvage if need be. There is ABSOLUTELY nothing wrong with being transparent.\n\nGatekeeping, I word I like this, **\"Do you want your web developer to hold you hostage?\"**\n\nYep, that is how your competitors will frame it.",
                "author": "originalchronoguy",
                "score": 0
            },
            {
                "body": "I’m curious. How did you build out the business side of things? Contracts, LLC, business bank account, etc.? Did you have experience beforehand?",
                "author": "yoshhh",
                "score": 0
            },
            {
                "body": "You have a lot to learn. This is obvious.",
                "author": null,
                "score": 0
            },
            {
                "body": "This was an interesting read. Thanks!\n\nYou’ve given me a lot to think about.",
                "author": "yoshhh",
                "score": 0
            },
            {
                "body": "It would appear I've touched a nerve with the whole, \"I can install plugins and adapt a theme, I'm a developer\" crowd, who really have never looked at some of the code that makes up Wordpress. This is obvious.",
                "author": "chaoticbean14",
                "score": 0
            },
            {
                "body": "I use Wordpress and it is great.\n\nWe use roots radicle which supports Laravel blade, acorn, tailwind, alpinejs, service providers, view composers, config files, env files, bedrock, the dx is both amazing and the client gets the most used cms in the world.\n\nIn the real business world, people like software that gets the job done, not that it is written the best or not optimised to its fullest. Business owners don’t care about your developer feelings.\n\nYou’ve a lot to learn kid, you should start with not being so objectified in your opinions it will only benefit you!\n\nGood luck kid",
                "author": null,
                "score": 0
            },
            {
                "body": ">Again like I said provide me a specific alternative to Worpress that's simple to spin up ,configure and use.... You'll be hard pressed to, and tell me you'll do that for under $1000\n\nI literally did in my last post - there are plenty Of CMS' out there that offer the same functionality as WP with just as easy to spin up functionality (and I would make the argument many have a much more intuitive, if not *better* database structure). \n\nJoomla, Drupal, etc. Literally most of the 'popular' php CMS' will \\*all\\* do what WP will do, and they're free. I started my dev career forever ago as a Joomla dev. I preferred Joomla because it had things baked in that you need plugins for with WP. Did you know? 83% of hacked websites are WordPress!\n\nAnyway... yeah, WP stock is okay. Plugin city is what most do and that's trash.",
                "author": "chaoticbean14",
                "score": -1
            },
            {
                "body": ">Relax , if WordPress was such a POS it wouldn't the presence it has today , including lots of sites with plugins , you're right lots of the plugins are low quality, but for most sites those are not being used.\n\nUgh. I see that *same argument* always posted as the response. Thank goodness it's not as popular as it once was and has fallen off a considerable chunk. It will be a number more years before we can finally say \"eh, it's not *that* popular\", but oh well.\n\nLook, again, there's nothing wrong with *pure Wordpress*. Or even Wordpress and a few *finely chosen* plugins. But people don't know any better and literally load them with every blasted thing imaginable. Then they wonder why/how they get hacked, how this, how that, why it's slow, etc. Wordpress is popular simply because of it's age, and how great it was when it came out. Otherwise? It's aging and is... less than great - mostly because people *rely* on those plugins to make it something it was *never intended to be*. And they do so, unsafely.\n\nWordpress *was* a great platform 20 years ago when it came out and provided some additional choices beyond Joomla, Drupal, etc. - which those required a wee bit more technical knowledge to make great things happen. Although advancements have been made, since then. Wordpress has now become this thing that most people build on top of and pay little attention to the backend or what the plugins they are using actually do. They only use it because people parrot the same stupid shit: \"just use wordpress - there's a plugin for it probably\", or they talk about how 'many sites' are powered by it, etc. etc.",
                "author": "chaoticbean14",
                "score": -4
            },
            {
                "body": ">PHp WordPress just works , and has a shit ton of functionality via plugins ,\n\nYuck. Just... yuck.\n\nplugins can equal vulnerabilities: mostly because they can be written by *entry level programmers* - why? Because Wordpress is 'approachable' (and free). The plugin ecosystem is free and completely (or mostly?) unregulated. So there are some really, really poorly optimized plugins out there that the 'average person' absolutely will install and wonder, \"why is my site so slow?\"\n\nWordpress as a blog, in it's default form is fine. Once you start using more than a few key plugins? It becomes a cesspool shit show real fast. I've said it forever: wordpress as is, is fine. It's a great free blogging platform. When you 'hack plugins together', in order to make it something else? Yuck, yuck, yuck. Nope. Never.\n\n>  \nthese advanced frameworks are a shit ton of effort to cobble together just something with the approximate functionality of WP.or similar tools..\n\nThat's just patently false. My goodness it's just so, so false. You can literally craft them to be exactly what you want/need and nothing more. Literally the antithesis of Wordpress and \"plugins\".\n\nYou sound like someone without a lot of experience building things - I often hear them say things like this. Mostly because they know how to install plugins and say \"I'm a developer!\" without knowing any of the other things going on behind the scenes or what's happening at the (already gross) database level.\n\nWordpress as a blog is great. Anything more? Yuck. No. Bad boy!",
                "author": "chaoticbean14",
                "score": -10
            },
            {
                "body": "Yeah true... I you give them access to the CMS they think they have \"access\" to the website which should be enough",
                "author": "Affectionate_Power99",
                "score": -31
            },
            {
                "body": "\"If your business involved a small retainer for maintenance (IE, anything that’s not done via the CMS) you’d likely avoid a lot of the problems here.\" lots of clients don't want that. They just wanna own their website and thats it.",
                "author": "Affectionate_Power99",
                "score": -33
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1622057893.0,
        "title": "Looking for something like Xenforo with resoruce manager. File sharing platform with forum, where people can share their own projects and sell for a certain price.",
        "author": "shuu1n",
        "id": "nlpizv",
        "selftext": "So i know about servers and all that, but what i dont know a thing of. Is CMS and forums.     \nI know that Xenforo has a resourse manager that allowed people to make an account and buy a sellers upgrade. So they can sell their own projects to other people.     \n     \nSo, i have been googling from hours to weeks.     \nBut i am just lost, i can only find Xenforo. And for something at that price for something i just want to play around with. Ufff, i dont have 200€ +  for that.     \n\n\nLooking for:  \nResoruce manager like Xenforo, where a person can make a seller account and sell their files with a small description and such.  \nA forum like seen on Xenforo.  \nAnd a live chat. That is kinda it.     \n\n\nHope there is someone whom might know something. ITs okay if it costs a little",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/nlpizv/looking_for_something_like_xenforo_with_resoruce/",
        "num_comments": 5,
        "comments": [
            {
                "body": "Invision Community offers a cloud hosted platform with a downloads manager. Similar pricing to Xenforo but you can pay monthly and it includes hosting.",
                "author": "KeepTheGreen",
                "score": 1
            },
            {
                "body": "Nice... Do you know what language it's written in?",
                "author": "neu-kid-here",
                "score": 1
            },
            {
                "body": "PHP/MySQL with the cloud plans on AWS infrastructure.",
                "author": "KeepTheGreen",
                "score": 1
            },
            {
                "body": "Nice... Ill have to chk into it.\n\n\nI know Xenfero has nice templates... but I believe with all the add-ons it'll run you about $300 a year. (Not including hosting)",
                "author": "neu-kid-here",
                "score": 1
            },
            {
                "body": "Oh man...quickly add up the costs...easily reach $1500 yr.",
                "author": "neu-kid-here",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1620985668.0,
        "title": "Am I ready?",
        "author": "Lekoaf",
        "id": "nc4shu",
        "selftext": "This question comes up a lot here on Webdev.\n\n\n\"Am I ready for a junior / entry level developer position?\n\"I've built a MERN stack app with authentication and websockets.\"\n\n\nYes, yes you are.\n\n\nIn my opinion, a junior developer should be able to build a TODO app (or similar) from scratch\nwith a javascript framework of your choice and give a it a fairly nice styling.\n\n\nIf you know that, and more, it's time to start looking for a junior position. And while you do that, maybe\nit's time to start learning some other skills that will help you out in the industry.\n\n\nIf you get a junior position, you will most likely work in a team of devs.\n\n\nSome things you should know about or do:\n\n- Agile and Scrum\n\n- Some kind of project management platform, such as Jira or Trello\n\n- Brush up on your Git and general terminal knowledge\n\n- Realize that development isn't always about pushing out a lot of features, you also need to stop\n  and refactor and solve bugs. And meetings. Lots of them.\n\n- Github / Gitlab\n\n- Linters / Prettier\n\n- If you haven't tried Linux, do that. Odds are you will use it sooner rather than later.\n\n- Learn how to write a good bug report\n\n- Have you contributed to open source? That looks good in the CV and is also a good lesson.\n\n- Have you ever given or received a code review?\n\n\nIf you have a friend who can code review your app, that could be valuable for you. If not, drop a comment in this thread if you're looking for one.",
        "score": 623,
        "url": "https://www.reddit.com/r/webdev/comments/nc4shu/am_i_ready/",
        "num_comments": 196,
        "comments": [
            {
                "body": "plants prick cough resolute direful impossible absurd six plate attraction ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 245
            },
            {
                "body": "This is great advice!\n\nI am in this situation and it is not good for you. I am feeling burned out. I actually asked about being in a team and about potential resources to learn when I interviewed. I was told there would be at least one other developer and that there would be resources for me. There was neither.\n\nThe biggest struggle I face is communicating the amount of time it takes to implement features, debug, etc. This just leads to extremely stressful deadlines and disappointment for those who set them. I have communicated this time and time again and no one cares.\n\nI recently talked to my manager about feeling like I needed a more senior developer to review my code and he seemed so annoyed. As a junior developer this shouldn't even need to be asked.",
                "author": null,
                "score": 54
            },
            {
                "body": "Unfortunately the companies I applied for don't seem to agree. Last time they sent me a test where I had to build a React app without using create-react-app that had to show data from an API, have pagination, and consider SEO, accessibility and responsiveness. I did a lot of stuff I had never done before like configuring Webpack from scratch and using styled components. While I did manage to deliver some of what they asked, I was extremely overwhelmed and delivered a very poor app.",
                "author": "TheSirion",
                "score": 48
            },
            {
                "body": "That sounds like they wanted an associate but were only willing to pay for a junior. Probably dodged a bullet.",
                "author": "theredwillow",
                "score": 48
            },
            {
                "body": "Rookie developers: learn testing of any kind. Look up tutorials on the common testing for the framework you are using (Like Jest for React.) Your project would stand out even more if you were able to say that you used unit testing, or whatever kind, and implemented that in your code and would be tremendously impressive. Good luck to everyone out there trying to reach their dreams!!",
                "author": "OOO-OReilly",
                "score": 46
            },
            {
                "body": "sip hurry angle school bells cobweb encourage soup work fuel ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 32
            },
            {
                "body": "Don't forget SQL databases. MongoDb is fine for a to-do app, but in reality most applications have relationships within the data and MongoDb is not the right tool for the job. I would expect a Jr Dev to know sql databases because that is taught in university.",
                "author": "apexdodge",
                "score": 31
            },
            {
                "body": "> In my opinion, a junior developer should be able to build a TODO app (or similar) from scratch with a javascript framework of your choice and give a it a fairly nice styling.\n\nGlad this is just your opinion, every company I have ever worked for has a way lower bar for juniors than this thank god.\n\nIf I gave this task to some of my juniors right now they would shit the bed in a panic.",
                "author": "DeeYouBitch",
                "score": 30
            },
            {
                "body": "Yeah, first job matters world. If you end up in a good company with a seniors and overall knowledge sharing culture, where juniors are actually groomed with attentive onboarding, walking through tasks with proper introduction, strict code reviews (more comments than actual code is common experience) and occasional pair programming sessions.\n\nYou gonna learn more in first two months than \"self thought\" programmers do in a year or even a few. Hands down, no contest.\n\nThe amount of people I see applying with \"7 years senior laravel experience\" who are about 1 year junior level in my previous company is too damn high. You don't wanna be that.\n\nAlso props for author to specify juniors from beginners. There is a world of difference between a junior with 1 year professional experience and that of beginner who just wrote a MERN app which somewhat works (common issue beginners don't program for failure, hell how can they know when they haven't had anything in production for the most part).",
                "author": "wherediditrun",
                "score": 19
            },
            {
                "body": "You should start applying even if you feel that you are not ready. *They* have to decide it, not you. Sometimes a company can hire you simply because they like your profile and want to develop your technical skills there",
                "author": "ProfessionalWinter",
                "score": 19
            },
            {
                "body": "Haha, i dunno i feel like a junior is more about personal skills, willingness to learn and taking a chance on someone with understanding of basic concepts.\n\nWe don't have any big reliance on our juniors in our company, we don't expect anything other than good company fit, hunger to learn, an understanding of core fundamental concepts, i mean like \"what is object?\" level shit and an OK grasp of whatever language is, php, JS. \n\nThere is no requirement on a framework as we don't have a single requirement on what we use.\n\nThey will maybe get 20% of their week blocked out with baby level tasks that we need done with the focus that they can learn and we can get the little shit done. The rest is all learning until they grow enough to get 30% of their week blocked out.\n\nThey will get Git training and babied into whatever sprint planning tools as we go.\n \nWe have juniors straight outta high school with no real experience other than an okay knowledge of core concepts and a willingness to learn and grow.\n\nSure we got older juniors who know more out of the box but they all get babied the same way at first and taught the tools the company works with, they all get performances reviews and paired with other people to do code reviews and then they grow in the company naturally.\n\nSeems to work for us",
                "author": "DeeYouBitch",
                "score": 19
            },
            {
                "body": "Fix it up and turn it into a portfolio project. Try to learn how to do pagination. Don't let the work go to waste.",
                "author": "reddit-poweruser",
                "score": 18
            },
            {
                "body": ">This question comes up a lot here on Webdev.  \n\"Am I ready for a junior / entry level developer position? \"I've built a MERN stack app with authentication and websockets.\"  \nYes, yes you are.\n\nIsn't that relative to each person/company hiring?\n\nAre we talking here about pre or  after covid era? In the covid era things for junior are really hard because of a flood of junior applications, companies have leveled up what they ask for.\n\nIf a mern stack app is enough to get a job maybe I should start applying soon then.",
                "author": "lillallol",
                "score": 15
            },
            {
                "body": "jellyfish head ink merciful childlike ossified longing tie license wasteful ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 15
            },
            {
                "body": "Probably. Can you imagine all the stress and disappointment after going through three stages in the hiring process and having one awful week of building an app from scratch and fixing a lot of bugs caused by tools you have little to no experience in? I even tried to make a search component to make up for the lack of pagination (by far the hardest part for me) but it also didn't work and my time was almost up, so I just gave up and sent a very shitty app that only displays the first bunch of data from the API. Even the styling was shitty because I left it for last because I thought I could make it look somewhat ok in the last day, but then I found myself having to juggle around bug fixing and styling.\n\n I felt like a garbage programmer. I kept thinking \"do they expect me to do all that by myself in a *week*? Did I learn so little all this time?\" Actually I still don't have a clear answer to this. I'll probably only know once I'm finally hired. \n\n(by the way I have an interview later today. Wish me luck!)",
                "author": "TheSirion",
                "score": 14
            },
            {
                "body": "I have not yet been berated but if it happened I might walk out then and there. It constantly feels like they're trying to see how fast they can get me to generate products without thinking of my time or well-being.\n\nI wholeheartedly agree that they are just trying to save money. I think there is a giant disconnect where other people (aside from developers) don't understand the importance of following standards when writing code. All they care about is the final product. \n\nAll of this has just taught me the importance of being picky when getting hired. I graduated last year with a bachelor of science in computer science so I was just desperate to get hired and didn't realize companies could be so unethical and straight up lie to you. \n\nAlso, going to ask for a lot more salary next time!",
                "author": null,
                "score": 14
            },
            {
                "body": "In my country a junior developer is expected to have 2 years worth of provable work experience and sometimes also a degree; and that is why I have yet to land a job, by these standards I’m not even a junior dev.",
                "author": "midekinrazz420",
                "score": 14
            },
            {
                "body": "Much more important than learning these technology fads (like frameworks, nosql etc) is learning the right (which, frankly, almost no jr knows) programming fundamentals. Study object-oriented programming in depth (or functional programming if that's your short-term goal), study algorithms and data structure in depth, and clean code. If you know all this well, knowing whether or not express will be irrelevant.",
                "author": "judasthetoxic",
                "score": 13
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 13
            },
            {
                "body": "Another important thing: do you really know any jr who has already contributed at least 1 commit to a real open source project? Because I never saw it.",
                "author": "judasthetoxic",
                "score": 13
            },
            {
                "body": "Most of what companies look for in a candidate are variable skills that change from company to company. With so many technologies out there how can a junior be expected to master every technology that a single company is looking for? Unless the junior finds one application and studies everything that employer is looking for and hope another company is looking for the exact same skill set? If were talking principles if we start adding on TDD, CI/CD, Kubernetes/Docker, AWS, Architecture, Algorithms and DS, etc then is the candidate really a junior anymore?",
                "author": "crossedline0x01",
                "score": 13
            },
            {
                "body": "Is it just me or these expectations are incredibly low for a junior position?",
                "author": "scapescene",
                "score": 12
            },
            {
                "body": "I think the post is bullshit to be honest. What's important for a ***junior*** position is curiosity and a willingness to learn.\n\nIf you want to contribute to open source or familiarize yourself with Linux commands because it's fun or you want to pad your CV, do that. Creating a nice project or two is likely the best way to prove your skillset. But ultimately, the only thing that matters is that you'll get up to speed quickly and that you're easy to work with.",
                "author": "SoInsightful",
                "score": 12
            },
            {
                "body": "aspiring boast quickest connect disgusting scandalous shelter elderly lush square ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 12
            },
            {
                "body": "they might have just followed one Udemy tutorial\n\ncan we do better in helping people know what to learn",
                "author": null,
                "score": 11
            },
            {
                "body": "That is not what he means, one of the thing that I have come across is people who only know MongoDB (yes they don't know other nosql dbs but only Mongo).\n\nMongoDB surely is good at things but not always perfect, there are some other sacrifices to make. Also not every company you'll encounter will be using a noSQL DB mostly still use things my MySQL, and POSTGRESQL.\n\nSo it is good to have knowledge of both SQL and NoSQL (remember I told SQL and NoSQL), which means learn the underlying concepts they are more important. And just learn one or two DBMS like PostGreSQL and MongoDB that is more than enough!",
                "author": "FrostZTech",
                "score": 11
            },
            {
                "body": "If you feel you're not ready - You probably are.",
                "author": "Reelix",
                "score": 10
            },
            {
                "body": "I feel like I'm seeing so many conflicting comments. Some people are saying a junior should know way more than this and some are saying new devs don't need to know most this yet. I suppose it depends a lot on the company.",
                "author": "LiftMetalForFun",
                "score": 9
            },
            {
                "body": "The thing is... IMO, it's kinda hard to tell people what to learn, because there's so much to learn and so many jobs that require different things. It's better that we can agree what is essential for people to learn and expect that these junior positions will help their developers learn the rest.",
                "author": "kono_kermit_da",
                "score": 9
            },
            {
                "body": "Pro tip: Even popular libraries tend to always need docs written. Contribute that way and it still looks really good.  You don't even need to understand what your documenting and figure it out as you go.\n\n/u/judasthetoxic",
                "author": "reddit-poweruser",
                "score": 9
            },
            {
                "body": "Interesting. I feel like all the positions I applied to had even higher standards. For my current junior position, I had to showcase my independently written full stack webpage and Android app. I also had experience maintaining and updating an web app for a local company. \n\nI always figured junior positions weren't for junior devs. Rather they are looking for experienced people to pay less. It's harder to even get interviewed for higher level positions without a minimum amount of years working in the industry - regardless of you actual skills and knowledge.",
                "author": null,
                "score": 8
            },
            {
                "body": "This person gets it. It's very difficult to self teach yourself into being an intermediately skilled developer. You need to learn how systems work together and how to read/understand other people's code. That's not easy when you're making solo apps by yourself or working in a solo dev shop. We immediately put entry developers through an intensive 6 week developer bootcamp where we make sure they leave with the general knowledge to join and contribute on a team. I've been in places where i was just given a computer to assemble / install OS and build my dev environment. \"Here's our codebase and a list of defects. Please start fixing them\" That was my first job during college. That stuff will actually fuck you up and ruin your confidence. I made it through, but it was a huge stress generator.\n\nBest practices are (hopefully) learned on the job from experienced developers.  Unfortunately, not all experience is equal and I've interviewed many a developer who is \"senior\" and didn't know basic basic information. One of the clients I consult with just promoted a guy who graduated and I trained 3 years ago to senior. He's not a bad programmer, but hardly senior. This is ridiculous.",
                "author": "TheMightyHamhock",
                "score": 8
            },
            {
                "body": "I'd like to do this, but either...\n\nA) The repo isn't maintained. My merge request will sit abandoned in perpetuity.\n\nB) The repo IS maintained and has progressed in complexity past anything I'd be willing to spend the hours familiarizing myself on in my free time.\n\nFinding the sweet spot between these two in near impossible, especially when you factor in unfamiliar programming languages and idiosyncratic setups.\n\nHow does one go about finding a repo where they can add value?",
                "author": "theredwillow",
                "score": 8
            },
            {
                "body": "No they're not. I'm looking at people telling juniors to know TDD/BDD, contribute to the open source, and front end devs should know SQL. \n\nIf they can actually handle the load of a full stack, which most of believe to be unicorns in and of itself, and can develop with any of the 3 major js frameworks, know backend architecture, time complexity changes, and some dev ops? You have an upper level mid on your hands at the least.",
                "author": "Guilty_Serve",
                "score": 8
            },
            {
                "body": "haha im in UK where like junior no experience is like 18k \n\nBut ive seen US Junior salaries making like what would be senior money here.\n\nAnd I guess for that kind of money UK Junior does not equal Rest of the Worlds Juniors\n\nMaybe that's where the difference lies.\n\nUK wages are dogshit so so are the expectations",
                "author": "DeeYouBitch",
                "score": 8
            },
            {
                "body": "Telling people they are ready after doing a to-do app with some styling is an insult.  \nI don't like being that guy but just trying to be realistic here and fed up with devs who come up to my company after completing a single course on udemy and when I show them vanilla JS they look weird at me.  \nGet the basics right first.",
                "author": "Sh0keR",
                "score": 7
            },
            {
                "body": "So much this. I interviewed for a “junior front end” position, was hired and had my job title immediately changed to something unrelated, then the dev that hired me jumped ship right after I started. I was able to help hire another developer, and a year later he was promoted to “senior” despite not even being close to that level, solely because he took on a lot of non-dev related responsibilities. At this point I’ve realized my company has no idea what they’re doing, and there’s nothing to do but stagnate. \n\nNow I’m in an awkward position, because while I have no trouble getting interviews with what looks like experience on my resume, it never comes to fruition because once they find out what my role actually entails, I don’t have the “right experience” for these positions. So now in addition to my 9-to-5, I have to start doing personal development outside of work to try to keep up. Don’t get me wrong, I love coding, but the extra effort feels draining sometimes, and I’d  be so much better off in a position where I could grow on-the-job.",
                "author": "epitaphb",
                "score": 7
            },
            {
                "body": "As someone looking for their first dev role these kind of comments just crush my soul. \n\nI'm never going to break into this career am I?",
                "author": "LevelSample",
                "score": 7
            },
            {
                "body": "angle late juggle dirty friendly jobless marble wrench act sheet ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 7
            },
            {
                "body": "We literally had all the new hires in every office attend 8 hours a day training. We assigned one very senior dev to play the part of the \"client\" (We're a consulting firm) and they newbies would have to do every part of the project lifecycle. Elicit requirements, do estimates, track time and work. Revise estimates and of course the development. We basically ripped a smaller portion out of a large project we did for a client and had them do the entire thing. form DB design and creation based of requirements to implementing all the business logic, validations and styling. The funniest/hardest part to watch is them realize how hard it is to elicit good requirements and make sure you actually understand what the client needs (not what you think they need). Watching them beg for extensions from an \"aggravated client\" is a beautiful thing to behold. I wish every dev got a change to go through something like that. It's eye opening and learning those brutal lessons in a relatively safe space is much better than losing your job over it later. \n\nOnce they join a real team, they are surprisingly good and easy to plug in. OF course, they still need to be babied a bit to understand all the business rules and systems integrations in these massive enterprise apps, but it could be a lot worse.",
                "author": "TheMightyHamhock",
                "score": 7
            },
            {
                "body": "I think so.  People that go on reddit to improve their CVs tend to be a lot further along than average. \n\nI just got hired for a junior software engineering position and haven't done a full mern stack app. I've mostly worked on front-end. \n\nImo if you can get past the HR screen with your current resume them you're set.  From there it's just showing that you're someone with potential that other people would enjoy working with. \n\nSo apply, apply, apply!  Even if  you don't feel ready, a company could see your work and think you are and they're the only ones whose opinion matters.",
                "author": null,
                "score": 7
            },
            {
                "body": "Such an underrated list, especially tools for working in teams.\n\nWhen I very first started I was using SVN (subversion) for my person stuff (just me working on it).\n\nWhen I joined an agency they were all using git. Cool, wasn’t that different of a CLI and easy to pick up.\n\nWhat wasn’t easy? Was how I USED git. Now I was in a team working across multiple features with each other. I quickly realised you don’t just commit to a dev/staging/live branch. But now I was creating pull requests, merging features, having to rebase, having peer reviews on every commit.\n\nSeems standard but as a lone dev you never ever think of these things, or at least I didn’t.\n\nWorking and managing a code base in a team was the biggest baptism of fire for me.",
                "author": "random_angmoh",
                "score": 6
            },
            {
                "body": "Quite a lot of companies think that junior devs are \"they should know the principles of everything, so they can build everything we ask!\", which is stupid and probably why a lot of juniors feel depressed when they get rejected.\n\nIf you can make a proper *todo app;* With the works of database, backend, frontend etc; Then yeah, a ~~frontend~~    junior position is in the bag. However some companies think that if you can build that, they also think that you can rebuild Amazon and they will take advantage of it. Knowing when to say \"stop it\" is a part of being a developer.\n\nSome things aren't feasible. Be it by deadline, tech possibility, man power, GDPR, holidays, medical reasons, and any other legitimate reason that can impede development. Long story short, even as a junior you need to drill into their heads that you have limits and sometimes their dream doesn't come true over night.\n\nI don't wanna brag or anything, but I was one of those junior devs that has knowledge of a lot of principles and could \"rebuild amazon\". But it would've taken me years and I'm not afraid admit it or  slap down ridiculous demands. I work for quite a large cloud company but that was due to me having a good dev friend guiding me on what to do/learn and not bending over to any offer that came across my email with the pay being peanuts and work being a castle. As a developer you will always learn and regardless of your stage of career you won't stop progressing regardless of your company, it's up to you on how you wanna advance.",
                "author": "E-Blackadder",
                "score": 6
            },
            {
                "body": "Having recently hired a disasterous junior, here's some advice: Your CV/Resume should only list skills you are actually confident in using.\n\nUsing A specific technology for 10 minutes at a bootcamp does not mean you are 'skilled'.\n\nTech like MySQL takes years to master.. please don't list it as a skill because you executed a SELECT statement in one project.",
                "author": "GameOver16",
                "score": 6
            },
            {
                "body": "This isn’t true. You need a handful of more complicated work. I have full websites built that I’ve done while freelancing and it doesn’t seem to be enough for many junior roles. I A. Don’t hear anything back, or B. Get to an interview and they aren’t satisfied with my experience.\n\nIf you get a job because you built a TODO app you got lucky.",
                "author": null,
                "score": 6
            },
            {
                "body": "\"Am I ready?\" Yes, yes your are. Here is what you need to know:\n\n- A\n\n- really\n\n- long\n\n- list\n\n- of\n\n- stuff\n\nIf you don't, no, you are not ready. Come back when you are.",
                "author": "DerGrummler",
                "score": 6
            },
            {
                "body": "Well yeah, why would you use React without CRA or Next? literally makes no sense. There's no reason to avoid those tools, they only make things better with 0 cost.",
                "author": "not_a_gumby",
                "score": 6
            },
            {
                "body": "Yeah, I've had quite a bit of interviews for Junior positions and never seen such low expectations.",
                "author": "PhilipRegular",
                "score": 6
            },
            {
                "body": "I think my post would assume you know the basics. Not that you copy / pasted something from an online course. Not trying to insult anyone, just trying to remove a lot of imposter syndrome I see on this subreddit.\n\nFeel free to make a comment with you own definition of junior / entry level.",
                "author": "Lekoaf",
                "score": 6
            },
            {
                "body": "Don't see why you are getting downvoted, Op's expectations for juniors are incredibly low",
                "author": "scapescene",
                "score": 6
            },
            {
                "body": "snails zesty dime glorious ancient secretive office outgoing attractive smell ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 6
            },
            {
                "body": "I think there are edge cases where you'd prefer not to use create-react-app, like dependency conflicts and stuff like that. First time I used Tailwind with React (not this project) it was kind of messy to configure. But so far I haven't seen any case where there wasn't a simple workaround. \n\nBut what I think they were really trying to do was put roadblocks to see how far I can get. In any case, starting a React project without CRA isn't even very hard, just annoying and unnecessary.",
                "author": "TheSirion",
                "score": 6
            },
            {
                "body": "> here are some of my projects \n  \nYes - Yes you should.  \n  \nYou have multiple projects - Most of the people applying to the same position will have nothing",
                "author": "Reelix",
                "score": 6
            },
            {
                "body": "So I am basically exactly the person OP is talking about.. If any experienced devs feel generous and want to help me by critiquing my github/cv I would be immensely appreciative, the more perspective I can get the better. I desperately need a job.\n\nhttps://github.com/sphen for anyone that wants to help me get out of poverty!",
                "author": "LevelSample",
                "score": 5
            },
            {
                "body": "I think this is really good advice. Juniors really don't need to be super well-rounded and able to pick up features on day 1 and run with minimal supervision. I'd also add that people skills should be very high on the list. Being likeable and knowing how to communicate is so crucial.",
                "author": null,
                "score": 5
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 5
            },
            {
                "body": "[https://github.com/pulls?q=language%3Ajavascript+is%3Aopen+is%3Apr+label%3A%22PR%3A+unreviewed%22+sort%3Acreated-desc+](https://github.com/pulls?q=language%3Ajavascript+is%3Aopen+is%3Apr+label%3A%22PR%3A+unreviewed%22+sort%3Acreated-desc+)\n\nList of some recent PRs (you need to be logged in to github), I'd mostly look around in webpack project from these because that's quite active, you could learn a bit from the comments how to do code review constructively.\n\nYou could also try to fix some bugs in popular open source repos to be on the receiving end to get some experience as well.",
                "author": "METALz",
                "score": 5
            },
            {
                "body": "Yes, the basic concept is straightforward and you can immediately apply it to your projects. Obviously, you can get a lot deeper into the subject, but the basic concept will help you a lot.\n\nIt will ensure that you build much more stable and predictable applications, and the process of thinking about different test scenarios avoids bugs in the long run. It's really cool, I think you'll like it. Just watch some [jest crash course on Youtube](https://www.youtube.com/results?search_query=jest+crash+course)",
                "author": "ProfessionalWinter",
                "score": 5
            },
            {
                "body": "So I should start applying even if I do not have any clue backend wise but I know some fronted? \n\nBy the way here are some of my projects : [md-in-place](https://github.com/lillallol/md-in-place) , [fn-to-cli](https://github.com/lillallol/fn-to-cli), [dic](https://github.com/lillallol/dic), [outline-pdf](https://github.com/lillallol/outline-pdf). I have some more not finished yet.",
                "author": "lillallol",
                "score": 5
            },
            {
                "body": "Honestly just because someone was a cs grad does not mean they can build amything.\n\nAcademics rate exam takers, not skills",
                "author": null,
                "score": 5
            },
            {
                "body": "Indeed. It’s important to be constructive. And something I’ve learned recently; just because it’s not how *you* would solve a problem doesn’t make it wrong.",
                "author": "Lekoaf",
                "score": 5
            },
            {
                "body": ">For real. Each company has their own standards and ways of doing things. \n\nAbsolutely.   \nMy first job was so different from my second job you might as well say they're completely different fields. Really the only constant between both of these were html, css and javascript. \n\nEverything else? Frameworks were different, tools were different, standards were different, workflow was different, team hierarchy/roles, Q&A, projects, software, et cetera, everything was too different. There would be literally no way to prepare myself for this.",
                "author": "kono_kermit_da",
                "score": 5
            },
            {
                "body": "I still have not gotten in the field. I read recently a book about creating cv , from someone who has worked for uber in amsterdam, and he said that after covid they got x10 more applications especially for junior positions.",
                "author": "lillallol",
                "score": 5
            },
            {
                "body": "The fact is, like it or not, MongoDB isn't optimized for relational data. It's the \"hard to swallow pill\" of the programming industry I've found, but even excluding relations and normalization for a second there, more complex applications, especially if you're using GraphQL, can leverage SQL's advanced features to only load partial entities and handle complex filtering much more elegantly than is possible with MongoDB.",
                "author": "Dan6erbond",
                "score": 5
            },
            {
                "body": "We start juniors around 50-55k here (In the southeastern US). Seniors are around  85-100k and the can go up from there depending on how good you are.",
                "author": "TheMightyHamhock",
                "score": 5
            },
            {
                "body": "Remember it’s never as simple as pure currency conversion. \n\nSomeone in the UK on £18k (which is *very* low IMO, even for a junior) will still have full benefits like world class 100% ‘free’ healthcare, paid month of holiday, etc. \nIt’s literally minimum wage here too.",
                "author": "AnonymousAndroid",
                "score": 5
            },
            {
                "body": "To be honest anyone with decent knowledge of how the browser works, servers work and are not afraid of CSS is good enough for me. I'm happy to teach them the rest. Skills in different languages come and go and drop in and out of relevance. Basic understanding of the things that are immutable is what matters to me.",
                "author": "imjb87",
                "score": 4
            },
            {
                "body": "Even these are overkill. \n\nIf you can build a reasonable TODO app even if you have no knowledge of frameworks, agile, github, jira, code reviews, you are pretty decent for an entry level position. Not that knowing any of them worsens your case but they aren't really needed. Start applying and learn while doing.",
                "author": "QuotheFan",
                "score": 4
            },
            {
                "body": "Ive been a webdev for 4 years and i can say this stuff might be useful to know, you dont need to know a lot of this stuff. Every job is different and will require you to know about what they use which can be a bunch of stuff. Ive never used agile, scrum, a project management platform, linters, code reviews, or contributed to open source. Not saying you shouldnt learn this stuff but dont think you need to learn this stuff before you start trying to get out there.",
                "author": "YOU-CAN-DO-IT_",
                "score": 4
            },
            {
                "body": "I'm currently a junior and I don't do testing... Is this something I can easily pick and start implementing in my projects?",
                "author": "TehTriangle",
                "score": 4
            },
            {
                "body": "Did you get my code review? :)",
                "author": "Lekoaf",
                "score": 4
            },
            {
                "body": "If you find yourself needing another junior ever, please for the love of god contact me. I have already done this and I need a job so badly.",
                "author": "LevelSample",
                "score": 4
            },
            {
                "body": "Can you elaborate further? I'm looking for my first role and feel extremely discouraged and lost.",
                "author": "LevelSample",
                "score": 4
            },
            {
                "body": "yeah I feel exactly the same. Though the op has to mention whether he talks about pre covid era.",
                "author": "lillallol",
                "score": 4
            },
            {
                "body": "I did, thank you!",
                "author": "LevelSample",
                "score": 4
            },
            {
                "body": "Yeah, we had a month \"bootcamp\" too. Newbie would be assigned a mentor and given to build a relatively simple I/O app with some business logic.\n\nCompletion took around 3-5 weeks. And it's somewhat simple app, just counts commissions from given transaction inputs.\n\nBut it had to work from CLI and API. Have a specification following it. Make differentiations between different type of transactions. Be easily extendable, configurable and shippable with it's own environment (docker). And  ofc properly tested, gitlab ci pipepline is a bonus.\n\nAs well as meet all the style and companies basic coding requirements, which are substantially longer and more precise than any PSR or framework \"standard\".\n\nWhat was interesting, that newbies would go with some implementation the wrong way and mentor would allow that for the first week. That's intentional. And newbie have to rewrite or learn the hard way after given guidance and some links to relevant literature following up the task. However when understands better WHY certain practices are better, than others even though at hindsight something might have seemed ok and \"work\".\n\nOnce you do it on good enough level, you're given simple tasks at production code, like add validation to a field at the back end and so on. As the newbie gets familiar with the codebase and overall development process.\n\nMy first experience in production code was somewhat .. intense. In the regard that my mindset of \"building\" or \"making something work\" was soon changed to thinking of regressions first, building later. Which was, for me at the time, a big deal. But how else could it be? Beginners don't work with big code bases which run in production.",
                "author": "wherediditrun",
                "score": 4
            },
            {
                "body": "yeah, exactly.\n\nI mean, I've gotten to avoid messing around with or even using Webpack at all, which is a huge advantage, because of CRA and Next. IMO No one should ever need to really know Webpack, it's pretty un user friendly and trouble shooting is not straightforward.",
                "author": "not_a_gumby",
                "score": 4
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 4
            },
            {
                "body": ">You have multiple projects - Most of the people applying to the same position will have nothing\n\nAre the cv's that I am seeing in reddit an outlier then?",
                "author": "lillallol",
                "score": 4
            },
            {
                "body": "Appreciate the perspective. Good to know that the Full Stack project is likely enough to get you into the interview room and past the initial barrier of entry. This kind of makes me feel like my desire to take it a step further this year with NextJS/Typescript and SQL databases will help me stand out from the crowd a bit hopefully.",
                "author": "not_a_gumby",
                "score": 3
            },
            {
                "body": "I don't have much on my github. Do you think I should build more things on my own or contribute to open source projects?",
                "author": "Landinque",
                "score": 3
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 3
            },
            {
                "body": "This post went from \"yes, yes you are\" to \"no, no you're not\" pretty fast.",
                "author": "Adunos",
                "score": 3
            },
            {
                "body": "Sorry - You need 10 years experience (At least 2 with a FAANG company) before we can hire you for an Entry Level position.",
                "author": "Reelix",
                "score": 3
            },
            {
                "body": "I had an interview with a startup that said I'd have no help and I'd be on my own. For an entry level position.",
                "author": null,
                "score": 3
            },
            {
                "body": "That's the boat I'm in. I tried to get a Jr dev job for a year and the only place willing to hire me was a place where I'm the only coder. I made some python scripts for them but I was trying to get good at J's, and node. No one knows what to do when I'm struggling or have a problem, it's all me. They also put me into manufacturing and creating photo docs. I need to find an alternative job, that's souly dev with people that know what to do.",
                "author": null,
                "score": 3
            },
            {
                "body": "Although I agree with avoiding places where you'd be the sole developer as a junior because having a mentor/senior is very important for career growth, there are many small companies that have really small dev teams and don't have any formal onboarding processes. At my last job I started working day one with essentially no onboarding/off-the-cuff training because the tech level of the company just lends itself to those sorts of practices. But I stuck with it anyway because it was going to break me into the industry.\n\nBasically, if you're self-taught and want a foot in the door, your tolerance for these things is going to be higher. If the choice is between a really bad opportunity or no opportunity at all, the 'correct' choice isn't always clear.",
                "author": "itsyaboikuzma",
                "score": 3
            },
            {
                "body": "Post a link! \n\nIf you're open to advice from someone closer to your position (I just got hired on as a junior software engineer so I definitely know the struggle) then I'd be happy to look.  I can show you my CV & GitHub as well if it's helpful.",
                "author": null,
                "score": 3
            },
            {
                "body": "A few months ago I started a project with a guy from Reddit for a simple MERN application. I wanted to practice building express apps, and he wanted to practice working with React. He told me he had a React internship and had graduated college with a CS degree in the last year.\n\nTurns out, after the express app was built, he could barely create a working component. Like, was asking \"what's an API\" \"what are HTTP requests\" really basic stuff. He was a total drag on the project and took forever on simple tasks like setting up a login page shell with just the form and no functionality. \n\nEnded up cutting him and finished the project myself, but if that's the kind of people that are actually employed for React, I'm surprised (he may have been lying to me, who knows)",
                "author": "not_a_gumby",
                "score": 3
            },
            {
                "body": "I’ll take a look when I have the time.",
                "author": "Lekoaf",
                "score": 3
            },
            {
                "body": "I feel you are",
                "author": "AmountOk3836",
                "score": 3
            },
            {
                "body": "Code reviews?",
                "author": "Lekoaf",
                "score": 3
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 3
            },
            {
                "body": "Fair enough. I work on enterprise software. Stakeholders needs to know our progress through daily standups and Jira.",
                "author": "Lekoaf",
                "score": 3
            },
            {
                "body": "Hey buddy. I played with your portfolio on mobile. In my opinion, there’s some styling decisions and UX decisions that make me wonder if you are detail oriented. You may be detail oriented, but we all have our blind spots.\n\nStyling: horizontal alignment of the elements in your form, unwanted white space on the right side of the blue element on your landing page. \n\nUX: I was confused when I tried to interact with your “projects” page. “Expand” should be more obvious, but also I’m not sure what the purpose of “expand” is for until I click on the element. I also wasn’t sure how to unexpand the content, which caused me to have a mess of overlapping information. I could be really stupid, but the HR person looking at your website will probably be just as confused, if not more so.\n\nAlso, I saw that your projects are limited by the wants and needs of the client. Totally understandable. Though, it might be a good idea to display projects that are yours through and through. Maybe create a website for a fake business and be as bold as you want to be. Maybe you could make this website for a local business (use their branding, items, etc.) and when you’re done you can email them and say “hey I made this website for practice. If you like it you can have it. If not, I’ll change up the branding and items so I’m not stealing from you”. Either way, you’ll have projects in your portfolio that you feel express who you are as a developer.\n\nIf you ever need someone to look at your projects, please DM me and I’ll tell you what I see!",
                "author": "Ze_Chooch",
                "score": 3
            },
            {
                "body": "edge chief deliver workable sleep worm friendly nail dirty wine ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 3
            },
            {
                "body": "joke uppity retire chase ludicrous advise somber zephyr mighty aware ` this message was mass deleted/edited with redact.dev `",
                "author": "PenguinPeculiaris",
                "score": 3
            },
            {
                "body": "Interesting. I didn't think companies would hire based on potential.",
                "author": null,
                "score": 3
            },
            {
                "body": "most seniors I've ever encountered haven't either. It's not part of the culture around here.",
                "author": "TheMightyHamhock",
                "score": 3
            },
            {
                "body": "For real. Each company has their own standards and ways of doing things. Telling juniors they should know TDD/BDD on the front end is kinda nonsensical because if you know TDD/BDD you probably have the ability of a mid level dev. Also contributing to open source code? Again, probably mid level. Tell JR frontends to know SQL? I mean sure? But there's really a lot more you could focus on.\n\nTruthfully just look at getting through the coding tests/reviews. If the tests are too cumbersome they're probably evaluating developers wrong or worse they're trying to get free work out of you; which does happen.",
                "author": "Guilty_Serve",
                "score": 3
            },
            {
                "body": "well said",
                "author": "TheMightyHamhock",
                "score": 3
            },
            {
                "body": "Good luck!",
                "author": "mildly_amusing_goat",
                "score": 3
            },
            {
                "body": "No! Don’t call me out like that! 2015 is when I got my current job. As a junior. :)",
                "author": "Lekoaf",
                "score": 3
            },
            {
                "body": "It sounds like you have the experience, if you have a mix of JS heavy and html/css sites.  There's a chance they're finding more experienced people, but there may potentially be other factors.  I would try to do a mock interview or two with someone to get feedback if I were you.",
                "author": "reddit-poweruser",
                "score": 3
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 3
            },
            {
                "body": "Exactly! Working with a team is much more complex than any code work you might be doing. Understand how agile or scrum teams function. Definitely being comfortable using git. OP makes some great points. You CAN do this!",
                "author": "Grabow",
                "score": 2
            },
            {
                "body": "One thing about agile and scrum. Why do the sprints take so long? They should be called marathons. I worked with a team of 20+ developers who couldn’t build a product over years, then just hired two devs who built it in a week. The whole damn thing. And that product has been rolled out to enterprises globally. So maybe I’m jaded, but the whole agile thing doesn’t work for me because it’s slow.",
                "author": "Tokogogoloshe",
                "score": 2
            },
            {
                "body": "So many meetings, especially now online video meetings....",
                "author": "qqqqqx",
                "score": 2
            },
            {
                "body": "Is there a backend developer version of this or does this still apply more or less? I was thinking of setting up an API for a restaurant or an online shop.",
                "author": null,
                "score": 2
            },
            {
                "body": "I'm looking for a buddy to review some code in the next month. I've been getting back to learning so anything would be helpful.",
                "author": "Toboggan00",
                "score": 2
            },
            {
                "body": "I am a self taught developer. I have a decent grasp of MERN stack (although I could use a little more practice with Mongo), and have made several todo apps, among others that use various API’s (Discord.js, Spotify.js, PokeAPI, etc.). I have been looking for junior dev jobs for over a year now and am lucky to even get a call back. I’ve had a handful of phone interviews that never led anywhere. \n\nI don’t know what else I can do. I keep practicing and learning and work on project after project constantly. I don’t have a background in development, currently I am a blue collar worker, and I only have an associates degree in CS. I’m confident in my coding skills and abilities, but I have no experience working with a team that uses agile or kanban or anything like that. Any advice for someone like me?",
                "author": "TheStonedManatee",
                "score": 2
            },
            {
                "body": "> In my opinion, a junior developer should be able to build a TODO app (or similar) from scratch\n\nI don't know what that means. Is TODO an abbreviation for something? Google is telling me about to do list apps. Is that all it is?",
                "author": "Voltage_Joe",
                "score": 2
            },
            {
                "body": "For any beginners seeking to contribute to open-source.\nI've got tons of bookmarks (of web-dev stuff) but I can't speak for the quality of them lol:  \n\n* [GitHub's guide to finding ways to contribute](https://docs.github.com/en/github/getting-started-with-github/finding-ways-to-contribute-to-open-source-on-github)  \n* [Awesome (contributions) for beginners collection](https://github.com/MunGell/awesome-for-beginners)  \n* [First Timers Only](https://www.firsttimersonly.com/)  \n* [GitHub search for open issues labeled first-timers-only](https://github.com/search?utf8=%E2%9C%93&q=label%3Afirst-timers-only+is%3Aopen&type=Issues&ref=searchresults)",
                "author": null,
                "score": 2
            },
            {
                "body": "Also, if you're really not ready for a junior position, you are probably more than qualified for a trainee position.",
                "author": null,
                "score": 2
            },
            {
                "body": "I wouldn’t trust any junior I’ve ever worked with to hold the mouse the right way up.",
                "author": "ReefNixon",
                "score": 2
            },
            {
                "body": "Thank you for making me feel like I dodged a bullet. During my last interview I asked about my responsibilities, if there will be pair programming involved etc. and they refused to respond (that was the second interview, which was technical). Today I received a rejection.\n\nGood.",
                "author": null,
                "score": 2
            },
            {
                "body": "You’re overstating things. I started as a designer where I work and shifted myself to become the sole web developer in the Marketing department. I am just about 100% self-taught, on the job. I don’t get code reviews or any external feedback at all, but I know what sucks and I know what I want to be able to do better. I’ve recently started working with other devs in the company, and I found that I can absolutely keep up with them, my first real confirmation that I learned most things the right way. This is not to say that I’m the best programmer out there or that my path is advisable, but that’s how it ended up for me and I can verify that you _can_ make it work.",
                "author": "everythingiscausal",
                "score": 2
            },
            {
                "body": "Learned this the hard way. After nearly 10 years on my own at a terrible consultancy, I finally got a \"real\" job, and was shocked by how much better they handled task estimation and training, practically forcing newbies to double their estimates. At my old job nobody talked ever, and the other programmer who had been there much longer was not ever interested in mentoring, or even talking about work! He answered my questions, but I always felt like a bother before he left.\n\nI am a very self-motivated and curious developer so it's not like I learned nothing in 10 years, but I certainly never learned what a functional company looks like.",
                "author": "Serializedrequests",
                "score": 2
            },
            {
                "body": "Feel free to DM me if you want feedback",
                "author": "reddit-poweruser",
                "score": 2
            },
            {
                "body": "Incredibly low. Todo apps are the most basic example. It’s a great accomplishment for a beginner, but there isn’t a single production app with such a simplistic data model or UI. I expect juniors to have, at least, gone one level of complexity beyond a single entity data model with a single screen UI.\n\nEdit: I’m sorry if this isn’t some of you want to hear, but I’m the guy you’d interview with if you applied at my company. If you couldn’t demonstrate knowledge beyond a basic Todo app, you simply wouldn’t get hired.",
                "author": "MondoHawkins",
                "score": 2
            },
            {
                "body": "The fact you even know the value of those is good. Make sure to include that kind of language when you're speaking to interviewers.",
                "author": "theredwillow",
                "score": 2
            },
            {
                "body": "This is interesting. Have they said why they aren't satisfied? Are any of the sites JS heavy, like a React/Vue app or anything?",
                "author": "reddit-poweruser",
                "score": 2
            },
            {
                "body": "I... don’t know. I’m mostly a frontend dev myself. I mean knowledge about Git, Linux, agile etc are universal.",
                "author": "Lekoaf",
                "score": 2
            },
            {
                "body": "with what kind of juniors did you work??",
                "author": "Manedblackwolf",
                "score": 2
            },
            {
                "body": "Holy shit. That’s a long list of non junior stuff right there.",
                "author": "Lekoaf",
                "score": 2
            },
            {
                "body": "I worked for several startups early in my career. Small startups are the equivalent of a band of mercenaries in the software industry, usually managers and even your coworkers are ruthless, and a junior engineer is little more than a walking piece of meat to them.",
                "author": "FreshPrinceOfRivia",
                "score": 2
            },
            {
                "body": "How were you able to survive? What did you do during scary moments when it seemed everything was falling apart?",
                "author": "Radiant-Anywhere84",
                "score": 2
            },
            {
                "body": "I saw Redditors the other day say a whole bunch of unethical nonsense in web dev when it came to how to treat a client. I also see a lot of developers being able to justify their bad skills amongst others with bad skills out of nothing but ego. \n\nReddit will have you believe that us developers should be walking on water and have everything catered around you because you're the dev, and that's far from how reality is.",
                "author": "Guilty_Serve",
                "score": 2
            },
            {
                "body": "As someone outside the field - what’s changed? Are the demands greater now than pre covid?",
                "author": "StickInMyCraw",
                "score": 2
            },
            {
                "body": "More like pre 2015 era",
                "author": "scapescene",
                "score": 2
            },
            {
                "body": "100%. I'm totally fine if someone has a wrong opinion as long as they actually have an opinion, especially from less experienced developers.",
                "author": null,
                "score": 2
            },
            {
                "body": "Also, nothing gets merged without a code review. And linters and prettier (and typescript) is really about keeping a unified look and feel in the codebase when you work with a team. It avoids simple mistakes and lets you pick up (or review) another team members code much quicker.",
                "author": "Lekoaf",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "No. I'm trying to avoid the underpaid traps. They were only intrigued because I had typescript on my resume. It wasn't even due to the amount of experience I had with it. I'm mostly self taught because what I learned in school was either outdated or all Microsoft tools. (C#, Microsoft SQL, visual studio). I wasn't even taught about git or open source or anything remotely modern.",
                "author": null,
                "score": 2
            },
            {
                "body": "good perspective",
                "author": "not_a_gumby",
                "score": 2
            },
            {
                "body": "Just don't give up. I know it's exhausting and mentally/emotionally taxing. I felt the same way when I started job searching out of university. You got this!",
                "author": null,
                "score": 2
            },
            {
                "body": "Keep going bud, keep making things, you’ll find a role. Now is a great time for finding work as a dev in the UK.",
                "author": "AnonymousAndroid",
                "score": 2
            },
            {
                "body": ">haha im in UK where like junior no experience is like 18k\n\nAssuming that's £18k, the conversion would \\~$25k US, or \\~$12/hour.\n\nWhile that's above the federal minimum wage, it's the type of pay you might typically receive for working at a carwash, as a line cook in a chain restaurant kitchen, working as a lifeguard at a public swimming facility, or fulfilling orders in a warehouse (no forklift license), to put things in perspective.",
                "author": "RotationSurgeon",
                "score": 2
            },
            {
                "body": "I am really sorry man, that you're feeling like people don't know anything here. But here is a clear explanation also pointing to the resources that can probably get your doubt cleared up.\n\nFirst is MongoDB site itself: [https://www.mongodb.com/why-use-mongodb](https://www.mongodb.com/why-use-mongodb)\n\nWhat is MongoDB Used For and When Should I Use It?\n\nFirst thing to see here is that use it only when dealing with huge amount of data. NoSQL databases are used for Big Data Engineering since they support documents as compared to traditional SQL Relations.\n\n>The idea behind MongoDB is to eliminate (or at least minimize)relational data.  Have you considered just embedding the attendance data directly into each student record?  This is actually the preferred design pattern for MongoDB and can result in much better performance and scalability. If you truly need highly relational and normalized data, you might want to reconsider using MongoDB.\n\nThis is quoted from [here](https://stackoverflow.com/questions/8129557/can-one-make-a-relational-database-using-mongodb)! It also mentioned in DBMS books. NoSQL databases were created to get rid of relations. So if you know you'll have relations then I think you are going against the idea of MongoDB which is a huge bad practice. So as the Original Comment said for relational databases it would be a huge sacrifice to use MongoDB, if you want to use mongodb make sure to make your data is document based not relational. Because when using relations in MongoDB you're abusing the original idea!\n\nWhen the data is small it is a total waste. Why?\n\n>MongoDB expects you to have memory. Lots of memory. If you can't fit your working set in memory, you can forget about it. This is different from most relational DBs which use memory only as cache!To be more specific: MongoDB uses RAM as primary storage and \"swaps\" the unneeded parts out to disk (Mongo leaves the decision over which parts get \"swapped\" to kernel). Traditional RDBMS work the other way around - they use disk as primary storage and use RAM as caching mechanism. So in general MongoDB uses more RAM. This is not a bad thing by itself, but as a consequence \"real\" RAM consumption is difficult to predict, which can lead to serious and unexpected degradation of performance once the working set grows over the (hard to predict) limit.\n\nAbove is from [here](https://stackoverflow.com/questions/4288615/why-not-mongodb)!\n\nAs you can see it is also mentioned in MongoDB itself that it uses RAM as primary storage, this certainly is good when the data needs high speed but as data grows more and more then it creates problems. Also when the data is small MongoDB is gonna be hard on your pocket, because of the expenses it will make! This is the most worst part of MongoDB as it hits the performance hard and can get really (AND I MEAN REALLY REALLY) expensive.\n\nAside from that MongoDB does not abide to [ACID](https://en.wikipedia.org/wiki/ACID_(computer_science)) perfectly, since it allows for inconsistent reads which is not always good! And it only supports ACID transactions for single-document only!\n\nI hope that clears your doubts. No one here is saying that MongoDB is bad or that it is useless. And neither is anyone saying that you're wrong (I even upvoted your replies). But brother every DBMS has its own pros and cons. And I'll be honest that I agree with u/OmgImAlexis here, I have been using MongoDB since quite a long time but majorly when I talk to people and ask them why they use it, it generally because that is only thing they know as they have seen in YouTube tutorials (MERN things are hyped).\n\nSo in real life when dealing with these things we need to be very accurate in judging what we're gonna use since not choosing a correct type and DBMS can create huge problems in the future!",
                "author": "FrostZTech",
                "score": 2
            },
            {
                "body": "Someone with 2 years of experience lands a job as a junior in my country and they are looking at ~25,000 euro with benefits. I’m talking about spain.",
                "author": "midekinrazz420",
                "score": 2
            },
            {
                "body": "Best resources for learning agile/scrum and project management tools? As a solo dev, this is where I struggle wildly.",
                "author": "Xzas22",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "I keep forgetting im more ready than I think.. I hate that",
                "author": "code_matter",
                "score": 1
            },
            {
                "body": "This is EXCELLENT advice. In fact, a lot of excellent advice in this thread. Thought I'd add my own. \n\nLearn to take notes as you work, especially as you are debugging. Keeping a breadcrumb trail was invaluable for me as a junior, and it continues to be useful.\n\n* Write down exactly what the goal is so you aren't wandering down the wrong path or trying to solve multiple issues at once. For example: When I click this button, I expect this action, but instead I am getting this particular error.\n* Write down what you've tried so far, and what the result was. What have you googled? What have you clicked and in what order? Has it helped you narrow down the problem in any way? \n* Even if you haven't solved your problem, have you figured out how to reliably reproduce it? \n* Every time you try something to narrow down the problem, write down what you are expecting to happen. This helps you to notice patterns in your results. For example: \"If I sign in with account A and click this button I expect to see error #1.\" But instead you try it and get error #2 - write that down!\n\n&#x200B;\n\n**All of this helps to do 2 things:**  \n**1. Make sure you are progressing logically and not spinning your wheels.**  \n**2. Helps to communicate with senior devs if you don't succeed on your own. They will see what you have tried, and teach you new ways to experiment and debug.**\n\nDebugging is an art. Learn to enjoy it like solving a puzzle or playing a game, try not to let it make you mad, or frustrated with yourself. \n\nAll devs have fought problems that took hours, days, weeks, even months. It is all part of the job, so have patience.",
                "author": "gnome_of_the_damned",
                "score": 1
            },
            {
                "body": "Our company expects juniors minimum to be perfect with big data , azure , oh also atleast 2 front - end frameworks and designer skills. ML they consider as plus. Dont ask more i hate this place. Location - EU.",
                "author": null,
                "score": 1
            },
            {
                "body": "I'm currently in an apprenticeship for full stack dev position. Pretty old codebase using zend for php and dojo for js. I know git decently, agile like the back of my hand, I review the other apprentices code often. I was put on furlough for 6 months smack bang in the middle of the apprenticeship too, back when I was on an isolated training project. Most of my features on the main system have been 'sort this by ascending order' or 'add this email to this PDF export'. Most of the time I end up requesting help from other devs or seniors, which always helps. Does this sound ready to any of you lot?",
                "author": "KrombopulosTunt",
                "score": 1
            },
            {
                "body": "And CI / CD tools are worth learning next too, since they take a lot of the fuss away and ur make ur development process by making a lot of things automated",
                "author": "combinedprogrammer",
                "score": 1
            },
            {
                "body": "You might or might not be ready, depends on what tasks are you actually supposed to do on the job and how it matches your skills.\n\nEither way, best thing to do is to just wing it. What's the worst that could happen anyway?",
                "author": "councilcow",
                "score": 1
            },
            {
                "body": "You will never be ready until you jump in.",
                "author": "sn0n",
                "score": 1
            },
            {
                "body": "This is the situation I found myself in 18 months ago. It almost made me quit the industry entirely but I put my nose to the grindstone and did it. I learned a hell of a lot.   \n\n\nThey just thanked me by telling me I'm not ready for the salary or position I'm working to, despite the fact that I work to the same deadlines, tickets, and expectations as those in the position.",
                "author": null,
                "score": 1
            },
            {
                "body": "Happened to me haha. Senior developer was too busy, so I was left on my own accord. Four months later, still thinking about my experience to this day.\n\nPLEASE EVERYONE, BE CAREFUL!!",
                "author": "internally",
                "score": 1
            },
            {
                "body": "Can confirm\n Single dev = one way ticket to burnoutville",
                "author": "mostlyjustexisting",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Omg this is such a great advice I wish I knew before my 2 first jobs. Hope I could give you an award.\n\nMy entry job was an internship then contract because they loved how I work and the second one was with a small company (great job environment I have to be honest) but they didn't know how to approach a junior... every development or new requirement was urgent and unnecessary imo (and yes now I'm fucked up... with experience but fucked up).\n\nI'm taking a sabbatical to wind down because those experiences were crazy enough to push my anxiety up.\n\nI know I'm not OP but, any advice to overcome this state of \"fucked up\"? I don't want to touch code in the forsable future but ironically I'm always lurking in this reddit.\n\nEdit: typo",
                "author": "thayvee",
                "score": 1
            },
            {
                "body": "Currently learning and working on adding unit and e2e tests to my app, I hope you are right!",
                "author": "LevelSample",
                "score": 1
            },
            {
                "body": "We have girl on the team who was in support and interested in coding. She does 1-2-1 JavaScript lessons with us and some self study. Now she's building small UI components and writes reasonable code. \n\n\nSo company matters a lot. I saw junior positions expecting 2 years commercial experience.",
                "author": "AnonymousOnlineGuy",
                "score": 1
            },
            {
                "body": "spend enough time in the Reddit WebDev universe and you'll get the hang of what you need to be good at.",
                "author": "not_a_gumby",
                "score": 1
            },
            {
                "body": "That was basically the extent of my knowledge when I got my first job as a webdev. The javascript framework was jQuery though. :)",
                "author": "Lekoaf",
                "score": 1
            },
            {
                "body": "Are we talking here pre covid era?",
                "author": "lillallol",
                "score": 1
            },
            {
                "body": "Sounds like I am over preparing myself for my first job.  I can make a TODO app in react without any guidance from the internet.  It's as simple as *console.log('helloWorld').*  I've even started using Redux in my practice web apps.  Maybe I'm past the ready stage.  Reading this sounds like great news for me.",
                "author": "MadBroCowDisease",
                "score": 1
            },
            {
                "body": "Indeed. Being able to form and voice an opionion instantly puts you ahead of the pack. I’m living proof of that.\n\nI wasn’t the best dev in my team, but I was able to pick my next project because I wasn’t afraid to show my intrest for it.\n\nA lot of devs I meet are shy and wont talk at a meeting unless forced to.",
                "author": "Lekoaf",
                "score": 1
            },
            {
                "body": "The list I wrote is not required to start applying. But knowing some of it will prepair you better for when you do get a job.",
                "author": "Lekoaf",
                "score": 1
            },
            {
                "body": "Got any repo?",
                "author": "Lekoaf",
                "score": 1
            },
            {
                "body": "If you haven't, you should ask the agency what you need to do to be on the level with people they move forward with.  \n\n\nYou may also be able to change how you're applying to gigs to have better luck.",
                "author": "reddit-poweruser",
                "score": 1
            },
            {
                "body": "I have been learning solo as a freelancer for about 3 years doing full stack but mostly back end. 5 months ago i decided to quit freelancing because i wanted to focus more on the building side of it rather that dealing with business logistics and i wanted to get some experience working with other devs.\n\nI got a job with the title of \"intermediate\" developer, even though i feel like i am a junior. I have my own client in this job and am building and managing my own project for them within the company. I have senior devs that i can ask for help (remotely) but i work alone. In fact no one has seen any of my code in the 5 months ive been here.\n\nI feel like i am missing out on learning some important skills by working alone all the time but i understand that everyone else here is busy with their own projects. I am dying for someone to review and critique my code.\n\nI have learned a lot already though and i absolutely love the company i am working for.",
                "author": "unchainedGorilla",
                "score": 1
            },
            {
                "body": "What do you think about hiring a mentor online for code reviews/pair programming? It might be an expensive option, but do you think it would help you grow?",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "For a frontend? Strong vanilla javascript skills (ES6, OOP, JSON, API calls), css (SASS, and ability to adapt to CSS frameworks), git, and probably one of the front end frameworks  at least understood. Being able to build a shitty Todo list in front of me in the framework you pick.\n\nA junior should only know foundational stuff, but they should know how to do it well. Asking for anything else is unreasonable. When I was hired as a mid I'd still get hung in context switches between things, but what makes me a mid is my ability to switch between things and gather an understanding fast. What will make me a senior is being able to communicate, lead others, and make decisions in projects. \n\nListing a bunch of frameworks, algos, or anything is just irrelevant. I had to context switch to frontend React (Didn't know React) from Vue in a week then to backend Java (I didn't know Java prior) and be able to pick apart a framework that was deprecated  in 2012 the next week. My ability to do that was based on my ability to recognize similar OOP syntax that I had seen before in PHP. The frameworks were irrelevant, and if I was hired based on my knowledge of them I probably wouldn't have gotten the job, which goes for most developers.",
                "author": "Guilty_Serve",
                "score": 1
            },
            {
                "body": "What about an app that fetches data from an API, paginates data, and has a modal component? Would that cut it? That's where I'm now.",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "They don’t provide specific feedback when asked. I have a friend who’s on the hiring side of things who said he’s been told he shouldn’t provide feedback for legal reasons. \n\nThat comment may be misleading. No one has said “we don’t think you have enough experience” unless I’ve applied for a mid level job. My rejections could possibly be them going with someone else for reasons unrelated to experience. But I’ve never gotten solid feedback on that.",
                "author": null,
                "score": 1
            },
            {
                "body": "The two new devs used a similar application in their previous jobs. The old dev team had never met or spoke to a client in their life. Each dev must take phone calls from clients daily. Very opinionated answer I know, but I can see results when I see them.",
                "author": "Tokogogoloshe",
                "score": 1
            },
            {
                "body": "Hey man, would you also help me and take a look at my code?",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "What kind of backend work were you doing while freelancing? How did you manage to survive working as a freelancer with no team experience and no mentorship? \n\nHave you tried hiring a mentor online? I can put you in touch with one.",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "Exactly. This is what scares me about entering into this industry because so many job descriptions for junior positions have all these expectations and then usually a “bonus if you know”. I’m only a few months into learning, but even with my limited knowledge I’m pretty sure the job is asking for 3 positions in one! It’s like hiring a nurse and having them perform paediatric neurosurgery solo.",
                "author": "FocusedIntention",
                "score": 1
            },
            {
                "body": "Honestly I'm not sure, no doubt code reviewing and pair programming can help you grow a lot as an engineer, but outside of the workplace the conditions are different and I'm not sure of how good online mentors are generally.",
                "author": "itsyaboikuzma",
                "score": 1
            },
            {
                "body": "I was lucky enough that one of the senior devs saw what was happening and took me under their wing. \n\nSome of my colleagues were not so lucky. \n\nMy advice would be to raise your voice about it. Say that you aren’t getting the support you need and there is no structure to help you progress. If they come back at you with excuses or blame then start looking for another job.",
                "author": null,
                "score": 1
            },
            {
                "body": "I love your username haha ☀️",
                "author": null,
                "score": 1
            },
            {
                "body": "Same here man!",
                "author": "siam_stein",
                "score": 1
            },
            {
                "body": "The next level would be a project with relational data, like a blog with author, category, post, and comment entities, for example. It’s a fairly simple data model, but it introduces all the complexity of having to deal with multiple entities which every single app you work with on the job will have.",
                "author": "MondoHawkins",
                "score": 1
            },
            {
                "body": "> Hello there. I'm a ~~self-taught~~ front end web developer building tools that make life easier. Currently seeking full-time employment.\n\nNo one cares how you acquired your knowledge.\n\nYour portfolio page looks nice.\n\nI took a look at the \"seattle-endorse\" repo. You might want to think about splitting up that 1500 line main.js file. Put all helper functions in one file. Put the QuerySelector class in one file etc. Actually, anything but the main function could be refactored in to other files. Besides that I don't have much to complain about.\n\nI also took a look at \"prereq-flow\". You seem to like really large files. App.jsx with over 1000 lines? You should try to refactor that a bit. Even if these are your personal projects, try to imagine how long it will take for the next person who work on the code to get grasp of what's going on.",
                "author": "Lekoaf",
                "score": 1
            },
            {
                "body": "Good luck homie.",
                "author": "Ze_Chooch",
                "score": 1
            },
            {
                "body": "For sure. Just DM me.",
                "author": "Ze_Chooch",
                "score": 1
            },
            {
                "body": "Yeah you usually want to avoid turning it in incomplete. If anything, email them and see if it's okay to take more time on it to get it right.  May even be able to ask them for help.",
                "author": "reddit-poweruser",
                "score": 1
            },
            {
                "body": "I was building web apps using laravel+vue for the most part, but also was hired occasionally for random bug fixes or feature additions on legacy projects. So I handled everything from hearing the clients idea to deploying something on a prod server. It was fun, but I am glad that I have somewhat narrowed my responsibilities now that I am working within a group of devs.\n\nHow did I survive? I would argue that I didnt since I decided it wasnt for me and I quit. But for the limited success I did have as a freelancer, I guess that was because I am a quick learner, had some prior (weak) programming experience from another industry, and choose multiple different sources to learn from (EDx, Udemy, Laracasts, Books, Youtube) rather than learning from a single source. I also come from an engineering background, where the #1 thing they teach you when youre getting your degree is how to teach yourself.\n\nAs for a mentor, in my opinion, Jeffrey Wayy (Laracasts) was my mentor. Not on a personal level by any means, but by seeing how he built things and hearing his thought process along the way, I chose to adapt his style and approach as much as possible.\n\nThanks for the offer but I dont think I would hire a mentor right now.",
                "author": "unchainedGorilla",
                "score": 1
            },
            {
                "body": ">outside of the workplace the conditions are different\n\nHow so? Would be great if you could elaborate.\n\n>I'm not sure of how good online mentors are generally.\n\nI believe it is not impossible to find good mentors. They're rated based on the quality of their mentorship, so they've a good reason to do a good job. I'm currently on a mentorship, and it has been great so far.",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "Well it depends.... I mean, *someone* has to know how Webpack works. There are massive career opportunities in this field too, and you'd most definitely have an edge on any other applicants when applying at bigger firms.\n\nif someone enjoys digging into this sort of \"meta\"-code, optimise it, and adapt it so that it can handle whichever edge case their employer thinks they need to support, they'd be a massive idiot if they wouldn't pick up this specialisation and start positioning themselves as *that* person.\n\nIn short: I wouldn't dismiss going down this path so off-handedly!\n\nBy the way, Webpack is actually very straight-forward, more so now it is has had some time to mature. I've always thought of it as Gulp on steroids.",
                "author": "Kronossan",
                "score": 1
            },
            {
                "body": "Was it because everyone decided to become a web dev during lockdown?",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "I'm actually surprised that someone with your level of experience thinks that I assume you're not based in a tech hub? Or could it just be that you haven't interviewed in the last 1-2 years?",
                "author": "scapescene",
                "score": 1
            },
            {
                "body": "That's brutally awesome! I wish I could get the opportunity to go through such a grueling process. \n\nI'm planning to take a 4-6 month internship. Provided that it is a decent one, will I still be a newbie that needs hand holding after the 4-6 month period?",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "That was incredible man.\n\nI just got an offer for an internship, and I'm planning to hire a mentor throughout the internship (6 months) and afterwards; might keep him for up to 1-2 years. There will be 2-3 code reviews/pair programming each week with the mentor. I might also take another internship to work on a SaaS product, but that is less certain. After finishing the internship(s), I'm planning to start freelancing.\n\nIf you did what I'm planning to do, do you think that it would have been easier for you and you wouldn't have quit?",
                "author": "Radiant-Anywhere84",
                "score": 1
            },
            {
                "body": "interesting. Maybe I'll revisit it then.",
                "author": "not_a_gumby",
                "score": 1
            },
            {
                "body": "I think there are many reasons that contribute to the increase in job applications for junior positions. \n\nOne of them is the fact that companies started to restrict expenses due to covid causing an uncertain economic environment and hence they restricted available job positions.\n\nAnother reason might be the thing that you mentioned. (although I would not say that everyone decided to become a developer, I would just say that more people are interested)",
                "author": "lillallol",
                "score": 1
            },
            {
                "body": "I don’t do interviews. But i meet a lot of juniors. I’m not american, if you are referring to tech hubs like SF.",
                "author": "Lekoaf",
                "score": 1
            },
            {
                "body": "Probably. It also depends heavily on the work you're given in your internship versus what you're expected to do in any other position. If you spend 4 months doing styling and css changes to some web application and then your next gig is developing rest APIs in spring boot or .Net MVC, you're probably going to have a hard time. Experience is relative, as I said before. This is both a very wide and very deep field. Focus on learning concepts over specific technologies as that will help you transition between roles/jobs much easier. A professional needs to know their tools well, but concepts will help you more easily differentiate between all the tools you'll be asked to use through your career.",
                "author": "TheMightyHamhock",
                "score": 1
            },
            {
                "body": "The lack of technical skill wasn't why I gave up freelancing. It was having to spend the majority of my time networking, searching for clients, and selling yourself (and the constant rejection that comes with it). I also didnt enjoy the logistics side of having to write up proposals and contracts and then chase down payment.\n\nNow I am happy letting my project managers handle that, and I get to spend 40 hrs/week writing code and designing products.\n\nYou can make a lot more money as a freelancer if you are good at it, but its stressful and unstable work.\n\nYour mentorship program sounds pretty cool honestly. One thing that concerns me is putting too much faith in one teacher so I would recommend rotating mentors every few months or so. That way you can weed out other peoples bad habits they may try to pass along to you, and you get to experience a more diverse style of coding.\n\nIf I were to have taken this mentorship when I was freelancing, it sounds like it definitely would have helped me be a better programmer, but unless they were also a business mentor to me, I dont think that would have changed my decision to quit freelancing.\n\nEdit: congrats on the offer. If I were you I would wait before buying that mentorship as you may find yourself a mentor at the job (but I dont know anything about your offer). If you still feel unsatisfied, buy the mentorship.",
                "author": "unchainedGorilla",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Yeah...I really don’t get Spain’s economy. I’m always shocked because the development salaries there seem comparatively low.\n\nHow far does an amount like that go in terms of cost of living? Is it enough for a fairly comfortable but not fancy lifestyle? $25k US in most of the country is very difficult to live on, but not impossible.",
                "author": "RotationSurgeon",
                "score": 1
            },
            {
                "body": "25k will be about 1,494€ a month, I live in Madrid city centre and pay around 700€ for rent, 150€ for groceries, ~120€ utilities. Sure it could be cheaper on the outskirts but that’s not my personal situation. And my living situation is not fancy by any means, like, if I want windows, I’d have to pay more than 700€. So that basically leaves you with ~500€. Not an ideal situation.",
                "author": "midekinrazz420",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "I unfortunately had to downvote this answer of yours brother.\n\nI will be honest this time, you say you've been working for years, I expected maturity by someone who has worked for so many years. People after talking so politely with you, but you still talk rudely with everyone. That is what people and companies look for because there are a million people who know more than us.\n\nSecond MongoDB surely has changed and changed a lot indeed but there are reasons why we don't use it in certain scenarios. Second I didn't copy anything I QUOTED and CITED them properly so that they point to the correct users.\n\nThird by saying \"Get your doubt cleared up!\" I meant the doubt that people here don't know anything or that people are less knowledgeable then you!\n\nAnd one last thing I think there are more better communities where you can join to get with people who are at your level which is way higher than ours. We here in this community exist to help and talk politely with people not to start a war!\n\nYou are really the worlds best programmer who wrote the fastest TS BSON en/decoder, and I guess this communities outdated, misleading, and partially correct ideas/people or whatever isn't at your level.\n\nSo yeah, all the best to you!",
                "author": "FrostZTech",
                "score": 0
            },
            {
                "body": "The main reason people use it is because of YouTube tutorials. Not because they think mongo is the right choice.",
                "author": "OmgImAlexis",
                "score": -1
            },
            {
                "body": "It sounds like you’re mad because people aren’t agreeing with you. Maybe go and do some research into databases. Mongo is easy. That’s why it’s used. There are also loads of free hosted mongo databases.\n\nThis is just the same as how everyone under the sun was using php back in the day with mysql since again free hosting was available.",
                "author": "OmgImAlexis",
                "score": -2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -9
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -10
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1730233205.0,
        "title": "10+ years in web development - Feeling lost, need advise on how to re-gain skills and compete in the marketplace",
        "author": "WholesaleBacon",
        "id": "1gf4eqg",
        "selftext": "TLDR; at the end of the post.\n\nI’m currently 35 years old and I’ve spent the last 10 years working as a web developer at various marketing agencies on a variety of different projects and CMS platforms mostly: HubSpot, WordPress, and Shopify. The work mostly consists of building off our boilerplate themes and customizing for the client. Nothing crazy - HTML, CSS, and Javascript. Sometimes we’ll do an API integration but nothing too complicated.\n\nI haven’t even really used React or modern frameworks in production as we just don’t push the need for it. The agency world is very much getting it done as fast as possible using what we already have/know. No time for new tech or pushing the boundaries.\n\nOver the years I’ve had titles beginning with Front End Developer, Senior Web Developer, and now Director of Web Development. All of the agencies I’ve worked for are small to mid-size - no larger than 50 employees. Currently working at a boutique agency of about 15 people.\n\nThe work is ok, I’m comfortable. It’s that comfort that I feel has significantly set me back and now I’m feeling extremely under-educated in the marketplace for web developers.\n\nThere are very likely jr level developers who know how to code more efficiently than I do and have much more knowledge of modern frameworks. I’ve been stuck either in project management, building processes or QA-type roles rather than actual coding for the last 3-4 years. \n\nMy current agency is likely going to be underwater in the new year and I can see the writing on the wall that I’ll likely be terminated with some severance in the new year.\n\nI guess what I'm looking for some guidance on is what would you do in my shoes to bring me back to the forefront of development?\n\nShould I just take some courses on modern frameworks and build out some projects?\n\nShould I try and push my current agency to adopt something new and then use that on my portfolio?\n\nI fell out of the constant learning cycle years ago - a cushy salary + working from home just made life so easy to not push for more and be content. Yes, I’m now going to pay for it. \n\nMy salary is north of 100k and I feel like I’m trapped in the agency world as that’s all I’ve ever known and done. I’m ready to exit to something else, but I don’t feel like I have the knowledge to compete with director-level programmers who have had more experience coding.\n\nExperienced web developers of reddit, what would you do in my shoes? \n\nTLDR; Developer of 10+ years in the marketing agency world, feeling under-educated - looking for advice on how to level up my skills to be competitive in the developer marketplace once again as I know I’ll be looking for work in the next 60-90 days. WWYD?\n\n",
        "score": 167,
        "url": "https://www.reddit.com/r/webdev/comments/1gf4eqg/10_years_in_web_development_feeling_lost_need/",
        "num_comments": 110,
        "comments": [
            {
                "body": "Don't sell your self short. If you believe there are these genius developers everywhere in the real world because you see them online, trust me it's like comparing parts of your life to people on social media.\n\nThe fact you know you have a skills gap or suspect you have puts you already above a large chunk of developers out there.\n\nPick something you think might make your day to day better and learn that. For example im using the illuminate collections package in our bespoke php app at the minute as I was tired of abusing arrays so much.\n\nHas made this new development I'm doing so much easier.",
                "author": "latro666",
                "score": 111
            },
            {
                "body": "In the same boat as you. 35, cushy job. Lost a bunch of self motivation, but I love programming and creating so much. I decided to go back to school to obtain a cs degree. I’m taking some pre-reqs now, it’s something to look forward to after work and I always knew one day I would pursue it. Now feels like the right time. Hopefully when im finished, I will have found new joy and purpose.",
                "author": "tofus",
                "score": 32
            },
            {
                "body": "47 yo web dev here.  \nBeen doing this since I was 17; since Mosiac was 'the' web browser.\n\nI've burnt out a couple of times, and the best thing for me was to do something else for a few years, recharge the batteries and creativity. So far I have been an engraver, a skip tracer, and a data analyst. Keep coming back to web dev though, via various means, usually something in the job present a problem that makes me think \"hmm I could solve this problem with a website or an app\". But each time I come back the industry has changed enough that the job and environment is totally new.\n\nAvoided management, because ewww.",
                "author": "SolumAmbulo",
                "score": 32
            },
            {
                "body": "I would do three things\n\n1. Start collecting any past work / screenshots / codepens / any examples - and create some simple documentation of that on your personal website. Doesn't have to be full on \"case-studies\" but this will help you take stock of what you've worked on and the scope. That's useful for getting your story straight and can be useful to sell yourself. You might find that the projects are cooler than you remember. You also might find that they are missing some key things / that way you know what to do next. Get a visual designer or coach to help you and speed things up if you're feeling stuck.\n2. Pick out what job you want next. \"Whatever - I'm OK with anything as long as it's not horrible\" - is NOT ok. So, get really clear on what you'd actually really want if you had a choice - and write it down. Start collecting info about those places and what they'd need to see to give you agency or a buffer to learn / or whatever you need from them.\n3. I'd get this book *exercise for programmers* (prag prog). It's language agnostic, so do 20 or so of the prompts with whatever language you're most familiar with (sounds like php, maybe?). Do some with JavaScript. Make them look nice and matchy matchy too. Then, do them again - but with Vue. If you're confident with all the general webdev concepts - it should be pretty easy to get used to. Watching too many tutorials will be slower and probably create bad mental models. So, I'd try to just use the docs at first. Then after you feel pretty good with that, if you need to - then you can do those same ones with React. After that / maybe watch some netnija for some quick full-stack nuxt/next things if you think that suites your goal / but also - maybe your idea job doesn't use this stuff.\n\nAnyway. That's what I'd do.\n\nAlso +1 to u/latro666 's comments and suggestions",
                "author": "sheriffderek",
                "score": 24
            },
            {
                "body": "I appreciate the perspective. You’re right. I guess it’s partially the uneasy feeling of having to “sell myself” to another employer where I honestly haven’t had much adversity in finding work these last 10 years. The landscape of developers has changed greatly over the last decade and I just feel it’s 10X more competitive and throwing AI into the mix doesn’t help my average skill set.",
                "author": "WholesaleBacon",
                "score": 20
            },
            {
                "body": "I wouldn't worry too much about AI - the core skills are just as valuable as they ever were. Fundamentally it's all about your ability to acquire knowledge and apply it to novel areas - It could be React one day, or some plain old JS and PHP the next day, but it's your ability to learn and deliver that matters (especially at more senior levels).\n\nThat said, why not build out something super basic to get your hands dirty - https://react.dev/learn is a great resource, and there's really no need to go chasing after the latest flashy tech.",
                "author": "hansolo669",
                "score": 17
            },
            {
                "body": "No worries! You're definitely right about Udemy being hit or miss, but there are some good tutors in there.\n\nMy favourite ones in no particular order:\n\n\\- Stephen Grider for React and general CS stuff  \n\\- Brad Traversy for React  \n\\- Maximillian Schwarzmuller for JS and other broader topics  \n\\- Colt Steele - very specifically for his Mastering Typescript course, which is, I can attest, an idiot-proof Typescript course that was probably the best resource I'd come across for explaining the concepts.",
                "author": "No_Fudge_4822",
                "score": 12
            },
            {
                "body": "Very much in the same situation as yourself a couple of years back although with a significantly shitter salary. I left a job using very old PHP tech that was entirely dead-end, both career and development-wise. Am now working on a product team building with React and Typescript and working on some really nice stuff. Hadn't touched it until a couple of years ago, so just to say, it can be done! In my case, Udemy was a massive help in getting to grips with the stack, though you can absolutely find similar resources on YouTube and elsewhere, if you want a structured pathway with clear learning goals, there are a lot of very good and frequently-updated courses on there. Good luck!",
                "author": "No_Fudge_4822",
                "score": 11
            },
            {
                "body": "> trust me it's like comparing parts of your life to people on social media.\n\nReally good insight that we all sometimes forget.",
                "author": null,
                "score": 11
            },
            {
                "body": "Learn Drupal and work for government. The standards are way lower.",
                "author": "MadCervantes",
                "score": 10
            },
            {
                "body": "It's all online. Right now I am taking a discrete math course and gen ed courses. I already knocked out one gen ed course in a week. I am getting school work done throughout the day and do some studying in the evenings.",
                "author": "tofus",
                "score": 8
            },
            {
                "body": "> Developer of 10+ years in the marketing agency world, feeling under-educated\n\nYou are not. Impostor syndrome is quite common in our field. I totally understand what you mean.\n\nWhat's your plan? Are you looking to be hired or do you want to seek the freelance life?",
                "author": null,
                "score": 7
            },
            {
                "body": "> There are very likely jr level developers who know how to code more efficiently than I do and have much more knowledge of modern frameworks. I’ve been stuck either in project management, building processes or QA-type roles rather than actual coding for the last 3-4 years. \n\nNot likely. They might be focused on learning some single framework, but lack your in depth knowledge about how to make websites without using sledgehammers for beating in screws. 95% of the websites jumping on the hype train of React have no actually good use case for that stuff. Lots of junior frontend devs straight outta the bootcamps know React, but don't actually know the basics, HTML, CSS, JS and any server side language well.\n\nWordpress and PHP might not be the hottest tech, that much is true. I would recommend brushing up basics with what is now possible in HTML (new elements and semantic elements) CSS (all the life improvements that have come to CSS over the last couple of years and how to use them) and perhaps JS (what you can use now, instead of reaching for JQuery and friends). Then I would probably advise to look at a solid web framework. Say perhaps Django or so. Something that will not disappear any time soon. If you are worried about some web components hype, no worries, you can do that from inside a traditional web framework easily, without having to develop every single page on your website that way.\n\nBy all means, if you want to peddle the same hyped React stuff, that so many others are peddling, even if not for tech reasons, but for financial reasons, go ahead and learn the framework for a week or two. With your experience in web things, you should be able to pick that stuff up in no time. It is just another framework really.",
                "author": "zelphirkaltstahl",
                "score": 6
            },
            {
                "body": "Well, ideally I’d like to be hired into a senior or mid level development role at a major company. Spend the next 20 years building something(s) remarkable and feeling good about it. \n\nFreelance is ok, I’ve done it on and off. But extra money has always been the primary motivation behind those efforts.",
                "author": "WholesaleBacon",
                "score": 6
            },
            {
                "body": "You’re in a unique space here. You have a vast amount of practical real-world experience to draw on here. \n\nOne thing that I’m telling the people I mentor today is that identify and define what you want in your life from a career perspective and then look for that as opposed to defining what you don’t want. You’ll find the former initially harder to do but much more rewarding in the long run.",
                "author": "etherealenergy",
                "score": 5
            },
            {
                "body": "You're totally right, I could. I guess I was just seeing this as an opportunity to push into something else if I prepared for it. Try to re-ignite my passion for development. If push came to shove, I'd definitely be pursuing similar roles at other agencies, and I'm confident I could get another role in an agency with my experience.   \n  \nI guess I'm partially tired of the agency world, I got into programming/development because it was exciting and gave me an outlet to be creative. I've traded that for comfort and a good salary. I've been at 4 different agencies, and they always preach about exciting projects and \"pushing the boundaries\" but those projects are few and far between, and with my experience and skills, I don't even get to work(code) on the exciting stuff anymore - I get to plan and manage it.  \n  \nI guess this post has given me perspective, and I am grateful to be in the position I have had with a good salary and career advancement for the last 10 years. Just feeling like something is missing I guess...",
                "author": "WholesaleBacon",
                "score": 5
            },
            {
                "body": "I was in the same spot. Develop your next site with Wordpress Gutenberg Blocks from scratch, you will learn React.\nThen I suggest doing something with Nextjs.\nI did exactly that and upscaled my skills. If you want we can do a call together, I am happy to help.",
                "author": "klevismiho",
                "score": 4
            },
            {
                "body": "Dude…. I literally wrote up a post like this last night.  I have been a dev for 5 years, I’ve learned a ton, but I still just don’t feel good enough.  I’ve been considering getting out of code into something else but the salary is too good and I don’t even make what you make.",
                "author": "Xypheric",
                "score": 4
            },
            {
                "body": "I love the idea of doing the projects in a language I know and then re-attempting in different languages. I've ordered the book from Amazon. I'll focus on building out my portfolio and creating my ideal job/employer target over the next 60 days. I appreciate the reply, thanks!.",
                "author": "WholesaleBacon",
                "score": 4
            },
            {
                "body": "This is really off topic but it’s cool to see someone who started dev in their late teens, as someone who’s starting at 20 in college, a lot of people in my comp sci program are like 8+ years deep into it and it makes me feel discouraged, it’s like everyone came out the womb coding, seeing people finish an exam in 20 minutes that takes me the full 2 hours kinda hurts my motivation.",
                "author": "DSG_Sleazy",
                "score": 4
            },
            {
                "body": "It’s from the pragmatic programmer.\n\nI got banned from learning programming for linking to it too much - so, now I’m wary",
                "author": "sheriffderek",
                "score": 4
            },
            {
                "body": "Well there’s nothing wrong with seeing if you could pick up some of the work or opportunities/clients that are being abandoned whilst you look for work. Could give you valuable information insight and maybe work or even a job. Contacts ate, by far, the best way to find work. Maybe teaming up with your colleagues.",
                "author": "FluffySmiles",
                "score": 4
            },
            {
                "body": "React Tech lead here. I’d recommend starting side project with whatever tech you are comfortable with. Then try adding new features one by one. \n\nI was using ai in my personal project and when ai fever hit - my Fortune 500 company wanted to adopt something quick. Now I’m in charge of all AI projects - exciting stuff. I’m also migrating our architecture to micro front ends because - surprise, surprise - I used it in my personal project.\n\nOverall I’m lucky because development is my true passion.\n\nSo I’d say start with something small. Something that will help you personally.\n\nJust an idea - create an app that will help JavaScript devs like you to get better knowledge about some framework. Choose whatever framework works best for you. Maybe do it in a form of a game?\n\nGood luck",
                "author": "NetworkEducational81",
                "score": 3
            },
            {
                "body": "OP, why couldn't you just stay in the marketing agency world?\n\nThere are a billion marketing agencies. You could work remote at any of them. Why wouldn't you try to leverage your experience in the marketing sphere to get a new job?\n\nIf you go for a more traditional software engineering job - yeah you are going to be behind in skill. But if one of those developers tried to apply for a director of web development at a marketing agency... they'd be behind you in skill.\n\nOver the years you have picked up skills uniquely capable of solving marketing problems. Why not use them.",
                "author": null,
                "score": 3
            },
            {
                "body": "> Lots of junior frontend devs straight outta the bootcamps know React, but don't actually know the basics, HTML, CSS, JS and any server side language well.\n\n\nI have 2YOE as a full-time React dev and also have a much stronger grasp of HTML/CSS/JS before that(I only learned React to be more competitive in the job market in 2021, which worked).\n\n\nExcept after getting laid off in Feb 2024, I still can't get hired as a React dev or any other kind of the most Junior and Mid dev roles out there. The idea that there's any demand for \"the basics\" right now is baffling, when even \"the basics\" plus YOE in hot specializations are competing with a thousand desperate applicants within an hour of any role being posted. The \"we just want someone with broad experience who can learn our stack on the job\" era is seemingly over; too many specialists are already competing for too few jobs in their exact specialization, whatever it is, in addition to having the basics and broad experience as the bare minimum.",
                "author": "BackToWorkEdward",
                "score": 3
            },
            {
                "body": "Funny enough, I’ve had 1 Drupal project earlier on in my career that was a bit of a nightmare. Haven’t seen it in at least 5-6 years.",
                "author": "WholesaleBacon",
                "score": 3
            },
            {
                "body": "Fair enough, and thanks for the offer! This post has me building a list of todos and resources to help me get back into coding. What would your #1 and #2 resource be that’s worked for you?",
                "author": "WholesaleBacon",
                "score": 3
            },
            {
                "body": "Started web dev at 22, and I'm 25 now there have been ups and downs, but I'm like you, I take 2 hours too to finish an exam, haha.",
                "author": null,
                "score": 3
            },
            {
                "body": "Slow and steady wins the race! I would rather hire a careful and deliberate developer over one who plows in and writes with first thing that comes into their mind. Speed leads to careless accidents. And in development, carelessness can cost careers.\n\nAs cliché as it is, you do you.",
                "author": "SolumAmbulo",
                "score": 3
            },
            {
                "body": "No i totally get it. I am in a similar position to you as well. \n\nOnce you get to the age of 35-40 ish it seems like for a lot of us you have achieved the goals that younger you did not expect to achieve so soon. Or maybe younger you was pessimistic about ever achieving these goals. And now that we're here, its hard to know where to go next. \n\nI struggle with it too. Marketing agency job. Comfortable. Leadership role. Not having an opportunity to dive into more popular things, like the JS-heavy ecosystem software dev entails. Should I stay in marketing. Should I skill up and move on. I have no idea.\n\nBut you can't just skill up forever right? I mean I guess you could. But if you jump to JS software dev, what happens in 10 more years? Now you're stuck in JS dev, still too young to retire, new goals achieved. What do you do then? Switch gears again?\n\nAt some point I feel like being comfortable is a gift.\n\nAnyway - this rambling is just to say: I feel you dude lol.",
                "author": null,
                "score": 3
            },
            {
                "body": "Amazing, good luck bro 🙏🏼",
                "author": "Traditional-Smell692",
                "score": 3
            },
            {
                "body": "No no no. I didn’t get banned from the publisher… that wouldn’t make sense - you are correct. I got banned from the /learningprogramming sub.",
                "author": "sheriffderek",
                "score": 3
            },
            {
                "body": "Depends how big the severance. Could it finance setting up yourself? It’s good to be the boss.",
                "author": "FluffySmiles",
                "score": 2
            },
            {
                "body": ">My current agency is likely going to be underwater in the new year\n\nDid you sign any kind of non-compete?  If so, what does it say - if anything - about your employer going out of business? You might have an opportunity to pick up some agency client work. This would give you some income/runway while you figure out your next move.\n\nIf you have a close relationship with your management team, you might want to be upfront and frank with them about your concerns. If they pretty much confirm they're going to be closing down next year, what's the strategy around all the clients? How do they feel about you possibly picking them up? If that's a possibility, get those balls rolling so any transition would be smooth.",
                "author": "magenta_placenta",
                "score": 2
            },
            {
                "body": "The fact that you have been shipping CMS themes for clients  means that you are a  competent developer. Imposter syndrome is a real thing , and for what it's worth, there are not so many super developers out there that  outsmart everyone else . I think your problem is easy to solve. I am one of the developers you described as juniors (no full time job just some freelance gigs) and I can tell you that you can catch up faster than you think. I would love to share some valuable resources that may get you up and running asap.",
                "author": "creep113",
                "score": 2
            },
            {
                "body": "I’m in the exact same boat. Applying aggressively now and have a final round interview at a tech startup tomorrow. I’d try to push headless web dev at the agency you’re at if you’re able to so you can show off some professional projects in a modern tech stack, and just practice React on the side as much as possible. TBH, react really wasn’t that hard for me to learn, and most of my recent interviews have involved a totally doable react coding challenge and then just discussing projects with leadership. The systems design interviews have tripped me up much more than the React ones. Good luck, agency life has been soul crushing at times for me and I had to reply.",
                "author": "rancification",
                "score": 2
            },
            {
                "body": "Adding, myself to the bunch in the same situation. 38 and doing web development professionally for 20 years. For the last 10 years (exactly to the month), I worked in an agency dabbling in e-commerce, and in this job, I haven't really touched newer frameworks at all. I also HATE selling myself, this pressure is making me depressed.\n\nBut don't be discouraged, we have still learned to solve problems and adapted a specific kind of thinking and pragmatic approach to the Job that only comes with years of experience and this is still a highly relevant skillset that elevates you beyond simple knowledge of popular frameworks.\n\nMy advice would be: look for what you \\_want\\_ to do next and avoid looking for the same kind of ecosystem (Shopfiy) \\_only\\_ for the reason of familiarity. I know it's something I do... thinking \"man but this is what I am proficient in so I guess I will continue with it\". Because if this is your only reason you will just not get happy.\n\nSo look out for what you think is fun and engaging and has a chance to not burn you out. Look at who is hiring and what they use and then just spend a month getting familiar with the frameworks they use. You have the experience under your belt, especially if you know the basics well (which you do). You will still fall into a lot of beginner traps with newer stuff but the difference is you will identify them whilst doing so because you are experienced. So you will get on track faster and then when it comes to applying for a job you know that you come with the job experience under your belt and as well as the security to not fall into immediate pitfalls. You will be confident and you can be honest in your interviews and then you will get hired for the absolute Rock that you are.\n\nIf you are like me then you thought for a long time that you would have no problems finding a new job and that you could easily onboard into the newer stuff, but then at some point in recent years, you noticed that the Juniors from today all know stuff that you don't and that you grew disconnected and you lose that confidence bit by bit to the point that the thought of having to look for another Job that does not shoehorn you into things you don't love anymore will become one steep and high mountain to climb.\n\nMy situation is that ever since starting in my last agency I just a-voi-ded doing side projects as a hobby, and I also avoided react because I look at this shit and I just know this is not a fun library (for me). Currently, I am avoiding burnout so I told my agency I want to go half-time to refresh a bit. While this was not my aim it kind of rekindled my passion and thus in the last 2 Weeks I took a look and a liking to solid-js. I love it and it is fun. This really gave me confidence that looking for another job and trying to sell myself is not as hard as I thought.\n\nSo just take time for yourself, reflect, and then just dabble with that looks interesting to get that spark flowing again and hopefully, your confidence will find a big boost.\n\nJust remember to make your \"invisible\" skillset visible. It's more important than efficient coding.\n\nI wish you the best!",
                "author": "shrubmcshrub",
                "score": 2
            },
            {
                "body": "You have great experience but it can be a trap a lot of people fall into. One thing I'd recommend is always be learning, try to pick up something new at least once a month whether it's the latest on CSS or a new framework. Even taking an entry React course just to know what it's about is helpful. \n\nBut say you get laid off and now you're looking for new work, you have a lot of options. One you could focus on the management portion, I see a lot of roles for web management where you sort of manage the day to day of the marketing focused websites. The other is to focus more on development and there are lots of roles just focusing on Shopify or WordPress but I'd pick up some of the latest and greatest as well, although it might be harder to land roles like these since you don't have projects with them. But you have a great opportunity to build something ahead of time if that's the direction you want to go.\n\nOverall even if you focus on the managing end of the business, definitely keep learning even if it's just so you know what it's about. Udemy is a great place to pick some of this up quickly and you could take a past project and convert it to something 'modern' whether it be one of the JS frameworks or maybe you want to go low code with Webflow or something.",
                "author": "ChebyrashkaMX",
                "score": 2
            },
            {
                "body": "Look for jobs in your area and learn the most common stack. Probably it will be JS/TS, React, and Next. I hate it, but lots of teams have switched to Tailwind so maybe you'll need to learn that too.\n\nFrom your type of profile it sounds you're not very deep into programming. Becoming competent at JS/TS is going to take more than 60-90 days.",
                "author": null,
                "score": 2
            },
            {
                "body": "Follow some youtubers to keep being up to date, but be critical. These youtubers are hyping every little shit.\nI would suggest to learn react / tailwind / react query. Thats almost everything you need.",
                "author": "hupseke",
                "score": 2
            },
            {
                "body": "That's awesome, do you do weekends or night studies? Is it possible for you to manage it while working?",
                "author": "Traditional-Smell692",
                "score": 2
            },
            {
                "body": "Hi, I can see a couple of books by that name. Is there a specific one you are referring to?",
                "author": "ConcentratedYolk",
                "score": 2
            },
            {
                "body": "thanks for the book suggestion!",
                "author": "alex_3410",
                "score": 2
            },
            {
                "body": "Thanks! I appreciate your reply - I’ve been looking at Coursera or Udacity as they have some established learning tracks - I’ve dabbled in Udemy courses and they are hit or miss, any instructors you’d recommend for react/typescript?",
                "author": "WholesaleBacon",
                "score": 2
            },
            {
                "body": "Appreciate your reply, it does make me feel a lot better and the general sentiment from the comments. Thankfully I’m pretty strong in HTML, CSS and vanilla JS as I’ve used it to build our modules on HubSpot.",
                "author": "WholesaleBacon",
                "score": 2
            },
            {
                "body": "Yea, I have a non-compete for clients. There isn't anything specifically mentioned if the company goes out of business.  I'm not really sure what they'll do with their current client roster if they just close their doors. All this info was leaked to me by a good friend who is the COO of the agency and is a shareholder, I'm not entirely sure how hard I should push for picking up existing clients as I'm not supposed to know anything at this point.",
                "author": "WholesaleBacon",
                "score": 2
            },
            {
                "body": "Thanks for tips on headless, I’ve heard of it before but never tried it or implemented. \n\nI’ve dabbled in React on and off, so I’m not a complete day 1 noob, but I would still consider myself a beginner. \n\nGood luck on your interview tomorrow! 💪🏻",
                "author": "WholesaleBacon",
                "score": 2
            },
            {
                "body": "I went back to school at 26yo for web dev. I'm in a leadership role now.\n\nCareers are *long* my man. You're gonna have something like 40 years of a career. And it isn't going to take 40 years to achieve the goals you have now. Even goals you think are unreachable, you will achieve in well under 40 years.\n\nYou have all the time in the world.",
                "author": null,
                "score": 2
            },
            {
                "body": "Yeah but also you're not a virgin, which carries a little value in terms of life experience. Don't worry about that. Learn what you can from them. Get the best ideas and methods from those already using them. And remember: getting jobs is more about posturing and people skills than pure coding talent. Final thought: even the C- student in medical school passes and becomes a doctor. No one knows what their grades were; it isn't on the diploma. And this doesn't even make them bad doctors necessarily. Tests and academics are only one aspect of things. Experience is king. Food for thought.",
                "author": "Fuzznuck",
                "score": 2
            },
            {
                "body": "I always have done mines from scratch and started 15 years ago. From a developers perspective this brings joy and more control. I have build small and enterprise level websites in Wordpress, all from scratch.",
                "author": "klevismiho",
                "score": 2
            },
            {
                "body": "I've been super depressed in my second job for similar reasons. I've just been trying to do hobby web apps on the side but that sometimes burns me out more.",
                "author": "rickyhatespeas",
                "score": 2
            },
            {
                "body": "I like Web Dev Simplified, Web Dev Cody, Josh tried Coding for simple things that were new to me.\nOnce you got the basics, you can learn a lot from these +10-hour vids they are creating.",
                "author": "hupseke",
                "score": 2
            },
            {
                "body": "Thanks",
                "author": "ConcentratedYolk",
                "score": 2
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 2
            },
            {
                "body": "Awesome! Thanks for the recommendations 🙏",
                "author": "WholesaleBacon",
                "score": 2
            },
            {
                "body": "Yea, you’ve described the dilemma perfectly. You’re very self-aware. Another 20ish years to go in my career and I’m already near the top and it’s not as fulfilling as I had imagined. \n\nThat’s the problem (maybe not a problem) with agencies. I feel I’ve “peaked” without actually peaking because it’s the peak of my small agency world. Really the only growth is into a C-Suite role or maybe starting my own agency - which, to be honest, isn’t that appealing to me. So I’m naturally defaulting back to what I know I love doing and that places me in a position to grow again. \n\nI’ve enjoyed your comments, it’s good to get different perspectives from other people experiencing the same dilemmas and their thoughts on how to move forward. Cheers.",
                "author": "WholesaleBacon",
                "score": 2
            },
            {
                "body": "Will check them all out. Appreciate the reply and channels 🙏",
                "author": "WholesaleBacon",
                "score": 2
            },
            {
                "body": "They were mad because I was “posting paid shit” (because the book costs $22). So, you can post links to eloquent JavaScript 700 times a day, but taking about this one - is too dangerous! Incompetent yahoo assholes is probably accurate.",
                "author": "sheriffderek",
                "score": 2
            },
            {
                "body": "Oh WTF? That violates the sub's rules? Wow, how shitty. Seems like all you're doing is helping people; I don't get it. Well, I for one appreciate the info, FWIW",
                "author": "Fuzznuck",
                "score": 2
            },
            {
                "body": "You have a head start on everyone who is teaching themselves right now, so that’s something.",
                "author": "techdaddykraken",
                "score": 1
            },
            {
                "body": "I’ve been building websites for 30 years. Download Cursor and AI will change how you work. I build typescript, svelte and Supabase apps without coding",
                "author": "Equal_Cup7384",
                "score": 1
            },
            {
                "body": "I'm 33 years old 10+ year developing. I've built a lot of WordPress sites and got to the point where it was just getting boring building the same old marketing website. \n\nDon't sell yourself short just because you don't know frameworks. Most of what we do is solving problems. 10 years of problem solving is very valuable. That's really what it's all about. \n\nIf you are looking for a direction, look into Laravel. It is a great php framework with a large community. Most of your current skills apply. You can go from building marketing websites to actual web apps that can grow over time and solve some big issues in a multitude of industries. \n\nThere is even a very clear path with learning it. You can get pretty far with laracasts.com. start with the Laravel from scratch tutorials and go from there. I've learnt so much from that site. I'm completely self taught and worked for cool start ups and established companies that pay $160/year. It's really fun spending 2 years building out one project and pushing it further and further. I enjoy it much more than just aligning divs to a design for a WordPress site.\n\nSpend a half hour looking up Laravel development jobs and see what kind of things they require. Then you'll get an idea what you should spend some time familiarizing yourself with.",
                "author": "Disastrous-Hearing72",
                "score": 1
            },
            {
                "body": "I’ve been in the industry since 96, been programming since I was 8ish. I’ve seen every concept come, go, and be recycled. Learn theory and data structures, and you’ll always be able to adapt. I recently learned react-native because a client wanted a phone app. Just launched it a few days ago. Took me a little longer than somebody already knowledgeable in mobile development but they didn’t have to take a risk and hire somebody they didn’t know.",
                "author": "DanishWeddingCookie",
                "score": 1
            },
            {
                "body": "There are a lot of good responses here, but just to add specific tech: I have been learning WebGL and web assembly and it is really incredible what you can make modern browsers do. For exmple multi-player doom: https://silentspacemarine.com/",
                "author": "SCI4THIS",
                "score": 1
            },
            {
                "body": "Shake that imposter syndrome. Try to form a rough but realistic plan for yourself. I'm about the same age, but got an in-house job a few years ago. It was initially a pay cut (~12%) but my work life balance improved immensely. Companies sometimes call them \"marketing developers\" or you can deduce that that's what the listing is describing.\n\nThat government Drupal track that someone else mentioned isn't crazy; i can't speak terribly well of any of my other CMS firsts.\n\nGood luck, and the job market is insane right now, but i have some optimism that it will stabilize in the next 2-3 years.",
                "author": "taruckus",
                "score": 1
            },
            {
                "body": "I worked for the same agency for 10 years and at some point I wasn't learning much. I applied for another job which was slightly harder and it was not an agency. I worked there for 1,5 and I learned a ton of stuff. They also had budget to go to conferences and I've been going to them at least once a year.",
                "author": "krazzel",
                "score": 1
            },
            {
                "body": "Shopify and Hubspot development are in high demand and pay a lot. I work as a shopify dev, my friend is a hubspot one. We work together offering both services. As for wordpress, we have some clients but generally ecommerce is where money is",
                "author": null,
                "score": 1
            },
            {
                "body": "If you feel the need to upskill yourself, go explore courses on edX, coursera, or other similar websites.\n\nMy experience is very similar to you, I am 34, developer with 10y exp. But got into indie hacking and parted ways with money :(\n\nShould have taken job earlier. Any guesses for me?",
                "author": "convicted_redditor",
                "score": 1
            },
            {
                "body": "I am in almost the same position, part from your pay! my game plan at the moment is to save as much as I can for a safety net but that's easier said then done.\n\nI am also trying to take a hard look at my skill set and how it stacks up for freelance work, I know JS is a massive weak area for me to trying to toy with it again. My issue with it is we don't really need custom JS that often so every time I pick it up again I don't use it and then forget it again. I am trying to think of a personal project I am interested enough in to keep the skills sharp but also keep me interested enough in it to actually do it!",
                "author": "alex_3410",
                "score": 1
            },
            {
                "body": "A lot of comments focus on obtaining new technical skills, but I want to offer you a different perspective. Your ability to self reflect and identify that gap in itself is already a great achievement but don‘t focus on it too much.\n\nYou are a web developer approaching 100k, companies don‘t employ or keep you only for your programming skills. Being a good programmer is nice if you are grinding away on side projects but in a work environment that is only 50% of the job.\n\nSoft-Skills, planning skills, taking ownership, the ability to communicate effectively, estimating and breaking down work are crucial skills that companies often value a lot more than pure technical knowledge. Also the ability to gain ground in new technologies. And I am sure if you had the time to do so, you would catch up much faster than an inexperienced developer would take to learn the same skill. So to make things short:\n\nYou are probably a great developer and you shouldn‘t feel inferior. You are just not up-to-date in a small aspect of being a great developer, which can easily be fixed. You are in a better position than any junior developer that can recite the react docs backwards because you have hands-on experience and are able to see the bigger picture.\n\nFor catching up in technical knowledge I‘d suggest to build something on the side and read up on high quality resources. You‘ll get there in no-time. Especially frontend development is not rocket science, even though people make it out to be that, and you‘ll catch up fast.",
                "author": "Weird-Stress8899",
                "score": 1
            },
            {
                "body": "If any part of your job involves taking client requests and turning them into business requirements or technical specifications, migrating to a business analysis role might be an escape hatch. Depending on the the role it might not mean abandoning hands-on development skills entirely. Edit: missed the bit where you talked about this. I do still think there’s a viable career path here as tech skills get more and more devalued by business.",
                "author": "abillionsuns",
                "score": 1
            },
            {
                "body": "Go through the odin project where applicable",
                "author": "VyseCommander",
                "score": 1
            },
            {
                "body": "Create a multiuser app with unit tests, websockets, optional extras such like d3, threejs, AI models integration",
                "author": "cnotv",
                "score": 1
            },
            {
                "body": "Hey dude, agency work is like the best teacher. You have seen everything that clients will ask for. We are in a similar spot (same age ish - I’m 37, same titles, same experience). \n\nI can’t in good conscience offer advice since we’re basically in the same spot but I can share my intentions and maybe that helps?\n\nI’ve spent the last 2 years really putting in work with Vue and React, learning API dev, honing my JS chops (and typescript!), brushing up on SQL and MongoDB, creating little apps for my portfolio, and even dipped my toes into learning python. I went to college for cybersecurity so I have a strong background in telecoms and server infrastructure, but I’ve been trying to learn more cloud infrastructure stuff too. Just trying to spread out and see where I can go from here.\n\nBest of luck to both of us!",
                "author": "mrcoffeepoops",
                "score": 1
            },
            {
                "body": "I'm in a similar boat. Most paying gigs I can find are HubSpot, WordPress, Shopify and WebFlow. Typically for projects that don't quite fit well into one of these low-code tools, and need a developer to wedge in some odd feature or design. The market for these projects is also shrinking, as businesses get more savvy about low-code tools. \n\nI've spent time building bespoke UIs with React, Svelte and others, but I'm not really getting hired to make those, yet. Which goes back to my original difficulty attracting qualified clients. Still trying to crack that nut, if anyone has any tips.",
                "author": "AndyMagill",
                "score": 1
            },
            {
                "body": "Its a tough situation because on one hand it does seem like companies want people who focus on modern frameworks like react and its likely going to be much harder for you to find a new position without that stuff on your resume.\n\nBut on the other hand, the javascript ecosystem has become sufficiently developed to be just as efficient as any framework, and jumping into frameworks would probably be a waste of time for you just in the sense that you wouldnt be learning how to do new things, you would mainly be learning how to do stuff you already know how to do in plain javascript. If you want to learn something to actually materially enhance your skills as a web developer, learn d3 if you dont know it already.",
                "author": "ja734",
                "score": 1
            },
            {
                "body": "The web is going back to the state it was 10 years ago, a server serving html, don't waste time on new skills and frameworks",
                "author": "SubjectHealthy2409",
                "score": 1
            },
            {
                "body": "If you've worked in the director level, why not be a people manager instead of an individual comtributor?",
                "author": "efferus20",
                "score": 1
            },
            {
                "body": "Success is the sum of small efforts, repeated day in and day out.\n\nFocus initially on learning web-dev frameworks through Udemy and building side projects.  \nCan join some online cohorts depending on where you are based out of.  \n  \nEmbrace the discomfort as a catalyst for growth.\n\nMore than happy to help if you feel like it :)",
                "author": "ritesh2503",
                "score": 1
            },
            {
                "body": "I'm in your shoes, with slight differences. I will say from personal experience that moving from an agency environment to a product developer or corporate developer is a steep climb. I've been passed over, ghosted, and otherwise rejected from those types of roles for several years now.\n\nI think a CS degree will open more doors than it seems. I have a English BA and I (suspect) that's why I get passed over so often.\n\nTbh I don't have much advice, I'll just lurk here and see if anyone has some solid tips. Good luck to you!",
                "author": "Mi3sterWitch",
                "score": 1
            },
            {
                "body": "Good morning, can you tell me what you would do if you were looking to get hired as a web dev for the first time.",
                "author": "Keith_Photos",
                "score": 1
            },
            {
                "body": "There are two things I like about making even simple pages with React better than with a backend framework and raw JS:\n\n- Not having a page load every time you navigate or submit something feels sooooo much nicer\n\n- it’s easier to update what’s displayed on screen as data changes, because you use the same code to render the updates as you did to render the initial page\n\nThere are ways to do this with raw JS, but they’re not very elegant or reusable, unless you come up with a framework similar to React or Svelte or whatever. And when you get beyond static content, keeping information in different parts of the UI consistent with each other is a pain in raw JS…much easier to manage in a view framework",
                "author": "prehensilemullet",
                "score": 1
            },
            {
                "body": "Sounds like a cushy gig, but if he is worried about relevance, this is a step backward.",
                "author": "Armitage1",
                "score": 1
            },
            {
                "body": "Why would someone do it from scratch! if there are Pagebuilders like Greenshift, Stackable and themes like Ollie already available on WP? Do you guys focus on to work with a team on a big project or solo on a small to medium project?",
                "author": "Few-Comfort6272",
                "score": 1
            },
            {
                "body": "Nothing crazy. Likely looking at enough to pay the bills for 3-6 months.",
                "author": "WholesaleBacon",
                "score": 1
            },
            {
                "body": "Anyone you particular suggest to follow? I follow Wes Bos already and like most of his content.",
                "author": "WholesaleBacon",
                "score": 1
            },
            {
                "body": "I also like SWR",
                "author": "Trender07",
                "score": 1
            },
            {
                "body": "What kind of roles you were applying to?",
                "author": "UnderstandingOk270",
                "score": 1
            },
            {
                "body": "Would you say that in your decade of experience, you've learned how to deliver value to your customers? How to make them happy? Does them being happy matter to you?",
                "author": "Thecus",
                "score": 1
            },
            {
                "body": "100% agree on this",
                "author": "Existing_Pain_9006",
                "score": 1
            },
            {
                "body": "Web development is so broad now. You need to figure out what you want to do, what work environment suits your personality, and what tech you enjoy. \n\nDo you like the speed, stress and potential tests of startup culture? Or do you be prefer the slow but restrictive pace of enterprise work? Do you want to work at an agency with it's thought deadlines and predicability? Do you want to freelance? Do you want do start your own business or create your own app?\n\nEach of those is totally different, and tends to have their own favored tech stack, and local flavors. \n\nWork in with web dev long enough and your eventually work in or close to all of those, but best to pick one to start with and make yourself familiar with the requirements .",
                "author": "SolumAmbulo",
                "score": 1
            },
            {
                "body": "I've been working in that world for a while now too and I'm trying to upskill into the modern frameworks.",
                "author": "Armitage1",
                "score": 1
            },
            {
                "body": "Dynamic widgets is what React was made for, so it is not surprising, that it makes changing widgets easy. However, I want to ask a couple of questions and also talk about the downsides.\n\nHow many websites truly need to be dynamic? Most websites actually are not. Most websites are like blog posts or consist of simple information pages about a business. This is the reason why not every website needs to an \"app\". By going for some traditional web framework and \"just clicking links\" to get to the next static page, one avoids a lot of React complexity. For example you will never have to update your \"router\", or update the Typescript version you use, or update things for whatever ECMA script standard you target. Those things do not exist or are inherent in nature with the traditional approach.\n\nWhen a website actually has something to do dynamically, it is still a valid question to ask how easy it is to simply do it with plain JS. Event listeners are easy. Updating some text or numeric values somewhere is easy. Displaying or hiding something is easy. For such things it would be way overblown to add another dependency. This is usually the case, when the dynamic nature of a page is limited in scope, to that very page.\n\nOne always needs to consider as well, that adding React to the mix adds a huge dependency. Usually that means choosing JS/TS. If TS, then you need to have a compile step, which you also need to configure (target which version of ECMA script etc.) and install TS as a dependency in the first place. Most people doing that also then get into all kinds of additional tooling, like a bundler and minifier and whatnot, increasing the cognitive load further. Then one needs to consider the maintenance efforts required to keep the thing up to date. I find people doing all kinds of extra work in such projects, which are not actually adding anything to the final result for the user/viewer. Like for example:\n\n* \"Oh, we need to switch to this other router!\"\n* \"We need to target a newer TS version!\"\n* \"But dependency thingamabob is not ready for TS version blub.\"\n* Working on copying a navigation from one project to another taking weeks.\n\nAll kinds of such things, that would either not exist in the first place or would be a matter of copy paste and minimal adaption with traditional web framework or even static pages.\n\nBut you mention, that you find it so much nicer not to have to submit something and reload the page. Well, in theory yes, but then you get all the downsides. Does my back button still work properly for those different views? Can I ctrl+click or middle-click that \"link\" to open in a new tab? Can I send that \"link\" to someone else to look at the page that will be displayed, if I click that \"link\"? Basically you have to ensure all the standard browser behavior still works. In reality I experience an overwhelming majority of such websites not managing this properly and therefore being broken in nature. Also a well made static pages website can be very snappy, so that page reloads do not take much time at all and almost feel like local page updates, while React websites are often made by people, who will throw in a lot more than just React and will bloat the websites, making them slow, even though the page might not reload. How often do you see a spinner animation for simplest things or even the initial page load? This is slow! With dynamic pages one shouldn't be able to see any such animations at all, everything should be super snappy. Somehow people almost always manage to F it up.\n\nThis is not necessarily React's fault. It is a kind of mindset. It is the mindset of adding dependencies, even when not needed, bloating the websites more and more. Minimalism is the virtue. If you don't have much, then there is not much to maintain either.\n\nHowever, I also want to note, that it is usually very easy with traditional web frameworks to \"make changes\" to pages. You write your template once and the template has logic to react to different data. Got 3 fields to display now? The template will render 3 instead of 2 like before. Those templating engines that are in use in almost every traditional web framework are very powerful. What they are not good at is things that _actually need to be_ web apps. Then the rerendering cycles are too cumbersome. Only that 95% of the websites that use React are not that kind of website.",
                "author": "zelphirkaltstahl",
                "score": 1
            },
            {
                "body": "Not to H.R. people, depending on the job for which you're applying. That shit looks solid and dependable, never mind the actual work. A government job tells an employer you'll follow company policy and be on time, etc. And if you've labored through the spaghetti code that is Drupal, it speaks to your patience in working through a clunky system, itself a particular skill of sorts. Because I've had to muck around in Drupal, Joomla!, and even proprietary CMSs with more bugs than a Parisian mattress. Only thing worse: custom CSS for old school MySpace, what with !important tags all over the place, and hacking tabular data tables to hold design elements… fun times… if you're a glutton for punishment.",
                "author": "Fuzznuck",
                "score": 1
            },
            {
                "body": "Sorry for the late reply , 6 months ago I did two small projects with Angular and stopped coding since then. Now i am back at again and I think a good starting point is to go with react as it is the industry standard now. I will use two free sources that after I did my research, I found them to be the most comprehensive and easy to follow along. First is the new react official documentation, you can't go wrong with it https://react.dev/. And the second is a turtotial by Brad Traversy one of the best tutors when it comes to web development. Here is his most recent react tutorial with a project https://youtu.be/LDB4uaJ87e0?si=elmhHYZPZWq46CFR. And if you decide to go with one of the sources I listed , i hope you can provide some feedback or exchange knowledge I would love to benefit from your experience",
                "author": "creep113",
                "score": 1
            },
            {
                "body": "Appreciate that! 🙏",
                "author": "rancification",
                "score": 1
            },
            {
                "body": "That doesn't make sense. You got banned for referring business to them? Why be on the internet if people can't link to you? And who complains about extra link juice in the first place? Is there something I'm missing here?",
                "author": "Fuzznuck",
                "score": 1
            },
            {
                "body": "> I guess the hope is to find some reasonable company, whose hiring processes are not broken, and where people look at applications, who actually know what they are doing. Not even devs are always capable of that.\n\n\nI don't see any way of doing that beyond what everyone's already doing out here. Those \"reasonable companies\" are getting flooded with just as many legitimate, qualified(and overqualified) applications as anywhere else and only have one job to fill for every 500 out-of-work devs whose applications they considerately look it.",
                "author": "BackToWorkEdward",
                "score": 1
            },
            {
                "body": "Do developers care about website loading speed or just their goal is to achieve the desired design only? Being a digital marketer, I can't stop myself ignoring LCP,FCP and PSI scores especially on mobile.\n\nRecently I learnt... scratch build websites are not a guaranteed of a good score. The template of TT4 theme is an example of this.",
                "author": "Few-Comfort6272",
                "score": 1
            },
            {
                "body": "Agreed. I’ll definitely explore freelancing while I’m looking for work. Thanks for the reply!",
                "author": "WholesaleBacon",
                "score": 1
            },
            {
                "body": "How was it?",
                "author": "UnderstandingOk270",
                "score": 1
            },
            {
                "body": "Ye prettty much",
                "author": "Trender07",
                "score": 1
            },
            {
                "body": "Of course they care. Custom build ones perform the best",
                "author": "klevismiho",
                "score": 1
            },
            {
                "body": "It went well, just gave references. Fingers crossed. Thanks for asking!",
                "author": "rancification",
                "score": 1
            },
            {
                "body": "I guess the hope is to find some reasonable company, whose hiring processes are not broken, and where people look at applications, who actually know what they are doing. Not even devs are always capable of that.\n\nI have had application processes, where I got criticism for \"too many comments\" and other bullshit. Either grasping for any reasons to reject the applicant, or just idiots reviewing the code, who get stuck up on irrelevant details.",
                "author": "zelphirkaltstahl",
                "score": 0
            },
            {
                "body": "If I had the secret of how to do it, I would be doing it already.",
                "author": "zelphirkaltstahl",
                "score": 0
            },
            {
                "body": "Switch jobs to something fully custom with lots of 3rd party integrations. From your brief overview you are about the same level as our juniors to be perfectly honest; you should have left the easy and gone into full stack development long ago if that’s what you wanted. \n\nAn “easy” avenue to get in might be a FE dev position at a good company to start as that’s where your skills lie from the past 10 years and then start trying to get more and more back end work thrown at you (if that’s what you want).\n\nIf you’re happy with front end which I’m guessing you are given your experience then there’s nothing wrong with that and plenty of opportunity that don’t use boilerplate CMS’.",
                "author": "EatingTheDogsAndCats",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1602031944.0,
        "title": "Looking for an open source non private invading cookie consent manager",
        "author": "Piorz",
        "id": "j6hdqb",
        "selftext": "Hi, I have been building a website for a friend an Me because we are starting a company. I just recently learned that I have to have a privacy policy even if I don’t have any cookies just because I would know where people come from. So now I think I need a cookie consent manager to ensure that I am compliant with gdpr since I am from Europe... I am really mad at the eu for just enforcing the need to have a consent form without providing the technical Know-how or a template, ready to be implemented. How are small or starting businesses supposed to do that ? Now I feel like I have to take one of those shady third party consent managers who might abuse the cookie bs and inject a million cookies which I don’t want and my customers don’t deserve... \n\ndoes anyone know a way out? A good legitimate/trustworthy option? I haven’t been able to implement one myself because I lag the technical knowledge to write the script... sogar I have only found a few „free“ options like cookiebot but well they don’t seem suuuuper trustworthy to me",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/j6hdqb/looking_for_an_open_source_non_private_invading/",
        "num_comments": 4,
        "comments": [
            {
                "body": "You're conflating a few things here, so let me clear things up:\n\n1. Cookie consent is covered under the cookie law, not GDPR. It essentially states that any non-essential – especially tracking – cookies need explicit consent. If you only use, like, a session cookie and one to store selected theme, there's no need for consent.\n2. GDPR is about privacy, data storage, and data management. The gist of it is that the user needs an easy way to see their data and to have it removed. It also says that you need to protect the data of those users sufficiently.",
                "author": "Atulin",
                "score": 3
            },
            {
                "body": "Would be interested also",
                "author": "BOT_Frasier",
                "score": 1
            },
            {
                "body": "If you are starting a business in a competitive area, I would strongly advise to get a spcialized lawyer to review your site!\n\nAbout GDPR: If you track nothing via third party (aka evil google, evil Facebook and alike ) there is no need for any kind of consent / cookie banner.\n\nIf you urgently want to track (to see where your visitors go), there are currently not many alternatives, but the market is rising. I think [https://matomo.org](https://matomo.org) is worth mentioning because its an old project that has a focus on privacy for a long time now.\n\nWith [Matomo.org](https://Matomo.org) its also possible to track WITHOUT a cookie banner ([https://matomo.org/faq/new-to-piwik/how-do-i-use-matomo-analytics-without-consent-or-cookie-banner/](https://matomo.org/faq/new-to-piwik/how-do-i-use-matomo-analytics-without-consent-or-cookie-banner/)). But be advised, there are some downsides with this solution, like you can't track \"returning\" visitors.",
                "author": "Lorenz-Kraft-IT",
                "score": 1
            },
            {
                "body": "Give a try to Legal Monster - [https://www.legalmonster.com](https://www.legalmonster.com)\n\n*Disclosure: I work at LM.*",
                "author": "powerandr",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1594512243.0,
        "title": "Ad serving/management platforms?",
        "author": "jdubbsy",
        "id": "hpkp7p",
        "selftext": "What options are out there for an individual to self manage ads on their own mobile app/site?\n\nWe're running into this issue where we have a client that sells their own ads and needs to serve them (with typical ad management tools/metrics preferably) within their mobile app.  Ideally this needs to work without a traditional website for the client.\n\nKeeps looking like Google Ad Manager should do it, but it requires you getting into AdSense and without a \"google approved\" crawlable website we're having problems.  \n\nIt'll be relatively low traffic but there's a substantial relative value to ads sold by users targeting other users.",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/hpkp7p/ad_servingmanagement_platforms/",
        "num_comments": 1,
        "comments": [
            {
                "body": "Xandr",
                "author": "tahadharamsi",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1632949163.0,
        "title": "Every website builder in history",
        "author": "rylandking",
        "id": "py4kbp",
        "selftext": "**Oct 29, 1991**  Tim Bernes-Lee publishes a document outlining the first 18 HTML tags.  Tim Berners-Lee is the inventor of the World Wide Web. The godfather.\n\nhttps://preview.redd.it/pbzkiywv5iq71.png?width=1600&format=png&auto=webp&s=3bcb4b213328b000510824e159bc80cf9c57e276\n\n**Apr 12, 1992 —** BBEdit releases the Freeware HTML and Text Editor.  As it was back in those days, it only worked one platform — Macintosh.\n\nhttps://preview.redd.it/4j2cmiy26iq71.png?width=1600&format=png&auto=webp&s=21fb79bb3013cb54e7712f9cf6f25ef993bd31c1\n\n**Nov 1994 —** David Hills and John Rezner launch Geocities.  Their idea was to create a virtual community of websites organized in \"internet cities\"  (Their original name was \"Beverly Hills Internet\")  \n\n\nhttps://preview.redd.it/5bxhj2o66iq71.png?width=1600&format=png&auto=webp&s=3f989c91b0dc34ca66926975346f0ec6240c254c\n\n**Nov 1995 —** Vermeer Technologies ships FrontPage 1.0 becoming (maybe) the first real WYSIWYG editor.  Four months later, Microsoft bought them for $133 million ($219 million in present-day terms).\n\nhttps://preview.redd.it/7qma8njb6iq71.png?width=1600&format=png&auto=webp&s=8908251131239120d65f45900b1394e77224cc37\n\n**Dec 1995 —** Adobe releases PageMill 1.0 — their own WYSIWYG HTML editor.  It allowed users to easily create a full website without any knowledge of HTML.\n\nhttps://preview.redd.it/u2u2jone6iq71.png?width=1600&format=png&auto=webp&s=f1a9bad2a97fe18217f33612f9d4dfbc2019cba2\n\n**1996 —** Angelfire launches and becomes the place to build a free, fun, and professional-looking website.  Who built the site below?  Mark Zuckerberg's. It's actually his first website. And he built it with Angelfire.  Oh, how times have changed...\n\nhttps://preview.redd.it/1l9eyvrj6iq71.png?width=1600&format=png&auto=webp&s=0c2b02dd1755b40a17444ba83af27812f9ff0805\n\n**Dec 1997 —** Macromedia releases Dreamweaver 1.0. It quickly becomes the most popular site builder by allowing users to switch between text and WYSIWYG mode.\n\nhttps://preview.redd.it/7qzsk66o6iq71.png?width=1600&format=png&auto=webp&s=19f53d4821af1581d5d8c1fd3f6441469ec89035\n\n**Aug 23, 1999 —** Pyra Labs launches Blogger and grows a massive community of users over the next few years.  Fun fact Blogger was co-founded by Evan Williams, the co-founder of Twitter. It was bought by Google in Feb 2003.\n\nhttps://preview.redd.it/p6w2mu0v6iq71.png?width=1600&format=png&auto=webp&s=c13059693213c7121819a45bf639920fcb247429\n\n**2000 —** Wendy Tan White releases Moonfruit from London, England. Initially, it was supported only by advertisements. After the dot-com bubble burst, it became a subscription service. Wendy Tan White is now CEO at Intrinsic .ai an Alphabet company.\n\nhttps://preview.redd.it/0k2qaiv17iq71.png?width=1600&format=png&auto=webp&s=8b76aa4961ad2bcceb397f68d2dfdb1bbc16497c\n\n**2001 —** Brothers Haroon and Zeki Mokhtarzada launch Webs from their dorm room at the University of Maryland.  In 2011 it was acquired by Vistaprint for $117.5 million.  Its original name was \"Freewebs\".\n\nhttps://preview.redd.it/cs7ijpqc7iq71.png?width=1600&format=png&auto=webp&s=d46f60b7d80a7c7f386bc3c4b3a20aed79d3ad06\n\n**May 23, 2003 —** Matt Mullenweg and Mike Little release Wordpress 0.7 to the world. It's an open-source content management system. And it's publishing was based on PHP and MySQL. Today it's the most popular site builder in the world — over 30% of websites worldwide use it.\n\nhttps://preview.redd.it/s4wq08ik7iq71.png?width=1600&format=png&auto=webp&s=499af45f2e7a5bcb30b3a24035c80c947bad6ee2\n\n**2004 —** Anthony Casalena releases Squarespace a blog hosting service from his dorm room at the University of Maryland.  Crazy enough, he was the only employee until 2006 when it reached $1M in revenue. Crazily there logo looks pretty much the same to this day!\n\nhttps://preview.redd.it/pqctav8q7iq71.png?width=1600&format=png&auto=webp&s=e010df135d0fa02b04ba995413a17b8dff6ca96e\n\n**2006 —** David Rusenko, Chris Fanini, & Dan Veltri launch Weebly. In 2005, the college they went to, Penn State, required all students to maintain an Internet portfolio.  Hence... Weebly.  Weebly was acquired by Square in 2018 for $265 million.\n\nhttps://preview.redd.it/39w01ahy7iq71.png?width=1600&format=png&auto=webp&s=8276e9447fababbe2c519f65c37b6f9faffbb905\n\n**2006 —** Tobias Lütke, Daniel Wein, & Scott Lake launch a strictly e-commerce site builder called Shopify. The impetus of Shopify came from Tobi and Scott's attempt to open an online store for snowboarding equipment they called Snowddevil.  Today Shopify is worth $170B. lol\n\nhttps://preview.redd.it/1ep8rch88iq71.png?width=1600&format=png&auto=webp&s=f7347beee81d12e9fc79468cb275c9c5180d7a89\n\n**2006 —**  Israeli developers Avishai Abrahami, Nadav Abrahami, and Giora Kaplan release Wix. It allowed users to create HTML5 websites with drag-and-drop tools that were optimized for mobile.  Wix is now valued at $11B.\n\nhttps://preview.redd.it/a7ursale8iq71.png?width=1600&format=png&auto=webp&s=afd24db163f44c1977fea9ec4cf491499ff90e67\n\n**2006 —** Joe Kraus and Graham Spencer co-found a small company called JotSpot. In Feb 2008 it sells to Google.  And it soon becomes nothing other than Google Sites.\n\nhttps://preview.redd.it/y18yig4l8iq71.png?width=1600&format=png&auto=webp&s=e3fe344e6f45b3516d20b6a91b96d19ec4c9cd67\n\n**2009 —** Eddie Machaalani and Mitchell Harper release Bigcommerce. The company's name was initially \"Interspire\". Eddie and Mitchell met in an online chat room. BigCommerce is now worth \\~$750M.\n\nhttps://preview.redd.it/0rdi7gir8iq71.png?width=1600&format=png&auto=webp&s=bb16edd19148b8b283cc07a596f8b315b7d6776b\n\n**Aug 5, 2013 —**  Vlad Magdalin, Sergie Magdalin, and Bryant Chou release Webflow after graduating from Ycombinator. It's a site builder specifically for designers. And as of Jan 2021 was valued at $2.1B. Fun Fact: Vlad was actually creator of Intuit Brainstorm.\n\nhttps://preview.redd.it/rci64xe29iq71.png?width=1600&format=png&auto=webp&s=a497b78ce162b60a35b42490c49fc6f317eec5ea\n\n**2017 —** @ ajkln launches Carrd — a simple, free, and full-responsible one-page site builder.  AJ has been a one-man show from the start.  He's one of the first folks considered part of IndieHackers movement.\n\nhttps://preview.redd.it/eh6129ja9iq71.png?width=1600&format=png&auto=webp&s=887052f2eb32e8c14489fedb007d004c7ce3241f\n\n**2018 —** Ohad Eder-Pressman launches Stackbit — a site builder that takes care of the developer's grunt work and uses today's most modern frameworks. It's still very early.\n\nhttps://preview.redd.it/k5k4rc2g9iq71.png?width=1600&format=png&auto=webp&s=3dbfc4778ef8df39e99b4e56c2fa709f4c2d8701",
        "score": 593,
        "url": "https://www.reddit.com/r/webdev/comments/py4kbp/every_website_builder_in_history/",
        "num_comments": 121,
        "comments": [
            {
                "body": "[deleted]",
                "author": null,
                "score": 126
            },
            {
                "body": "Lol, I tried my best.",
                "author": "rylandking",
                "score": 87
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 80
            },
            {
                "body": "For Wix, I'm fairly sure it wasn't until later on that the builder could make HTML5 sites. Before that, all sites were Flash based.",
                "author": "DuckGoesShuba",
                "score": 54
            },
            {
                "body": "Still an interesting post regardless",
                "author": "GusRuss89",
                "score": 46
            },
            {
                "body": "The problem isn’t so much the making of, but visibility. Stumbleupon and digg helped with the discovery of indie content. Now that’s gone.",
                "author": "competetowin",
                "score": 33
            },
            {
                "body": "Netscape Composer, 1997. Loved it when that came out, though I still preferred to just use UltraEdit to edit the source, especailly since it could Open/Save directly to FTP.",
                "author": "greg8872",
                "score": 30
            },
            {
                "body": "Definitely not an exhaustive list. I first hand coded HTML with HotDog Pro (released in the mid-90s).",
                "author": "RabSimpson",
                "score": 29
            },
            {
                "body": "Yeah, definitely not in 2006. HTML5 wasn't even released until 2008. I first started learning HTML in 2009, and all the tutorials were still dealing with 4 because browser support was still so minimal for 5.",
                "author": null,
                "score": 27
            },
            {
                "body": "Really appreciate the format of this post",
                "author": "sevnollogic",
                "score": 22
            },
            {
                "body": "It's quite similar to grocery stores. We have huge Walmart style supermarkets that are just a platform for selling goods (content) bought from other producers. Anyone can build their own little lemonade stand (assuming law allows) but you'd need to learn a bit of woodworking or something. Or pay Ikea for an easy to assemble kit. But the biggest problem is not really building a place to sell, but rather getting enough people to be interested. Your local produce stand will never be as popular as a supermarket.",
                "author": "grumd",
                "score": 21
            },
            {
                "body": "Great post",
                "author": "giggle_shift",
                "score": 14
            },
            {
                "body": "GNNPress/AOLPress was decent at the time.\n\nFrontpage was pure garbage. Hated how it would insist on changing my Javascript and HTML to non-standard code.",
                "author": "TheVoicesOfBrian",
                "score": 13
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 13
            },
            {
                "body": "SoftQuad HoTMetaL",
                "author": "ishydee",
                "score": 11
            },
            {
                "body": "Cool post. Yahoo! SiteBuilder was pretty big too",
                "author": "jokullmusic",
                "score": 10
            },
            {
                "body": "Fucking miss FreeWebs",
                "author": "david_ranch_dressing",
                "score": 9
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 9
            },
            {
                "body": "You define your own headings and don't use h1, h2, etc? You're a barbarian.",
                "author": "fuzzy40",
                "score": 8
            },
            {
                "body": "> I like how proper HTML tags have been in place 30 years ago but at present day designers and devs (me, admittedly) still define our own text headings in CSS.\n\nWhat the actual fuck? Do you not actually know HTML? I see this shit a lot but have never come across someone that admits to it. I'm not joking: knock this fucking shit off. This is the same insanity of reimplementing every browser feature with JavaScript, except worse in every way.",
                "author": "giantsparklerobot",
                "score": 8
            },
            {
                "body": "Not really. \n\nIf you're builiding a basic site for a client, building it in something like Wix or Wordpress is easy money. Setting  them up with a site based on a modern framework like React or Angular gives you no real advantages if they just want a basic website.",
                "author": null,
                "score": 7
            },
            {
                "body": "Can't forget Kompozer (later renamed BlueGriffon), the open source alternative to Dreamweaver.\n\nI built my first \"real\" website in that (Geocities and Angelfire excluded).",
                "author": "fuzzy40",
                "score": 6
            },
            {
                "body": "<MARQUEE>Panic! <IMG SRC=\"small-people.gif\" ALT=\"Some small people with their hands in the air running around in panic\"></MARQUEE>",
                "author": "Noch_ein_Kamel",
                "score": 6
            },
            {
                "body": "Don’t forget Web-Rings, the desolate street-gangs of the post-apocalyptic information super-highway",
                "author": "psyfry",
                "score": 6
            },
            {
                "body": "When did we stop writing tags in SCREAMING case?",
                "author": null,
                "score": 5
            },
            {
                "body": "I mean sure you could never get everything into this list but how can you have BBEdit but not Homesite on this list?",
                "author": "IllustriousEchidnas",
                "score": 5
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 5
            },
            {
                "body": "Thanks!",
                "author": "rylandking",
                "score": 5
            },
            {
                "body": "This man right here understands the problem quite well. Its well said.",
                "author": "OfficeSpankingSlave",
                "score": 5
            },
            {
                "body": "List isn't even remotely close to compete.",
                "author": "onlycommitminified",
                "score": 4
            },
            {
                "body": "and all of them suuucked.",
                "author": "Dangerous_Biscotti63",
                "score": 4
            },
            {
                "body": "It’s as easy to create a website today as it was 20 years ago. Just because things like AWS are popular doesn’t mean you need them. You just need a computer with some HTML files and a domain name. Really, what is getting in anyone’s way of doing that?\n\nIf you want a dynamic e-commerce app with UI animations and auto-scaling servers, yea it’s going to take a bit to set that up.",
                "author": "editor_of_the_beast",
                "score": 4
            },
            {
                "body": "My direct Web dev pipeline was:\n\nMySpace > Blogger > FreeWebs",
                "author": "scarletdawnredd",
                "score": 4
            },
            {
                "body": "is wordpress really considered a site builder ?",
                "author": "s3rila",
                "score": 3
            },
            {
                "body": "Loved me some dreamweaver, that stuff was so cool.",
                "author": "DistChicken",
                "score": 3
            },
            {
                "body": "Good Dog!",
                "author": "Not-original",
                "score": 3
            },
            {
                "body": "Yep, I was gonna comment the same thing. You could make some pretty interesting flash sites.",
                "author": "TwilightGraphite",
                "score": 3
            },
            {
                "body": "Np!",
                "author": "rylandking",
                "score": 3
            },
            {
                "body": "XHTML 1.0.",
                "author": "RabSimpson",
                "score": 3
            },
            {
                "body": "> Some of the most popular website builders in history\n\nI enjoyed it! Some good (i.e. horrible) memories of the previous ones. Mmm table soup",
                "author": "Rainbowlemon",
                "score": 3
            },
            {
                "body": "Sounds like it's terrible for accessibility to use non-standard tags",
                "author": "kamomil",
                "score": 3
            },
            {
                "body": "Haha I made my first site on freewebs. Even got a free .tk domain name instead of the freewebs one lol\n\nI wish I could see what it looked like now, it was truly awful in my memory",
                "author": "POTATO_IN_MY_DINNER",
                "score": 2
            },
            {
                "body": "Amazing post dude, good job",
                "author": null,
                "score": 2
            },
            {
                "body": "Very cool! One small correction - Wix was originally created to make Flash websites, but then pivoted to HTML5 after Flash was deprecated. When it was first created in 2006, HTML5 didn't exist.",
                "author": "IanSan5653",
                "score": 2
            },
            {
                "body": "Great post. Would love to see more of this format",
                "author": null,
                "score": 2
            },
            {
                "body": "Netscape 3.0 Gold had a great editor tool. That's how I started. 95 maybe?\n\nEdit: Geocities didn't have wysiwyg until later. I remember when they supported in browser uploads. But you still had to edit the files locally.",
                "author": "blaine-garrett",
                "score": 2
            },
            {
                "body": "vercel.app is a great one. it used to be called zeit. but it is developer focused.",
                "author": null,
                "score": 2
            },
            {
                "body": "Very true. I had a hard time getting a screenshot of early Wix because it was all Flash and I obviously don't have the right extensions/plug-ins to view it",
                "author": "rylandking",
                "score": 2
            },
            {
                "body": "I remember using Frontpage to draw tables back when that was the only way to lay things out.",
                "author": null,
                "score": 2
            },
            {
                "body": "Here you go\n\n> \\",
                "author": "eyebrows360",
                "score": 2
            },
            {
                "body": "Thank you for sending me down memory lane. I can totally relate!",
                "author": "david_ranch_dressing",
                "score": 2
            },
            {
                "body": "Mine was similar\n\nMySpace > quit for 10 years > JavaScript can do what?! > React",
                "author": null,
                "score": 2
            },
            {
                "body": "OMG web rings. I wish all that Sh\\_! came back!",
                "author": "simonayriss",
                "score": 2
            },
            {
                "body": "hahaha well feel not alone. I just can't get myself on those GUI fake frame slider things. I don't care what people say: they pump out crappy hard to support or upgrade code. just not all that brilliant on a production level.",
                "author": "simonayriss",
                "score": 2
            },
            {
                "body": "It is fucking terrible for accessibility. It's also terrible for spiders and microbrowsers (e.g. previews in messaging apps). It's just an all around stupid practice. If you're going to define your own headings and such in CSS, you might as well just *use* real tags and override style defaults and do whatever dumb shit the \"designers\" want with them.",
                "author": "giantsparklerobot",
                "score": 2
            },
            {
                "body": "Gatsby.js for example can pre-load and cache other pages from the links on the website. And instead of loading new page, Javascript just replaces current html/css content with cached one. Thanks to that, pages can load instantly, skipping HTTP request in raw website.",
                "author": null,
                "score": 2
            },
            {
                "body": "What the Flock happened to NetOjects Fusion??\n\nI Beta tested or had a Beta release of Dreamweaver .7 or 1 and around that time according to MacWorld it was pretty much at that time \\~ Dreamweaver OR NetObjects Fusion. Take your pick. AND. People were shying away from Dreamweaver because it was more \"complicated\" and \"harder to learn.\" NetObjects Fusion was a bit more drag and drop. \n\nAt the time \\~ That was the fork in the road. I'm sure there is an old copy of MacWorld somewhere. My friend and I where like, \"O.K., which one are you going to invest time and bet on??\" at the time. :-) I said Dreamweaver. Bit the bullet and sure enough it became the predominant web software at the time. I used to go to MacWorld and go to the Macromedia parties. I miss some of the old Macromedia software. :-)",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "Here's my question though:   \nIs it me or are universal coding standards getting thrown out the window?   \nIt's become more of a We got all this to work: But the code is total donkey kong.   \n?Someone builds a site for a company then bails.  then the company want to scale or redo the site. A lot of people don't know the difference of decent code vs bad code and really don't care.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "Where's neopets XD",
                "author": "RickInAShoneys",
                "score": 1
            },
            {
                "body": "Great post. Here is a window into my beginnings online. \n\n1997-98 , our library’s iMac lab had Netscape , I somehow found composer . I made something in it, I quickly wrote down what was in the address bar and hoped it would appear on my computer at home. Sadly no. This would not be the last time I was disappointed as a freshman in HS. \n\nEventually we got a PC at home, I dove right in. Evaluating Geocities, Angelfire, and finally homestead.  Ah yes, that would be the place to start my love of creating on the web. \n\nMany of us grew up in the Golden age of the internet. My children will never know that true joy. When they want to make a website, their friends tell them to use a free Wix site or something.  They so far have no desire to know how it actually works. \n\n ¯\\\\_(ツ)_/¯  I sometimes wish for those simpler days, but I also really like not having to deal with tables, and getting to use CSS3 .",
                "author": "neoneddy",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "My first job out of college was using BBEdit to edit archived articles for placement on various magazine companies.",
                "author": "JeffTS",
                "score": 1
            },
            {
                "body": "[ Moved to Lemmy ]",
                "author": "Quartent",
                "score": 1
            },
            {
                "body": "Ah man I made tons of dumb sites with iWeb that was bundled in iLife at Macworld Conference & Expo on January 10, 2006",
                "author": null,
                "score": 1
            },
            {
                "body": "Expages belongs on this list",
                "author": "doolijb",
                "score": 1
            },
            {
                "body": "Every website builder in history but doesn't include Apple iWeb? Everyone had it as it was included with iLife. Man, that thing had limited templates but it could make some cool looking sites.",
                "author": "shellwe",
                "score": 1
            },
            {
                "body": "Artisteer",
                "author": "detectretract",
                "score": 1
            },
            {
                "body": "Man I like how I started learning HTML only a couple years after it was invented while I was in High School. I really wish I could remember some of my old Geocities and ISP host URLs so I could look and see what a shit show my web pages were.",
                "author": "zer0number",
                "score": 1
            },
            {
                "body": "Webnode is another online builder",
                "author": "milosh-96",
                "score": 1
            },
            {
                "body": "I still use BBEdit. I can’t remember what version it’s on now. It’s not my main IDE but it’s a solid app.",
                "author": null,
                "score": 1
            },
            {
                "body": "Great job. And wow YC has a lot of site builders in their portfolio.",
                "author": "Gyro_Wizard",
                "score": 1
            },
            {
                "body": "Damn. Was BBEdit really created in 92? I remember using that in college",
                "author": "el_diego",
                "score": 1
            },
            {
                "body": "I remember using Greymatter (created 2000) and Front Page 😭",
                "author": "lindylindy",
                "score": 1
            },
            {
                "body": "don't forget the mozilla suite",
                "author": "bregottextrasaltat",
                "score": 1
            },
            {
                "body": "What a throwback. I built my first website out of a tutorial in a magazine in about '96 and I remember using Dreamweaver, switching between text and GUI mode to work out how everything worked. Through the WordPress years and all the way to the modern JAMstack. Great post OP, thanks.",
                "author": "telechef",
                "score": 1
            },
            {
                "body": "It's mad how similar the UIs are.\n\nSquare Space wouldn't look that out of place now and is 18 years old.",
                "author": "35202129078",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "lol - definitely not everyone of 'em by a long, long, way. HotDog Pro and NetObject Fusion spring to mind. And if you're going to put Wordpress in there, then why not PHP Nuke?",
                "author": "repomonkey",
                "score": 1
            },
            {
                "body": "This is a nice trip down memory lane.\n\nOne that I think needs to be mentioned is GoLive Cyberstudio, that was eventually bought by Adobe and sold as GoLive. This was pretty prominent in the marketplace, and it was a contest between GoLive and Dreamweaver until Adobe bought Dreamweaver and eventually dropped GoLive.",
                "author": "ADeweyan",
                "score": 1
            },
            {
                "body": "So basically 26 years passed since Frontpage 1.0 and web devs are still around. Don't know why people panic about web devs getting obsolete with alle the page builders or \"AI\".\n🤷",
                "author": "imnotabot20",
                "score": 1
            },
            {
                "body": "Nice research. I am confused nowadays, we have people talking about  no code, low code, enough code, too much code, Ai generated code. We are just spoilt for  choice",
                "author": "ui-dev",
                "score": 1
            },
            {
                "body": "Anyone remember TopStyle Pro? It was one of the few editors that kept up to date with all of the CSS selectors/properties during the transition from CSS 1 to CSS 2.",
                "author": "zodby",
                "score": 1
            },
            {
                "body": "I've been around long enough to remember most of these.\n\nInterestingly, I started with a plain text editor (Notepad) and am finishing with a text editor (VS Code). Today, I really can't imagine working with any kind of site builder or WYSIWYG editor and I'm right back to Day One with a text editor and a browser next to each other.",
                "author": "fultonchain",
                "score": 1
            },
            {
                "body": "Thanks for the long helpful list... motivating seeing how successful many of the creators were in the end.",
                "author": "MMaurice256_MMTheDev",
                "score": 1
            },
            {
                "body": "Funny how a bunch of these website builders originated in a dorm room at the University of Maryland.",
                "author": "LuminousEntrepreneur",
                "score": 1
            },
            {
                "body": "Like someone else mentioned, a lot of it is to do with exposure now. Haley's escapes in Halt and Catch Fire brought me the feels, but those times are never coming back because users have been conditioned out of exploring.",
                "author": null,
                "score": 1
            },
            {
                "body": "hahahahahaha. I remember that. got me a laugh",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "Loved HotDog",
                "author": "tylersavery",
                "score": 1
            },
            {
                "body": "I friggin loved UltraEdit. Seems insane to think how often I was just editing prod in a text editor but it was so easy and fast. I hate release processes though I acknowledge their necessity and utility.",
                "author": "abeuscher",
                "score": 1
            },
            {
                "body": "hahahahahahahahahahahaha omg ahhhhhh",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "And of all eyes he could have used, a reptilian, lizard-like eye",
                "author": "jmerlinb",
                "score": 1
            },
            {
                "body": "Yeah, I like using it for creating responsive mockups, since it is so easy to use and produces a more representative output of what we want in a final design compared to other UX mockup tools.",
                "author": "rothnic",
                "score": 1
            },
            {
                "body": "Thanks, dude. Much appreciated",
                "author": "rylandking",
                "score": 1
            },
            {
                "body": "hahaha",
                "author": "rylandking",
                "score": 1
            },
            {
                "body": "backslash is an escape character for reddit. If you want to use backslash, write double backslash",
                "author": null,
                "score": 1
            },
            {
                "body": "2004",
                "author": "DeusExMagikarpa",
                "score": 1
            },
            {
                "body": "agreed. I remember somewhere on GeoCities I made a self promo website and I made it in html and animated gifs all black background and stars and like a neon green lab. It was so cool. I think my first real website. Years later someone asked me at an interview. What was your favorite website you ever built? I said I dont really have a favorite. bad answer but. Then I remember this cool neon lab site on GeoCities. Stuff was fun back then.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "About 14.",
                "author": "Dencho",
                "score": 1
            },
            {
                "body": "Yeah, I was suprised how many folks still use BBEdit!",
                "author": "rylandking",
                "score": 1
            },
            {
                "body": "True, true. With my research I didn't find PHP Nuke, but I did find Wordpress. ;-)",
                "author": "rylandking",
                "score": 1
            },
            {
                "body": "you'd think we'd all be driving ferraris by now. underqualified maybe. AI can code currently. It can't replace 26 years of experience. Especially if you've advanced greatly along the way. they still put people \\[2\\] in the front of planes still.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "i think the current field is lost. too many choices too many ways to skin a cat. but only a handful of right ways for the job.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "exactly. feels full loop.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "believe it or not. after all this time. just like way back. a basic stupid mostly text and a few basic graphics will still rank best over any other platform or cms. At one point back all the OLD single html pages ranked over everything else and came up over well supported stuff. I feel like all this crap has gone full circle. Honestly the simpler the better. A few backlinks basic html pages some soc media and the right product. Corporations waste ad money they dont know any better. The web is broken.\n\nI even like the old bbs days. At least you could upload info and people would read or download info. no ads no click bait no fluffer bull. \n\nwhats up with web3.0? maybe hopefully eventually better.\n\nheres one: AI - Quantum Computing - WEB3.0\n\nWhere are we on that? Think about it. It's like so far the Earth really has been FLAT as believed and now as we sail over the edge,.. well. Take the red pill down the rabbit hole and all bets are off.\n\nWhen that happens maybe we can bring Yahoo! and GeoCities!",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "true. just a html file and some ranking - then once they get there convincing, a great product or service, and a call to action goal or define what it's end goal is.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "OMG. I made some pretty cool stuff in Flash. And around that time there were some really really cool Flash sites for tutorials, downloads, and community etc.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": ">  I hate release processes though I acknowledge their necessity and utility.\n\nI'm in the same boat, especially being a solo developer. I have tired many times to switch, but very hard to adapt without actively using it for everything everyday for me. I learn best by being immersed in it.  \n\nThe only reason I stopped using UE was when I splurged and bought Zend Studio version 3 I think it was. I had license up to version 6, but 6 switched from their own Java based IDE to a version based off of Eclipse, which was bloated and slow as crap so I stayed at 5.5, well beyond... All the way into Windows 7 where the java interface broke and had to be rigged. Finally switched to PhpEd for a few years, then found PhpStorm. Doubt I'll ever switch again.",
                "author": "greg8872",
                "score": 1
            },
            {
                "body": "For nostalgic reasons. I would never use a website builder nowadays.",
                "author": "david_ranch_dressing",
                "score": 1
            },
            {
                "body": "Just because I am inside this conversation at my current gig - why do you not use Webflow in prod? What are the downsides?",
                "author": "abeuscher",
                "score": 1
            },
            {
                "body": "I'd always assumed it came out much more recently since I only heard about it after they went in hard with YouTuber ads.",
                "author": "DuckGoesShuba",
                "score": 1
            },
            {
                "body": "Web3.0 is a fake con artist made term that was popular for a month and then rightfully died out",
                "author": "grumd",
                "score": 1
            },
            {
                "body": "You can use it in prod for simple websites.\n\nI wouldn't use it for 2 reasons though:\n\n1. Writing code is faster, than scrolling in editor through all the features and attributes, once you master html/css skills.\n\n2. There are now technologies for faster loading of a website than static html/css pages\n\nIn summary, great tool for designing and prototyping, not the best choice for a final product.",
                "author": null,
                "score": 1
            },
            {
                "body": "We had an existing custom php platform being used, rather than being able to start from scratch. We also have a much more complicated faceted search functionality backed by elasticsearch that webflow can't come close to replicating.",
                "author": "rothnic",
                "score": 1
            },
            {
                "body": "I really didn't mind the 5 years I spent doing mom and pop sites with dotnetnuke. Yea it's not great if you're needing to do something complex. But being able to throw up a site and a basic skin, as well as install a few modules for common functionality like an image gallery, wasn't bad at all. It was affordable too.",
                "author": "andrewsmd87",
                "score": 1
            },
            {
                "body": "Someone do it. bring it back and call it Web4.0. hahahahahaaha! Sign me up",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "Interesting opinion. I’m not saying you are wrong. There are still many people around who are still putting time into the realm. \nFake or not. I think the main point is not so much the name or whether it takes off, but essentially the functionality behind it where: a community is dialed in on a different setting and there is less traceability. This is nothing new by far. But if people did jump over or even use something else more secure or less traceable then the rules might change a bit.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "What's faster than html + css?",
                "author": null,
                "score": 1
            },
            {
                "body": "omg wtheck memories",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "Web3 appeared from the cryptocurrency bubble when blockchain was the buzzword of the day and everything ran on hype. Pyramid schemes like NFTs, where the main value of a product is its theoretical future higher value, rely on popularity, so Web3 was a good way to generate even more hype. It hasn't found much real usage and was mostly confined to the crypto bubble sphere. Promises of a decentralized web were always a fairytale and didn't prove to be viable or scalable.\n\nCrypto itself was a really cool idea with real-world usage (like buying illegal goods lol), but unfortunately the price of bitcoin was so volatile that all of this huge industry turned into a gambler's honeypot. Now all you see about crypto is con artists pushing scam schemes.",
                "author": "grumd",
                "score": 1
            },
            {
                "body": "Decentralized web is very viable doable and scalable. Whether you call it Web3.0 or popcorn. Crypto aside from investment is still a viable way of exchanging currency value. It is in fact used as such for many goods. Whether it continues or involves into a different form of payment it probably won’t be going away.",
                "author": "simonayriss",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "i did not say there are nice alternatives for every usecase, but i know no one that enjoyed working with those tools long term. even if there is an initial honeymoon with some of these builders there is always a break down from when it becomes hell.",
                "author": "Dangerous_Biscotti63",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1725090125.0,
        "title": "I created an open-source social media manager",
        "author": "sleepysiding22",
        "id": "1f5hwpe",
        "selftext": "This social media scheduling tool is similar to traditional ones: Buffer, Hootsuite, SproutSocial, etc.\n\nKey features:\n\n* Schedule for 9 social media platforms (Threads, Pinterest, Facebook, TikTok, Reddit, LinkedIn, Dribbble, YouTube, Instagram.)\n* Basic analytics for almost all the social media platforms.\n* AI Features: Copilots, AI Auto-complete, Canva-like editor.\n* Team support: Invite your team members to manage social medias.\n\nTech stack:\n\n* NX (Monorepo)\n* NextJS (React)\n* NestJS\n* Prisma (Default to PostgreSQL)\n* Redis\n* Resend (email notifications)\n\nFully open-source (Apache-2)\n\nOpen Source: [https://github.com/gitroomhq/postiz-app](https://github.com/gitroomhq/postiz-app)",
        "score": 268,
        "url": "https://www.reddit.com/r/webdev/comments/1f5hwpe/i_created_an_opensource_social_media_manager/",
        "num_comments": 65,
        "comments": [
            {
                "body": "Prisma team member here... gonna ask the team to give this a try!   \nGreat work!",
                "author": "gniting",
                "score": 40
            },
            {
                "body": "It looks really good, I'll give it a try. Have you thought about dockerizing it?",
                "author": "xavicx",
                "score": 16
            },
            {
                "body": "Mobile version of your site could use some polish, but it's a cool project.\n\nIf I knew CSS I would help with that",
                "author": "Morasiu",
                "score": 16
            },
            {
                "body": "Very soon!",
                "author": "sleepysiding22",
                "score": 15
            },
            {
                "body": "Awesome!  \nPrisma is just awesome wouldn't have it any other way",
                "author": "sleepysiding22",
                "score": 13
            },
            {
                "body": "Maybe you can team up with OP on their product?",
                "author": "TheMarketingNerd",
                "score": 8
            },
            {
                "body": "I was building something similar 😭. Now I have to find something else",
                "author": "l0aft3r_",
                "score": 7
            },
            {
                "body": "Still looks cool :)",
                "author": "Morasiu",
                "score": 7
            },
            {
                "body": "Thank you! what should I fix?",
                "author": "sleepysiding22",
                "score": 6
            },
            {
                "body": "Haha, you can still build it!",
                "author": "sleepysiding22",
                "score": 6
            },
            {
                "body": "❤️",
                "author": "sleepysiding22",
                "score": 6
            },
            {
                "body": "Do you manage to get analytics from LinkedIn?  I've been asked for that by my company many times, but it always looked like they really don't want you to even get basic post reaction counts outside their annoying UI.",
                "author": "hennell",
                "score": 5
            },
            {
                "body": "To get analytics from LinkedIn (for a personal profile), you need \"r\\_member\\_social\". this is not available anymore, at least for small players like me. I think companies like Buffer and Hoosuite got this permission.\n\n[https://stackoverflow.com/questions/54777892/how-to-get-r-member-social-permission-with-linkedin-share-api](https://stackoverflow.com/questions/54777892/how-to-get-r-member-social-permission-with-linkedin-share-api)\n\nYou still can get pages analytics :)",
                "author": "sleepysiding22",
                "score": 5
            },
            {
                "body": "it's actually pretty simple check this out:\n\n[https://docs.gitroom.com/providers/how-to-add-provider](https://docs.gitroom.com/providers/how-to-add-provider)",
                "author": "sleepysiding22",
                "score": 5
            },
            {
                "body": "Thanks! 🙏",
                "author": "gniting",
                "score": 5
            },
            {
                "body": "Gotcha, so you mean the \"app\" side not the marketing website.\n\nyup, def a lot of fixes required :)",
                "author": "sleepysiding22",
                "score": 5
            },
            {
                "body": "I don’t even have a company that requires social media management and I wanna use this",
                "author": "uncleluu",
                "score": 4
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 4
            },
            {
                "body": "Looks awesome, random question but have you ever been able to figure out posting mixed video and images on Facebook using their API? I've played around with this stuff in the past but never managed to make it work properly (just asking as the GIFs on the repo don't allude to video support (yet?))",
                "author": "mjoq",
                "score": 3
            },
            {
                "body": "Thanks! I’ll be watching 😁 I appreciate you building this. Hopefully it gets the recognition it deserves!",
                "author": "SpellboundSagaDev",
                "score": 3
            },
            {
                "body": "That's great, how much time takes to build the this project?",
                "author": "Viswanathvb",
                "score": 3
            },
            {
                "body": "Great work! Does it support twitter threads too?",
                "author": "manniL",
                "score": 3
            },
            {
                "body": "Looks really cool",
                "author": "valvenisv2",
                "score": 3
            },
            {
                "body": "Well done :)",
                "author": "Specialist-Pitch3704",
                "score": 3
            },
            {
                "body": "No X?\n\n(p.s. the Get Started links to anouther app )",
                "author": "phpadam",
                "score": 3
            },
            {
                "body": "What I want is to create a time slot for posts. If no post is allocated to that time slot, it automatically selects one from a backlog library I previously created.\n\nI would be able to create categories to group posts, and it rotate through the categories (so I'm not automatically posting about the same thing all the time). It would then rotate through the posts within the category, so new variants are chosen each time.\n\nJust putting it out there, as I can't see it in any SMM. I did start to DIY a project last weekend, but Twitter API docs are terrible.",
                "author": "phpadam",
                "score": 3
            },
            {
                "body": "Can you write more than 280 characters in X? I tried some of the other platforms you mentioned and they don't have that option. It's because of the X API but I wanted to ask in case you found a workaround or maybe they changed their API now?",
                "author": "brozium",
                "score": 3
            },
            {
                "body": "This is awesome! I will try this. Thanks for sharing!",
                "author": "blackbrandy",
                "score": 3
            },
            {
                "body": "This is great!",
                "author": "Adorable_Monitor_187",
                "score": 3
            },
            {
                "body": "Looks cool, what would your pitch be to social media managers to convince them to use this vs the other platforms?",
                "author": "Lowerfuzzball",
                "score": 3
            },
            {
                "body": "Finally, an open-source tool for social media heroes without the corporate price tag! ✨ #GameChanger",
                "author": "Strange_Media439",
                "score": 3
            },
            {
                "body": "I would like to learn from you, if you are willing to take on that challenge",
                "author": "Inevitable_Ebb9450",
                "score": 3
            },
            {
                "body": "I just came through your project, now using it full time. I love it! I will be doing some contributions, to help it grow. Also, I love how you havent restricted anything in the self-hosted version. \n\nThank you so much.",
                "author": "cryptaryt",
                "score": 3
            },
            {
                "body": "From what I remember it's not a problem, I don't see that I limited the posting :)",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "🚀",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "I think around 3 months if you put all the gaps where I didn't do anything haha",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "Yes, but only in the self-hosted version (not the hosted version), X prices are insane :)",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "There is (just only in the self-hosted) as their pricing makes no sense :)",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "Yes that's a major feature that will come soon.\n\nTime slots on a \"day basis\" + categorizing",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "Anything to help :)",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "Log in page for the platform for example",
                "author": "Morasiu",
                "score": 3
            },
            {
                "body": "Yeah, have seen that. Is it against the T&C for users to bring there own Dev Account into the hosted system?",
                "author": "phpadam",
                "score": 3
            },
            {
                "body": "Yes, please.",
                "author": "phpadam",
                "score": 3
            },
            {
                "body": "They've (X) been a mess for a while now. Thanks for the quick reply, I'll check out the self-hosted version this week. Cool project :)",
                "author": "brozium",
                "score": 3
            },
            {
                "body": "I can take a look and maybe open an issue next week. I’m  at a convention tik Tuesday but I’d love to give the UI some love",
                "author": "chrisonetime",
                "score": 3
            },
            {
                "body": "Awesome, I recently added a light mode, it looks terrible, you can have a look there :)",
                "author": "sleepysiding22",
                "score": 3
            },
            {
                "body": "I’m currently using PostBoost and happy with that but it looks really good.",
                "author": "mr_white_here",
                "score": 2
            },
            {
                "body": "Squizz Digital Signage team checking in. This is extremely useful to us!",
                "author": "SKPAdam",
                "score": 2
            },
            {
                "body": "Thank you so much!",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Thank you so much!",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "❤️",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Actually they have just released the higher limit in their API, but I haven't checked it yet as in the hosted version I don't support X because their pricing is insane :)",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Thank you so much!",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Thank you so much!",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "AI features and transparency.\n\nAlso you can self-host, in the future there will be services to help you with that.",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "🚀",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "🙏🏻",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Cool, hope it can help!",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Yeah, sadly. Wish the old API would be still a thing :/",
                "author": "manniL",
                "score": 2
            },
            {
                "body": "Me too!",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Oh I have no idea, I think it's ok but it's a big architectural change :D",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Thank you :)",
                "author": "sleepysiding22",
                "score": 2
            },
            {
                "body": "Hey so I really want to install your app to check it out however im stuck in installation....i have a question, would you mind helping me if you can?",
                "author": "tarah7579",
                "score": 2
            },
            {
                "body": "Do you still have to pay a fee if you self host?",
                "author": "alamadrid19",
                "score": 1
            },
            {
                "body": "That looks amazing. How were you able to build such an amazing product in 3 months?  \nHow many devs worked on this apart from yourself?",
                "author": "Quieter22",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757058219.0,
        "title": "Where to host constantly running script?",
        "author": "Own_Goose_7333",
        "id": "1n8yzkt",
        "selftext": "Hi everyone, I'm a C++ developer working on a chess engine. I've set up a lichess bot account for my engine, and I've managed to get it running from my machine using a Python script that lichess provides to connect the engine executable to lichess's API. Next I'd like to get this running on a server somewhere so that my poor MacBook Air doesn't have to be running constantly.\n\nBasically I just need to run this Python script on a cloud machine. Everything I can find about web dev seems geared toward creating sites or web apps following the frontend/backend/database paradigm. \n\nMy question is, what platforms allow you to just \"run some code in the cloud\"? Are there any platforms that provide free or cheap options for something like this? Would putting this into a Docker container be my best option?\n\nThanks in advance for any advice!\n\nEDIT:\n\nThanks for the responses, it sounds like a VPS is what I'm after. It looks like I can get away with DigitalOcean's $4/month option.\n\nSo basically I ssh into the VPS, copy over my engine executable, then start the script/Docker container?",
        "score": 21,
        "url": "https://www.reddit.com/r/webdev/comments/1n8yzkt/where_to_host_constantly_running_script/",
        "num_comments": 37,
        "comments": [
            {
                "body": "$5 a month VPS, digitalocean, linode, hetzner etc.\nsimple to set up\n\non digitalocean for example, you spin up what they call a droplet or whatever and its a linux instance, you can ssh into it via terminal and git clone your project and run it, it can be docker or not it's your choice.",
                "author": "qzkl",
                "score": 16
            },
            {
                "body": "Look for VPS hosting, there are many providers with really cheap options. What you get is basically a naked server where you can install whatever you need, in your case just Python and your script.",
                "author": "bcons-php-Console",
                "score": 13
            },
            {
                "body": "Lambda sounds like the worst solution for constantly running  code.",
                "author": "vexii",
                "score": 8
            },
            {
                "body": "\"Where to host constantly running script?\"  \n\n  \n\ndid you read anything?",
                "author": "vexii",
                "score": 8
            },
            {
                "body": "You can a get a cheap VPS and run your app with docker or systemd. Creating systemd units is pretty easy.",
                "author": "Own-Bug606",
                "score": 5
            },
            {
                "body": "Render.com or digital ocean",
                "author": "ZachVorhies",
                "score": 3
            },
            {
                "body": "From what I'm reading, you don't need a cloud or a vps.\n\nYou can run your script on any extra old computer at your place (maybe a raspberry pi?). Systemd unit files are easy and automatically handle restarts on boot and all that stuff.\n\nSuper doable!",
                "author": "w-lfpup",
                "score": 3
            },
            {
                "body": "VPS",
                "author": "vexii",
                "score": 2
            },
            {
                "body": "Grab a minipc from Amazon for 100 bucks and plug it in next to your router.\n\nThe cloud isn’t worth it. ",
                "author": "AnimalPowers",
                "score": 2
            },
            {
                "body": "Yea I bought a mini pc, Cloudflare tunnel, 16gb n150 for $200. Runs ai agent workflows and other automations",
                "author": "Glass-Combination-69",
                "score": 2
            },
            {
                "body": "What might also not be worth it is getting a DDoS attack on your network. If your software is properly secured with a service like Cloudflare this is probably fine, but the cloud is safer at your expense",
                "author": "Frograbbit1",
                "score": 2
            },
            {
                "body": "Allows you to ssh from anywhere and don’t need to port forward on your router. It’s great. Means if you move place I can still ssh in when it’s connected to a different wifi / cable and don’t have to change a thing. Just look up cloudflare tunnels. It’s free for me.",
                "author": "Glass-Combination-69",
                "score": 2
            },
            {
                "body": "So you didn't read the title or even the first sentence? OP is a c++ dev that is doing python.",
                "author": "vexii",
                "score": 2
            },
            {
                "body": "And you suggest a public lambda over a $3 VPS?",
                "author": "vexii",
                "score": 2
            },
            {
                "body": "While I enjoy working on my homelab and self-hosting services, I'll agree with other commenters: vps is the place to go. My first server(RIP) on DigitalOcean lived for almost 6 years and it taught me tonnes\n\nToday I use hetzner for VPS. Better pricing and EU operated",
                "author": "Cpcp800",
                "score": 1
            },
            {
                "body": "Your script is just the 'backend' in your searches.  Could you get away with the latency if running it server less as a lambda ?",
                "author": "taotau",
                "score": 1
            },
            {
                "body": "I am not sure.\n\nBut if you ever need something that runs for time to time then Github Actions is what I am using. I have it run at a specific time, and another test that runs whenever I am pushing to a specific repo.",
                "author": "TheDoomfire",
                "score": 1
            },
            {
                "body": "You could use Cloudflare Workers. Been using them for a while for such minor “constantly running“ projects. Ping me if you need any help setting them up.\n\nGoogle’s Cloud Run is also a good alternative",
                "author": "prvashisht",
                "score": 1
            },
            {
                "body": "Any cheap VPS can help you.",
                "author": null,
                "score": 1
            },
            {
                "body": "[PythonAnywhere.com](https://www.pythonanywhere.com/)",
                "author": "tealpod",
                "score": 1
            },
            {
                "body": "A DigitalOcean will be sufficient for more than just running the script :)",
                "author": "Alex_Dutton",
                "score": 1
            },
            {
                "body": "Not sure why you're searching for \"web dev\" ... assuming your script is not super CPU or RAM hungry you want a VPS (virtualized private server) often rebranded as a \"cloud server\" ... look at Digital Ocean, Linode, or low end box which is an aggregator of low-budget offerings",
                "author": "anonymous_subroutine",
                "score": 1
            },
            {
                "body": "Yes a droplet on DO will do the job, no question. Also a lot of other posibilities :)",
                "author": "Alex_Dutton",
                "score": 1
            },
            {
                "body": "\\+1 for using systemd if this is a simple script. You can always go and build something cooler and complex.",
                "author": "Alex_Dutton",
                "score": 1
            },
            {
                "body": "Self-hosting is great for development, but for production, a vps is the place to go. In the long run it will save you a lot of problems. :)",
                "author": "Alex_Dutton",
                "score": 1
            },
            {
                "body": "It's not running periodically or responding to webhooks, it actually does need to run perpetually. lichess's provided engine wrapper script allows users to challenge the bot, but will also send challenges to other bots, so it's constantly actively playing games.\n\nBesides, the way a chess engine works is that it accumulates state in its transposition table during a game, to help speed up repeated searches of positions encountered before. It would be incredibly inefficient to use webhooks to spin up a new engine instance every time the opponent makes a move.",
                "author": "Own_Goose_7333",
                "score": 1
            },
            {
                "body": "Tell me more about this cloudflare tunnel",
                "author": "AnimalPowers",
                "score": 1
            },
            {
                "body": "A really good point, I would still recommend a cloud provider over self hosting for production.",
                "author": "Alex_Dutton",
                "score": 1
            },
            {
                "body": "let's just agree to disagree.",
                "author": "vexii",
                "score": 1
            },
            {
                "body": "Railway",
                "author": "JackstonVoorhees",
                "score": 0
            },
            {
                "body": "Thanks for the clarification!\n\nIf you need to run a server then, indeed, function or lambda is not for you.\n\n\nIf you’re keeping a bunch of board positions in memory then I agree that will not work well, but there is more than one way to speed up searches for things so we can agree to disagree on the efficiency of the approach\n\nThat’s a lot of possible permutations just sitting eating RAM, but perhaps this is a different conversation\n\n:)",
                "author": "Locellus",
                "score": 0
            },
            {
                "body": "What the actual fuck?\n\nYes I read all that. I’ve written a chess engine in Java, what the shit does that matter? \n\nWhen I did it, it responded to moves. If no one moves for 20 minutes you don’t need a continually running engine you just need game state and the move….. when the move is made. Waste of money to keep the engine running when it is not being used \n\nI read the thing, seemingly the only one thinking about it….\n\nWould you like to continue this stupid argument or are we done?",
                "author": "Locellus",
                "score": 0
            },
            {
                "body": "If all you need is to respond, or to check for moves. Yes, lambda, not sure about public though. My suggestion was azure function app as that’s where I’m more familiar.\n\ne.g. An Android app or website that hosts chess games, where users make moves. \n\nFor the website (assuming this sub means something)\nReact front end on a static site, call a function app which has access to game state. No container required anywhere at all and you can play chess all day against people or a bot or whatever. \n\nIt was an alternate suggestion based on a couple of assumptions on possible uses, extrapolated from a short Reddit question… I can only assume you’re making similar extrapolations based on different assumptions as you’re so adamant I’m stupid.\n\nMore importantly, based on an architecture I’ve actually used… I built a working Android app in Java that did exactly this, when I wanted to pivot from my C++ knowledge to Java. \n\nSo, any further questions sunshine?",
                "author": "Locellus",
                "score": 0
            },
            {
                "body": "Ha. Yes, but the description explains it’s a game engine - to me that is not a chess server. The title is a summary, and the detail in the description describes something that does not need to be a server to function.\n\nIf I run a script every 15 mins, it’s continually running. \n\nI don’t know the language skills of OP… but I can read and interpret. They might have meant continual rather than constant. \n\nI think I did a reasonable job, in good faith of providing an alternative, and framed it with the context bounds it was appropriate in.\n\nCan’t believe I’ve had to explain that twice. ",
                "author": "Locellus",
                "score": -2
            },
            {
                "body": "You can create a Python function app on Azure (Lambda in AWS) and schedule it. \n\nContainer, sure, but intense. If it’s literally a script and you just want to run it regularly (it checks for moves etc), I’d put it in a function app. These are geared to respond to things like web service calls, so not for running a service.\n\nIf your script is following a flow and ending, this is how I’d do it. ",
                "author": "Locellus",
                "score": -5
            },
            {
                "body": "I agree, and specified that this is if their code is not constantly running…. Did you actually read OP description  or my response?\n\nIt’s not specified it’s constantly running or not… it’s a chess engine… plenty of scope for lambda to work, depends on what OP is doing.\n\nThought I’d offer an alternate approach to VPS as that’s literally what they asked for… “is Docker the best option?” \n\nAs always, best option depends on what you’re actually doing.",
                "author": "Locellus",
                "score": -9
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746603579.0,
        "title": "Head of Digital - Feeling burnt out.",
        "author": "TransportationIll872",
        "id": "1kgrn0e",
        "selftext": "Hey everyone,\n\nI’m in a “Head of Digital” role at a mid-sized company — but in practice, I’m the only technical person in a team full of editors and project managers from a traditional print publishing background.\n\nThey don’t understand what I do, and when I try to explain it, I’m met with, “it’s too technical for us.” My requests for support have been denied. So have my repeated requests for just one day working from home — even though others on the team get 1–2 days.\n\nMeanwhile, I’m expected to do everything.\n\nHere’s what I’m currently juggling — solo:\n\n\n---\n\nLive Web Projects:\n\n9 actively maintained sites, all built from the ground up — different tech stacks, different platforms, all coded by me.\n\nOne of these sites includes 70 client microsites, each with custom layouts, embedded video, content management, and API integrations — all custom built, supported, and maintained by me.\n\nCMSs include WordPress (ACF/CPTs), custom PHP/JS platforms, and Shopify.\n\nFrontend: HTML, CSS, JavaScript, (A myriad of libraries, in GSAP). REACT.\n\nBackend: PHP, REST APIs, custom CMS logic.\n\nHosting spread across Azure, custom VPS, cPanel, and various third-party platforms.\n\nAll devops, analytics, email deliverability, plugin troubleshooting — mine.\n\n\n\n---\n\nInfrastructure & Ops:\n\nLeading a CRM overhaul using a Zoho-style platform, coordinating with external consultants and stakeholders to restructure our entire workflow.\n\nHandling our cloud migration, including discussions with multiple IT vendors to scope and quote the move.\n\nWorking with global stakeholders — all different time zones, priorities, delays, and scope creep. Constantly waiting on sign-offs or missing content while being expected to “just make it happen.”\n\n\n\n---\n\nCreative & Support:\n\nWeb Video and image editing, producing marketing assets, thumbnails, clips, and more — because we have a limited digital team, aside from Head of design who is versed only in print press.\n\nFixing Shopify storefront issues, theme bugs, payment system errors, plugin clashes.\n\nCustomer support and bug-fixing, across all platforms.\n\nWas recently criticised for not also managing the company’s 7 social media channels — on top of all of the above.\n\nOh, and line managing and upskilling 2x video editors, who are often out on shoots and also no bandwidth.\n\n\n---\n\nConditions:\n\n£59K salary.\n\n1.5-hour commute each way. One day a week I lose money after paying for childcare.\n\nAsked for 1 WFH day (others get it). Denied.\n\nNo project manager, no devs, no QA. Just me.\n\nEvery time I raise concerns, I’m told “well, you’re Head of Digital — it’s your job.”\n\n\n\n---\n\nLast week, I was pushed again for a timeline on a low-priority site redesign — even though I’m flat-out launching, maintaining, and firefighting across everything else. I explained I couldn’t commit without finalised content and approvals. I was told, again, “it’s your responsibility to provide a date.” It honestly felt insulting.\n\nI used to enjoy this work. Now I feel like I’m set up to burn out and blamed for not doing more, when I’m already doing what should be the work of an entire team.\n\nSo:\nIs £59K for this workload even remotely reasonable? Or am I just burnt out and finally hitting a breaking point?\nReally appreciate any advice, solidarity, or honest takes.",
        "score": 66,
        "url": "https://www.reddit.com/r/webdev/comments/1kgrn0e/head_of_digital_feeling_burnt_out/",
        "num_comments": 53,
        "comments": [
            {
                "body": "You’re getting shafted the title don’t mean jack shit\n\nYou’re a one man show meaning no delegation or management - your next role won’t consider you for higher tier roles because you have no experience with management or leadership.\n\nYou’ll need to be frank and honest about your career expectations - are you expecting yourself to continue being an Individual Contributor or do you desire some leadership capacity in the future? Work towards that and if this company won’t do it for you then some other place may.\n\nEdit: it seems that they think head of digital = head of IT + head of Web + head of creative + head of marketing\n\nThe job scope is the problem. It’s too wide.\n\nEdit: take it as an opportunity to learn how to punch upwards. List the reasons why you need these things, build the business case, outline the value. Meantime start looking for other joints.",
                "author": "machopsychologist",
                "score": 85
            },
            {
                "body": "£59K feels grossly underpaid for these job requirements. You're not insane OP, this usually take a whole team to manage let alone 1 person. I don't like to be a negative nancy, but i'd be looking at other job openings. I'm around the same salary as you are and i'm a single backend developer in a team of 8 developers and we're responsible for like 3 websites.\n\nGet out before you lose your sanity.",
                "author": "bazeloth",
                "score": 56
            },
            {
                "body": "I’ve been in your shoes. Almost literally, I had to carefully reread to make sure you weren’t in my old role. They’re abusing you and wearing their technical ignorance like a suit of armour. Get on the job market asap. There’s a better life out there for you.\n\nI ended up taking a title cut to go to a large enterprise company. Now I get paid a lot more for a much narrower scope. With two young kids it’s been a life saver.",
                "author": "magnakai",
                "score": 40
            },
            {
                "body": "Btw no amount of money worth the burn out and the slowly crawling depression/anxiety, because at one point you’ll break and based on what you’ve said, they wont give a crap.",
                "author": "Tom-Dev-Bit",
                "score": 20
            },
            {
                "body": "Damn, they’re draining you dry.\nAt this point do you have any reason why you’re still working there? \nIm sure you could find a place where they’d pay you the same or even more while not sucking the life out of you.",
                "author": "Tom-Dev-Bit",
                "score": 16
            },
            {
                "body": "It sounds like you’re over worked & underpaid (depending where in the country you live).\n\nWorking one day a week at a loss and commuting 3 hours for the pleasure would be enough to push me out.\n\nI would take all the experience you’ve gained (and it sounds like a lot) and use it to land a better job.",
                "author": "Nerdpuff",
                "score": 13
            },
            {
                "body": "Location.. That's the kicker..London..",
                "author": "TransportationIll872",
                "score": 9
            },
            {
                "body": "With all these responsibilities, you have a great hand to play. All they need to hear is \"I'm out if you don't give me x,y,z\" and oh boy they will give them to you, but for this, they need to understand that they won't be able to find a replacement.\n\nAlso as Head of you shouldn't ask for permission to organize your department but rather tweak it how you see fit.  \nPlease do yourself a favour and   \n1) Find another job.  \n2) Once you find it, go and ask them everything you need to be happy in your current job.  \n3) If they don't give to you asap, then leave.  \np.s Don't fall for \"we'll review and let you know.\"",
                "author": "ThanosDi",
                "score": 8
            },
            {
                "body": "I was also in your shoes in the same industry. Eventually it got so bad I quit with a coworker and we started a dev company.",
                "author": "motivcreative",
                "score": 8
            },
            {
                "body": "Yeah... you need to look for a new job!",
                "author": "-kittrick",
                "score": 7
            },
            {
                "body": "Gross. Find somewhere new that values your skills.",
                "author": "Massive-Pear",
                "score": 7
            },
            {
                "body": "Sorry to tell you, but you are not „head of digital“ - you are „the guy who does everything digital“. „Head of“ usually means you are controlling.  you are doing everything yourself.\nThe reason for this could be a) you want to everything yourself b) there is not budget for employees or contractors so you have to",
                "author": "console5000",
                "score": 6
            },
            {
                "body": "This is ridiculous. Managing social media profiles is an entirely different skill to coding everything - pretty much unrelated.",
                "author": "tb5841",
                "score": 5
            },
            {
                "body": "That's a full teams work at my place. In fact, it's multiple teams. DevOps, full stack Devs, project management, Comms and marketing, BAs.\nYou are going to burn out if something doesn't change.",
                "author": "uvmain",
                "score": 5
            },
            {
                "body": ">  They’re abusing you and wearing their technical ignorance like a suit of armour.\n\nI could not have said this better. I cannot understand this proudness of ignorance, I have experienced it myself in the corporate world. NEVER underestimate people's capability to throw you under the bus to CYA",
                "author": "DirtyBirdNJ",
                "score": 5
            },
            {
                "body": "Think you hit the nail on the head. Head of myself, but managed by a none techy art director. It is a shoe string budget here, I even pay for my own tools. I forgot to mention - no sick pay, and we get 1 hour unpaid lunch, and 2x 15 min breaks - aside from that, not allowed to leave desks.",
                "author": "TransportationIll872",
                "score": 5
            },
            {
                "body": "> £59k is (sadly) a good perm wage in the UK, depending on where you are in the the UK.\n\nOP is in London, juniors can start at 45k in London and a senior can be well into the 100k. I have worked with contractors on 2k a fucking day.",
                "author": "dangerousbrian",
                "score": 5
            },
            {
                "body": "OK I have worked as a web dev in and around London for a long time and with that kind of experience, I am pretty sure you could get a new job offer within a month. Either at the same money for much less responsibility or a 20k bump in pay.\n\nI'd say the money is low but its the commute and lack of support that are killing you. I was job hunting last year and the vast majority offered pretty much full remote. I have 4 mandatory office visits a year and they pay for my travel and hotel.\n\nIf you dont have a job agent then you need one asap. I have used Oliver Bernard before and my last job was via thex4group.com. Tell them you want full remote and £80k a year and see what they come back with. There is a plenty in the market, i got a job in Feb with a AI startup doing some really interesting stuff with video editing.\n\nOnce you have some offers then you can choose to just bounce and leave your current job in the dust or go back and negotiate. Once you leave they will quickly learn they need at least 2-3 people to replace you.",
                "author": "dangerousbrian",
                "score": 5
            },
            {
                "body": "If you’re Head of Digital, I’ll assume you’re experienced enough to know your company’s taking advantage of you.\n\nFind another job and leave. The title sounds fancy, but not for the pay and the workload you’re dealing with.",
                "author": "stridered",
                "score": 3
            },
            {
                "body": "I do not understand how you even have time to support all of these sites never mind all of your other responsibilities.\n\nI am burnt out doing much less. Leave before you burn out.",
                "author": "postmodernclassic",
                "score": 3
            },
            {
                "body": "Definitely underpaid and overworked. You're doing the work of 4-5 people man, what's up with that? You're supposed to manage and administer the digital aspects of the business, not get in the mines yourself. Are they not willing to hire people under you?",
                "author": "BioEndeavour",
                "score": 3
            },
            {
                "body": "3hrs commute a day alone was enough to upset me",
                "author": "Dude4001",
                "score": 3
            },
            {
                "body": "The fact that this company is even letting you be the single point of failure for all this stuff tells me they are clowns. Collaboration and knowledge sharing across multiple people is key to the long term viability of digital services like the ones you run.\n\nThey don't own you and you can walk out the door. At that point they're screwed. Go and get another job.\n\nI ran a web team for a fairly well known UK e-commerce provider years ago, and my team got pared back to me and two mid-level devs. That was bad enough.",
                "author": "Paradroid888",
                "score": 3
            },
            {
                "body": "Congrats, you've become \"the tech guy\" who is atop the org chart but in terms of the support ratio, you're the small number under a larger group of people making your job impossible.\n\nThis situation compounds if you're also a people pleaser. My advice is to get out of there, even if your next role is not permanent. Do everything you can to build trust with any of your external clients and partners first. They may not even know what's going on. Your boss is abusive. Set clear boundaries when you exit. You got to where you are by way of your loyalty, and that instinct makes it harder to leave though it's 100% the best thing you can do for yourself. \n\nI stayed for too long on false promises that I'd get support. I held out hope for my coworkers, that they would unlock a way of understanding, if I only made myself more flexible to their needs. This was my pride getting in my own way.\n\nYou can do everything but learn it for them.\n\nI was taking management training and tried collaborating and facilitating workshops, sharing industry examples, writing documentation, pulling together case studies, even paying for others to attend webinars and setting up access to shared PM software and services. \n\nYou advanced in your career as a developer. We are inclined to think there is always a solution. Chances are that your good intentions will soon be perceived as irritating, self-serving, or worse - condescending. It's not fair. You want the best but will be blamed for others and this will become much clearer to you when you look back on it one day.\n\nGood luck.",
                "author": "spaceislimited",
                "score": 3
            },
            {
                "body": "Life’s to short, move on you won’t regret it but they will for sure.",
                "author": "hibbos",
                "score": 3
            },
            {
                "body": "Time to find a new gig. There is just so much disconnect between what you’re doing for them and the amount you’re being paid. You’re getting paid what my junior front end devs start at. Don’t let their inability to see your value cause you to not see your value.",
                "author": "the_natis",
                "score": 3
            },
            {
                "body": "That salary might be reasonable if you had a small team of developers and QA’s. But they’re treating you poorly and as it stands they’re going to be up shit creek when you inevitably leave and they realise they need to hire six people to replace you. Start looking yesterday, get the job you deserve.",
                "author": "Rumblotron",
                "score": 2
            },
            {
                "body": "If you're really managing that many projects and infrastructure as well as social you're hugely underpaid.",
                "author": "rubixstudios",
                "score": 2
            },
            {
                "body": "You need a pay raise and at least one colleague or another company.\nBeen in a similar position years ago with only print designers around me.\nVery tiring to not have any point of backup, or feedback board.",
                "author": "tomhermans",
                "score": 2
            },
            {
                "body": "Not reasonable at all. Find somewhere else.",
                "author": "Miserygut",
                "score": 2
            },
            {
                "body": "They don't appreciate or respect you. Look at their actions not their words.\n\nYou are a stud rockstar and people would be thrilled to have you on their team.\n\nIf you are surrounded by idiots even the smartest insight will get ridiculed and dismissed. You are trying to put clothes on the emperor. They are literally using you with the title, it's disgusting imo",
                "author": "DirtyBirdNJ",
                "score": 2
            },
            {
                "body": "> So have my repeated requests for just one day working from home\n\nQuit.",
                "author": "bstaruk",
                "score": 2
            },
            {
                "body": "This is fully, insanely bonkers. I worked as a web dev in London from 2004 to 2012 and I was getting paid way more than that, to just do dev. I was working on corporate mostly, banks, financial. \n\nYou are just getting horribly exploited. They are loving the fact that you seem to put up with it and they are laughing all the way to the bank. \n\nIf it's full time work I'm not sure what unpaid lunch even means? And what does no sick pay mean? Are you on an hourly casual rate as the Head Of Digital role??!\n\nJust do yourself a favour and start thinking about how you tell your manager that you will be leaving unless pay and conditions change drastically. Play it through in your mind a lot. It's going to be hard, they'll try a bunch of shit to make you feel bad for asking, then they'll try to fob you off, delay, tell you \"we can't review pay until next financial year\", whatever bollocks they want to make up. \n\nThese people are not your friends, they are not good people, and they are really loving the fact that you are working for peanuts. \n\nI have had a number of hard conversations with employers about pay and conditions. Sometimes I went in sweating, obviously nervous, struggled not to shake a bit and speak clearly. But I did. And again, and again. Until now I wouldn't even think twice.  \n\nCurrently I have recently started work at a tech company where product management have taken over the tech process and started acting like dicks about everything. I get here and no one has pushed back at all. Its so sad. The tech teams are upset, they're burnt out. I just go to meetings with this management layer and  give them back what they give our teams. I'm dismissive of their concerns, I tell them they don't understand the software dev process so they don't need the details but we will be delivering features and our team managers will send the plan for sprint goals.\n\nAs an example, at the start of this year they told us that they booked a marketing campaign for Feb so we would need to deliver a release by then. I was in a few meetings about it and asked why did you do that before knowing if we would deliver on that date? You're going to waste all that money? That seems ridiculous, it sounds like you need help with project management. I can't help you with that but I think you should look into it. Happy to talk about aspirational release goals and estimates in future to avoid you making this same mistake next time.\n\nDeep down they love it. These are people who love a fight, they enjoy pushing people around and seeing it they can get what they want. If you push back they understand it and they also know that their position is precarious. They can't code, they can't build, test, release anything. All they can do to look good is try to push people around and see if it works. They also know that if they piss and moan that the tech team are spending too much time building tech then they also risk looking stupid. You can help them with looking stupid too.\n\nAnyway I'm rambling. Just.. it's time for you to get started on these people. Let me know how you go.",
                "author": "pseudo_babbler",
                "score": 2
            },
            {
                "body": "Sorry, you are 100% getting shafted.",
                "author": "mr_tea",
                "score": 2
            },
            {
                "body": "Get the heck out of there, that's nuts. I'm in a similar boat but not as bad, getting paid better in a lower cost of living area, have gotten to stay home since the pandemic, and I at least have some graphic designers to deal with  visual assets and a more supportive supervisor, and even so I'm getting burnt out, so I can't imagine how you're functioning!",
                "author": "thislittlemoon",
                "score": 2
            },
            {
                "body": "Dude, quit, let them find out what you're worth by replacing you (with a team)",
                "author": "Chuck_Loads",
                "score": 2
            },
            {
                "body": "I'm going ot be honest and unpopular - much of this is on you.\n\n£59k is (sadly) a good perm wage in the UK, depending on where you are in the the UK.\n\nAnd yes, what you've described is A LOT, especialy the context switching, but I'm wondering how it got to this stage? How are you tracking your time?\n\nEvery dev I work with hates timesheets - but timesheets are data which can be used to specifically call out the above!\n\n>Was recently criticised for not also managing the company’s 7 social media channels — on top of all of the above.\n\nYou're in the UK. You have a contract. It states your Roles and Responsibilities.\n\nFucking read it. If it doesn't say that you manage the companies Social Media then it's not on you.\n\nWhat does the RACI you put together have you marked as for Social Media\n\n>Every time I raise concerns, I’m told “well, you’re Head of Digital — it’s your job.”\n\nThis is true though! \n\nWhat you are describing IS the Head of Digital role at this organisation. And your job is the Head of Digital.\n\nRaising concerns about the role's responsibilities wont do any good.\n\nYou need to show data about the volume of work, and ask them to prioritise.\n\n\n\n>1.5-hour commute each way. \n\nThis has nothing to do with the company or your job or your salary\n\nWhy did you take a role so far away?\n\n>One day a week I lose money after paying for childcare.\n\nThis has nothing to do with the company or your job or your salary.\n\nWhy did you take a role that was 5 days in the office?\n\n>it’s your responsibility to provide a date\n\nBut it IS your responsibility. Tell them next June. \"Based on the limited information, low prioritisation against these other projects (list them), the BAU work (list them), and the lack of deatil required to give a more accurate estimate (list things you don't have), but current estimate is.. next June. Happy to hold a session to go through priorities and unknowns if you woud like it sooner\"",
                "author": "web-dev-kev",
                "score": 2
            },
            {
                "body": "Sounds like a very similar situation to my own… but I’m making a lot more, and fully remote. And if I wasn’t l, I don’t think I would continue. Ive been there a very long time though so I’ve had ownership of all the codebases from start to finish so I’ve been able to limit the tech stacks to be all very similar, where you sound very spread across different tech stacks - that would drive me nuts. I know it’s an undertaking in itself but that would be one way to streamline your workflow, and by no means an easy fix, but something to aim for moving forward.",
                "author": "Professional_Rock650",
                "score": 1
            },
            {
                "body": "Sounds awful. And familiar. I used to work for an agency. Front-end, back-end, infrastructure, etc. Often working on 10 different projects in a given week. Nice people, in many ways a good place to work. But underpaid and very, very stressful. I didn't even realise how stressful until I had left. I got a job doing purely front-end for considerably more money. Zero regrets. The other company has now gone out of business.\n\nHead of digital makes it sound like there's a team that you're at the head of. If it's just you it should be \"Entirety of Digital\" or something.\n\nI would highly recommend looking for a new job. You have a lot of valuable skills and a wide range of experience. Think about which one of the jobs you do you enjoy the most and find a job doing that.",
                "author": "ExecutiveChimp",
                "score": 1
            },
            {
                "body": "I had the same role. With your title, who should be able to convince them that you need a new resource. They likely won’t hire a full time unless you can make a good argument for it, but considering your salary, I doubt they will agree.\n\nInstead, it’s now on you to find freelancers. If you can’t manage the work all on your own in a 40 hour work week, you need a person or team to help. I’m the lead dev at a mid sized agency now and used upwork to find a good resource for cheap. It took about 10 different people to find one that was able to do what I wanted consistently, so now we have a deal where we basically have them on retainer. We’ve given them so much work, that he went from a solo dev to having a team with designers, qa, and multiple developers. He does all the hiring and stuff himself, we don’t have to worry. \n\nI now just send him all of our brochure sites and marketing sites, while I deal with the bigger clients and more complicated jobs. Oh and he is locked in at a $25/hour rate while we charge $180/hour so it’s a win/win for me and leadership.\n\nEdit: also when I was in your role I was making $220k a year. Role titles don’t mean shit, but you are underpaid.",
                "author": "am0x",
                "score": 1
            },
            {
                "body": "I'd look for another place to work. Without a team, you'll stagnate and just put out fires until you're completely burnt out.\n\n\nIf you're comfortable with it, give them an ultimatum; either give you the support (and especially, a raise and the possibility to work from home (1.5hour commute is insane)), or you'll quit.\n\n\nIf you're not comfortable with that, then just do what is possible in your time, and don't do overtime to finish your tasks.",
                "author": "akehir",
                "score": 1
            },
            {
                "body": "If you're doing that much then you are essential to their business and have a lot of leverage. They can't just plug someone else in to take over what you're doing. \n\nUse your leverage. Tell them that although you enjoy the company, you're underpaid and overworked, and so will start hunting for a new job so they should begin preparing to find someone to take over. \n\nThen they'll have to look at and understand what you're doing, and will realise that they need to keep you around.",
                "author": "roamingandy",
                "score": 1
            },
            {
                "body": "Anyone would feel burnt out! Start looking for another company to work at. \n\nThey will end up employing multiple people to replace you or they will pay someone double your wage to do the same work.",
                "author": "Jaque_straap",
                "score": 1
            },
            {
                "body": "I would consider what you need to do your job properly, be that time WFH or other people to help you, and present it to the management. Don't make any threats, just explain you have too much to do and this is what you need to do your job properly. If they ignore it, then start looking around for another job.",
                "author": "kjs_23",
                "score": 1
            },
            {
                "body": "I used to work on a very small team for a small company and we all literally made up titles.  I was \"Chief Web Scientist\" at one point (very tongue in cheek).\n\nYou need to find new employment asap.",
                "author": "shorttompkins",
                "score": 1
            },
            {
                "body": "Bro I wouldn't do all that for double the money...",
                "author": "chiefrebelangel_",
                "score": 1
            },
            {
                "body": "I think you’re being exploited. And you’re in control of everything. You need to start utilising the leverage you have. Without you this company dies, by the sounds of it. They need a reality check.",
                "author": "uncle_jaysus",
                "score": 1
            },
            {
                "body": "Don't know your expenses, so if you can cover your basics with full remote part time job, I would find that and bet that you could charge your current company double as a freelancer/team. Even get a freelance PM to be a filter between yourself and them. Make them pay. \n\n\nAnd no, ir will not get better if you stay and demand changes vs you quitting - their proud ignorance and your sense of responsibility or people pleasing will never work.",
                "author": "mikaslt",
                "score": 1
            },
            {
                "body": "Be honest and tell them that you need to hire people to delegate to or you are leaving, this will take some work off of you and give you actual management experience like your misplaced title already implies. 60k doesn't seem very reasonable to me at all.",
                "author": "ohdog",
                "score": 1
            },
            {
                "body": "What happens when you’re off sick for a few weeks and you have a serious tech issue ?",
                "author": "sxeros",
                "score": 1
            },
            {
                "body": "That sounds so depressing lol",
                "author": "console5000",
                "score": 1
            },
            {
                "body": "In today's market?\n\nBollocks.\n\nSource: I'm standing in Sea Containers!",
                "author": "web-dev-kev",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745697342.0,
        "title": "Frontend Developer with 4 Years Experience Struggling to Land First Freelance Clients — Need Advice",
        "author": "Internal_Respond_106",
        "id": "1k8lnwy",
        "selftext": "Hey everyone,\n\nI'm a 27-year-old developer with 4 years of professional experience in frontend development (Vue.js, TypeScript, Next.js) plus fullstack capabilities (C#, .NET, Laravel, Python). I recently decided to pursue freelancing more seriously, focusing on serving non-tech businesses that need occasional development help but don't require a full-time developer.\n\n**What I've tried so far:**\n\n* Sent \\~120 personalized connection messages on LinkedIn\n* Sent \\~30 cold emails to potential clients\n* Set up a portfolio website showcasing my projects\n* Updated my LinkedIn profile to highlight freelance availability\n\nDespite these efforts over the past 2 months, I haven't managed to land my first client yet. I'm starting to wonder if my approach is flawed or if I'm targeting the wrong audience.\n\n**Questions I have:**\n\n1. For those who successfully freelance with non-tech clients, how did you land your first few clients?\n2. Is cold outreach a viable strategy, or should I be focusing elsewhere?\n3. What specific value propositions resonate best with non-tech businesses?\n4. How important was your network vs cold outreach in getting started?\n5. Did you use freelance platforms initially, or focus on direct client relationships?\n\nI have experience building enterprise applications, e-commerce sites, and custom web applications. I'm comfortable handling both technical implementation and client communication, but I'm struggling to convert that into paying opportunities.\n\nAny advice, especially from those who've been in similar positions, would be greatly appreciated!",
        "score": 55,
        "url": "https://www.reddit.com/r/webdev/comments/1k8lnwy/frontend_developer_with_4_years_experience/",
        "num_comments": 57,
        "comments": [
            {
                "body": "I hate to break it to you, but the days of getting web development clients through cold outreach are over. Small businesses get 100 calls a day asking if they need a website. You have to tap into your warm network, or someone you’re close with, and do some work for them. Bottom line is it’s extremely saturated.",
                "author": "slattyblatt",
                "score": 98
            },
            {
                "body": "Hi, I was a freelance developer for 2 years and did over 60 projects through any and all platforms. Trust me when I say it, you won't get a stranger as a first client. Cold outreach for getting your first client is of absolutely no use.\n\nHere's the deal: network until you get someone you know as your first client. Take it on a platform as it is easy to get the ball rolling on a platform. Then as you grow, you'll get independent from the platform.\n\nAlso adapt to the trendy topic even though it hurts, if suddenly everyone wants to build wordpress site, your tech stack won't matter. You need to deliver a wordpress site or you won't get any jobs.",
                "author": "Cheap_Concert168no",
                "score": 27
            },
            {
                "body": "Agreed!\nWhat I learned is that everybody knows someone who makes websites… “my nephew makes websites, he calls it ‘word dress’ and ‘wig’ , they are nice for 1/20 of this price”.\nEntry barriers are pretty much non-existent, therefore a cold reach can’t work.",
                "author": "Old-Illustrator-8692",
                "score": 15
            },
            {
                "body": "Lots of good answers already, but thought I'd weigh in.\n\nSocial media and cold calling is a waste of time as others have said. Same for freelance gig sites. High effort, low reward. It can also lead to less than ideal partnerships with difficult clients. \n\ni come from a design background and transitioned to web development 15 years ago so had a network of designers and agencies referring me to their existing clients or network. Since launching my business ten years ago I've replenished this network a couple of ways.\n\nSites and directories like Awwwards and Site Inspire have often led to clients contacting me and has opened up connections with International clients. If you're more backend focused it can still be worth adding yourself to directories as other Devs may require assistance on project components that aren't in their wheelhouse.\n\nECommerce platforms also often have their own directories.\n\nLocal business events are also great for building relationships with prospective clients, designers and other developers. Face-to-face networking. Sites like Meet Up are great for this. So are events organised via LinkedIn. If you can get in front of people, shake hands, have a casual chat you're already at the top of the pile when it occurs to them they need a developer.\n\nI picked up a great client recently by going along for a Friday night drinks event for solo-business owners working in the creative industry.\n\nIf you can build a professional network, reliable work with high quality clients will follow. As a business owner though it can always be a bit nerve racking when you're not sure who will be paying you in a few months. Even when you build a solid network, it never really goes away and there will be quiet periods followed by periods of 16 hour work days. Feast or famine. Haha. Enjoy the journey and good luck.",
                "author": "DapperVagabond84",
                "score": 13
            },
            {
                "body": "I’ve been running a web development agency for quite a while. I stopped taking new clients, mainly because businesses are no longer willing to pay a premium for something they can spend much less for, or even do themselves with all these no-code AI products. This is no longer a profitable venture for someone starting fresh. The businesses willing to pay a lot will go to the people they know and trust.",
                "author": "slattyblatt",
                "score": 8
            },
            {
                "body": "Try going in person to local stores/companies to sponsor your services. What is stopping you? Would you ever consider a random email from a random guy if you were a business owner? Going by person you can ask questions to know if you can solve any of their problems or automate any of their processes, you can inspire trust and reliability. Make the first customers and then it's a word of mouth. Start by looking the stores in you area on Google and you will be surprised of how many companies lack of web presence or have a weak one. Start with website making, it's the simplest.",
                "author": "Fashion-Fugazi",
                "score": 6
            },
            {
                "body": "online cold outreach is nearly impossible. Work your real life network. Consider a r&d poc site on commission for someone you know, grow your network and resell the solution.",
                "author": "averagebensimmons",
                "score": 4
            },
            {
                "body": "Not sure of its been mentioned, but start locally. \n\nCheck around local businesses thay have no online presence or outdated looking landing pages, etc. And reach out. If you have spare time, spin up a landing page for a few places that don't have anything, and present it to them and see if they'll bite, obviously don't spend too much time on it..just something to demo. \n\nThats what I did and landed a few clients. \n\nAnother thing you can do is check for local barbers that use the app boosky which clients make appointments for them through. Spin up a booking app or something and offer it to them.  \n\nI also did that for my barber and it worked. I'm working with another barber to sell him the exact same site. Clone the same repo, and deploy it again. This way I develop the app once and can resell it multiple times to multiple people. Of course make tweaks here and there for them but the base is the same. \n\nLastly, find someone who's good in sales. Let them do the reaching out if your not comfortable pitching your services to people/businesses. Split things 50/50 or however you see fit.",
                "author": "Smellmyvomit",
                "score": 4
            },
            {
                "body": "Hey bro, freelancing websites is an entire different skill. Then being a fre with backend fluency. You are trained for a job not for freelancing. You need to learn marketing and sales and your first client is going to be through local or warm reach like a friend of a friend.",
                "author": "applepies64",
                "score": 3
            },
            {
                "body": "I’ve recently been having success getting clients with so to speak “actual networking” or “real-life networking”. I’ve picked up golfing, and started looking for meetups into things i’m interested in and just generic entrepreneur meetups / events.\n\nI’ve gained about 5 smaller projects from this in the last two months. The first one went well and the client liked working with me and we just signed three more projects for upcoming month. He said if those go well there are three more for the next month.\n\nIt’s mostly simple Wordpress work, but it’s been paying quite well. I also already got some questions if i’m interested to work for people these clients know, so it seems the ball is starting to roll for me.\n\nPerhaps you can also do something similar in your area instead of only looking for cold outreach opportunities.",
                "author": "ws_wombat_93",
                "score": 3
            },
            {
                "body": "Thanks for this advice. I see the word \"network\" in a few comments now so I figure this is really important.",
                "author": "Internal_Respond_106",
                "score": 3
            },
            {
                "body": "I appreciate your reply, but with all due respect, I don't think that's a good way of going about it. I believe I'd become their free bughunter.",
                "author": "Internal_Respond_106",
                "score": 3
            },
            {
                "body": "You're welcome, but if you aren't having feedback with the previous methods, give it a try. Sometimes, little customers can bring in big ones. Good luck 🤞🏼🍀",
                "author": "Fashion-Fugazi",
                "score": 3
            },
            {
                "body": "1. what problem are you solving \n2. what value are you bringing \n3. what is your credibility \n\nLaser focus on those. Cold outreach a waste of time. Networking takes time.",
                "author": "throwawayDude131",
                "score": 2
            },
            {
                "body": "What I’ve noticed is that when I do cold outreach to potential clients online outside my local area, they’re more likely to decline compared to when I reach out to local ones. I’m pretty sure I’m not the only one. About 1 in 3 even ask where I’m from. My best results come from using this [web design lead generation platform](https://webleadr.com) to find local leads who may not have a website, then literally going there in person and meeting them with my business cards. I got 4 clients in one day using the app and this approach. You should try it out. People are becoming more skeptical online, especially with the rise of AI.",
                "author": "MilosStrayCat",
                "score": 2
            },
            {
                "body": "Cold outreach felt useless at first same boat. What helped me turn it around was using mails ai to sharpen my messaging and run small campaigns to niche local spots. The feedback and opens gave me direction. After a few tweaks, landed gigs with a pet supply shop and a law office.",
                "author": "ExtentCareful1581",
                "score": 2
            },
            {
                "body": "You’re used to building apps and enterprise software. Who is your target demographic? What types of sites are you wanting to build? Apps or websites for small businesses? Because they’re very different products with very different needs. \n\nSmall businesses don’t need apps. They can’t afford them. And emailing them isn’t gonna work. They get spam everyday from scammers. What makes yours different? LinkedIn is the same. I get so much spam messages. \n\nYou need to first identify who you want to target and what types of sites you want to make. Then cater your pricing and offerings to that market. \n\nI target small businesses making static informational websites. I just use html and css and 11ty static site generator. No frameworks needed. No databases. And I cold called them. Not email. I got on the phone with them. I had a pitch and everything. I know what problems they have and I sell them the solutions. Being a freelancer also means being a salesman. If you can’t sell your services properly then you won’t sell anything. What are you doing for them that improves their business and revenues? Can you identify their problems and how to fix them and explain it to them in a way they understand? Without these skills you won’t get anywhere.",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "Thanks!",
                "author": "Internal_Respond_106",
                "score": 2
            },
            {
                "body": "Thanks for your advice. However my niche is a bit different, as my specialty is building custom software. Meaning, working on more complex projects. My assumption as that these type of companies are not easily approachable in real life as in just going and knocking on the doors of these type of companies.",
                "author": "Internal_Respond_106",
                "score": 2
            },
            {
                "body": "Thanks for this refreshing perspective. I too am of the opinion cold calling can be of great value.\n\nI do agree that ice cold approaches aren't too effective. However, I do wonder, where do I begin? E.g. is it better to warm up someone by sending them a LinkedIn connection request?",
                "author": "Internal_Respond_106",
                "score": 2
            },
            {
                "body": "Thank you for sharing your knowledge and experience. Could you share how you start the call? And where do you get the numbers from to do cold calls? That would be even more helpful.",
                "author": "sherdil_me",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "Absolutely, I dig through Google and Facebook. \n\nGoogle tactic: lowest hanging fruit first, type an industry into goole with a location of some sort. I'll use a us city for example sake:\n\nGeneral contractors in Chicago, Illinois.\n\nScroll past the sponsored ads(this is where we will be later) go to the next Google cluster that is collapsed. Expand that. Look for businesses that don't have a website. This can be given by scrolling through the \"directions\" \"phone\" etc it's a horizontal scroll. If there is no website. You have a solid chance they don't have one (some just don't have it on there). Use that. Now call them. Pitch later.\n\nFacebook: \n\nSame kind of principle. Go to their page details see if they don't have a site. Call them:\n\nModify your pitch of course don't be a sped. \n\nNow I can't fully go through all of this because honestly I have years of training in sales. But key is getting to the actual decision maker. That's usually as easy as asking. But when you call smaller businesses to get your feet wet, alot of times you're talking to them when they answer. Either way swing the Pitch and let them tell you for now.\n\nPitch: \n\nHello my name is \"blobbity bloopity,\"\nI'm calling with a company called \"my biz be killing\"\nWe make websites and manage digital ad space. \nI saw you didn't have a website on Google. We'll that's where we come in. Can I tell you a little about how we can help? \n\nBoom you either are in or you can move to someone who can actually be a customer. Call another person. Don't get disgruntled by any version of a no. And if you can rebuttal off of the first no do it. But do it by being conaultive to leave the door open and not piss then off. Example:\n\nRebuttal:\n\nI completely understand a website isn't for everyone's business model. We are the people that get involved when a business wants to get past the norm and step into the digital space to push into a new clientele stream and grow. Does that sound like something you might be interested in? \n\nYes or no.\n\nIf no. Let them go. Thanks for your time always.\n\nIf yes. \n\nMove to a close and or pricing discussion.\n\nThen that's a whole diff discussion. \n\n If you'd like to have it we can? \n\n\nNow this is all just an example. Don't sound like a robot and make it conversational. They're just people. That happen to do whatever they do and be on the phone both you. Be friendly and nice and bow out when necessary. No need to fight or get upset. There's a billion numbers to call.",
                "author": "Consistent_Skirt_441",
                "score": 2
            },
            {
                "body": "Thank you so much I appreciate this a lot.  \nDo you sign a contract with each one? Also do you add a monthly or annual support service into the contract like 10 or 20 something dollars every month? I think this is what is called a \"retainer\" or something?  \nIf you you could give me some template for such contracts that you use it would be awesome.  \nThanks again.",
                "author": "sherdil_me",
                "score": 2
            },
            {
                "body": "I know that Upwork has a shit reputation, but as someone who lives in a place where soliciting local clients just doesn't work (New Mexico in case you're wondering) it's pretty essential to me.\n\nIt can really suck when you're first starting out though.  Lower your expectations accordingly.  Eventually though someone is going to hire you for a months-long stint and boost your earnings on the platform accordingly.  I wound up making $50k on the platform doing work solely for one client, and after that I'm in a privileged position where work just comes to me out of the blue.\n\nA caveat though is that I set my hourly rate kind of low relative to my experience ($45/hr, been doing web dev for over 10 years now, far less time on Upwork).  I don't mind it, I live in one of the lowest cost-of-living regions in the US and use the freelance income to support a side-project of mine.  Would be different if freelancing was my actual focus.  That said, that might be why work comes to me so easily.\n\nEDIT: and also, don't see Upwork as the end.  Use it to get the ball rolling until your customer outreach outside the platform is a little better.",
                "author": "Bjorkbat",
                "score": 1
            },
            {
                "body": "You better go learn marketing, SEO, PPC and WordPress.",
                "author": "jared-leddy",
                "score": 1
            },
            {
                "body": "I really broke through an already warm network. I made close connections with designers and other dev freelancers who would later need help on a project and bring me in.\n\nI went to a lot of in-person events. At the technical events I would get to know other developers and make some connections there. At the web specific events, I got to know designers and publishers who needed technical help.\n\nMy big break came when I got involved with a development agency. This is where close connections in the local tech scene can really help you out. One of those people will end up with big projects and need to hire freelancers for some of it.",
                "author": "kixxauth",
                "score": 1
            },
            {
                "body": "I started my business almost 2 years ago. In my experience... it's work. I can sell 3 or 4 per week, if I stay on the phone, calling. Anyone telling you cold calling doesn't work, is wrong. They're just not good at it. Polish your rebuttals, smooth out your pitch. Be conversational and friendly, helpful and consultive. Don't be a know it all, because prospects don't care if you are. Clients do. I'm here to tell you blind LinkedIn and Facebook messages, won't net anything. Maybe 1 per year. My honest recommendation, become a good salesperson. I'm probably half as good as everyone Here at actual development. But I can sling some sites and marketing deals.",
                "author": "Consistent_Skirt_441",
                "score": 1
            },
            {
                "body": "You can get leads via outbound (cold email outreach, social media outreach, cold calls, etc.), or inbound (SEO, social media marketing, content marketing, paid ads, etc.)\n\nI recommend starting with cold email outreach, social media outreach, and social media organic marketing, because they are the best bang for your buck when you have a limited budget. The other strategies can be effective, but usually require a lot of time and/or money to see results.\n\nHere's what to do:\n\n1. Cold email outreach is working well for us and our clients. It's scalable and cost-effective:\n\n* Use a b2b lead database to get email addresses of people in your target audience\n\n* Clean the list to remove bad emails (lots of tools do this)\n\n* Use a cold outreach sending platform to send emails\n\n* Keep daily send volume under 20 emails per email address\n\n* Use multiple domains & email addresses to scale up daily sends\n\n* Use unique messaging. Don't sound like every other email they get.\n\n* Test deliverability regularly, and expect (and plan for) your deliverability to go down the tube eventually. Deliverability means landing in inboxes vs spam folders. Have backup accounts ready to go when (not if) that happens. Deliverability is the hardest part of cold outreach these days.\n\n2. LinkedIn outreach / content marketing:\n\n* Use Sales Navigator to build a list of your target audience.\n\n* Send InMails to people with open profiles (it doesn't cost any credits to send InMails to people with open profiles). One bonus of InMails is that the recipient also gets an email with the content of the InMail, which means that they get a LI DM and an email into their inbox (without any worry about deliverability!). Two for one.\n\n* Engage with their posts to build relationships\n\n* Make posts to share your own content that would interest your followers. Be consistent.\n\n3. SEO & content marketing. It's a long-term play but worth it. Content marketing includes your website (for SEO), and social media. Find where your target audience hangs out (ie, what social media channels) and participate in conversations there.\n\nNo matter what lead-gen activities you do, it's all about persistence and consistency, tbh.\n\nDM me if you have any specific questions I can help with! I run a b2b outreach agency (not sure if I'm allowed to say the name without breaking a rule, but it's in my profile), so I deal with this stuff all day every day.",
                "author": "sh4ddai",
                "score": 1
            },
            {
                "body": "Could you land your first clients?",
                "author": "Agreeable-Fox-8678",
                "score": 1
            },
            {
                "body": "I need someone to build out the front end / design portion of my vite website. Lmk if interested \n\nJob description below:\n\nSenior Front-End Designer & Developer - Custom Apparel Business Web App\nProject Overview\n\nWe're seeking a talented front-end designer and developer to completely redesign and enhance the user interface of our custom apparel printing business web application. This is a B2B platform that handles product catalogs, custom orders, proof approvals, and order management.\n\nCurrent State\n\nFully functional React/TypeScript application\nBuilt with Tailwind CSS and Shadcn UI components\nFeatures include: product catalog, shopping cart, order management, admin dashboard, proof approval workflow, user authentication\nBasic styling in place but needs professional design overhaul\nWhat We Need\n\nDesign & Branding:\n\nCreate a cohesive brand identity and design system\nDesign modern, professional UI that appeals to business customers\nDevelop color schemes, typography, and visual hierarchy\nCreate engaging hero sections and landing pages\nDesign intuitive user flows for complex workflows\nImplementation:\n\nImplement responsive designs across all pages\nEnhance existing components with modern styling\nCreate custom animations and micro-interactions\nOptimize for mobile and tablet experiences\nMaintain accessibility standards\nKey Pages to Redesign:\n\nHomepage with compelling hero section\nProduct catalog and detail pages\nShopping cart and checkout flow\nUser account pages",
                "author": "robbinh00d",
                "score": 1
            },
            {
                "body": "Did you try Upwork?",
                "author": "Ljubo_B",
                "score": 1
            },
            {
                "body": "Same here",
                "author": "helloworld_paradox",
                "score": 1
            },
            {
                "body": "Hi thanks for taking the time to share your experiences.\n\nI would like to focus on local businesses as I find these to be easier to work with/more practical for tax purposes etc.\n\nI do however appreciate your advice about networking and not doing cold outreach. Would you have any tips to do this type of networking for local businesses instead of a platform? My niche is transport/logistics, travel agencies and I'm focusing on companies that are growing and could use digitalisation to improve their business processes.",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "Thanks man",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "May I ask, What range do you charge for the barbershop website?",
                "author": "AksilTheSecond",
                "score": 1
            },
            {
                "body": "Thanks!",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "Thanks for your input!",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "I appreciate the elaborate answer. I am indeed looking to create more enterprise, complex applications (which is my job right now as well).\n\nI have no problem trying to sell myself and I'm convinced I have a pretty well narrowed target group, which are transport companies, travel agencies and laboratoriums. I have experience in all of these industries from my current job.\n\nI see myself as a fullstack engineer with consultant skills because I have the ability to translate the clients' needs into technological requirements very well.",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "This dude fully gets it.",
                "author": "Consistent_Skirt_441",
                "score": 1
            },
            {
                "body": "May I ask, how elaborate that 50k work was? Did it involve ecommerce or any customer functionality with extensive backend stuff?",
                "author": "AksilTheSecond",
                "score": 1
            },
            {
                "body": "Unfortunately I have kind of given up for now",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "I want to second this option. I know that Upwork is a bit saturated, but Im in the process of trying out the platform myself. From what I can tell if your willing to spend some money on connects at first you can get clients. After you get a few solid reviews clients will start comming to you.",
                "author": "theprodigy2120",
                "score": 1
            },
            {
                "body": "i feel like this would work but only if you don't invest too much time and look for really only 1 bug. That way you can still do it somewhat at scale without investing way too much time into one potential client.",
                "author": "Hopsypopsy_",
                "score": 1
            },
            {
                "body": "First of all you have to ask yourself what incentive do they have to use you instead of the hundreds of other more established companies that offer the same service. And also, they can create a Wordpress or webflow themselves. Your best bet is to walk in to one of these places and make your case face to face.",
                "author": "slattyblatt",
                "score": 1
            },
            {
                "body": "The barber i did this for was free because he's giving me free haircuts which I go once a month for. For anyone else, probably pretty cheek. $300-600.",
                "author": "Smellmyvomit",
                "score": 1
            },
            {
                "body": "That’s gonna be even harder to do then.  Most companies will either hire within their network or referrals or check Upwork for high rated profiles. When you’re dealing with app money they are very picky and won’t just drop money because someone emailed them or sent them a message on LinkedIn. When we hired a developer to make an app we got him on Upwork and vetted him rigorously and had lots of reviews and references. \n\nSet up an Upwork profile. Attached your socials and LinkedIn and portfolio. Doing app and enterprise freelancing is hard to break into just starting out.",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "I am wondering the same. Where would one get the numbers to cold call?",
                "author": "sherdil_me",
                "score": 1
            },
            {
                "body": "Great questions. \n\nI mainly do cold calling. Theres an algorithm to all types of sales. I persist ally have found it takes around 100 calls to get a buyer. That doesn't mean they buy on the fly. Matter of fact: very seldom do they buy on call one. Follow up calls. A drop by without an appointment to put your face to your voice. Legitimize yourself. That type of thing. \n\nI do most of my own calling. I had some quick success with a couple different commission only sales reps. Turnover is horrendous. No matter what percentage you give. \n\nI call every damn body. Without. With. Facebook research is helpful but dont get your hopes up. Key takeaways. Everyone is potential and everyone is no potential..dont get discouraged by a no. Never. Just call someone else. Somebody has your money. Every single day when you start calling there is a sale. Find that one.\" Don't worry itll be the next one\" also adopt a \"their loss\" mentality without succumbing to victim hood. \n\nAsk yourself: do I have a good product? Can I help the? Do I have solutions? They either are open to it or not. Fi d yours.",
                "author": "Consistent_Skirt_441",
                "score": 1
            },
            {
                "body": "Yeah, I made a boiler plate I can reuse. Super easy to change up. And really, visual bugs are all you need. I have no idea why I got downvoted so much hahahaha",
                "author": "B-Rythm",
                "score": 1
            },
            {
                "body": "I looked on LinkedIn for my cold messages. As for cold calling, I find this to be a hard one as most mid- to large size organisations have annoying receptionists which will prevent you from talking to the right people (\"you could send us an email with the offer\", etc. etc.)",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "Has anything worked for you to get clients?",
                "author": "sherdil_me",
                "score": 1
            },
            {
                "body": "So. With that. Website only customers it's the upfront cost for the site. Xhundred dollars. Up to you. Then I charge 20 a month hosting. Or 200 per year if you do the whole year up front. Then more if the project is bigger. So the site is kinda the contract. If they don't want it I may it low obligation. Now marketing stuff. They sign. Because it takes time to see the results. So give me time kinda thing. \n\nBottom line. Taking the consultive approach. As I recommend. If they don't do well, you won't either. If they go out or can't afford you because it's not working. Then you lose. We all do better when we all do better. \n\n\nRun it up bro! Anything else I can help with. BTW this has all been hourly rate of 250 an hour. We've been at this for a few hours right? So let's call it 2k. Nah dude jk. Lmk how I can help. I wanna help you succeed too. Unless you're in my market. Then go out of business and shoot me your client list asap. Again kidding.",
                "author": "Consistent_Skirt_441",
                "score": 1
            },
            {
                "body": "Not so far. I do have 2 warm leads who'd contact me as soon as they need me.",
                "author": "Internal_Respond_106",
                "score": 1
            },
            {
                "body": "It's normal to face difficulties when starting out as a freelancer. Focus on how your skills solve specific problems for clients, leverage your network for recommendations, and consider using freelance platforms at first. Offer clear and accessible solutions to attract clients. Stay persistent, and your first client will come!",
                "author": "AssistanceNew4560",
                "score": 0
            },
            {
                "body": "Create a website for your freelance business, use every website tool applicable and charge at least 1500. \n\nGet a business to design a website \n\nOffer maintenance, 100$ a month fee and offer keyword boosting \n\nUpsell a web application \n\nUpsell a mobile app \n\nUpsell a desktop app",
                "author": "hola-mundo",
                "score": -1
            },
            {
                "body": "Look locally at businesses/restarauntants. Visit their website if applicable. Look for bugs. Make notes. Craft a similar (better laid out version), go to said business. Show/explain the bugs. Show them your draft. Make offer.",
                "author": "B-Rythm",
                "score": -6
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1665692219.0,
        "title": "Best freelance sites for developers starting out",
        "author": "psaiful28",
        "id": "y38tf4",
        "selftext": "I’ve seen lots of people complaining about UpWork without providing better alternatives, and thought I’d create a summary of the pros and cons of each platform that I’ve used/use. Let me know which sites/subreddits/communities you’ve used and I can add them to the list. As the current r/UpWork alternatives list doesn’t have much detail, please include key reasons why you’d recommend/not recommend each site.\n\nDon’t restrict yourself to one platform, *especially* if you’re just starting out. Certain freelancing sites are going to be better for beginners, and others for more established freelancers, but you’re generally best off casting a wide net when starting out and seeing where you get the best results.\n\n# Upwork\n\n**Pros**\n\nThey’re the biggest platform by far, with a huge number of developers, designers, writers etc., primarily from lower CoL countries. UpWork is the archetype of a “network effect,” where its success has essentially been built around buying up the competition to create a feedback loop of growing bigger *because* it’s the biggest. The sheer volume of jobs on UpWork makes it easier to get jobs if you’re willing to work for cheap to get experience.\n\n**Cons**\n\nUnfortunately that size also means you’re competing against extremely low rates bid by freelancers in lower CoL countries, and a tendency towards bullshitting credentials/work experience.\n\nOn the employer side, Upwork’s size also means there are more employers that aren’t serious/will simply ghost you altogether part way through the process. There’s also the chicken-and-egg problem of getting employers to hire/even consider your applications when you don’t already have reviews, which most of your competition will have/fake. Finally, they limit the number of bids on jobs you can make and charge you if you go over that. When you’re starting out with no reviews, it’s extremely difficult to get jobs with the limited number of bids they give you.\n\n# TopTal / “Premium” Services\n\nFull disclosure: a friend of mine worked for TopTal as a web dev (mostly backend stuff). I haven’t personally used it as the hiring process/setup didn’t fit what I was looking for.\n\n**Pros**\n\nThey command very high rates, but if you’re getting hired at TopTal you’re not a “beginner” (friend had a Bachelor’s in CS and 3 years of full time work at a mid-tier dev shop). You set your hourly rate (guided by them) and then they charge that rate plus a significant markup (approximately double what you earn) in exchange for getting you clients. TopTal has a wide range of freelance roles, including engineering/development, project/product management, design, and finance.\n\n**Cons**\n\nTopTal is very restrictive in that you’re required to do all client work through the platform, can’t be hired by a client full time without the client paying TopTal a massive buyout fee, and lose a huge cut of fees to TopTal. From what I’ve heard if you can get TopTal you should just apply for a full-time role at a company and get paid much more, as TopTal doesn’t really have the flexibility that IMO makes freelancing attractive.\n\nIf you *really* hate negotiating your rates, TopTal handles that for you in setting a clear minimum for their clients, but you can do the same by just listing your rates on your profiles elsewhere. Because the process is led by TopTal salespeople, they are pretty restrictive about what kind of jobs you can list. For example, their marketing roles are very limited. If you have a specific role you like doing and plan to stick to just that role, it can be a good place to get high-paying work.\n\n# Fiverr / “gig” sites\n\nFiverr reverses the job posting process of sites like UpWork, by having workers list their services and clients search for and book them. If you have no portfolio work, Fiverr can be worth trying out as a way to get some. Just check into your niche by searching for it and seeing what others are offering and at what rates.\n\n**Pros**\n\nThe advantage of Fiverr/gig sites over standard freelancing sites is that you can list your services on a marketplace that employers search, rather than actively bidding on each job posting made by employers. Reviews are still a big part of it, and the fees are even more exorbitant, but you can at least avoid the grind of applying to dozens of jobs like you would on UpWork. It also means you’re not paying to bid on jobs like you do on UpWork/Freelancer. If you’re in certain niches where the work is primarily single, clearly defined projects, gigs are well suited to this (e.g. making infographics, even stuff like logos) but this generally isn’t the case for development work.\n\n**Cons**\n\nThey take a massive cut of your earnings (20%), charge 5.5% on top of that to your buyer, and don’t let you move work off Fiverr, so it’s much better suited to short term projects than finding higher end/longer term clients. Like Upwork, Fiverr tends towards a “race to the bottom” on rates and arguably quality as well, meaning clients tend to be worse.\n\n# Contra / zero-fee freelance sites\n\n**Pros**\n\nTheir cut of your earnings is zero, saving you \\~20% off the bat from UpWork/Fiverr. Your profile becomes an interactive CV where employers can see your past work, the people you’ve worked with, services and rates all in one place. It’s basically a free portfolio site that also lets employers book your services, and because there are no fees you actually want to link them to it. This also means you can have initial clients found through your network book you through Contra to get specific project experience future employers can see, without paying 20%+ for the privilege.\n\n**Cons**\n\nIt’s freelancer oriented, meaning you can’t post Fiverr-style gigs that employers can easily browse. Because the employers are mostly US based, English speaking/writing skills are important. $25/hour minimum on jobs means your competition is generally more skilled than other marketplaces. Because of that competition and the site’s focus on portfolios, you’ll want to have at least some portfolio work to stand out.\n\n# Reddit\n\nThere are a bunch of subreddits dedicated to freelancing and job posts, including r/slavelabour (for truly low rate work where you’re purely looking to build your portfolio), r/forhire (where you can post what you do, links to your portfolio etc.) I wasn’t on Reddit enough to try these before I had already found clients elsewhere, but you don’t lose anything by posting there and including links to your portfolio(s).\n\n**TL;DR:** Unless you’re in a low COL country and have 0 portfolio work, avoid the cesspool of low rate competition, ghosting employers, and competition from freelancers with fake reviews on UpWork/Guru/Freelancer.com. If you have *some* work you can show on your portfolio, I recommend setting up a Contra profile to showcase it and get initial work. Together with GitHub, this will give you a portfolio to attract the kind of projects/employers you actually want. If you have *nothing*, bite the bullet and work on personal projects while bidding on low rate stuff on UpWork/Fiverr to build out your portfolio on Contra/GitHub/Behance.\n\nBiggest sites: UpWork, Freelancer.\n\nHigh-rate sites: TopTal\n\nZero-fees: Contra\n\nZero-fee networking: r/ForHire, LinkedIn, GitHub",
        "score": 670,
        "url": "https://www.reddit.com/r/webdev/comments/y38tf4/best_freelance_sites_for_developers_starting_out/",
        "num_comments": 72,
        "comments": [
            {
                "body": "Extremely useful post for beginners. It should also be mentioned if you already have work that can be publicity shown you should probably create a profile on GitHub and document your work in addition to having a personal site/social medias.",
                "author": "Ok_Lavishness_9618",
                "score": 64
            },
            {
                "body": "You should also know that the moderators on /r/forhire are some of the most power-tripping weirdos I've ever met in my life.  Read their rules VERY carefully, and don't ever post anything you think is even remotely against their rules or you'll get permabanned without any recourse.",
                "author": "Squagem",
                "score": 63
            },
            {
                "body": "Just FYI for people. I've managed to make really good money on upwork.\n\nInitially it's a grind to get some.jobs and reviews. Possibly at lower rates but once you are there you can get well paying jobs. Anyone who wants good work knows it costs and are willing to pay.\n\nPrice for the market you want and the service you give.\n\nNever compete on rate because that's a losing battle for everyone",
                "author": "geeceeza",
                "score": 44
            },
            {
                "body": "Contra sounds really promising, but I just tried signing up, and holy shit, is it invasive.  Basically, you can't sign up until you submit at least two social media accounts, and run your \"biometrics\" through a third-party supplier for verification.",
                "author": "rabidhamster",
                "score": 20
            },
            {
                "body": "If it's beyond your capabilities, just say so! Nothing wrong with stating something along the line of \"this is outside my general area of expertis, if you want I can make a go for it but it will take me longer than usual\". No one knows everything and a big part of being a developer is just developing your own skillset, right?\n\nJust go out there and try, if you're up for a challenge, and expect to fail sometimes, it's part of the journey :)",
                "author": "flibben",
                "score": 20
            },
            {
                "body": "> You should also know that the moderators on /r/forhire are some of the most power-tripping weirdos I've ever met in my life. \n\nIsn't that true for almost any Reddit mod though?",
                "author": "steven447",
                "score": 15
            },
            {
                "body": "I started out at $50/hour. You can set your rate by “service,” which I initially put as $50 for everything. I’m currently at $75/hour which is very comfortable in my mid-COL area. \n\nIf you’re specialized enough to have clients asking for consultations, I would highly recommend setting up a 1-hour paid consultation service. This filters for clients that are willing to pay for your expertise and saves you time dealing with less serious employers or people looking for free work.",
                "author": "psaiful28",
                "score": 14
            },
            {
                "body": "What type of jobs do you typically do? I always get a bit intimidated at the thought of being asked to do something that is very technical or simply beyond my capabilities.",
                "author": "billbobby21",
                "score": 12
            },
            {
                "body": "More often than not yeah, but some mods are really stellar.  \n\nThe mods in this sub for example are solid standup guys with level heads.",
                "author": "Squagem",
                "score": 12
            },
            {
                "body": "Network and local is far superior to platforms unless you live in a poor country. Otherwise you're going to go through some hellish pain to get to a place where you can get even normal rates.\n\nI know guys with mid level skills who land easily 120+/hr with for low stress clients through local after a short while. The platforms land you instead with 30/hr high stress stuff. Not universally, but that's the direction it firmly slants.\n\nPlatforms are primarily retail offshoring platforms rather than freelance platforms, including the big brand highly screened ones, regardless of how they advertise themselves. Yes there are a few real solid clients floating among the poo, who don't expect to pay $100 for 100 hours of work, but fishing for them stinks vs getting known locally.",
                "author": "ultraobese",
                "score": 11
            },
            {
                "body": "Cost of living",
                "author": "Suspicious-Marketing",
                "score": 11
            },
            {
                "body": "Saving for later, thanks.",
                "author": "eldarlrd",
                "score": 10
            },
            {
                "body": "head shaggy punch six paltry towering alleged political deliver historical\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",
                "author": "Blacknsilver1",
                "score": 9
            },
            {
                "body": "Never put the excuse as \"competing with lower rates\" in upwork, you still can get over 150 rate if you work your profile there, but it is better to do that amount of work alone.\n\nAlso being crowded means that a good developer that knows how to filter jobs will get quality jobs too.",
                "author": "Gwolf4",
                "score": 8
            },
            {
                "body": "Go work for an dev agency and talk to everyone there. As people leave to work elsewhere you gain contacts in other industries. Add them on linkedin to stay in contact.\n\nThere are no meetups for freelance devs that help. Instead you would go to the target industry events and meetups. E.g. if you do web work for accountants, you'd go to accounting meetups.",
                "author": "ultraobese",
                "score": 7
            },
            {
                "body": "For those of us that don't know, could you define \"CoL\"?",
                "author": "doYouKnowWhatWhere",
                "score": 6
            },
            {
                "body": "Fair point, was debating whether I should add Github or not",
                "author": "psaiful28",
                "score": 6
            },
            {
                "body": "I recommend Malt if you're European",
                "author": "Blue_Fishtail",
                "score": 5
            },
            {
                "body": "Not related to freelancing but worth it to ask: what do you guys think about Turing? I recently passed the coding challenge test but no job offers so far. Am I wasting my time?",
                "author": "achoissoumsaco",
                "score": 4
            },
            {
                "body": "I used Codementor in the past as a mentor and liked it. I think they have another site called arc now too for bigger projects",
                "author": "rifts",
                "score": 4
            },
            {
                "body": "Haven't heard of it before, I'll check it out and get back to you",
                "author": "psaiful28",
                "score": 4
            },
            {
                "body": "Also, if you don't mind me asking, what rates do you/did you charge?",
                "author": "Ok_Lavishness_9618",
                "score": 4
            },
            {
                "body": "Add LinkedIn to the list",
                "author": "freelanceProgrammar",
                "score": 3
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 3
            },
            {
                "body": "Because you have lower overhead cold calling businesses can land you work easy.  Use Google Maps to query businesses near you.  Maintain a list of leads in Zoho CRM or another tool.  Target specific types of businesses at first.  If you say work for dental companies, their needs will be similar.  Once you have 10+ clients, consider bringing on another buddy.",
                "author": "JustAPieceOfDust",
                "score": 3
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "Great post. I am currently only on Upwork. If you are joined those platforms, are you all are registered freelances in your countries, or is it possible to work without it?",
                "author": "Sys_Rex",
                "score": 2
            },
            {
                "body": "Gigster is also specific for web developers, just like Codeable, for example. I found this list that has some pretty cool freelancer sites if you want to take a look: [https://medium.com/@steverramos/best-freelancer-sites-4bb6d824d513](https://medium.com/@steverramos/best-freelancer-sites-4bb6d824d513)",
                "author": "softwarepodium",
                "score": 2
            },
            {
                "body": "not available for Italy",
                "author": "sblanzio",
                "score": 2
            },
            {
                "body": ">Malt\n\nThanks for the recommendation! How does this one work? Do you bid for jobs or post your services?",
                "author": "prb01dev",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "I've had trouble finding jobs there. Any recommendations?",
                "author": null,
                "score": 2
            },
            {
                "body": "She could try cold-emailing/contacting different digital marketing agencies with her portfolio. They're usually looking to have different designers as options and if they like the work, it should be repeat business as well.",
                "author": "prb01dev",
                "score": 2
            },
            {
                "body": "How do you start to get known locally? Are there like meetups for freelance devs?",
                "author": "wishiwascooler",
                "score": 2
            },
            {
                "body": "whoops yeah they aren't everywhere in europe yet",
                "author": "Blue_Fishtail",
                "score": 2
            },
            {
                "body": "Thank you.",
                "author": null,
                "score": 2
            },
            {
                "body": "not your fault! I was just disappointed, sorry...",
                "author": "sblanzio",
                "score": 2
            },
            {
                "body": "Thanks! Will check it out this weekend.",
                "author": "prb01dev",
                "score": 2
            },
            {
                "body": "May I ask on which platform you started out?",
                "author": "RegretJazzlike",
                "score": 2
            },
            {
                "body": "Sorry when I got it it was only two countries i just don't keep track of how they're doing",
                "author": "Blue_Fishtail",
                "score": 2
            },
            {
                "body": "No job so far. Went to the interview process and even though the interviewer made some compliments about my English and the way I answered the questions, the fact I didn't have any professional experience made them automatically reject me. I already applied to countless jobs on LinkedIn and similar sites, but only got automated replies saying that I don't fit the role requirements. Being honest about this whole thing, I am hopeless that I will be successful in getting a job.",
                "author": "achoissoumsaco",
                "score": 2
            },
            {
                "body": "I wish you luck. Hope you'll get what you deserve soon. And I am sure you will.",
                "author": "medasdan",
                "score": 2
            },
            {
                "body": "How could i find my first client",
                "author": "sk744826744",
                "score": 1
            },
            {
                "body": "this has been very informative, thank you",
                "author": "FurAddict",
                "score": 1
            },
            {
                "body": "What does Portfolio work mean in this instance? I built a portfolio, but I don't have paid, professional experience. What I display are my personal projects. So in this sense, it would be accurate to say I don't have any \"portfolio work\" on my portfolio?",
                "author": "worldOfVerdure",
                "score": 1
            },
            {
                "body": "Eu sei que parece obvio, mas estou começando agora, acabei de receber minha primeira mensagem solicitando um serviço no fiverr, o cliente me pediu meu email logo de início mas o fiverr tem uma notificação dizendo que não deveria passar esse tipo de informação. É o padrão compartilhar o email logo de cara assim?",
                "author": "V1D0N",
                "score": 1
            },
            {
                "body": "love it",
                "author": "Actual-Brilliant1808",
                "score": 1
            },
            {
                "body": "nice post",
                "author": "_by_me",
                "score": 1
            },
            {
                "body": "saved",
                "author": "throwawaysomeway",
                "score": 1
            },
            {
                "body": "Searching for a platform that prioritizes security and transparency? \n\nBlockchain technology is used by Deelance to guarantee the security of your data and transactions.\n\n#blockchain #security #DLANCE $DLANCE #freelance\n\ndeelance.com",
                "author": "jouie12mahal",
                "score": 1
            },
            {
                "body": "What skills are they needing I'm interested.",
                "author": "Cupidmove",
                "score": 1
            },
            {
                "body": "I agree with this post especially with upwork. \nWith contra you really need to have your own clients. The chances of you getting a job on there is slim from the Discover page..",
                "author": "Ashdesigns",
                "score": 1
            },
            {
                "body": "Kind of what to expect on Reddit tbh",
                "author": "Itsonlyfare",
                "score": 1
            },
            {
                "body": "If you even have your plate full you can let me know about work, I'm looking for a job right now. I'm an Angular and Android Native developer. I also do technomancy if anyone is interested in that kind of work.",
                "author": "gpt_ppt",
                "score": 1
            },
            {
                "body": "I don't see many projects on codementor now a days.",
                "author": "TeachWaste",
                "score": 1
            },
            {
                "body": "Thank you a lot sir! May i DM for detail to ask?",
                "author": "Several_Today_7269",
                "score": 1
            },
            {
                "body": "Thanks!",
                "author": "psaiful28",
                "score": 1
            },
            {
                "body": "There are  bunch sites out there is this paying??",
                "author": "Cupidmove",
                "score": 1
            },
            {
                "body": "Either potential customers contact you directly asking for budget or the auto algorithm matches you with a project. I find it more personal and quality centered",
                "author": "Blue_Fishtail",
                "score": 1
            },
            {
                "body": "Thanks.",
                "author": "achoissoumsaco",
                "score": 1
            },
            {
                "body": "Common leetcode test that  one could find in hacker rank, nothing fancy if you are good with those tests.",
                "author": "Gwolf4",
                "score": 1
            },
            {
                "body": "It was not bad. You have 30 minutes to solve two problems. Expect easy to medium problems similar to the ones on leetcode. I also studied data structures and algorithms with a course from Andrei Neagoie.",
                "author": "achoissoumsaco",
                "score": 1
            },
            {
                "body": "Sure, if I can help",
                "author": "softwarepodium",
                "score": 1
            },
            {
                "body": "It has been 8 months. Did you get job? Any experience?",
                "author": "medasdan",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1693153094.0,
        "title": "Agency people, what CMS are you using these days?",
        "author": "LISCoxH1Gj",
        "id": "162uoo8",
        "selftext": "I’ve enjoyed ACF and WordPress for a few years now, but with time and other technologies, I’m getting some serious FOMO. I would love to know what other agency developers are using these days? Craft? Sanity? Something else?\n\nI’m working with small to medium companies, and I’d rather not bother them with expensive, bespoke platforms unless it makes sense. That’s why I’ve been using WP, which I’ve stripped down to be easy to manage, as few plugins as possible (just ACF mostly), on a relatively cheap hosting plan.\n\nIt should also be relatively quick to spin up new sites. Most of them are basic, but some require automation, bespoke design or custom integrations. That rules out Squarespace and the likes.\n\nExcited to know what you guys are using, and why. Anything you wish you’d get to use, but somehow can’t?",
        "score": 82,
        "url": "https://www.reddit.com/r/webdev/comments/162uoo8/agency_people_what_cms_are_you_using_these_days/",
        "num_comments": 182,
        "comments": [
            {
                "body": "Magento, I enjoy suffering",
                "author": "potatosquat",
                "score": 74
            },
            {
                "body": "Craft.",
                "author": null,
                "score": 35
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 29
            },
            {
                "body": "Statamic",
                "author": "stibbles1000",
                "score": 21
            },
            {
                "body": "Drupal",
                "author": "alphex",
                "score": 20
            },
            {
                "body": "Sanity.io",
                "author": "Sebbean",
                "score": 20
            },
            {
                "body": "Drupal. I hate it with a passion",
                "author": "Cambumz",
                "score": 18
            },
            {
                "body": "PayloadCMS. Tried a ton of CMSes and none worked faster and easier than Contentful ($$$$), but if you can take time to learn PayloadCMS, you can get it installed for free + self-hosting costs. \n\nRight now it only works with mongo, but they’re releasing support for relational databases very soon.",
                "author": "nlvogel",
                "score": 16
            },
            {
                "body": "I think wordpress with ACF is very powerful \n\nI use the same but with Timber as well, which pulls in Twig for your templates/views\n\nWordPress, ACF, Timber, Yoast and a caching plugin goes far because WordPress already has good content admin tools \n\nBut.... Checkout Bedrock. Let's you manage plugins with composer, write your views with Blade etc - this would be what I use if I had to build a new wordpress website",
                "author": null,
                "score": 16
            },
            {
                "body": "PayloadCMS! Out of all the CMS projects, it's the one with the most extensibility, the best UI/UX and DevX, and it has partnered with major platforms like Resend, Vercel, and YCombinator. You build the entire CMS using JSON. Need an extra component or need to extend functionality? It's easy to build additional functionality with Hooks, Local, REST and GraphQL API, and React. Version 2 is coming very soon with visual preview and editing BUILT IN. I wouldn't be surprised if it soon becomes the CMS synonymous with NextJS.\n\nMost of it's users have migrated from WordPress, Sanity, Strapi, and even Ghost. 12K stars on Github so check them out;\n\nhttps://payloadcms.com/",
                "author": "ske66",
                "score": 14
            },
            {
                "body": "WordPress. \n\nWe've tried the other hot ones a few times then the owner of the websites will see a feature on a website that they want, then we investigate and find out it is a WordPress plugin. Or they join a FB group and everyone is talking about the best WP themes or plugins, then they come back to us and we have to explain that Yoast SEO or Mailpoet is not available for Webflow (or Shopify, or Squarespace).",
                "author": "r1ckd33zy",
                "score": 12
            },
            {
                "body": "For the php folks, processwire is where it’s at.",
                "author": "lowfour",
                "score": 11
            },
            {
                "body": "Drupal. If you haven’t tried Drupal in a few years, I’d encourage you to try it again.",
                "author": "theblumkin",
                "score": 11
            },
            {
                "body": "I want to cite Directus. I am mostly doing WP websites but last time I checked it was the most suitable for me.",
                "author": "LauGauMatix",
                "score": 10
            },
            {
                "body": "Came here to say this. \n\nOur clients run the spectrum from 100% headless (Sanity + React/Static) to block-based WP.  Our craft projects are by far the easiest to build/maintain.  \n\nWP core has performance/scalability issues that are just hard to get around.  Craft has way fewer of these issues.\n\nThe js-based headless CMSs (we use sanity and strapi mainly) are nice for big pots of similar data, but they have have huge deficits around basic website-specific features like routing, multisite, live preview, etc.\n\nIf you want the best website CMS, craft is where it's at.",
                "author": "_listless",
                "score": 10
            },
            {
                "body": "DatoCMS",
                "author": "lowkey-liquid",
                "score": 8
            },
            {
                "body": "Are you missing the point?",
                "author": "r1ckd33zy",
                "score": 8
            },
            {
                "body": "Depends on the client and project. \n\nWordPress is fit for folks with a lower budget and a lot of clients are already used to working with it from a contributor or editor standpoint. It's actually \"requested\" a lot of times. I enjoy working with it as I've been doing so for over a decade. I can easily create custom plugins and themes for it then lock shit down easily for client use purposes. \n\nDrupal is something that's has been widely requested by universities and schools. For some reason it became a standard at some point for a lot of places. I personally love Drupal myself and wish I had the opportunity to do more with it. Back in the earlier 00s I experimented a lot with it on personal projects and it's quite wonderful. \n\nI recently did a couple projects on \"Big Conmerce\" which I don't recommend, but the clients wanted to use them. They have great client support, and you can customize all the things with your own code. They also have amazing customer support and I use surprised to find out a shit load of huge clients like BMW and BlackDiamond. As far as platforms like square space, WIX and all that other bullshit, Big Commerce is probably the best, but I don't consider it \"development work\" until they ask me to do something that isn't out of box and I have to write some custom code. \n\nIn the end, if they have the budget, I'd rather do everything from scratch.",
                "author": "yerbiologicalfather",
                "score": 7
            },
            {
                "body": "I’ve worked on $150k sites using Wordpress, it’s perfectly suitable at scale",
                "author": "OrtizDupri",
                "score": 7
            },
            {
                "body": "Directus",
                "author": "_Helius_",
                "score": 6
            },
            {
                "body": "We mostly do Drupal with some Wordpress.",
                "author": "PMMEBITCOINPLZ",
                "score": 6
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 6
            },
            {
                "body": "I'm genuinely glad that there are people out there who love working with it. It means that I'll never have to again.",
                "author": "maria_la_guerta",
                "score": 6
            },
            {
                "body": "> What happens in two years when you lose the contract to another firm, or after the first year when they bring someone in house to do the ongoing management. A custom plugin you wrote that requires updates to maintain security is now left in the hands of some random entity. Or worse, you use an existing plugin in development that it's creators abandon or leave a major hole in because they failed to read and understand the release notes of the next core updates.\n\nThat sounds more like a \"them\" problem than a \"you\" problem.",
                "author": "moob9",
                "score": 6
            },
            {
                "body": "O...k... I don't know what's rude about my asking a clarifying question. Im here genuinely trying to understand what place you're coming from so I can help answer your query as clearly as possible.\n\nI personally think Statamic's licensing is appropriate - they're trying to build both an open product so that anyone can contribute to making it safer and better AND at the same make a successful business so they can be around to support that for the long-haul.\n\nI think they're having success with it. It started off as one person, now there's at least 5 people on the core team as employees being paid to work on the open source product.",
                "author": "simonhamp",
                "score": 6
            },
            {
                "body": "Honestly, WordPress is probably still the best choice. I have used it as a data source for a more modern frontend with Gatsby.js a few tines but it is such a headache to maintain.  There is nothing I haven't been able to build on WordPress with ACF for 80+ client websites.\n\nIn the real world, if I'm being asked to add a new feature to a website and it is complex I know I can build it in WordPress and ACF pretty quickly usually.",
                "author": null,
                "score": 5
            },
            {
                "body": "Prismic is like Wordpress with ACF and custom post types, but for modern technologies like nextjs, nuxt, etc.",
                "author": "bdlowery2",
                "score": 5
            },
            {
                "body": "Directus CMS, Would never go back to anything else. It's JS, Headless, easy to setup and clients love the UI.",
                "author": null,
                "score": 5
            },
            {
                "body": "you poor thing",
                "author": "pittybrave",
                "score": 5
            },
            {
                "body": "Great stuff.  Love it. But sometimes I still get shit done really fast with classic php and processwire.",
                "author": "lowfour",
                "score": 5
            },
            {
                "body": "One of the biggest challenges is that Drupal has grown from a scrappy little PHP project made by a community of web nerds who wanted to move beyond the cruft of the *nuke variants and slashdot school of sites… into a project that competes with AEM and friends for extremely large scale deployments and ridiculously complex sites — ones that lighter, cleaner CMS options aren’t even in contention for because the devs would have to implement a dozen new major subsystems from scratch just to get through the first round of feature evaluation.\n\nBUT, due to its history, there are still lots of people out there BUILDING smaller sites with it and taking about it in that context.",
                "author": "eaton",
                "score": 5
            },
            {
                "body": "Kirby. I really love working with it, so simple yet powerful",
                "author": "crankykong",
                "score": 4
            },
            {
                "body": "Craft and directus",
                "author": "asteroidc1",
                "score": 4
            },
            {
                "body": "The majority are still using WordPress because nothing else honestly comes close. A lot of \"WordPress killers\" have tried, but none have penetrated the market like WP has.",
                "author": "WeekendProfessional",
                "score": 4
            },
            {
                "body": "Support is available...",
                "author": "squ1bs",
                "score": 4
            },
            {
                "body": "Wasn't Drupal literally always making the top 5 in most hated tech since 5 years?\n\n\nhttps://survey.stackoverflow.co/2022#section-most-loved-dreaded-and-wanted-programming-scripting-and-markup-languages\n\nHow could it be simultaneously the best and most hated?",
                "author": "davidstellini",
                "score": 4
            },
            {
                "body": "I only ever regretted using Joomla more than I regretted using Drupal. It's a pig, and since Laravel, it's dead.",
                "author": "squ1bs",
                "score": 4
            },
            {
                "body": "It's Open Source and there's a free version for non-commercial use. If you're making projects for paying clients tho, this shouldn't be an issue - just add the price to your bill, it's probably only a few hours of your billable time",
                "author": "simonhamp",
                "score": 4
            },
            {
                "body": "I’ve been experimenting with blocks recently, in an agency that has used acf flexible content fields for a long time to keep the site “on rails” for the client/editors. My findings are that if you lock down the site so they can’t install plugins (that would bring new blocks), turn off all the default blocks except the basic text stuff, and then make all the custom blocks you need using the ACF blocks, it’s a really robust solution that’s easy to develop for someone used to the old php and acf world.",
                "author": "chrissilich",
                "score": 4
            },
            {
                "body": "wagtail",
                "author": "wasted_in_ynui",
                "score": 3
            },
            {
                "body": "Kirby cms. Has been much better to work with than wp and easier to deal with for the customers.",
                "author": "mafroger",
                "score": 3
            },
            {
                "body": "AEM (in my company) and Prismic/Contentful for personal/side projects",
                "author": "calfucura",
                "score": 3
            },
            {
                "body": "Umbraco",
                "author": "foursevrn",
                "score": 3
            },
            {
                "body": "Wintercms",
                "author": "MetaW64",
                "score": 3
            },
            {
                "body": "Worst thing was WordPress, second to that some one-man build cms with no docs and powered with smarty. If you like to torture people until they wish to get struck down by lightning, shopware is the way to go.\n\nNow, not in an agency nightmare anymore, I enjoy working with kirby, statamic and strapi.",
                "author": "MWD1899",
                "score": 3
            },
            {
                "body": "Biased because I work there, but check out [Directus](https://docs.directus.io) if you're after something headless. \n\n&#x200B;\n\nIf you want an 'all-in-one' tool that will let you build out templates/UIs as well as data models and editors, then it isn't the right choice (WP is probably worth sticking to), but if you want a good and flexible authoring experience, good multi-level permissions systems, and any automation stuff - it's ideal.",
                "author": "_phzn",
                "score": 3
            },
            {
                "body": "Umbraco 🔥\n\n&#x200B;\n\n* Easy to install and extremly easy for editors.\n* Super fast and secure.\n* No need for thirdpartyplugins for metafields, language, caching, security, complex user permissions, image cropping etc.\n* No need to install webbservers, database etc. to start developing.\n* Greate documentation.\n* V12 has a built in rest-content-api for headless\n\n[https://docs.umbraco.com/umbraco-cms/](https://docs.umbraco.com/umbraco-cms/)  \nInstalling: [https://www.youtube.com/watch?v=ZByL3qILNnI](https://www.youtube.com/watch?v=ZByL3qILNnI)  \nGettingstarted: https://www.youtube.com/playlist?list=PLgX62vUaGZsFBcq9eSJ\\_178rXgn82sJ-T\n\n  \nWe have several WP+ACF-sites, and other systems (joomla, strapi, drupal, custom 😅).  \nWe mostly build custom sites, systems based on designs from other agencies and clients. 🙂",
                "author": "madsoulswe",
                "score": 3
            },
            {
                "body": "Every agency I've freelanced for had a custom CMS built in Laravel or similar to varying degrees of success.",
                "author": "chesbyiii",
                "score": 3
            },
            {
                "body": "Are you using their PWA or something like VueStorefront?     \n     \nOr, are you trapped in the extension hell that prevents any modern tooling stacked on top? (That is, even most of the best extensions aren't PWA ready. It annoys me often.)",
                "author": "gizamo",
                "score": 3
            },
            {
                "body": "Second this. If you like WP with ACF you will love Statamic.",
                "author": "stoffelio",
                "score": 3
            },
            {
                "body": "Do you hate it more or less than Wordpress out of interest? I don’t love Wordpress but all solutions have their issues, and generally it does what most need. I haven’t delved into drupal too much yet",
                "author": "Manachi",
                "score": 3
            },
            {
                "body": "Can't believe this bloody piece of fekkin' shite is still around.. has cost me probably 10+ years of a healthy lifetime",
                "author": "Bulky_Ambassador",
                "score": 3
            },
            {
                "body": "I like payload. The only thing is that you need a small learning curve to get something similar to WordPress, but in general my experience was cool.\n\nStrapi also looks like a good choice but is an API management, you need to develop the front. WordPress has a lot of this things aready solved.",
                "author": "No_Recording2621",
                "score": 3
            },
            {
                "body": "Came here to say that. Infinitely scaleable and wicked fast.",
                "author": "_HMCB_",
                "score": 3
            },
            {
                "body": "And some money, it is over engineered PHP when it comes down to it",
                "author": "potatosquat",
                "score": 3
            },
            {
                "body": "I'm going to -1 for strapi. Very frustrating experience and actually moved (as did many) to Payload because of the DevX",
                "author": "ske66",
                "score": 3
            },
            {
                "body": "What are you using for headless for Wordpress as CMS.",
                "author": "annoynamousanimal",
                "score": 3
            },
            {
                "body": "Now that ACF can make taxonomies and post types, and WP has the json api, it’s a very good solution for headless  with literally no custom code required in the back end.",
                "author": "chrissilich",
                "score": 3
            },
            {
                "body": "It can be suitable with a lot of continuous management and proper security in place. That's the problem though. It's literally the least secure platform on the market on most scales. Too many failure points, including the human part.  What happens in two years when you lose the contract to another firm, or after the first year when they bring someone in house to do the ongoing management. A custom plugin you wrote that requires updates to maintain security is now left in the hands of some random entity. Or worse, you use an existing plugin in development that it's creators abandon or leave a major hole in because they failed to read and understand the release notes of the next core updates. \n\nWordPress is both the best and worst CMS out there and that's because it's the biggest target for malicious intent. It's targeted heavily by hackers and the amount of vulnerabilities that come up everyday is insane. \n\nThat being said if you read with comprehension and the entire comment you'd see I said I enjoyed working with it but if someone has the budget I'd rather go custom.",
                "author": "yerbiologicalfather",
                "score": 3
            },
            {
                "body": "Drupal definitely isn’t dead",
                "author": "k_sway",
                "score": 3
            },
            {
                "body": "I had the same experience.  We are not an agency, but we heavily use Drupal and want to find something Node based (everything else we do is node so Drupal is odd man out).  Tried Strapi on a small project as a trial, and it was pure pain.  Marketing material looks great, but there are soooo many head scratching decisions with how it’s put together and how it can be extended.",
                "author": "savageronald",
                "score": 3
            },
            {
                "body": "Are you asking how they can ensure that commercial users buy a license and continue to fund their business?",
                "author": "simonhamp",
                "score": 3
            },
            {
                "body": "Huh? I'm trying to understand what kind of question you're asking. I don't see how that's \"being a jerk\" 😵‍💫",
                "author": "simonhamp",
                "score": 3
            },
            {
                "body": "Very weird take from them? There's a ton of open source projects that want to also make money. It's not like they've just done some lazy wrapper around something that already exists, Statamic is really polished and wasn't even originally built on top of Laravel, they migrated years ago to make the product better, they then made Statamic something you can drop into Laravel as a component. Like...I do not know where they're coming from with the whole \"used car salesman\" thing.",
                "author": "AshTeriyaki",
                "score": 3
            },
            {
                "body": "If there's nothing too custom, I go with Grav.",
                "author": "benabus",
                "score": 2
            },
            {
                "body": "Statamic",
                "author": "simonfrost1",
                "score": 2
            },
            {
                "body": "I don't do that type of work anymore but if I had to choose I'd go headless. Contentful is really nice for that and I use it on all of my projects now. I've seen some others, but this one is still top in class to me. Wordpress's headless option is fine too.\n\nThe reason for headless to me is that it just sets up a data contract. I could use react, vue, svelte, whatever and the data side of things doesn't change. That's far better that fully integrated CMS where the front end and back end are coupled together. I want to be able to plug and play, switch technologies when needed or desired, and still have the same data. \n\nHeadless does that.",
                "author": "thatgibbyguy",
                "score": 2
            },
            {
                "body": "Drupal",
                "author": "k_sway",
                "score": 2
            },
            {
                "body": "Originally, OctoberCMS. Got tired of it when they went paid, wrote my own for small clients, may use WinterCMS (open source fork of October) for bigger clients.",
                "author": "gingertek",
                "score": 2
            },
            {
                "body": "wordpress, joomla, magento Shopify, hubspot are some of the top notch cms people use these days, as it depends on the needs of your customer or the space you're working with.",
                "author": "sharan_dev",
                "score": 2
            },
            {
                "body": "Storyblok FTW!!",
                "author": "Vryheid_",
                "score": 2
            },
            {
                "body": "Freelancer here, but i work mostly with agencies. 99% of my job is WordPress. Same as you, i use a few plugins as possible. The only thing i can't live without is Timber. I would never go back.\n\nRecently, i've been trying to get my own clients, like a small agency. For more complex project i'm going with Contao. It's an obscure german CMS, now based on Symfony, but i've always liked it a lot (although it's hard to find help if you're not german speaking, and i'm not).\n\nI'm also giving Directus + React a try for Webapps.\n\nIt all depends on the project. For a simple website, with a cheap client, i would go with WordPress. Something more advanced with user managements / personal dashboard, stuff like that, i would go with Contao. For a webapp i'm going to use Directus.",
                "author": "frenchy_mustache",
                "score": 2
            },
            {
                "body": "Directus! It's not a page builder, but it's pretty great if you have structured data, and especially if surfacing content on a website is only one output of that data.",
                "author": "thenoobinator",
                "score": 2
            },
            {
                "body": "I created my own lol. Not because I'm cool or anything, but because my website works differently; almost 100% static with a spinned cloud function connected to firebase for updates saving me tons of money tbh (i pay $0 for FB); no subscriptions and no overloaded backend for some blog posts.",
                "author": "NullBeyondo",
                "score": 2
            },
            {
                "body": "ProcessWire all the way.",
                "author": "_HMCB_",
                "score": 2
            },
            {
                "body": "Sanity, Contentful, Drupal, Sitecore, Magnolia, AEM occasionally at gunpoint, potentially Optimizely (formerly Episerver) in a project or two… Trying out Strapi in a small upcoming project, and keeping an eye on a bunch of others.\n\nNine times out of ten we’re working with clients on specific complex problems in an existing system, or helping them select a new one. So we have to stay conversant with a rant of tools.",
                "author": "eaton",
                "score": 2
            },
            {
                "body": "Still rockin MODX and TYPO3.",
                "author": "Excavator460",
                "score": 2
            },
            {
                "body": "I use 11ty with the DecapCMS\n\nHere’s my website starter kit with it all configured \n\nhttps://github.com/CodeStitchOfficial/Intermediate-Website-Kit-SASS\n\nLove decap. Very easy to use.",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "Oof, Magento is still going strong, huh? You have my pity.",
                "author": "phoenix1984",
                "score": 2
            },
            {
                "body": "Craft and Statamic both look like priced products. Statamic is built on Laravel but not Open Source?",
                "author": "Howdy_McGee",
                "score": 2
            },
            {
                "body": "Interesting! Do you use the classic editor for managing content or do you let clients use the block editor?",
                "author": "LISCoxH1Gj",
                "score": 2
            },
            {
                "body": "Since you mentioned BedRock... checkout Carbon Fields. CarbonFields is to ACF, what BedRock is to WordPress.",
                "author": "zkoolkyle",
                "score": 2
            },
            {
                "body": "Prismic is sooo good",
                "author": null,
                "score": 2
            },
            {
                "body": "Do you self-host? If yes, how do you handle the licensing? If a client's business grows beyond 5 million after you delivered, are they aware that they'll have to pay a minimum of $450 monthly fee for directus?\n\nDirectus is fantastic, but there are many questions that arise with the new licensing that it's hard to use or recommend anymore (I'd be more than happy to be wrong).",
                "author": "cantdeicide",
                "score": 2
            },
            {
                "body": "I love AEM, it’s just so damned expensive it’s hard to get someone to agree to it.",
                "author": "savageronald",
                "score": 2
            },
            {
                "body": "Very true I'm not a developer at all but I get what you are saying I've done that jumping to a new shiny thing because I felt limited only to come back to WordPress because the entire web seems to push me to it when I'm looking to do something",
                "author": "chaoticbastian",
                "score": 2
            },
            {
                "body": "Vue",
                "author": "potatosquat",
                "score": 2
            },
            {
                "body": "Drupal <= 7 was a pain in the ass and I hated it.\n\nBut since Drupal 8 and the Symfony powered core I started to like it to the point that it's now my main technology and I enjoy it.\n\nYou should try it again sometimes, you'll be surprised.",
                "author": "Automatic-Branch-446",
                "score": 2
            },
            {
                "body": "If you don’t got decapCMS, which just got a new release to address some of its broken component libraries, Sanity and Contentful work well with it. Takes some planning to figure out how to combine 11ty’s natural “collections come from the filesysyem” approach with an API based CMS, but it can work nicely.",
                "author": "eaton",
                "score": 2
            },
            {
                "body": "Nice. That makes Magento more difficult, but also vastly better. Kudos on putting in the extra effort for your clients/users.",
                "author": "gizamo",
                "score": 2
            },
            {
                "body": "If the license is open source .. how can they limit it for commercial?",
                "author": "FreeThinkerWiseSmart",
                "score": 2
            },
            {
                "body": "This is exactly what we’ve been doing, but we have yet to jump into the block-editor full-time. Good call on removing everything except the text blocks, because my clients 100% do not need the Soundcloud block.",
                "author": "LISCoxH1Gj",
                "score": 2
            },
            {
                "body": "Yes, the point at the end of the sentence is missing.",
                "author": "Jona-Anders",
                "score": 2
            },
            {
                "body": "Thanks!",
                "author": "davidstellini",
                "score": 2
            },
            {
                "body": "I had one experience with it, and it was a company that had their site built with a mix of Drupal customisations and \"plugins\" (don't remember if this is the specific term) each plugin being their own react project with its own node modules and gulp AND webpack build system. Debugging anything was a nightmare and needed tons of (mostly undocumented) Drupal specific knowledge. Developer experience was also terrible. Then there's also the untyped aspect where you play this game of \"let's guess the property\" (enterprise project + complex business logic + no tests + no types = delish) I am pretty sure there are good Drupal projects out there, but this one left me with a sour taste and I noped out. I was just curious if the hate was for similar experiences or if mine was a one off.",
                "author": "davidstellini",
                "score": 2
            },
            {
                "body": "It's just the link. Scroll down, there's a list of web frameworks and technologies. It's been making the top 5 most hated since 2015 iirc",
                "author": "davidstellini",
                "score": 2
            },
            {
                "body": "Lately, using  Wordpress cause clients always have crap hosting and they won't budge on anything.",
                "author": "weales",
                "score": 1
            },
            {
                "body": "Either Statamic or Craft, it depends. I'd like to make it 100% Statamic, but without a proper equivalent to Craft Commerce, I'll still bounce between the two.",
                "author": "AshTeriyaki",
                "score": 1
            },
            {
                "body": "This - [https://www.wix.com/studio/cms](https://www.wix.com/studio/cms)\n\ngotta say that I tried Wix Studio when it launched and got hooked!   \nevery new feature release I keep thinking how outdated all the big names are, with this new agency product. I don't think any other CMS can streamline this easily multiple website management.. \n\nFeels like when PS5 came out :D",
                "author": "wack-a-duck",
                "score": 1
            },
            {
                "body": "I just stopped working for a client that used Optimizely.  It is a god awful CMS with security flaws the size of central park, and no matter how badly they try to buy hackers' favor, there is always someone who will not be bought, and then you get the disaster that happened in the met.  They may have hidden EpiServer's ugly history of vulnerabilities with a rebranding but no amount of lipstick will fix this piggy.",
                "author": "Livid_Special6371",
                "score": 1
            },
            {
                "body": "Contao CMS",
                "author": "OnBird42",
                "score": 1
            },
            {
                "body": "Great question! We've been helping agencies navigate this exact transition over the past few years, and the landscape has shifted. We, at Roboto Studio, see a strong move toward headless CMS solutions - especially Sanity and Contentful.\n\nSanity has become incredibly popular for agencies and has some crazy features like real-time collaboration, flexible content modeling, performance increase, etc.\n\nContentful works well for larger agencies handling enterprise clients - solid at scale, extensive API ecosystem, and familiar enough for content teams making the transition.\n\nThe shift away from WordPress makes sense for agencies building custom solutions. We've found that headless setups actually reduce long-term maintenance headaches while giving you unlimited design freedom. Cost-wise, the initial development investment pays off quickly. Faster development cycles, better performance, less ongoing maintenance, and future proofing are some key features. You can read our blog on how we migrate without breaking stuff(It's in the blog section of our website: Roboto Studio. Please note this is not a promotion, we are just sharing our experience). Have a nice day you all.",
                "author": "nimishroboto",
                "score": 1
            },
            {
                "body": "Joomla. I work with Joomla since day one and still enjoy building websites and applications with it.",
                "author": "renekreijveld",
                "score": 1
            },
            {
                "body": "I used Craft for a few years but had to go back to WordPress. First, as a freelancer, I get a lot of WP requests and there's just no way for me to avoid it entirely. I build 100% custom themes using ACF. Reasons why I stopped using Craft and would not use again:\n\n1. Breaking changes in updates are not at all uncommon. \n2. Lack of ACF style functionality without plugins. Sure, you can create your own fields, but anything like a complex repeater field is going to require a plugin like Neo. Neo can make updates hellish.\n3. Conditional logic with fields is new and basic. Nothing at all like ACF. And cannot be done at all in matrix/neo/supertable fields. So no conditional logic where you need it most.\n4. Small community. Posting questions to the discord server is like screaming into a void at times.\n5. Poor documentation. Searching for anything leads you to things that worked in a previous version but require new syntax. Finding that new syntax can be a struggle.\n6. Composer. I hate composter.\n\nSadly it is WordPress for me. Until ACF just becomes its own CMS.",
                "author": "HaddockBranzini-II",
                "score": 1
            },
            {
                "body": "Shopify.",
                "author": "jclarkxyz",
                "score": 1
            },
            {
                "body": "Tried Wix, it was to cluttered beyond belief. Switched to webflow, I can export the website into pure html and css code. \n\nAlso very easy to use.",
                "author": "holistic-engine",
                "score": 1
            },
            {
                "body": "Depends on the client and project. \n\nWordPress is fit for folks with a lower budget and a lot of clients are already used to working with it from a contributor or editor standpoint. It's actually \"requested\" a lot of times. I enjoy working with it as I've been doing so for over a decade. I can easily create custom plugins and themes for it then lock shit down easily for client use purposes. \n\nDrupal is something that's has been widely requested by universities and schools. For some reason it became a standard at some point for a lot of places. I personally love Drupal myself and wish I had the opportunity to do more with it. Back in the earlier 00s I experimented a lot with it on personal projects and it's quite wonderful. \n\nI recently did a couple projects on \"Big Conmerce\" which I don't recommend, but the clients wanted to use them. They have great client support, and you can customize all the things with your own code. They also have amazing customer support and I use surprised to find out a shit load of huge clients like BMW and BlackDiamond. As far as platforms like square space, WIX and all that other bullshit, Big Commerce is probably the best, but I don't consider it \"development work\" until they ask me to do something that isn't out of box and I have to write some custom code. \n\nIn the end, if they have the budget, I'd rather do everything from scratch.",
                "author": "yerbiologicalfather",
                "score": 1
            },
            {
                "body": "Mainly working in eCommerce for work, mainstay is Shopify, do some BigCommerce, dread anything Wordpress. \n\nShopify is it’s own beast but it can be handy since it handles a lot on its own. Plus the templated syntax is pretty easy to understand",
                "author": "Velzak",
                "score": 1
            },
            {
                "body": "Strapi, or payload",
                "author": "luzacapios",
                "score": 1
            },
            {
                "body": "Kentico or Kontent, depending whether or not you're going headless.",
                "author": "tnsipla",
                "score": 1
            },
            {
                "body": "Whichever the team is familiar with tbh.. For me its WordPress",
                "author": "AffectPretend66",
                "score": 1
            },
            {
                "body": "Kirby CMS",
                "author": "Meuss",
                "score": 1
            },
            {
                "body": "Strapi",
                "author": "Jcrrr13",
                "score": 1
            },
            {
                "body": "Sanity.io\n\nFucking love it",
                "author": "Decent_Jello_8001",
                "score": 1
            },
            {
                "body": "[https://twill.io/](https://twill.io/)\n\nA Laravel (PHP) based CMS, OpenAI's official website API is built using it.",
                "author": "Dakaa",
                "score": 1
            },
            {
                "body": "Anyone using Duda?\n\nWas looking for thoughts on it from someone who's used it a while",
                "author": null,
                "score": 1
            },
            {
                "body": "Umbraco!\n\nThere’s a repo that provides a headless version with GraphQL queries & rest API too, quite handy!",
                "author": "_confused_dev",
                "score": 1
            },
            {
                "body": "Sitefinity mainly. We’ve also started using Webflow for our smaller clients.",
                "author": "PapaEmeritusVI",
                "score": 1
            },
            {
                "body": "WP. With varying degree's of complexity and customization, depending on the project. Still have a WP + Elementor setup for super quick sites. Anything that constitutes a real site is all blocks...so many custom blocks. ACF still plays a significant role in both.\n\nBeen (slowly) looking at both craft and Drupal though. Lately the requirements of the sites we're bidding on has changed, and I don't think WP can still be the *only* option. I'm not looking at replacing it necessarily, more like adding a craft and/or drupal team for different types of projects.",
                "author": "BobJutsu",
                "score": 1
            },
            {
                "body": "Twill\n\nhttps://twillcms.com",
                "author": "mr_terrific_03",
                "score": 1
            },
            {
                "body": "Wordpress with ACF, witha  timber framework.  Then Drupal as well.",
                "author": "bimmerman1998",
                "score": 1
            },
            {
                "body": "Woooordsdpresssssssss",
                "author": "bopittwistiteatit",
                "score": 1
            },
            {
                "body": "If I need a database I stick to wordpress + ACF. If I want to go headless I use Publii",
                "author": "Fyredesigns",
                "score": 1
            },
            {
                "body": "Ghost",
                "author": null,
                "score": 1
            },
            {
                "body": "Drupal/Wordpress",
                "author": "Forsaken_Ad8120",
                "score": 1
            },
            {
                "body": "If you're looking for an all in one tool, check out Versoly\n\nPage builder, CMS, forms and can handle custom design. It is built on HTML and even gives you access to the code to import/export.\n\nAs an agency you want to minimise maintenance.",
                "author": "volkandkaya",
                "score": 1
            },
            {
                "body": "We work with upper midmarket and enterprise. Optimizely, Umbraco, Sanity for the most part.",
                "author": "knawlejj",
                "score": 1
            },
            {
                "body": "wordpress does the job for me",
                "author": "Visual-Mongoose7521",
                "score": 1
            },
            {
                "body": "Lately, I've been intrigued by Craft CMS for its versatility and user-friendly interface. When speed matters, Webflow's design capabilities shine. For unique integrations, I'm eyeing Sanity's real-time collaboration features. Of course, WP and ACF are solid for small to medium businesses. It's all about finding the best fit for each project!",
                "author": "Iotasol",
                "score": 1
            },
            {
                "body": "If the project is relatively simple, WordPress + ACF. Nothing beats WordPress for simple stuff (a blog, a traditional ecommerce, any project with a simple data model).\n\nIf the project is a bit more complex (it would require many different Custom Post Types and ACF Fields in WordPress), then I go with CraftCMS.\n\nIn any case, it's important to be cool with anything. Open your mind, the web industry is great!",
                "author": "AlvaroFranz",
                "score": 1
            },
            {
                "body": "If you are using firebase as a backend, FireCMS is the way to go, highly customizable and totally free!",
                "author": "fgatti",
                "score": 1
            },
            {
                "body": "Sanity",
                "author": "microwaveddinner95",
                "score": 1
            },
            {
                "body": "Statmatic / pyro cms",
                "author": "zoider7",
                "score": 1
            },
            {
                "body": "[primocms.org](https://primocms.org)",
                "author": "mateomorris",
                "score": 1
            },
            {
                "body": "Custom platform using remix js at its core, PostgreSQL and Amazon S3",
                "author": "mdibound",
                "score": 1
            },
            {
                "body": "ConcreteCMS is absurdly powerful.",
                "author": "officialraylong",
                "score": 1
            },
            {
                "body": "Wordpress. And we maintain a homegorwon one that was built YEARS ago - probably before wordpress was even a thing - and is on existing / legacy clients.\n\nBut we build new sites and update existing clients that want complete redesigns with Wordpress.\n\nMy previous agency also used wordpress exlusively.\n\nEDIT: WP + ACF Pro + Gravity forms = all you really need for MOST client websites. You can do ALOT with WP and these 2 plugins alone. We use others - and I do as well for freelance clients - but ACF + Gravity Forms covers a lot of bases.",
                "author": "NiagaraThistle",
                "score": 1
            },
            {
                "body": "Holy cow, really?",
                "author": "FreeThinkerWiseSmart",
                "score": 1
            },
            {
                "body": "We're still mostly a WP shop, had a dozen or so sites in Craft and when it came time for the next site with MLS integration, went Statamic. I wasn't the dev on it, so don't have a lot of details but we were able to give the client exactly what they needed (without a bloated MLS plugin or corcel). I have started learning Statamic and like it a lot. It borrows a lot from Craft but I'm loving the simplicity of antlers, and templates (similar to twig) are so much easier to read than WP/PHP.",
                "author": "mgcross",
                "score": 1
            },
            {
                "body": "This. Not even a question if you can afford a few dollars, which every agency should be able to.",
                "author": "barrel_of_noodles",
                "score": 1
            },
            {
                "body": "Just curious, do you happen to use Craft for the full thing or maybe use it as a headless option?",
                "author": "im_Sean",
                "score": 1
            },
            {
                "body": "I have recently been using WordPress as a headless CMS after not touching it for about 8 years.  \n\nWith ACF, a few wp-admin modifying plugins, and customizing some of the returns in functions.php I have been able to a do a lot very quickly.  Then you add rest api caching.",
                "author": "daBarron",
                "score": 1
            },
            {
                "body": "Seconded",
                "author": null,
                "score": 1
            },
            {
                "body": "That’s what I’ve been experiencing too. Do you use the block editor at all?",
                "author": "LISCoxH1Gj",
                "score": 1
            },
            {
                "body": "💞",
                "author": "_phzn",
                "score": 1
            },
            {
                "body": "Thanks! I’ll look into it, the image cropping and meta-fields definitely fits my needs.",
                "author": "LISCoxH1Gj",
                "score": 1
            },
            {
                "body": "Hello fellow .NET developer! Rarely see us in the wild outside of /r/dotnet\n\nI’ve been considering Umbraco at my job. So it’s nice to see it appear in this list.",
                "author": null,
                "score": 1
            },
            {
                "body": "bdsm the php way /s",
                "author": "thatsallweneed",
                "score": 1
            },
            {
                "body": ">Statamic\n\nBuild-In ACF :-)",
                "author": "pauernet",
                "score": 1
            },
            {
                "body": "Drupal is way more painful than wordpress",
                "author": "stonethro_dev",
                "score": 1
            },
            {
                "body": "It makes hosting slightly more complex than what I’m used to, compared to how broadly available WP hosts are. But Craft essentially what I’m trying to force WP to be anyway, with custom fields, so it makes a lot of sense.",
                "author": "LISCoxH1Gj",
                "score": 1
            },
            {
                "body": "The full thing",
                "author": null,
                "score": 1
            },
            {
                "body": "When I build freelance sites, and at my previous employer (an agency) we used Blocks and let the client edit with blocks, but 1. took out some 'unnecessary' blocks and 2. created some custom blocks that utilized the custom code I/we combined with ACF fields. It gives the client control, while keeping them within the bounds of the custom templates/themes.",
                "author": "NiagaraThistle",
                "score": 1
            },
            {
                "body": "Nice!",
                "author": null,
                "score": 1
            },
            {
                "body": "Not at all, I install the classic editor right away and create the fields that I want clients to be able to edit.",
                "author": null,
                "score": 1
            },
            {
                "body": "Oh man, I forgot about Joomla. Are they still a thing?\n\nEdit: looks like they still are, but [BuiltWith](https://trends.builtwith.com/cms/Joomla!) makes it look like their usage has cut in half over the past few years.",
                "author": "thatandyinhumboldt",
                "score": 1
            },
            {
                "body": "Check out Servd. It’s incred",
                "author": "ontheellipse",
                "score": 1
            },
            {
                "body": "Craft is really great, it was what we used at my last agency gig and it’s what I use for personal projects that need a CMS. You can also find managed hosting https://craftcms.org/hosting",
                "author": "Scowlface",
                "score": 1
            },
            {
                "body": "I use a cache warmer to generate all flat HTML files. I then upload the site as static files. I’ve got this as a script that I can run whenever I want. Hosted on cloud flare. Insanely fast performance, 100s across the board on google page speed.",
                "author": null,
                "score": 1
            },
            {
                "body": "For work we are doing a few basic point of interest maps, using it to manage points, hero images, links, locations.",
                "author": "daBarron",
                "score": 1
            },
            {
                "body": "I believe they came out with a headless solution but I haven't tried it since the early days when it was... Not great. But if it's updated and actually production ready I'll have to see what's up!",
                "author": "Fyredesigns",
                "score": 1
            },
            {
                "body": ">What happens in two years when you lose the contract to another firm, or after the first year when they bring someone in house to do the ongoing management. A custom plugin you wrote that requires updates to maintain security is now left in the hands of some random entity. Or worse, you use an existing plugin in development that it's creators abandon or leave a major hole in because they failed to read and understand the release notes of the next core updates.\n\nThis isn't an exclusive problem to Wordpress.",
                "author": "Lopsided_Stomach_570",
                "score": 1
            },
            {
                "body": "Just curious, what was the last version of drupal you worked with?",
                "author": "k_sway",
                "score": 1
            },
            {
                "body": "Why is symfony getting no mentions here?",
                "author": "stickylava",
                "score": 1
            },
            {
                "body": "God i hated to work with Drupal. Though it was Drupal 7. I've heard good things about Drupal >= 8. \n\nBut is everything still a node ?",
                "author": "frenchy_mustache",
                "score": 1
            },
            {
                "body": "Joomla 4 released in mid 2021.    \n    \nIt's vastly better than it was.   \n    \nIt's still trash, imo.   \n      \nEdit: here's the release info so you can judge for yourself: https://www.joomla.org/4/en-us/",
                "author": "gizamo",
                "score": 1
            },
            {
                "body": "Yes! It's awesome!!!",
                "author": null,
                "score": 1
            },
            {
                "body": "I stand corrected.",
                "author": "r1ckd33zy",
                "score": 1
            },
            {
                "body": "I used a variety from 5 - 9.",
                "author": "maria_la_guerta",
                "score": 1
            },
            {
                "body": "Because it's not a CMS",
                "author": "Automatic-Branch-446",
                "score": 1
            },
            {
                "body": "Everything is entities. Nodes are only for the content (pages, news, articles, ...) and other entities are there (users, taxonomy terms, ...) and you can create new ones if needed.",
                "author": "Automatic-Branch-446",
                "score": 1
            },
            {
                "body": "What amazes me about Developers, they are always looking for the new shiny toys. Neglecting the fact that WordPress powers over 42% of the Worlds websites.\nNot only that, but recent additions and modifications have made it even better.\nHave you tried Headless Wordspress? \n\nThe market dictates the direction and here you are wanting to jump on another platform which is less mature.   \nI think i understand where developers are coming from, they feel threatened, they feel threatened at the availability of all the plugins where they are not required to write it from scratch.\n\nWordPress is a $550 BILLION dollar industry, is your job to make money or is your job to look into future technologies ???",
                "author": "Bluesky4meandu",
                "score": 0
            },
            {
                "body": "ExpressionEngine!",
                "author": null,
                "score": 0
            },
            {
                "body": "Webflow",
                "author": "trusted-advisor-88",
                "score": 0
            },
            {
                "body": "Very cool. I’ve never thought of the idea of using GitHub as a backend like that. Pretty slick",
                "author": "ratbiscuits",
                "score": 0
            },
            {
                "body": "I'm. Planning on giving 11ty a shot but was also dreading researching CMS'es to use in combination. Might give this a shot!",
                "author": "allurb4se",
                "score": 0
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "Yes, the point at the end of the sentence is missing.",
                "author": "Jona-Anders",
                "score": 0
            },
            {
                "body": "Yeah like with every technology there will always be that guy that tries to combine stuff that he doesn't understand and build a Frankenstein's website.\n\nBut what is nice with Drupal is that there is a LOT of documentation out there for free and if you want to do things the right way it's not that complicated.",
                "author": "Automatic-Branch-446",
                "score": 0
            },
            {
                "body": "Yep, tried the hot headless ones and they’re missing tons on features, came back to Drupal and feel right at home :)",
                "author": "no-one_ever",
                "score": -1
            },
            {
                "body": "So did I. Which is why I had this made. There’s a documentation video that goes along with it to explain where everything is and what they all do. Hope it’s what you’re looking for!",
                "author": "Citrous_Oyster",
                "score": -1
            },
            {
                "body": "That’s a different topic. Don’t be a jerk by default.",
                "author": "FreeThinkerWiseSmart",
                "score": -1
            },
            {
                "body": "You’re coming off as shady as hell. \n\nI asked a simple question. Got a rude answer. \n\nI took a look at the statamic license. It’s just as shady. It’s not really an open source license as commonly known. They’re duping people with the open source branding. Like a used car salesman that low balled an old lady into selling her Buick and then they resell it for a lot more to someone with bad credit.\n\nThere are lots of CMS’ that come and go. Statamic will be one of those.",
                "author": "FreeThinkerWiseSmart",
                "score": -1
            },
            {
                "body": "Pretty sure Yoast SEO is available for Shopify (or used to be)",
                "author": "allurb4se",
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757787665.0,
        "title": "GDPR Cookie Consent",
        "author": "AlfroJang80",
        "id": "1ng4rmf",
        "selftext": "Hello,\n\nI'm looking to set up a online platform, based in the UK with customers globally. Hosting is in Germany.\n\nCurrently, I have the following notification that appears:\n\n\"We use cookies to improve your expereince. By browisng, you agree to our cookies use. Learn more hyperlink to a cookies policy\". with an Accept and Reject button.\n\nThe site currently only has the following 3 cookies\n\n1. First party session cookie for logins\n\n2. stripe cookie\n\n3. XSRF-TOKEN for laravel CSRF protection\n\nMy questions are\n\n1. Do I need to give the user a customisable cookies options?\n\n2. Is there anything else to do?",
        "score": 10,
        "url": "https://www.reddit.com/r/webdev/comments/1ng4rmf/gdpr_cookie_consent/",
        "num_comments": 30,
        "comments": [
            {
                "body": "I dont know about stripe cookie, but 1 & 3 are required/necessary cookies, right?  \n\n\nAFAIK you only need to inform your visitors there are some required/necessary cookies.\n\n\nYou can use OneTrust as reference, they have some categories for cookies, but visitors cannot disable necessary cookies.",
                "author": "IndraThunderbolt",
                "score": 16
            },
            {
                "body": "This sentence and how the functionality acts seems to differ:\n\"We use cookies to improve your expereince. By browisng, you agree to our cookies use.\"\n\nAgree by browsing = opt-out = not legal.\nAgree by clicking accept = opt-in = legal.\n\nI would re-structure the sentence so it reflects what is actually happening.",
                "author": "tridderid",
                "score": 10
            },
            {
                "body": "Sounds like a question from a solo dev, though. Def the kind of question from a solo dev 😂",
                "author": "who_am_i_to_say_so",
                "score": 9
            },
            {
                "body": "1) Talk to a lawyer.\n2) If all cookies are required for normal operations of the site, you should only need to provide notice.\n\nNote that required is clearly defined as \"without this, the site will break\" so analytics, error trackers, and the like are NOT required.\n\nStripe, so long as limited directly to just the processing of payments, could be considered required. If the cookies go BEYOND that, you'd need explicitly informed consent.\n\n3) Talk to a lawyer.",
                "author": "rjhancock",
                "score": 8
            },
            {
                "body": "Stripe itself is needed for payments, but if Stripe adds anything beyond that, it's no longer \"needed.\"\n\nNeed to look at what all is involved with the cookie. Just for payment processing or does it also include analytics?",
                "author": "rjhancock",
                "score": 6
            },
            {
                "body": "Yes this is also my understanding. Operational or necessary cookies only require informing the user.",
                "author": "martian_rover",
                "score": 5
            },
            {
                "body": "I’m not a lawyer, but this is also my understanding- and I would also classify stripe as an “operating” cookie that is needed for payment processing. Therefore, all 3 cookies 🍪 would be on an inform only basis. \n\nMost 3rd party cookies used for tracking etc. will need to give the user a choice. But that’s not your case here.",
                "author": "martian_rover",
                "score": 5
            },
            {
                "body": "If you only use essential cookies I don’t think you need to show a cookie banner at all. But someone please correct me if I am wrong",
                "author": "Nomad2102",
                "score": 5
            },
            {
                "body": "Yep, that’s correct. You can host them yourself without getting consent but if you pull them from Google’s servers you need consent to be GDPR compliant. \n\nhttps://www.cookieyes.com/documentation/google-fonts-and-gdpr/",
                "author": "G3NG1S_tron",
                "score": 5
            },
            {
                "body": "Just use something like cookie bot.",
                "author": "breadandbutter123456",
                "score": 3
            },
            {
                "body": "Yeah, if it's just those required cookies I wouldn't even bother with the cookie notice.",
                "author": "pau1phi11ips",
                "score": 3
            },
            {
                "body": "Not a lawyer but I would not annoy my users with a cookie banner at all if I only set those basic cookies like you mention. Cookie consent/opt-in is for tracking users, especially if third-party cookies are involved.",
                "author": "FlxMgdnz",
                "score": 2
            },
            {
                "body": "OneTrust integration is simple to do too.",
                "author": "EventArgs",
                "score": 2
            },
            {
                "body": "This is the best response I’ve seen here. Every country and even states have different legal requirements. Talk to a lawyer or get legal counsel for something like this. \n\nEU and California have the most comprehensive and strictest requirements which is what we follow on the sites I work on. \n\nAlso worth noting these requirements are not limited to cookies. Things like google fonts, analytic and third party tools, using CDNs, tracking pixels, etc. are all captured under these cookie consent policies. Typically there are three categories for identifying cookies/scripts: required, functional and advertising/marketing",
                "author": "G3NG1S_tron",
                "score": 2
            },
            {
                "body": "Google fonts just if you link to them offsite right? Fonts stored on your own site as ttf, woff, woff2 wouldn't trigger anything if I am understanding correctly ",
                "author": "LegitBullfrog",
                "score": 2
            },
            {
                "body": "Just make sure that if/when users opt out, you actually disable tracking and such like.\n\nSo many people think it’s just a simple UI requirement and still let scripts run rampant.",
                "author": "justdlb",
                "score": 1
            },
            {
                "body": "IANAL, but 1 and 3 definitely don't even need consent or even notice. Since they are functional cookies. \n\nI have no idea what stripe does since that is a third-party cookie. Ask a lawyer.",
                "author": "alexkiro",
                "score": 1
            },
            {
                "body": "Go with a commercial solution. The reason being, that to be fully compliant you need to provide what is called “Proof of consent”, which essentially means that every consent needs to be stored in a database, so that it can be retrieved on demand. \n\nBesides, legislations are moving targets and new additions that need to be respected appear yearly. If you have a genuine interest in being and staying compliant, offload the responsibility to a third-party.\n\nSource: Used to work on one of the more widespread commercial CMP solutions. ",
                "author": "DepressionFiesta",
                "score": 1
            },
            {
                "body": "I'm not a lawyer, but this is how we've been implementing GDPR for many years now. If you're using Stripe Checkout (Session), you redirect your users to Stripe. Your responsibility for this is not to take explicit consent from the user for the payment processing itself, but to inform them about it in your \"Privacy Policy\" section and to ensure that Stripe adheres to GDPR (which, of course, they do). \n\nFor your web app, you should inform your users about the essential cookies your site uses and give them the option to opt out of other cookies, including those from external services like Google Tag or Facebook Pixel. In my opinion, for those external services, you shouldn't even connect or initialize them before the user consents. I disagree with the perception that you can connect or initialize them in a 'stale' state.",
                "author": "constcallid",
                "score": 1
            },
            {
                "body": "What if I have no other cookies apart from the essential. In that case, can I just inform and have an OK button?",
                "author": "AlfroJang80",
                "score": 1
            },
            {
                "body": "You should make sure Stripe only sets cookies (or makes any requests to their servers at all, really) if the user actually enters checkout, not if the user is just browsing.",
                "author": "Svizel_pritula",
                "score": 1
            },
            {
                "body": "So I can remove the 'Accept' 'Reject' options and instead re-phrsae it as \"\"We use cookies for the essential operation of the website, By browing you agree to our cookies use\"\n\nStripe is needed for payments.  \nFirst party cookie needed for logging in sessions  \nXSRF needed for security",
                "author": "AlfroJang80",
                "score": 1
            },
            {
                "body": "In my point of view you always have to have three options \"accept all\" \"cookies settings\" \"decline all\" , not only because probably in the future you will add a tracker but also to give more info about your essential cookies.  How you will organize the \"cookies settings\" is up to you , you can do it in categories with one \"yes\" / \"no\" option on each or by service (we do the latter). We put the essential cookies on top with a description what they are and why we need them , it has a deactivated \"no\" btn and it is always clicked to \"yes\" . Even in your case where there isn't anything else except the essential cookies would be great to have a button \"save my preferences\" to be ready for the future. This is just my opinion and how we do it. ",
                "author": "constcallid",
                "score": 1
            },
            {
                "body": "You‘re right. Only essential = no cookie Banner. Just a privacy policy link.\n\nImportant to say: lots of stuff people think is „essential“ isn‘t. (But not in this case)",
                "author": "philipp_roth",
                "score": 1
            },
            {
                "body": "Not sure OP would have control over this. It’s like just part of a standard integration.",
                "author": "martian_rover",
                "score": 1
            },
            {
                "body": "That’s a good point. OP you might want to check with the support team at Stripe. But if it’s just one cookie that’s used for payment and other “unnecessary” things, then it would still be considered a must use cookie.",
                "author": "martian_rover",
                "score": 1
            },
            {
                "body": "Thanks. I was pretty sure I was right but just wanted to be sure.",
                "author": "LegitBullfrog",
                "score": 1
            },
            {
                "body": "If your site uses essential cookies you do not have to show a cookie banner. Essential cookies are exactly the cookies you listed. \n\nAs long as you're not tracking or selling or sharing any of that data with a third party and all the cookies make the site function you don't have to show the banner.",
                "author": "rizzfrog",
                "score": 0
            },
            {
                "body": "1. This isn’t a web dev responsibility, it’s the responsibility of the data protection officer\n2. You don’t need to ask consent for functional cookies\n3. Use a consent management platform\n4. See point 1",
                "author": "shaqiriforlife",
                "score": -1
            },
            {
                "body": "To me, these cookies are essential. I can re-phrase it   \n\"We use cookies for the essential operation of the website, By browing you agree to our cookies use\" And then don't give the user any options to agree or disagree?  \nSince it is required for use.",
                "author": "AlfroJang80",
                "score": -7
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1696693966.0,
        "title": "\"Dear Stranger\" - I built a website where anyone could write and response to letters anonymously!",
        "author": "seanmic1",
        "id": "1729kmj",
        "selftext": "&#x200B;\n\nhttps://preview.redd.it/asm8k48eyssb1.png?width=1920&format=png&auto=webp&s=c914f08551d967518e427e44d70928b6521e112e\n\n(READ EDIT FIRST BEFORE YOU TRY IT)\n\nTry it out! -> [Dear Stranger](https://dear-stranger.vercel.app/)\n\nI built a web app on NextJS and I'm super proud to share it with you all! It's my first ever web app so feedback will be greatly appreciated.\n\n**What is Dear Stranger?**\n\nDear Stranger is about letting people send anonymous letters to be answered by absolutely anyone in the world! You can use it to share an idea, tell a joke, confess secrets, or really whatever it is you want to say. (As long as it's not offensive)\n\n**Why was it made?**\n\nI made this app because I wanted to get into web development, and I had this website idea for quite a while. I came up with the idea of Dear Stranger after I realized that there's really no place you can dump some idea and get a response about it. Technically you could just message random people on any social media platform, but no one would reply, and they can't reply anonymously. Thus, Dear Stranger was born.\n\n**How to use it?**\n\nTo write letters, just log in and start typing. To respond to letters, the same. Simple as that.You can optionally select a country to let those who read your letters / responses to know where you are from! When your letter recieves a response, you will recieve an email to let you know.\n\n**How was it built?**\n\nThe web app is hosted on Vercel and is built with NextJS, a React framework. It uses PandaCSS as the CSS component framework. For the backend, it uses the Prisma ORM to connect and send requests to an AWS RDS Database running PostgreSQL. It also uses NextAuth to handle User Authentication and nodemailer to send emails.\n\nEDIT:\n\nI got some comments pointing out it as not truly anonymous, and I agree and I'm sorry for not being clear about it as I didn't realize the implications of having a sign in.\n\nYou do have to log in because I was afraid of bot spam and malicious users, and I wanted a way to keep track of writers and responders. The only ones who can see the letters is just me, so when you are writing a letter, do keep that in mind moving forward. If you are still uncomfortable with that, then I understand.\n\nIf you have any idea on how you could better implement this anonymous messaging system, please do share with me!\n\nEDIT 2:\n\nu/___Nazgul has shared a better way of implementing \"shadow users\" to make it truly anonymous while preventing spam. So I thought I should give them a mention as thanks. Will work on this feature and will repost again once it's TRULY anonymous :D\n\nEDIT 3:\n\nMy post has blown up way more than I could've imagined, and thanks to the tremendous amount of feedback, I've managed to add some features since I've posted this:\n\n\\- A post/response limit (5 letters/responses an hour)\n\n\\- UI fixes particularly in mobile\n\nThanks again to those who support my app. It's given me a lot more motivation to work on it!\n\nHere are the features I will be working on to improve my app:\n\n\\- A better way to handle users (via anonymous users with option to sign in)\n\n\\- A filter to automatically remove spam/abusive content\n\nIf you'd like to help out, feel free to contact me, and my code is open-source, so feel free to check it out and contribute!\n\n[https://github.com/seanmic1/dear-stranger](https://github.com/seanmic1/dear-stranger)",
        "score": 229,
        "url": "https://www.reddit.com/r/webdev/comments/1729kmj/dear_stranger_i_built_a_website_where_anyone/",
        "num_comments": 106,
        "comments": [
            {
                "body": "\"...anonymously!\"  \n3 secondes later : Sign in with Google",
                "author": "Noxerlito",
                "score": 163
            },
            {
                "body": "The idea of the app is being anonymous, this takes that away. \n\nI was going to write something but I refused to proceed with sign in.\n\nYou can detect / prevent bots without sign in\n\n“Only info I take is name and email” 😂😂😂😂😂",
                "author": "___Nazgul",
                "score": 73
            },
            {
                "body": "but it requires sign in?",
                "author": "wuuuuuuuuuuu",
                "score": 46
            },
            {
                "body": "When a user writes a letter, he gets an unique ID assigned. You store that ID in the database and in their cookies. \n\nYou just created an “shadow user”.\n\nUse the ID to know which letter is for who. \n\nThis is how wordle works too, because they don’t make u sign in but your score and history stays with you",
                "author": "___Nazgul",
                "score": 44
            },
            {
                "body": "My bad. I've added an edit to clarify that it's not really anonymous, else I'll get spammed!\n\nI'm working on making it truly anonymous, but for now, sorry about that 😅",
                "author": "seanmic1",
                "score": 24
            },
            {
                "body": "Only then after, you can perhaps prompt user to optionally provide email to “secure” their responses if they like the app. This is better UX",
                "author": "___Nazgul",
                "score": 23
            },
            {
                "body": ">I didn't account for users not wanting to be linked with their letters.\n\nThe whole idea you portrayed was for users to post anonymous letters, which in turn, would usually lead to users sharing details that are sensitive or personal - ones they would not share if they knew it could get back to them.\n\nFurthermore, this is a great concept and I like the idea; I would have looked into responding to users' letters if I did not have to sign in.",
                "author": "TehSynapse0",
                "score": 21
            },
            {
                "body": "Sorry I didn't realize that my app is not really fully anonymous.\n\nCan you further elaborate on how letters could be responded to without emails? I saw in your other reply to use cookies, but how would that look like in the DB, etc.\n\nThanks for your feedback.",
                "author": "seanmic1",
                "score": 20
            },
            {
                "body": "Interesting! Thanks for the feedback, this is actually super useful for me. Will look into implementing this.",
                "author": "seanmic1",
                "score": 20
            },
            {
                "body": "The app is awesome ☺️, but from my personal experience making it truly anonymous will go a long way! Great idea",
                "author": "___Nazgul",
                "score": 18
            },
            {
                "body": "> \"Dear Stranger\" - I built a website where anyone could write and response to letters anonymously!\n\nHow does that differ from Reddit?",
                "author": "SaltineAmerican_1970",
                "score": 10
            },
            {
                "body": "Well for one, a letter can have only one response, and only you (the author) can view the letter. You also don't know who responded to your letter, unlike if you post in Reddit where you can see who your replier is and what else they might have posted.\n\nI guess you \"could\" make a throwaway account then post or message random people, but the replier(s) won't be anonymous unless they too are a throwaway account.\n\nHope that clears it up.",
                "author": "seanmic1",
                "score": 10
            },
            {
                "body": "no worry, just a little joke :p\n\nPretty cool idea though, nice work.",
                "author": "Noxerlito",
                "score": 10
            },
            {
                "body": ">How is that handled? It seems like if there was a breach, you'd be able to link letters to users.",
                "author": "TehSynapse0",
                "score": 9
            },
            {
                "body": "https://reddit.com/r/comics/s/ymRoeLo0nH",
                "author": "rebootyourbrainstem",
                "score": 6
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 5
            },
            {
                "body": "Not worth to share my email, but i like the idea.",
                "author": "montihun",
                "score": 5
            },
            {
                "body": "I appreciate the honesty, but i think you must find a way to anonymize it before you start advertising the app (don't lose people before you even start), good luck.",
                "author": "Previous_Analyst_461",
                "score": 5
            },
            {
                "body": "If not already done, an end-to-end encryption might be a good idea.\n\nI haven't tried it now, but it reminds me a bit of a penfriend app, except yours is probably more anonymous and not necessarily meant for making new friends.",
                "author": null,
                "score": 5
            },
            {
                "body": "<3",
                "author": "seanmic1",
                "score": 5
            },
            {
                "body": "I wrote a letter, then clicked respond to a letter, and the only letter I can respond to is… my own?",
                "author": "heelstoo",
                "score": 4
            },
            {
                "body": "I completely understand! I'm working on not requiring emails to use the web app. Ill keep you updated once it's done.",
                "author": "seanmic1",
                "score": 4
            },
            {
                "body": "Hello,\n\nLooks good. \nHowever, when you choose an option on the menu, the menu should close itself.\nAt leat on mobile, if I choose \"about\", I then have to press the screen behind to close the menu.\n\nAlso,on mobile, when the bottom letter is open, it gets into the bottom of the top letter. Maybe some padding could fix.\n\nAnyway, great idea, good implementation 👍👍",
                "author": "plastic_can05",
                "score": 3
            },
            {
                "body": "please sort the countries in the combobox ;)",
                "author": "byCrookie",
                "score": 3
            },
            {
                "body": "The idea is great. Although reddit is a bit of the same. I do not mind that I have to login, but why through google?",
                "author": "Puzzleheaded_Fan1234",
                "score": 3
            },
            {
                "body": "Stealth version of Slowly",
                "author": "post_scriptor",
                "score": 3
            },
            {
                "body": "May I recommend 2 different modes. One for anon users and one for logged in? People in the first usage group have to accept the risk of bots and malicious users. Or you might need to find a different way to get people signed up. As of now, the sign in CTA would definitely turning people away right off the bat",
                "author": "ramenAtMidnight",
                "score": 3
            },
            {
                "body": "its a nice idea. Good luck with the changes youre working on!",
                "author": null,
                "score": 3
            },
            {
                "body": "I like the concept, but I doubt the quality of letters as it’s anonymous. Oh and I immediately found a typo on sending: “[..] when your letter **gets** a response.”",
                "author": "maartuhh",
                "score": 3
            },
            {
                "body": "Nice. Fix margins and padding on buttons. Found some bugs on responsiveness.",
                "author": "cockerspanielhere",
                "score": 3
            },
            {
                "body": "Such a cool idea! Thanks for sharing",
                "author": "R0bot101",
                "score": 3
            },
            {
                "body": "Thanks!",
                "author": "seanmic1",
                "score": 3
            },
            {
                "body": "How is Reddit different from ancient forums?",
                "author": "peripateticman2023",
                "score": 3
            },
            {
                "body": "Btw if you like this app, you might also like Postcrossing: send and receive physical postcards with strangers :)",
                "author": "maartuhh",
                "score": 3
            },
            {
                "body": "I guess you need a way to send the responses back to the writer, how could you do that if it was completely anonymous? Just curious",
                "author": "ismaelgo97",
                "score": 3
            },
            {
                "body": ">I store the letters and link them to the email. So it's not \"true\" anonymity since I (and only I) can see the users and the letters they've written.\n\nSo it's not anonymous at all in any way shape or form? Great.\n\n>Please forgive me for not telling it earlier as I didn't account for users not wanting to be linked with their letters.\n\nSo what was the whole point of calling it \"anonymous\"? Just say you made a thing to write letters to random people.",
                "author": "repocin",
                "score": 3
            },
            {
                "body": "Take out the login",
                "author": "EggsandBaconPls",
                "score": 2
            },
            {
                "body": "Pretty cool, congratulations my man! I love the fact that you created something useful that's actually original and could be used in the real world. That's the way to learn programming and actually if you keep it up during the rest of your career you'll be better than most programmers and more importantly you'd achieve so so so much more things that truly satisfy you than most people in the industry at the moment.",
                "author": "WebDevIO",
                "score": 2
            },
            {
                "body": "All my excitement disappeared after seeing \"Sign in with Google\"",
                "author": null,
                "score": 2
            },
            {
                "body": "wait this is actually incredibly cool! will definitely have a look",
                "author": "itwasfunnyatthetime_",
                "score": 2
            },
            {
                "body": "looks like a very cool idea !  but to make it truly anonymous i think only need to remove  sign in with google ? either way this project is quite inspiring and gonna start on making smth innovative too !",
                "author": "FifaBoi11",
                "score": 2
            },
            {
                "body": "Tbh, I love your webapp , kinda refreshing somehow",
                "author": "CicadaCoder",
                "score": 2
            },
            {
                "body": "I also notice that once there's one letter remain to respond , that letter actually does not exist as it direct you to a 404 page that says \" There are no letters to respond to at the moment.\nPlease try again later! \"",
                "author": "CicadaCoder",
                "score": 2
            },
            {
                "body": "Use a real domain name would be my first piece of advice.",
                "author": null,
                "score": 2
            },
            {
                "body": "I’m just one person, but my feedback is I clicked a letter, saw the sign in and immediately clicked away",
                "author": "Top-Duck-7267",
                "score": 2
            },
            {
                "body": "If you can find a way to monetize it, you could end up in the \"Boring Cash Cow\" newsletter! Imagine! Your doing great!",
                "author": "MuralPassport",
                "score": 2
            },
            {
                "body": "might wanna toss an anti-hate-speech filter on that while you're at it",
                "author": "glisteningechidna",
                "score": 2
            },
            {
                "body": "Pretty cool, congratulations my man! I love the fact that you created something useful that's actually original and could be used in the real world. That's the way to learn programming and actually if you keep it up during the rest of your career you'll be better than most programmers and more importantly you'd achieve so so so much more things that truly satisfy you than most people in the industry at the moment.",
                "author": "WebDevIO",
                "score": 2
            },
            {
                "body": "Hahaha. Good ol internet. Its inevitable 😅",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Hey thanks for the feedback. Appreciated.",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Uff, I had a friend help me to create that part, and it looks like he sorted it by country codes! Will change it. Thanks for that!",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Fixed it and deploying as I'm typing this",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "I could have add all sorts of logins, but I kept it just as Google out of simplicity (maybe a hint of laziness haha). I will be removing/reworking the log in system altogether soon though.",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Yep, the anon user is the approach I'll go with. For now, I'll accept the loss of people as there's not much I can do about it until it's fully anonymous haha",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Yeah I acknowledge UI is still very noobish. Care to share which buttons and how I could improving them?",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Working on it!",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Haha thank you!",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Hmm I checked and it shouldn't be happening. I'll need some time to figure out why this is happening.",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Will update you once it is! ![gif](emote|free_emotes_pack|grin)",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "It’s got a shit-ton of JavaScript.",
                "author": "SaltineAmerican_1970",
                "score": 2
            },
            {
                "body": "Yeah I saw this too! I came across it when searching for websites with a similar idea to ensure my idea was \"original enough\".",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": ">Agreed! I initially thought of adding a limit, but I realized that for now, while there are less users and it's not very active, I don't really need to add such limit.\n\nMy only thoughts about this are it's better to have it and not need it, than need it and not have it.\n\nRate limits protect against DDOS attacks also, it's not just about how often legitimate users use the service.",
                "author": "VFequalsVeryFcked",
                "score": 2
            },
            {
                "body": "Yeah. Seeing how fast this post is going up, I'll implement one asap.",
                "author": "seanmic1",
                "score": 2
            },
            {
                "body": "Cookies",
                "author": "___Nazgul",
                "score": 2
            },
            {
                "body": "The website is under maintenance, does anyone know when is it gonna be on? cause i would love to participate",
                "author": "nissa1864",
                "score": 1
            },
            {
                "body": "do you want muinets or something like that do you ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever never ever ever been muinets leave right now please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please please leave right now please Neil Patrick Harris says do that do that do that do that do that do that do that do that do that do that do that ",
                "author": "Total_Row_3311",
                "score": 1
            },
            {
                "body": "is it still working? I tried to respond to a letter and was stuck in sending..",
                "author": "AggravatingBuddy6760",
                "score": 1
            },
            {
                "body": "Only thing working is the BUY ME A COFFEE button :/",
                "author": "AggravatingBuddy6760",
                "score": 1
            },
            {
                "body": "When I tried responding to a letter, it loaded a letter that I had sent earlier.",
                "author": "BossKrypton",
                "score": 1
            },
            {
                "body": "great idea stranger, and a decent site (as a start), wish you all the best with it, happy to help if you want to DM me:)",
                "author": "Top-Lemon-8616",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Cool idea, thank you. 😉",
                "author": "ManaPot",
                "score": 1
            },
            {
                "body": "I've never done anything with this, but it just makes more sense to either\n1. Limit the rate people can send letters\n2. Have some other service proof the message to make sure there isn't any profanity or other sensible information",
                "author": "LivingInAnIdea",
                "score": 1
            },
            {
                "body": "Nice! Reminds me of the good old Usenet Oracle: https://en.m.wikipedia.org/wiki/Internet_Oracle",
                "author": "Finn_Jay",
                "score": 1
            },
            {
                "body": "The country button and the visualisation of previous letters",
                "author": "cockerspanielhere",
                "score": 1
            },
            {
                "body": "I believe a good implementation to consider for detecting robots is to introduce hidden fields that these bots would fill out, while normal human beings could not. These fields wouldn't be required, but if a bot fills them out, especially common ones like \"website\" or similar, you could reject their requests. I'm confident that there are packages available to help combat spam without compromising the anonymity of the app. You can also employ other spam prevention measures, such as a reliable CAPTCHA solution. However, it's important to note that you won't catch every bot, especially the pesky human-controlled ones that aren't technically bots themselves. This is something to keep in mind for the future of your application. Your app is great, and you've nailed the concept, but there's always room for improvement, particularly in terms of privacy and security 😊",
                "author": "notsuperviral",
                "score": 1
            },
            {
                "body": "This is an awesome idea!",
                "author": "biscuitcleaver",
                "score": 1
            },
            {
                "body": "Love the idea. Once the site is actually anonymous I’ll absolutely try to respond to a letter.",
                "author": "should_have_been",
                "score": 1
            },
            {
                "body": "What if I don't use Google?",
                "author": "Wav3eee",
                "score": 1
            },
            {
                "body": "So I had this saved in my posts to go back to and re test. I went on the site and it stated that there was three letters to respond to. I clicked on respond to a letter and I was told There are no letters to respond to at the moment. Please try again later!",
                "author": "Aphor1st",
                "score": 1
            },
            {
                "body": "Ah hindsight is 20/20 my friend. It already gained this much traction, would be a shame to remove the post now. But I'm working on true anonymity as we ~~speak~~ type.",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Fixed both issues. Thanks once again",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Working on it!",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "No worries. Completely understandable ![gif](emote|free_emotes_pack|joy)",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Thank you so much for those words!",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Oops! forgot to reimplement that check it seems. Fixing ASAP.",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Thanks! Will contact you if I need help with anything.",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Ah shucks I dont have a place for that yet, will put that on the development list. For now I personally will message you if there are any updates. Thanks for being so interested :)",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "1. Agreed! I initially thought of adding a limit, but I realized that for now, while there are less users and it's not very active, I don't really need to add such limit. Once it becomes quite popular, or maybe down the road somewhere, I'll add a limit to like, 2-5 an hour, haven't really decided yet. Since I use AWS RDS I should be able to handle the current load and any single users spamming letters.\n2. That is my next feature to be implemented actually haha. I might use TensorFlow with some pre-trained model.",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Woahh thanks for this. It's basically my app but email style! hahaha\n\nI searched all over the internet for websites that might be similar to mine before I started development, but I guess I didn't search hard enough. Regardless, it's cool how ideas basically come back in new forms. Love this.",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Noted, will improve those :)",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Good idea on the hidden fields and captcha. Will look into it! Thanks for the feedback.",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Thank you!",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "just add captcha to counter bot, or use free cloudflare to filter the bots. google is not anonymous.",
                "author": "Royal-Stunning",
                "score": 1
            },
            {
                "body": "I just assumed that the messages from other users are stored in the database as plain text. If this is not the case, then you can forget my comment.\n\nhttps protects against man in the middle attacks or that sent messages are changed. However, https only applies between client and server. The server itself can see the message as plain text. That makes sense. After all, you have to be able to do something with it. So, it protects against programs like Wireshark.\n\nFor end-to-end encryption, the data must already be encrypted on the client side before the message is forwarded to the server.\n\nThe encryption does **not** take place on the server side.\n\nThis means that your database would then only contain encrypted messages. You can't read them anymore and protect the privacy of your users in case your database gets hacked.\n\nEvery active user on your server needs a public and private key. You can think of the public key as an open lock, which you can use to encrypt texts. This key is stored in your database. The private key must remain on the client side and must not go to the server. For this you use cookies. If this cookie is lost, all messages are lost as well. Works, as far as I know, the same way as with WhatsApp, which is why you lose your chat history when you reset your phone because you lose the private key.\n\nAs I said. It is easier for the user to simply lose their messages if they think they need to delete their cookies. Of course, the user-friendliness suffers for this.\n\nBut now the problem is that an asymmetric encryption (public/private key) can only encrypt short messages. That's why it is actually used to exchange a symmetric key (both users have the same key). These are only stored locally).\n\nI think, it should be enough if you just use an asymmetric method like RSA. You'll have to find out for yourself how exactly you want to do this.\n\nOne way to ensure that the user cannot lose his private key would be to use a password. This means that the private key is generated using a password and is therefore always the same. In this regard, look at the whitepaper I linked. There it should be detailed how to store the data persistently despite end-to-end encryption.\n\nIt's definitely not that easy if you've never had anything to do with it before. But the links should help. \n\nAlso remember that stored passwords are not encrypted, but hashed and salted. Also make it obvious that this generates the private key and therefore the password cannot be changed easily. But I think it would be theoretically possible if you just re-encrypt all messages. As I said, just play around with it in a test environment. Something like this is not done overnight.\n\nMake a plan how you want to implement the whole thing while you are playing around with it. Should help when it comes to the nitty gritty.\n\nSource / some nice links:\n\n[https://www.youtube.com/watch?v=AQDCe585Lnc](https://www.youtube.com/watch?v=AQDCe585Lnc) (Visual explanation of how symmetric and asymmetric encryption works)\n\n[https://www.youtube.com/watch?v=z2aueocJE8Q](https://www.youtube.com/watch?v=z2aueocJE8Q) (A little more detail, about symmetric and asymmetric encryption)\n\n[https://www.techtarget.com/searchsoftwarequality/definition/HTTPS](https://www.techtarget.com/searchsoftwarequality/definition/HTTPS) (How HTTPS works)\n\n[https://www.quora.com/What-is-the-difference-between-RSA-and-AES-GCM-encryption-Why-does-the-speed-of-encryption-vary-so-much-depending-on-the-machine-you-test-it-on-Is-there-a-universal-answer-for-this-question](https://www.quora.com/What-is-the-difference-between-RSA-and-AES-GCM-encryption-Why-does-the-speed-of-encryption-vary-so-much-depending-on-the-machine-you-test-it-on-Is-there-a-universal-answer-for-this-question) (difference between RSA and AES-GCM encryption)\n\n[https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/generateKey](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/generateKey) (How to generate a key)\n\n[https://dev.to/jrgould/use-the-web-crypto-api-to-generate-a-public-private-key-pair-for-end-to-end-asymmetric-cryptography-on-the-web-2mpe](https://dev.to/jrgould/use-the-web-crypto-api-to-generate-a-public-private-key-pair-for-end-to-end-asymmetric-cryptography-on-the-web-2mpe) (How to generate a key)\n\n[https://davidmyers.dev/blog/a-practical-guide-to-the-web-cryptography-api](https://davidmyers.dev/blog/a-practical-guide-to-the-web-cryptography-api) (How to generate a key, encrypt and decrypt data)\n\n[https://onboardbase.com/blog/rsa-encryption-decryption/](https://onboardbase.com/blog/rsa-encryption-decryption/#:~:text=Now%2C%20the%20big%20problem%20with,secrets%2C%20keys%2C%20and%20credentials) (How to use RSA in python. Although I only linked it to show again that the message length of RSA is limited)\n\n[https://security.stackexchange.com/questions/231818/how-to-secure-a-web-only-end-to-end-encrypted-chat-with-message-persistence](https://security.stackexchange.com/questions/231818/how-to-secure-a-web-only-end-to-end-encrypted-chat-with-message-persistence) (How to secure a web-only end to end encrypted chat with message persistence)\n\n[https://www.encryptedsend.com/encryptedsendwhitepaper.pdf](https://www.encryptedsend.com/encryptedsendwhitepaper.pdf) (Whitepaper which talks about how to do secure web only persistent end to end encryption)",
                "author": null,
                "score": 1
            },
            {
                "body": "Nice! Perhaps Passkeys are an option? Imho that's the future. Anyway keep up the good work. Your idea might work out great.",
                "author": "Puzzleheaded_Fan1234",
                "score": 1
            },
            {
                "body": "very good, i really like your idea, i tried it but the response i received was four random letters - have you thought about tagging your letters and maybe some form of validation of text in the letters? i only say this because i think your idea is good and with a little work could entice a lot of people who know about pen pals days:) best wishes",
                "author": "Top-Lemon-8616",
                "score": 1
            },
            {
                "body": "Yeah, I had many fun moments (instead of classes 🙂) with the Oracle in the early 90’s in the Uni, which is why I loved your idea immediately! It seems that the first incarnation was already mid-70’s, so it wasn’t exactly the newest thing even back then…",
                "author": "Finn_Jay",
                "score": 1
            },
            {
                "body": "It's anonymous between users. You can't know who will read your letters and vice versa, you don't know who wrote the letters you are responding to.\n\nHope that clears it up :)\n\nEdit: I will make it truly anonymous soon, will update you once it is!",
                "author": "seanmic1",
                "score": 1
            },
            {
                "body": "Ah yeah it's a bug at the moment. If that happens, do report so you get a new one.",
                "author": "seanmic1",
                "score": 0
            },
            {
                "body": "Interesting, care to elaborate on the end-to-end encryption? I'm not very knowledgable on that.\n\nTo my knowledge, your connection to the Vercel servers (which are running my app) are secured via HTTPS. And when you submit a letter, the create call is sent through a secured CRUD call to the AWS RDS server. Where could I implement an end-to-end encryption?",
                "author": "seanmic1",
                "score": 0
            },
            {
                "body": ">Slowly\n\nJust checked it out. Never knew about it but by the looks of it yeah my app is just that but a lot more watered down ![gif](emote|free_emotes_pack|joy)\n\nEdit: I also noticed that they too went with a yellow theme going on. Complete coincidence I swear!",
                "author": "seanmic1",
                "score": 0
            },
            {
                "body": "Thanks! I really appreciate your comment <3",
                "author": "seanmic1",
                "score": 0
            },
            {
                "body": "I understand. I've added an edit to clarify this.",
                "author": "seanmic1",
                "score": -3
            },
            {
                "body": "Tldr sounds amazing definitely will check it out shortly",
                "author": "karolololo",
                "score": -4
            },
            {
                "body": "I store the letters and link them to the email. So it's not \"true\" anonymity since I (and only I) can see the users and the letters they've written. I understand I should make a disclaimer there and I'll work on that ASAP.\n\n\r  \nEarlier in development, I was thinking about making it truly anonymous, but then the system can get attacked by spam and bad/malicious content. I don't want the website to have 4chan levels of anonymous posting. I wanted some form of user reporting and this was the way I went with it.\n\n\r  \nIf anyone has better ideas to increase anonymity but prevent spam/malicious content, please let me know.\r  \nPlease forgive me for not telling it earlier as I didn't account for users not wanting to be linked with their letters.",
                "author": "seanmic1",
                "score": -10
            },
            {
                "body": "Yes, just Google sign in to ensure users are not bots. And the only info I take is just the Google email and name. Nothing else :)",
                "author": "seanmic1",
                "score": -56
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1732772957.0,
        "title": "Noob here—why is my web app hitting database limits real quick? ",
        "author": "wonderland1995",
        "id": "1h1p5mh",
        "selftext": "Hi,\n\nI’m building a worker roster management web app with around 600 workers. Right now, every time I view the roster, it reads the entire database, and the reads quickly add up to the firebase free limit. This seems inefficient, but I’m not sure how to fix it.\n\nThe backend is on Railway, the database is on Firebase, and I’m considering moving to DigitalOcean for better scalability and cost control. Before making that move, I’d like advice on:\n\nHow to optimise database reads for a roster app.\n\nWhether moving to DigitalOcean or another platform would help with costs or efficiency.\n\nAny tips or recommendations? Thanks!",
        "score": 88,
        "url": "https://www.reddit.com/r/webdev/comments/1h1p5mh/noob_herewhy_is_my_web_app_hitting_database/",
        "num_comments": 70,
        "comments": [
            {
                "body": "Firestore has 50k reads per day limit on the free tier. That's a lot of reads if you are exhausting the quota on your own. Are u doing any query that's within a loop, like looping through all users and then getting the roster for each user? If so, sounds like you have N+1 problem.",
                "author": "newyearnewaccnewme",
                "score": 190
            },
            {
                "body": "This is what it sounds like to me. OP needs to learn joins and pagination.",
                "author": "watabby",
                "score": 115
            },
            {
                "body": "There are many solutions:\n\n- Don’t use Firebase and use a traditional SQL database that you control and won’t lock you out after querying 600 records at once \n\n- Throw a Redis cache in front of Firebase so you don’t keep spamming the database and instead read from a cache \n\n- Maintain another document in Firebase that has a list of all the 600 people, kind of like a listing page without the detail for each.\n\nEach of these have pros and cons. But at a high level, if you’re querying 600 items every second, rethink your app logic",
                "author": "Zachincool",
                "score": 60
            },
            {
                "body": "Not only that but once the app is started, cache the results so reads don’t hit the db multiple times. This has the added benefit of improving app response times (performance). It will consume more memory but that’s usually a small price to pay",
                "author": "MoreCowbellMofo",
                "score": 53
            },
            {
                "body": "OP is a beginner. These are more complicated than he's likely prepared to handle. He's probably missing some fundamentals and doesn't need a caching layer.",
                "author": "lax20attack",
                "score": 43
            },
            {
                "body": "If OP is having this level of trouble with queries, then caching will almost certainly lead to more trouble",
                "author": "halfanothersdozen",
                "score": 42
            },
            {
                "body": "Yup, my mind immediately jumped to N+1 problem. Bro could probably cut his database queries by 10x by doing a join",
                "author": "vannaplayagamma",
                "score": 22
            },
            {
                "body": "Its always similar in these posts, the answers are usually way to complex for the solution OP needs. If you answer is Redis its way too complex. \n\nThe top comment is right that 600 reads every load is a lot, and that you need to re-think the logic, the other 2 options aren't too bad thankfully in this case.",
                "author": "minimuscleR",
                "score": 17
            },
            {
                "body": "Joins to the initial query. \n\nWhat OP is probably doing is looping through each employee (using a query) and then doing another loop with each employee (using potentially a lot of queries per employee) to get additional data. \n\nThis results in a lot of reads\n\nThe efficient way to do this, would be to create a query that will SELECT the table for the employees (along with the data you want from it), SELECT the table you would be getting relevant employee data from, and JOIN them using something like employee.id (primary - foreign key relationship) \n\nThis results in the same data, but only one read required.",
                "author": "mattD4y",
                "score": 17
            },
            {
                "body": "What we did to optimize ours was define the logic to fetch the data once on a \"base\" component and implement a refresh data button so it doesn't refetch everything all the time.\n\nAlternatively, if you're using pagination it might be handy to make use of [Firestore's **.limit()** function](https://firebase.google.com/docs/firestore/query-data/order-limit-data) though it might be a bit tricky to implement.\n\nEdit: To add to this, [Query Cursors](https://firebase.google.com/docs/firestore/query-data/query-cursors) may be the best way to implement pagination using Firebase.\n\nAnother unhelpful tip is to just use the paid tier of Firebase if your app is in actual production. Companies should be willing to account for database costs to avoid interruption of service if it does go over the free tier's 50k limit, though your mindset of trying to optimize as much as possible is commendable and should be done anyways.",
                "author": "niye",
                "score": 15
            },
            {
                "body": "I don't use Firebase but it sounds like you're dealing with a trivial amount of data and users:\n\n1. Read less data. Properly designed schema and interactions, pagination, etc.\n\n2. Index the data. Less is more, or you'll kill write performance. From your usage patterns can you pick some key fields you filter on often?\n\n3. Put an in-memory read-through cache layer in between the database and the application. E.g. Redis or memcached.\n\nAs an aside, I've never heard of anyone use Firebase and not regret it. You might be better just setting up a database instance on a VPS yourself. I would usually say for the database that managed services are worth it (availability zones, upgrades etc) but services like RDS are expensive if your app doesn't make money, and you can always move to them later (with some pain). I'd run my own for now personally.",
                "author": "HashDefTrueFalse",
                "score": 13
            },
            {
                "body": "Since this is downvoted without explanation, would someone mind sharing how it should be done for people unfamiliar with it?",
                "author": "oalbrecht",
                "score": 13
            },
            {
                "body": "I’d recommend for future not using firebase or any NoSQLs dbs. Learn a relational database like Postgres.",
                "author": "Full-Tax6652",
                "score": 11
            },
            {
                "body": "It leads to one of the two main problems in computer programming, second only to naming things!",
                "author": "FlashbackJon",
                "score": 11
            },
            {
                "body": "The JSON and firestore dbs don't have joins in the traditional SQL sense. You can sort of mimic certain joins but it's quite limited.\n\nhttps://firebase.google.com/docs/firestore/query-data/queries\n\nBut Firebase is now offering to connect to Postgres in Google Cloud:\n\nhttps://firebase.google.com/docs/data-connect\n\nThose Postgres services are super expensive though.",
                "author": null,
                "score": 10
            },
            {
                "body": "use a proper database like Postgres or MySQL\n\nFirebase sucks for anything beyond very simple flat data models",
                "author": null,
                "score": 8
            },
            {
                "body": "true for a relational database, but OP is using a document store. might be using it as a relational database though, which isn't optimal for a few reasons",
                "author": "insta",
                "score": 7
            },
            {
                "body": "A few options:  \n\\- When you view the roster, you say you read the entire database, is this needed? How much data is actually needed for this view? Can you change the code so you only query the data that is needed?\n\n\\- If the data doesn't change all the time, you could cache it. Like in memcache, redis, apcu, or even in a file.\n\n\\- The best would be a combination of both",
                "author": "krazzel",
                "score": 6
            },
            {
                "body": "Firebase is a NoSQL so you actually can't do something like a join without doing an additional query.\n\nOP will have to make a new denormalized firebase document that basically contains a duplicate of all the data they want, so they can fetch it all in one request.\n\nThen they'll have to deal with consistency, since the same data is now getting duplicated across multiple documents anytime that data updates it will have to update all the documents it's included in.\n\nSo if you make an update to an individual item like a specific worker, that update has to also update the larger document of the full worker roster which contains a duplicate of that worker's data, and a duplicate of whatever else is needed in the fetch (eg store location, job role, etc).\n\nIn SQL you can join a worker table on a job role table, but in NoSQL you can't.  So you would create a whole new document that includes a duplicate of the worker data and a duplicate of the job role data.  Then any time you update a job role, you have to update the document of job roles, and also update the document of combined workers and job roles, etc.  \n\n\n\nThis type of duplication and additional data consistency logic is business as usual in firebase or any NoSQL type document database.  Just one of many reasons that SQL is actually what most people want 99% of the time, even if they don't realize it at the start.",
                "author": "qqqqqx",
                "score": 5
            },
            {
                "body": "you forgot the third one: off by one errors 😁",
                "author": "insta",
                "score": 5
            },
            {
                "body": "Does it need to read the enter database or can you scope down your query or cache the results?",
                "author": "armahillo",
                "score": 4
            },
            {
                "body": "are you being paid to develop this app?",
                "author": "TA_DR",
                "score": 4
            },
            {
                "body": "Exactly, there are few instances where more than 2 loops are needed, usually there are going to be better data structures or algorithms to use",
                "author": "mattD4y",
                "score": 4
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 4
            },
            {
                "body": "Prob would suggest adding some kind of limit to your reads if you must “read the entire database” for whatever reason.  Also caching with something like react query might help as well so you aren’t ref etching a preexisting cache of data",
                "author": "HornyShogun",
                "score": 3
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 3
            },
            {
                "body": "If you’re using a useEffect function make sure you’ve added a dependency array or you may end up in an infinite loop of db reads which will blow your allowance in seconds. I learned this the hard way",
                "author": "selfassemblykit",
                "score": 3
            },
            {
                "body": "I'm going to be as respectful as I possibly can be here, if you're not able to diagnose and debug this issue why or who is hiring you to build this web app?\n\nYou will almost certainly get other critical things wrong that will wreck your dataset at some point in the future, and it won't be pretty.",
                "author": "CobaltVale",
                "score": 3
            },
            {
                "body": "> How to optimise database reads for a roster app.\n\nNeed to see your source to actually help you on that one. Your code could be dog shit *and/or* your query could be dog shit. If it's a webapp consider going sqlite until you have things sort out?\n\n> Whether moving to DigitalOcean or another platform would help with costs or efficiency.\n\nNo one can tell you what the problem is without, ya know, seeing the problem.\n\nImagine you posted a question \"hey, my car is acting funny. Someone said it's the transmission. What do I do?\" - no one can work with that.",
                "author": "Hopeful-Sir-2018",
                "score": 3
            },
            {
                "body": "So I'm not too entirely sure why it is reading so much. with 547 employees i have the following fields: Employee Number, Name, Position, Roster, Section, Start Date, Supervisor, id.\n\nWhen i open the \"worker\" page on the webapp all workers are shown and can edit / terminate / add workers. It looks like thats where the bulk of my reads are. \n\nIn saying that should i make the workers all as one long field then?\n\nI'm happy with using firebase but just scared for when i go to the blaze plan it will overcharge me based on the inefficiencies in my code.\n\nBasically the intent of this web app is worker management. There are 3 main pages - leave form, workers, and roster. Esentially roster is just the viewport where the worker has a roster pattern and the frontend creates a roster and displays it on an AG-Grid Table. The leave form page functions by searching for a worker and adding a worker's leave + a signed form. I have this function working although the roster itself doesnt pick it up (it only shows the full roster). The worker page reads all workers and i think because i have each worker as a document in the collection it makes it inefficient.",
                "author": "wonderland1995",
                "score": 3
            },
            {
                "body": "Can I ask a stupid question, but when you say joins do you mean join additional tables to the query or filters to cut the size of the initial query?",
                "author": "VonD0OM",
                "score": 3
            },
            {
                "body": "firebase is a document store database. you're not really supposed to join with it. nosql is weird in that regard",
                "author": "insta",
                "score": 3
            },
            {
                "body": "Console log right before your calling Firebase line and see how many times the call is happening.",
                "author": "johnsonjohnson",
                "score": 3
            },
            {
                "body": "Just put your whole database into a single record, and only read that one record. Denormalization or something >!   /j    !<",
                "author": "StaticCharacter",
                "score": 2
            },
            {
                "body": "Cache your results to json.",
                "author": "Beerbelly22",
                "score": 2
            },
            {
                "body": "Sounds like you need help and shouldnt just go to a cloud, invest in knowledge or give more details, share a repository or smt",
                "author": "tommyxlos",
                "score": 2
            },
            {
                "body": "Really appreciate all the support. So it looks like my code is just inefficient and being the noob I am, I think I should just learn progresql on digital ocean with the $30 a month plan. That way I don't waste my time trying to make it more efficient with caching since it's a personal project. Also are there any resources where I can get assistance for snippets of code or like let's say assistance with a function or operation? Happy to pay not sure if Fiverr is the place to go for this...",
                "author": "wonderland1995",
                "score": 2
            },
            {
                "body": "Learn how to cache things.",
                "author": "clonked",
                "score": 2
            },
            {
                "body": "FYI to those who don’t know, the firestore dashboard counts towards your quota. Ask me how I know",
                "author": "bill_gonorrhea",
                "score": 2
            },
            {
                "body": "So the worker page is what's using all the reads up. essentially its showing all the workers we have. and these can be edited. when someone is edited wouldnt it need to read the whole database again? I'm really new to this stuff. I'm an electrical engineer and not even into software but trying to learn something new here.",
                "author": "wonderland1995",
                "score": 2
            },
            {
                "body": "\\+1, this could cost the client serious amounts of money.",
                "author": "TA_DR",
                "score": 2
            },
            {
                "body": "Flat file system!",
                "author": "tommyxlos",
                "score": 2
            },
            {
                "body": "It's not a matter of not paying. its if i do pay for it im going to be paying through the nose because of my data. With digitalocean, i'd still be payin gbut the speeds might not be that good.",
                "author": "wonderland1995",
                "score": 2
            },
            {
                "body": "Are you making sure that you’re saving the results of the first pull in memory (in a var) and not calling it every time the state refreshes? I’ve called 1000s of rows in Firebase on first load with 100s of fields in each, without even coming close to the limit.",
                "author": "johnsonjohnson",
                "score": 2
            },
            {
                "body": "Join additional tables to the query, though it can also be used as a filter I suppose.",
                "author": "EugenioSc",
                "score": 2
            },
            {
                "body": "Nope. this is just something im building rather than using excel cause the excel file is pretty heavy now. I'll happily pay out of my own pocket which i have been to make my life easier.",
                "author": "wonderland1995",
                "score": 2
            },
            {
                "body": "Ahh kk yes I understand now, thank you. \n\nAs I understand it, never go more than 2 loops deep. If you have to then you should refine your query data so that you no longer have to?",
                "author": "VonD0OM",
                "score": 2
            },
            {
                "body": "Few things I can think of:\n\n1) You are making some loops which are consuming precious calls, maybe you can batch queries against FB.\n\n2) Drop Firebase and look into another platform like instantdb.com I haven't tested them, but they are on my watchlist to play with.\n\n3) Since you are considering moving to DO, check their managed database feature, sounds like it's all you need.",
                "author": "kowdermesiter",
                "score": 1
            },
            {
                "body": "Add index or split read and write items with different tables",
                "author": "lingwang1103",
                "score": 1
            },
            {
                "body": "Probably a N+1 problem.",
                "author": "Original-Use8965",
                "score": 1
            },
            {
                "body": "There is a lot of good advice here already.\n\nYou could drag the offending file into Claude and ask it the same question. First ask why it's inefficient to understand the problems so you learn for next time... Then ask it to recode it.",
                "author": "lumponmygroin",
                "score": 1
            },
            {
                "body": "Firebase has a few gotchas. If you're doing sessions you can only stay active for an hour before it will require you to re pull the database info it is holding onto this can add up quite quickly. I got around this by booting inactive users to ensure they weren't idling and refreshing every hour automatically.",
                "author": "Latter-Oil7830",
                "score": 1
            },
            {
                "body": "Just implement caching and cache it forever. In .net I recently learned to do it and it works great, both speeding up my app and saving on db trips.",
                "author": "bluMarmalade",
                "score": 1
            },
            {
                "body": "Use a relational database, normalise the entities and consider your queries carefully. Prefer set based operations over looping structures that process 1 thing at a time.",
                "author": "Tetraprogrammaton",
                "score": 1
            },
            {
                "body": "Stop expecting a real product to use free tier anything. Pay for your services just as you expect to be paid for the ones you provide.",
                "author": "SixPackOfZaphod",
                "score": 1
            },
            {
                "body": "This is a helpful explanation of the N+1 problem.",
                "author": "james-has-redd-it",
                "score": 1
            },
            {
                "body": "Why is he retrieving 600 records in the first place? He could also improve performance by using pagination.",
                "author": "Crazy-Mission-7920",
                "score": 1
            },
            {
                "body": "Don't learn on digital Ocean, install postgresql locally and then learn. This way you won't only learn the database but also learn about how to set it up and configure. Remember managed databases are only convenience, a good dev should be able to work with managed database as well as non-managed database. Furthermore managed databases cost comparatively way more, for example as you said that managed database plan cost $30, in less than that you can have vps running your whole app including frontend, backend, and database.\n\nTLDR: Learn to do things from scratch rather than using pre-made solutions. Pre-made solutions are excellent value addition and can save you so much time but for learning you must start from the basics.",
                "author": "Lone_Admin",
                "score": 1
            },
            {
                "body": "What i understand from caching is that it probably wont work in my use case or i might be wrong. So basically in the workers page if i want to edit a worker's details it will pull all the workers and display them in the table, i click edit worker and then itll write that worker only then it will have to pull all workers again to refresh and display the change.",
                "author": "wonderland1995",
                "score": 1
            },
            {
                "body": "What you can do is put all the workers in a cache. \n\nSo every view just gets them from the cache not the DB.\n\nYou could refresh the whole cache once an edit has been made.\n\nIf that still causes a lot of DB reads, because of a lot of editing, you can do this: For each edit, update the worker in the DB, and update the worker in the cache. This could get complicated though if there are relations and you also have to update them.",
                "author": "krazzel",
                "score": 1
            },
            {
                "body": "Ah, I'm so used to Supabase I forgot that Firebase is NoSQL. Yes, then in that case he'd have to do the join \"beforehand\", by creating documents that he wants for each query and carefully updating all the right documents every time some field changes",
                "author": "vannaplayagamma",
                "score": 1
            },
            {
                "body": "Is the idea that these additional tables are indexed with data from the User info?",
                "author": "VonD0OM",
                "score": 1
            },
            {
                "body": "Oh that's cool, I'm glad to see non-devs using these technologies.\n\n\nIf file size and number of queries are starting to be a concern then I believe you should look into SQL (with a focus on indexing and optimized queries). With that knowledge you probably won't need to spend more money on computing power.",
                "author": "TA_DR",
                "score": 1
            },
            {
                "body": "You’re right, totally missed that he was using firebase. \n\n\nFor future readers \n\nYou can def expect a lot more reads from a document store vs a relational db (getting images for a single timeline on a social media site for example) but even then 50,000 a day, (500 users getting 100 post on their timeline everyday could hit that easy) but if you’re not producing some sort of revenue to cover those cost, you gotta figure that out, and even then, you should have some sort of caching service for recent/heavily viewed stuff so you wouldn’t even have to make those extra reads, as others have mentioned above",
                "author": "mattD4y",
                "score": 1
            },
            {
                "body": "true, but i thought it was funny that was the one they missed as well",
                "author": "insta",
                "score": 1
            },
            {
                "body": "I had this issue recently. Firebase is actually a powerful tool.\n\nI even made a thread: [https://www.reddit.com/r/reactjs/comments/1gr6gfm/backend\\_woes\\_from\\_a\\_frontend\\_dev/?utm\\_source=share&utm\\_medium=web3x&utm\\_name=web3xcss&utm\\_term=1&utm\\_content=share\\_button](https://www.reddit.com/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button)",
                "author": "okramv",
                "score": -5
            },
            {
                "body": "fire base? moneh woo.get posgress or mysql",
                "author": "alien3d",
                "score": -7
            },
            {
                "body": "I don't think firebase db supports joins",
                "author": "21stCenturyNoob",
                "score": -17
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1695415288.0,
        "title": "Why I hate cloud development....",
        "author": "abrandis",
        "id": "16pktou",
        "selftext": "So today I spent a good half hour wondering where the fck , the Azure Active Directory entry went in Azure portal, I finally found it under Azure AD is now Microsoft Entra ID , why? There's a whole marketing puff piece explaining why MS made the change... \n\nKeeping track of all these on going changes and service adjustments and limitations mean I'm doing zero development and 100% devops and network/system config., any productivity I had on pren or even just using a traditional Vm goes out the window with a completely integrated cloud app.\n\nWhy again do people find the cloud so appealing ? when so much time is needed to keep up with all this nonsense... because coding and managing your own app wasn't work enought, now you need to babysit the cloud platform whenever Microsofts marketing team gets an itch....",
        "score": 261,
        "url": "https://www.reddit.com/r/webdev/comments/16pktou/why_i_hate_cloud_development/",
        "num_comments": 88,
        "comments": [
            {
                "body": "I just use a Linux VPS (Mostly Ubuntu). Hosted on Linode. And SSH from terminal. Have always worked and will always work.",
                "author": "One-Spaghetti",
                "score": 154
            },
            {
                "body": "That isn't cloud development, that is cloud Ops maintenance. When you have to login and administer AD groups/users, you are not developing. You are doing OPs work.\n\nCloud dev work is building pipelines to orchestrate releases, orchestration, deployment and scaling of your app. And you hardly ever log into the web console. You are writing out yaml files and running bash (powershell script) to automate.",
                "author": "originalchronoguy",
                "score": 113
            },
            {
                "body": "After doing AWS for a while now, I don't even view it as \"the cloud\". These days I view it as The AWS Framework.\n\nThings like Wordpress, .NET, Django, Laravel, etc. are all just abstraction layers between you and the code you're developing. I really don't see how AWS is any different, with the exception that the scope is on another order of magnitude above the others.\n\nYou end up having to deal with the whims of someone else adding new features, occasionally tweaking existing features in strange ways.",
                "author": "Mike312",
                "score": 100
            },
            {
                "body": "What you are calling cloud dev is actually cloud ops, and what you are calling cloud ops is actually called cloud administration 😃",
                "author": "LightofAngels",
                "score": 90
            },
            {
                "body": "Having been doing on-prem development for god knows how many years and having moved to Azure for our company over the past year... I can't imagine going back to On-Prem.  Oh, I need a service bus and a new redis instance?  Cool, let me click a few things and get IT to sign off on it.  \n\n\nGrass is always greener and whatnot",
                "author": "Rivvin",
                "score": 87
            },
            {
                "body": "Azure. Enough said.",
                "author": "Xerxero",
                "score": 43
            },
            {
                "body": "Aaaand this is why I moved to “IaC” solutions..\n\nUse tools that manage cloud infrastructure via APIs and treat it as an integral piece of code of your app that requires upkeep and maintenance.. Instead of wasting time on ever changing UI/names (regardless of platform)",
                "author": null,
                "score": 39
            },
            {
                "body": "And this is much cheaper\n\nBtw check out Hetzner",
                "author": "x1-unix",
                "score": 26
            },
            {
                "body": "Do you mean [Hetzner?](https://www.hetzner.com/)",
                "author": "BeYeCursed100Fold",
                "score": 26
            },
            {
                "body": "\"Infrastructure as Code\" essentially does turn cloud providers like AWS into frameworks.",
                "author": "Memeboy2003_",
                "score": 24
            },
            {
                "body": "I’m not sure you understand what “cloud” means these days. How are you ssh’ing into dynamodb instances run on machines you don’t have access to and honestly I’d be surprised if ssh was even running on the portion running your instance/s",
                "author": null,
                "score": 20
            },
            {
                "body": "Yeah, not to mention that every on-prem I've ever worked with wasn't just difficult to scale but usually ends up clunky and difficult to support.\n\nCloud has some serious onboarding (especially if you are used to one platform and then need to work on a different one), but is spinning up new instance so much easier.",
                "author": "Naudran",
                "score": 19
            },
            {
                "body": "Terraform just changed to a more restrictive license.\n\nUse OpenTofu instead https://opentofu.org/",
                "author": "uber33t",
                "score": 19
            },
            {
                "body": "Yep, Terraform is one good cloud-agnostic example of IaC https://www.terraform.io/",
                "author": "clearlight",
                "score": 18
            },
            {
                "body": "Probably creating things like AWS Lambda functions would be defined as cloud dev",
                "author": "Naudran",
                "score": 11
            },
            {
                "body": "Yep, I’m not affected by the licence changes but opentofu is a reasonable alternative. More info here \n\n> Who is impacted by this change?\n\n> Organizations providing competitive offerings to HashiCorp will no longer be permitted to use the community edition products free of charge under our BSL license.\n\nhttps://www.hashicorp.com/license-faq",
                "author": "clearlight",
                "score": 10
            },
            {
                "body": "Seems like software development is more about configuring cloud services and DevOps stuff. I hate it also… the only satisfaction I get is when working on my personal projects.",
                "author": "Automatic_Error_4497",
                "score": 9
            },
            {
                "body": "Also, it aint cheap.",
                "author": null,
                "score": 8
            },
            {
                "body": "Hertzer 😂😂😂😂",
                "author": "GunslingerParrot",
                "score": 8
            },
            {
                "body": "Yah I 100% agree... that is why cloud providers make their money, and why a lot of org buy into it.\n\nThat being said there are still some hardcore devs out there that have the *I will build the entire stack myself in rust, and it will be cheaper and better than anything AWS can offer.*  \n\n\nGenerally these people are not dealing with any kind of serious scale either.",
                "author": "versaceblues",
                "score": 8
            },
            {
                "body": "Similar background, same sentiment. I feel like the whole industry has lost sight of what webdev used to be and how much you can actually accomplish without layers upon layers of service dependencies and abstractions. Many developers today grew up in this already muddled ecosystem and don’t realize that not everything has to be so complicated.\n\nI also feel that all this extra stuff is creating the very same “scale problem” it purports to solve. Meanwhile, most devs I know don’t know how read an EXPLAIN or write a SQL query that’s more than a couple simple JOINs.",
                "author": "Knotix",
                "score": 7
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 6
            },
            {
                "body": "Pulumi?",
                "author": null,
                "score": 6
            },
            {
                "body": "There is cloud development, but it just isn’t what the commenter said it is.",
                "author": "LightofAngels",
                "score": 6
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 5
            },
            {
                "body": "What you’re calling cloud administration is actually called cloud framework operations concierge.",
                "author": "Beezzlleebbuubb",
                "score": 5
            },
            {
                "body": "I think what they are saying is that they doesn't use the managed solutions, and rather opts to run raw servers they configure and manage themselves. \n\nThis is totally possible, AWS even lets you reserve bare-metal EC2 instances if this is what you really want to do.\n\nIn some ways its fine, especially if you are a solo developer that knows the ins/outs of your stack. For most people though, using the managed services will save a ton of headaches.",
                "author": "versaceblues",
                "score": 5
            },
            {
                "body": "Ehhh not even sure it’s comparable. There’s a great deal of resilience out of the box for things like sqs retries and whatnot that would take more time than any single person has to remake",
                "author": null,
                "score": 5
            },
            {
                "body": "I’m just talking shit. But thank you for clarifying.",
                "author": "Beezzlleebbuubb",
                "score": 5
            },
            {
                "body": "Correct, or to put it simply , cloud dev is anyone who design applications in a cloud native way, aka—> it should be scalable, highly available, resilient , fault tolerant, and more importantly distributed with resource optimized usage.",
                "author": "LightofAngels",
                "score": 5
            },
            {
                "body": "I literally just wrapped up working late dealing with Google cloud DNS and zones. The documentation is so awful. I can't even see how to get records and it's so abstract with enterprise level function overloading. That's just one of the apis they provide. The others in the suite are just as complicated. Some of the configuration doesn't even work and I have to use a parallel api to create the DNS zone before I can start working with it. It's like this for a lot of the tasks I need to do working with GCS. Not to mention the service account key that doesn't take an object or json but a json file. Yes it requires a file for some reason to get authenticated so you can then setup scopes. I hate dealing with azure and aws too but they all suck either way.",
                "author": "Majache",
                "score": 4
            },
            {
                "body": "Bro is deving like it’s 1990./how are you provisioning instances in a provider agnostic manner.\n\nWould love to see an example of what you are even talking about here",
                "author": "Turd_King",
                "score": 4
            },
            {
                "body": "I think they meant [Herzog](https://en.wikipedia.org/wiki/Werner_Herzog)",
                "author": "westwoo",
                "score": 4
            },
            {
                "body": "This just begs the question, how would you define cloud dev then?",
                "author": "IStoodAlone",
                "score": 4
            },
            {
                "body": "I feel the same way. I don't know why people are crazy about the cloud development. If we had a lot of people like you, we would save people time and money building a cloud...",
                "author": "hyeonho64",
                "score": 3
            },
            {
                "body": "What are you trying to do? Develop or administer?",
                "author": "BitJunky7",
                "score": 3
            },
            {
                "body": "I work in cloud consulting. One of the most common projects we get is solving issues related to people who wanted to work in cloud then shoving their projects into VM’s or EC2s and calling themselves cloud capable. People hate cloud because it’s marketed as being simple and easy to use for a newcomer, when, in reality it is not. Each cloud requires expertise and skill level depending on the role a developer performs in the cloud. Development teams are thrown into the deep end as if cloud is just another server, and they wrestle with it to make it a shell around their existing application. Worse, some over-eager senior engineer obsesses over a single service, such as VPCs, and over-engineers and applies it to everything, leading to an expensive over optimized nightmare.\n\nA good cloud system is defined entirely in IAC. A dedicated DevOps or Platform person handles envs, so developers can continue to do their work.",
                "author": "cjrun",
                "score": 3
            },
            {
                "body": "That's awesome that you have the resources to do that.  For us it makes less sense because the most we can get from our own datacenter is some bare metal servers with minimal management help, so as devs using Azure basically gives us control of our own destiny.\n\nEdit: it's also insanely cheaper for us because we can scale without having to own the hardware to scale out",
                "author": "Rivvin",
                "score": 3
            },
            {
                "body": "Works great I less you want to run a plex server...",
                "author": "midri",
                "score": 3
            },
            {
                "body": "According to a devops expert I saw on YT pulumi is not good since no one knows javascript or c#. I don't think he really is an expert...",
                "author": "ShittyException",
                "score": 3
            },
            {
                "body": "So are you saying “cloud dev” isn’t really a thing?",
                "author": "Lightbulb_Panko",
                "score": 3
            },
            {
                "body": "They said \"Hertzer\"\n\nhttps://wikipedia.org/wiki/Heinrich_Hertz",
                "author": "BeYeCursed100Fold",
                "score": 3
            },
            {
                "body": "It was more to the point that Plex has announced they're blocking people from hosting on Hetzner.  \n\n\nhttps://lowendbox.com/blog/plex-blocks-hetzner-in-move-against-piracy/",
                "author": "midri",
                "score": 3
            },
            {
                "body": "That I did not know. Weird move by Plex.",
                "author": "One-Spaghetti",
                "score": 3
            },
            {
                "body": "Sorry but I use about 50 cores, +-1tb of data and +-150gb of ram 24/7 and managing it myself probably saves me 80-100 000$/year.\n\nIt's infinitely cheaper for me to just grab a few servers and run my scripts to setup everything and self manage it.",
                "author": "human8264829264",
                "score": 3
            },
            {
                "body": "Yea that’s fairly small beans. I am sure it’s cheaper since it sounds like it’s built for your exact work flow",
                "author": null,
                "score": 3
            },
            {
                "body": "Nah, developing with Azure is great!",
                "author": "fieryscorpion",
                "score": 2
            },
            {
                "body": "You automate everything with Terraform",
                "author": "KauppisenPete",
                "score": 2
            },
            {
                "body": "Terraform is your friend, stop trying to use the UI and stand up new infrastructure in minutes with a script.",
                "author": "thetotalslacker",
                "score": 2
            },
            {
                "body": ">So today I spent a good half hour wondering where the fck , the Azure Active Directory entry went in Azure portal\n\nI remember having to spend a 2 days trying to find some obscure legacy server that we lost track of. Ended up having to scan IP ranges and checking all the IP addresses that we didn't have listed in our documentation.\n\n&#x200B;\n\nIf you can have a seriously talented and dedicated team to manage your on-prem, yea you're better off creating your own ivory tower that's perfectly tailored to your needs and workflows, but that sorta thing is far from easy or typical. The choice between on-prem vs. cloud isn't so obviously one sided.",
                "author": "SpookyLoop",
                "score": 2
            },
            {
                "body": "Out of all the things to complain about with Azure, a minor and previously announced name change is really not one of them.",
                "author": "Frown1044",
                "score": 2
            },
            {
                "body": "Same here, all I know is I'm supposed to use version control instead of FTP now.",
                "author": "franker",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "I run a plex server off a Rasbperry Pi locally as an access point. Or else i just use my Proxmox server running on an Intel Nuc.",
                "author": "One-Spaghetti",
                "score": 2
            },
            {
                "body": "Hilarious!",
                "author": "SON_OF_ANARCHY_",
                "score": 2
            },
            {
                "body": "Haha, thanks for the laugh! By the way, if anyone's interested in contributing to my GitHub project, the link's in my profile",
                "author": "SON_OF_ANARCHY_",
                "score": 2
            },
            {
                "body": "You can use other languages",
                "author": null,
                "score": 2
            },
            {
                "body": "No worries mate.",
                "author": "BeYeCursed100Fold",
                "score": 2
            },
            {
                "body": "Think they meant [Hertz](https://en.m.wikipedia.org/wiki/Hertz_Global_Holdings).",
                "author": "jonnyman9",
                "score": 2
            },
            {
                "body": "Haha glad I'm not the only one who noticed that thread was like that \"a jackdaw is not a crow\" copypasta",
                "author": null,
                "score": 2
            },
            {
                "body": "Yea sounds interesting and fun but I would never recommend doing that for any large data requirement projects",
                "author": null,
                "score": 2
            },
            {
                "body": "... \"the Azure\"\n\nI stopped reading right there.\n\nYou know that Microsoft is SO known for this that there was a joke about it by 1995?\n\n\nQ: How many Microsoft engineers does it take to change a light bulb?\n\nA: None; Microsoft has changed the standard to 'darkness'.\n\n\n*Microsoft* is known for this... *the cloud* is not.",
                "author": "Alucard256",
                "score": 1
            },
            {
                "body": "I mean they did send a bunch of emails about it beforehand…",
                "author": "discosoc",
                "score": 1
            },
            {
                "body": "Just kubernetes on vultr",
                "author": "WeedLover_1",
                "score": 1
            },
            {
                "body": "SASS services really ease the pain of thecloud",
                "author": "vsilvestrepro",
                "score": 1
            },
            {
                "body": "It’s either that or develop your own identity platform 🤷‍♂️",
                "author": "Fitbot5000",
                "score": 1
            },
            {
                "body": "Cloud development: Where finding your tools is a treasure hunt, and every day is a surprise party! 🎉😒",
                "author": "beniamin-marcu",
                "score": 1
            },
            {
                "body": "Vmware always changed things every year when i did on prem stuff years ago. Doesn’t seem unique to MS",
                "author": "Trakeen",
                "score": 1
            },
            {
                "body": "And we wonder why products like vercel are so popular nowadays.",
                "author": "Dougw6",
                "score": 1
            },
            {
                "body": "I have been arguing for a few years now that the industry is ripe for a massive overhaul due to over engineering every damn thing.\n\nIt was like a job security thing but then they even messed that up with AI and the looming automation wave that will make jobs vanish in the coming years.\n\nPeople have made so many redundant and over complicated things in the industry chasing money instead of making technology more inherently simple and straight forward.\n\nUntil we figure out a better way, there will continue to be redundant and silly gimmicks just to sell stuff that really does not do much / is just a bunch of fluff to pad peoples egos and print money for themselves - not solve real technical problems in the best and most efficient way or without causing more problems in the future.\n\nBut hey we updated the color scheme and moved some buttons around on this release!\n\nOr here let me make up yet another gimmick so called new tech just to push it on top of other tech layers no one is still fully optimized on and they still have tons of technical debt with just to justify another paycheck or sales commission for doing something.\n\nA lot of stuff is the exact same thing (does the same thing or serves same purpose but just rebranded) just called something else.\n\nJust a huge dog and pony show IMO.",
                "author": "RationalDelusion",
                "score": 1
            },
            {
                "body": "Working for an IT integrator that has its own IAAS team that runs a virtualization platform, we have all our dev things on prem and still the flexibility and scalability (to a point) of an AWS.. I don't think I'd want to go cloud.",
                "author": "chrisnlnz",
                "score": 1
            },
            {
                "body": "Yup, wayyy better.",
                "author": "footballisrugby",
                "score": 1
            },
            {
                "body": "[Infrastructure as Code](https://en.wikipedia.org/wiki/Infrastructure_as_code) for those wondering.",
                "author": null,
                "score": 1
            },
            {
                "body": "A cloud devops or cloud architect or certainly a platform developer would care more about deployment orchestration stuff. Cloud dev is not different than other dev as far as writing code and testing it. We are writing and maintaining software systems in code and defining those services within an IAC template. A cloud dev understands the managed services that exist(s3, lambda, sqs, permissions, api gateway, databases, etc) to support their work and how to interact with those services in code. I have a codebase. I make a change. I unit test. I deploy it. All of my resources are deployed to my environment. I can version control my code and automate deployments to various environments, same as a “non-cloud” dev.",
                "author": "cjrun",
                "score": 1
            },
            {
                "body": "Agree a big part of the cloud is about vendor lock in, it's not by accident that running full blown VM is more expensive than. Cloud specific services.. it all goes through the same silicon, but they know when you tie yourself to a particular cloud product you aren't leaving, what I don't understand is why executives at big corporations don't know or care about this, and then complain when cloud costs skyrocket",
                "author": "abrandis",
                "score": 1
            },
            {
                "body": "Just use old way; nothing wrong with it. It works for majority of sites. At the end of day it will be rendered into HTML, more or less.",
                "author": null,
                "score": 1
            },
            {
                "body": "I just call it cloudy, simple.",
                "author": "ShittyException",
                "score": 1
            },
            {
                "body": "Nice I mostly like it as well. We do get some state out of sync bugs on occasion",
                "author": null,
                "score": 1
            },
            {
                "body": "Nop, cloud administration is everything that is related to user management and user access control lists + RBACs",
                "author": "LightofAngels",
                "score": 1
            },
            {
                "body": "That was not the point...",
                "author": "ShittyException",
                "score": 1
            },
            {
                "body": "This is the way",
                "author": "dragenn",
                "score": 0
            },
            {
                "body": "Yeah no it is definitely a nice situation - we have our network and iaas teams who worry about the racks in the data centres, I wouldn't want to have to go to that level, then cloud would clearly be preferred. The lowest level our dev team goes to is on the VMs itself, configuring nginx proxies and get the apps to run, etc.",
                "author": "chrisnlnz",
                "score": 0
            },
            {
                "body": "Yep, made a typo (I'm using an old laggy af phone atm, so typing on it is a nightmare)",
                "author": "x1-unix",
                "score": 0
            },
            {
                "body": "DevOps teams should be automating a ton of your cloud things / infra for you.\n\nShould be almost no impact to developer. Where I work all the devs have to worry about is providing env vars or required secrets, and commiting to their feature and reviewing/opening prs.\n\nThey have access to cloud watch and grafana to see logs/alerts/metrics.\n\nWhen done right cloud is fu*king amazing.",
                "author": "MrGarzDU",
                "score": -1
            },
            {
                "body": "Wait people still use Azure? It's been years since I last heard of it.",
                "author": "viruxe",
                "score": -2
            },
            {
                "body": "I'm sure it was just a typo\n\nBtw check out Herzog",
                "author": "westwoo",
                "score": -3
            },
            {
                "body": "I'm just amazing at everything cloud and never have issues must suck to suck",
                "author": "Cyberican",
                "score": -12
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -16
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1714968187.0,
        "title": "Digitalocean blocked my account. This is concerning.",
        "author": "SurelyFML",
        "id": "1cl9zw0",
        "selftext": "Hey there 👋\n\nI was checking out AWS and DO for a side project. Initially, went ahead with AWS but decided to switch to DO for its simplicity. But I could never access my DO account. When I contacted their support team, I received the following email from them. As far as I can remember, I merely opened an account on DO, connected my card with the account and never deployed anything.\n\nRegarding this, I'd like to know:\n\n1. Anyone here faced the same issue?\n2. I have deployed several apps/websites on DO for clients. Can this randomly happen to legit production servers as well?\n3. Any other simple alternatives to DO? I need a VPS service. (Kindly exclude AWS, Azure and GC from your recommendations)\n\nThanks, waiting for your inputs.\n\nhttps://preview.redd.it/cnwat157bqyc1.png?width=765&format=png&auto=webp&s=42fa21114b75efa4f36ea27c48b2c2f8da15d782\n\n🚨🚨 RECENT UPDATES 🚨🚨\n\nI replied to the above and received the following response:\n\nhttps://preview.redd.it/r53cgczq3uyc1.png?width=744&format=png&auto=webp&s=55a14aa84e2dcce016fef34db8d655ccb5def8c9\n\nI didn't respond to the above and almost 3 hours later..\n\nhttps://preview.redd.it/alxxt1ox3uyc1.png?width=755&format=png&auto=webp&s=f984e5800231e0bf2bf1bff1096c6e47d7174434\n\nNot sure what \"card flagged as fraudulent by card issuer\" means since I am using the same card for few other DO accounts.\n\nAnyways, I am glad this issue is resolved and a big thanks to the support team for prompt action. A bigger thanks to you all for sharing your experiences, thoughts and advices 🙌 🙌 🙌",
        "score": 134,
        "url": "https://www.reddit.com/r/webdev/comments/1cl9zw0/digitalocean_blocked_my_account_this_is_concerning/",
        "num_comments": 86,
        "comments": [
            {
                "body": "Happened to me a few years ago--signed up, added credit card, deployed absolutely nothing, and got instantly blocked with this exact email. I followed up a few times and got nowhere. I did some googling and found some instances of DO shutting people down who actually had deployed production applications and then couldn't get their accounts unbanned, which led to them losing a bunch of uptime. Since then, I've never used or recommended them to anyone again; it's just not worth the possibility that you might randomly wake up to a dead account one day.\n\nIt seems like their human review process is seriously lacking--fantastic way to lose goodwill with developers.\n\nI opened a Linode account right after my DO one got arbitrarily closed and they've been running all my VPS stuff stress-free for years now.",
                "author": "thewhiskeyrepublic",
                "score": 71
            },
            {
                "body": "It seems odd they can’t unlock the account after human review. That’s concerning.  \n\nedit: after OPs update it looks as though they have regained access to their account. That’s good to hear and a relief.",
                "author": "clearlight",
                "score": 65
            },
            {
                "body": "Guess this is your cue to use AWS instead, I would consider it lucky you have it happen to you before you deployed anything.\n\nYou're probably collateral damage in their automated war against bad actors. Are you behind a VPN or is your ISP using a CGNAT? Maybe you used a disposable credit card?",
                "author": "267aa37673a9fa659490",
                "score": 62
            },
            {
                "body": ">As far as I can remember, I merely opened an account on DO, connected my card with the account and never deployed anything.\n\nWas the account secured? 2FA? Authenticator? Ever get an invoice and not notice it? \n\nHow long ago?",
                "author": "NuGGGzGG",
                "score": 57
            },
            {
                "body": "I had the same issue, I just had a simple app running on a server (properly secure and nothing fishy) and got the same email.\n\n\nI find it ridiculous that they block accounts and don't provide any reason just like that.\n\nMoved on to Vultr and never looked back.",
                "author": "JC3DS",
                "score": 33
            },
            {
                "body": "This happens to a lot of people, yet they’re still in business. This is concerning.",
                "author": "Darth_Ender_Ro",
                "score": 23
            },
            {
                "body": "I’ve had this before with DO - randomly locking me out of my own droplets. Just running Django web apps, not doing anything suspicious.\n\nPut me off which is annoying because I actually like their interface, but I can’t be dealing with random lock outs and no obvious way to quickly reopen them.",
                "author": "TicketOk7972",
                "score": 19
            },
            {
                "body": "That is how virtually every platform works: you don’t give hints to bad actors on how to avoid detection next time; you ban them and refuse details. Any platform that doesn’t do that is making a mistake.  \n\nThe tricky part is how often accounts are compromised or if there are false positive bans. Those can be a problem. ",
                "author": "GrandOpener",
                "score": 17
            },
            {
                "body": "\"You may or may not have violated our shit, we can't tell you which one, therefore we block your ass, oh, and we can't unblock it if we wanted to.\" \n\nSounds legit 👍",
                "author": "BeezlebubCarrotstick",
                "score": 16
            },
            {
                "body": "I also have two small, low-traffic websites deployed with Linode (now part of Akamai) that have been running for years with nothing like this happening and no real issues to speak of.  I also dealt with their customer service a couple of times for some uncommon requests/questions, and they also provided decent customer support (this was before the Akamai acquisition, so perhaps that's changed).  Don't really have any personal experience with other hosting companies or larger, higher-traffic websites, so I couldn't really speak to such needs.",
                "author": "Science-Compliance",
                "score": 13
            },
            {
                "body": ">That is how virtually every platform works: you don’t give hints to bad actors on how to avoid detection next time; you ban them and refuse details. Any platform that doesn’t do that is making a mistake.\n\nNot telling people how any transgression was detected is fine. Not telling them what rules they are accused of having broken is Kafkaesque nonsense.",
                "author": "vexingparse",
                "score": 13
            },
            {
                "body": ">Telling people specifically what rule was broken *is* a hint about how it was detected.\n\nNo, it's just a matter of phrasing it sensibly. E.g, it's fine to tell a user that their username/password combination is incorrect. But it would be totally bonkers to respond with \"500 Internal Server Error\" to avoid telling an attacker whether it's the username/password combination or the number of login attempts or their IP address or whatever.\n\n> it’s a price we have to pay for security. \n\nNo, it's the price we pay for low cost services that handle everything in the cheapest way possible.\n\nI have long argued that service providers should charge for support and possibly require a deposit so that people acting in good faith can get their case escalated while the huge number of fraudulent attempts can get rejected quickly and cheaply. This is all about economics, not security.",
                "author": "vexingparse",
                "score": 12
            },
            {
                "body": "First and last time I used DO was 10 years ago. Signed up, purchased a VPS, and within 5 seconds, it was sending spam email and hacked. My account was suspended and that was that.",
                "author": "blockstacker",
                "score": 11
            },
            {
                "body": "\"You're guilty of something, and we ain't telling you shit, because security or some other bullshit.\"\n\nWhat a fucking joke of a company.",
                "author": "boobsbr",
                "score": 11
            },
            {
                "body": "It was your IP.\n\nYou logged into multiple different accounts from the same IP and it was tagged to your account.",
                "author": "NuGGGzGG",
                "score": 11
            },
            {
                "body": "Thanks, for the response. \n\nYes indeed, glad it happened before deploying anything. Regarding, VPN or CGNAT, I don't think this could be an issue because I have accessed my other DO accounts to test things out. The credit card is also legit, been using it with DO for the last 5 years.",
                "author": "SurelyFML",
                "score": 10
            },
            {
                "body": "This happened to me too, I ended up moving over to Vercel. I also wouldn't use Digital Ocean again after they [bought and abandoned CSS Tricks](https://chriscoyier.net/2024/02/28/where-im-at-on-the-whole-css-tricks-thing/).",
                "author": "GeorgeP95",
                "score": 6
            },
            {
                "body": "Note that Linode is now Akamai. I'd definitely recommend them.",
                "author": "Neat-Painter7433",
                "score": 6
            },
            {
                "body": "Maybe the issue is having more than one account?",
                "author": "Piko8Blue",
                "score": 6
            },
            {
                "body": "languid cover heavy pot cause roll late handle shocking toy\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": "vesko26",
                "score": 6
            },
            {
                "body": "Telling people specifically what rule was broken _is_ a hint about how it was detected. \n\nIt’s similar to how it is inadvisable to say “that user doesn’t exist” vs. “that password is incorrect.”  All you should say is “login failed,” because anything else gives bad actors too much information. Is that inconvenient sometimes for legitimate users?  Yes, but it’s a price we have to pay for security. \n\nThis is a different situation, but the same principle applies here. “You violated the Terms of Service” is a pretty inconvenient message to get for a user who’s been banned incorrectly, but it is the messaging that every large company uses because it’s necessary for security. ",
                "author": "GrandOpener",
                "score": 6
            },
            {
                "body": "I strongly disagree.  You need to tell people what they did wrong and just make sure your systems are robust enough that this isn't going to give bad actors a crack they can stick a wedge into.",
                "author": "Science-Compliance",
                "score": 6
            },
            {
                "body": "I would recommend you try Hetzner cloud, but Linode or Vultr are also good options.",
                "author": "CrashedChicken",
                "score": 5
            },
            {
                "body": "Most providers have issues like this from time to time. I had Linode do this to me and it took about a week to resolve. I still have active accounts with both because they are both good services.",
                "author": "PirateChurch",
                "score": 5
            },
            {
                "body": "So you’re using the same card with multiple accounts?",
                "author": "CanWeTalkEth",
                "score": 5
            },
            {
                "body": "They all registered with different emails. It's easier to hand over the credentials to clients after a project is over.",
                "author": "SurelyFML",
                "score": 5
            },
            {
                "body": "Yes, could that have been the problem?",
                "author": "SurelyFML",
                "score": 5
            },
            {
                "body": "We just host ourselves and never looked back. So much freedom for tech stack choice and no costs besides electricity for our large scale saas. Even the hw costs almost nothing compared to cloud hosting cost.  Having a co location makes it resilient enough for \\~99.9% SLA (\\~9h downtime per year). Which is something you don't get from cloud providers without a substantialy higher bill.",
                "author": "love2Bbreath3Dlife",
                "score": 4
            },
            {
                "body": "When I read your post I'm reminded of something I read a few years ago, [DigitalOcean drowned my startup](https://twitter.com/w3Nicolas/status/1134529316904153089). (I believe they eventually got everything back but they had to raise a ruckus!)",
                "author": "TertiaryOrbit",
                "score": 4
            },
            {
                "body": "Hi there! The DigitalOcean team here. We're sorry to hear about the situation. Our support team has already responded to your ticket with updates. If you have any further questions, please don't hesitate to reach out directly through the ticket. Thanks!",
                "author": "digitaloceancloud",
                "score": 4
            },
            {
                "body": "You mean hosting yourself on a physical server in your control ? I always wondered how does that work.",
                "author": "RustyKumar",
                "score": 4
            },
            {
                "body": "We don’t need to shut down digital ocean lol just have some visibility and they can fix the issues. \n\nWe don’t need to fly off the handle at every little thing",
                "author": null,
                "score": 4
            },
            {
                "body": "Linode and Vultr are good options.",
                "author": "crazedizzled",
                "score": 3
            },
            {
                "body": "I’ve been on Digital Ocean for years, both as an active developer and a passive one (just letting stuff sit). I currently am running multiple servers with their services. \n\nI have never had any issues. I could be surprised one day, but I’m going to guess there was some fishy stuff being deployed to those servers.",
                "author": "kumonmehtitis",
                "score": 3
            },
            {
                "body": "This is why I started self-hosting a few years back, you're always at the mercy of the hosting provider and their constantly evolving security policies...  \n\nMy last straw was.. similar thing happened to me (not with DO. but another vendor who subleased AWS ), claimed I was spamming when I didn't even have a mail server , they just disabled my account and prevented me from even accessing the latest logs or files to even try and troubleshoot... \n\nSelf hosting has been a dream there's plenty of packages like cwp7.panel that give you all the traditional hosting control for multiple domains , and with a static IP,  and cloud flare, email host you get all the features without any hassles.",
                "author": "abrandis",
                "score": 3
            },
            {
                "body": "Got a little worse how",
                "author": "scar_reX",
                "score": 3
            },
            {
                "body": "Works like a charm but you need to have some understanding to setup the hardware, container runtime layer and IP routing+ firewall. Also honeypot setup might be necessary to offload hacker requests.",
                "author": "love2Bbreath3Dlife",
                "score": 3
            },
            {
                "body": "The tweet is big (split into multiple replies) with images involved. I don't think it's appropriate to post here.",
                "author": "craftywing75",
                "score": 3
            },
            {
                "body": "quiet person axiomatic start screw political thumb bright fall treatment\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": "vesko26",
                "score": 3
            },
            {
                "body": "Surely this is pretty common.",
                "author": "_indi",
                "score": 3
            },
            {
                "body": "Contact your bank and ask if they flagged any transactions as frauds. Sounds like bullshit, because usually the card would be entirely blocked by the issuer and you would be immediately informed of that.",
                "author": "micalm",
                "score": 2
            },
            {
                "body": "bells humor distinct price direction lavish aback trees caption water\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": "vesko26",
                "score": 2
            },
            {
                "body": "They're awesome, yes! My go-to every time",
                "author": "thewhiskeyrepublic",
                "score": 2
            },
            {
                "body": "Sure, I have no problem with providers accidentally catching innocent people in their attempt to cut down on bad actors, and I've been on support with all kinds of companies because my activity was flagged as suspicious (I travel a lot and it raises flags when I'm suddenly logging in from Albania or whatever :D) but I've never had another service that straight-up refused to even talk about reinstating my account. Just \"don't let the door hit you on the way out, bye now!\" from DigitalOcean :D If they had actually had a decent support rep that would work with me to get my account up and running, I would probably have forgotten all about the incident by now, but instead I got a \"fuck you\" email that left a permanent bad taste in my mouth about DO",
                "author": "thewhiskeyrepublic",
                "score": 2
            },
            {
                "body": "Exactly like you described.\n\nBuy your own servers and put them in a room with air conditioning.\n\nBuy some UPSs, because the generator doesn't kick in instantly.\n\nHave two Internet connections, from separate companies that don't share infra.",
                "author": "boobsbr",
                "score": 2
            },
            {
                "body": "I get that. I got incorrectly flagged for \"fraud\" once by REI and they refused in the same way. Extremely frustrating. In my case I was able to talk to a real person because they have physical stores. The manager eventually made it right for me but the fraud department wouldn't even tell them why I was flagged.\n\nIt's unfortunate but that's how lots of companies do it to protect their methods.",
                "author": "PirateChurch",
                "score": 2
            },
            {
                "body": "Yes could be.",
                "author": "craftywing75",
                "score": 2
            },
            {
                "body": "Right. Could also be credit card. The same credit card used with multiple accounts.",
                "author": "craftywing75",
                "score": 2
            },
            {
                "body": "It's indicative of hacking/fraud when multiple accounts are being used by a single IP.",
                "author": "NuGGGzGG",
                "score": 2
            },
            {
                "body": "Hacker A gains access to multiple accounts.\n\nHacker A logs in to multiple accounts.\n\nThat's how.\n\nSame reason you get constant notifications about 'was this you logging in?' to almost every SASS.\n\nDO doesn't fuck around.",
                "author": "NuGGGzGG",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "I did and it fing sucks. They blocked my account without even telling me the reason. The support didn't help either.\nSo yea, I just moved to another hosting service",
                "author": "collonelMiller",
                "score": 1
            },
            {
                "body": "“We will send you an email survey. Please share a few kind words.”\n\nLmao fuck no",
                "author": "kcadstech",
                "score": 1
            },
            {
                "body": "Woof. This thread. \n\nI've used DO for a long time without issue but I actually stopped using them because of their interview process (sure wish I could get that week of my life back). Either way, it's pretty terrifying they don't provide examples of that terms you violated and give you no clear resolution. This is how companies go from good prestige to dirt.",
                "author": "thatgibbyguy",
                "score": 1
            },
            {
                "body": "I get blocked recently. I think it's because I use shared CPU instances for the fuzzing experiment of my thsis. (I deployed 10 shared CPU droplets on DKOS, and every nodes are using 100% CPU resources)\n\nAnd my account cannot be unlocked forever. lol.\nLooking for better platform now.",
                "author": "leonasdev",
                "score": 1
            },
            {
                "body": "It's relatively impressive that a person gave a sameday fix. This should be the standard.",
                "author": "crystallineghoul",
                "score": 1
            },
            {
                "body": "I strongly recommend Hetzner. It's one of the best value for money options. Their machines also benchmark better than DO. It's not as faire rich, for example,  no managed DB but for a VPS is hard to beat",
                "author": "Alter_nayte",
                "score": 1
            },
            {
                "body": "Same happened to me a few years back. I signed up, put in my credit card and was immediately blocked. When I appealed I got a snarky rejection email back treating me like a scammer. Assholes.",
                "author": "DevRz8",
                "score": 1
            },
            {
                "body": "I just had my DO account locked after deploying one of their preconfigured Ghost droplets a couple of days ago. No custom config to that droplet at all. No traffic on the site other than me messing around trying to figure things out and testing sending newsletter email updates. Less than 30 emails over the course of a couple of days. Just got the lock email from them. I responded to the ticket, but it's hard to respond to \"you've violated our terms of service\" when you have no fucking idea what you did wrong. Credit card is old, 2FA is on, etc.",
                "author": null,
                "score": 1
            },
            {
                "body": "I'm facing the same issue. My account got locked right after signup without any reason. Then a $10 charge without refund til this day. The customer support keeps saying the charge is not held by them and they've \"thoroughly checked\" my account and it's deemed fraudulent even when I haven't done anything. My card is not newly issued and I've successfully used it to pay for ChatGPT and Github Copilot and many other transactions",
                "author": null,
                "score": 1
            },
            {
                "body": "As for any simple and not too pricey alternatives I would vouch for Hetzner (hetzner.com). I'm not affiliated, but a long time customer.",
                "author": "Walialu",
                "score": 1
            },
            {
                "body": ">Moved on to Vultr and never looked back.\n\nDid you not look back when Vultr tried to get their hands on the data of all their customers? xD\n\nI wouldn't even consider them anymore.",
                "author": "Responsible_Slip_860",
                "score": 1
            },
            {
                "body": "Shouls legitimately report them to the ICO they probbaly don't disclose breaches",
                "author": "CobblinSquatters",
                "score": 1
            },
            {
                "body": "My goodness 👀 \nThat is a hellish nightmare for solodevs/indiehackers",
                "author": "SurelyFML",
                "score": 1
            },
            {
                "body": "Can you post the content here. I don’t use Twitter anymore",
                "author": "kcadstech",
                "score": 1
            },
            {
                "body": "Love how the only way the only way to get DO to actually take a minute to review false-positive permabans is to raise a ruckus on social media :D",
                "author": "thewhiskeyrepublic",
                "score": 1
            },
            {
                "body": "Thanks for reaching out.. still curious about how you tracked me down from Reddit 😛 considering you probably receive tens if not hundreds of support tickets similar to mine in a given day",
                "author": "SurelyFML",
                "score": 1
            },
            {
                "body": "They have VPS offering?\n\nEdit: \nHow long have you been using them? What are the downsides?",
                "author": "SurelyFML",
                "score": 1
            },
            {
                "body": "Linode is literally doing the same thing now. https://imgur.com/a/s7K2paB",
                "author": "Resource_account",
                "score": 1
            },
            {
                "body": "why would you think they are not supposed to be in business? For every person you know or complains about closing account there are 1000 customers who are working and paying. Besides this looks like the card issuer thing",
                "author": "CatolicQuotes",
                "score": 1
            },
            {
                "body": "we need to change that",
                "author": "CobblinSquatters",
                "score": 1
            },
            {
                "body": "ICO didn't exist 10 years ago mate",
                "author": "blockstacker",
                "score": 1
            },
            {
                "body": "We are on our way to extract a SaaS blueprint from our [https://ai-term.io](https://ai-term.io) SaaS. We are pretty content with what we made. It is super resilient, fully automated including payment flow, scaling, lightweigth and has alot of read made entry points like landing page, dashboards, order fullfilment, product configuration. Further monitoring, analytics and many more.",
                "author": "love2Bbreath3Dlife",
                "score": 1
            },
            {
                "body": "Not with that exact wording. ;)  \n  \nCurious they're gathering social media data and connecting that with a specific customer without explicit consent, but data protection is not the same everywhere.",
                "author": "micalm",
                "score": 1
            },
            {
                "body": "I think that should be easy. They must be having social media team who make rounds on social media platforms looking for customer reviews or so. They found out your post talking about Digital Ocean. You have shared screenshot which shows some reference ID. They might have tracked you down using that ID. That's how they should have got back to you and fixed the issue.",
                "author": "craftywing75",
                "score": 1
            },
            {
                "body": "My bad, I missread. For VPS I use Hetzner, but it only has servers in Germany.",
                "author": "LagT_T",
                "score": 1
            },
            {
                "body": "Since the Akamai takeover?",
                "author": "Kyrthis",
                "score": 1
            },
            {
                "body": "You are talking about security through obscurity, and as it's been discussed ad nauseum, it's often a garbage policy that fails to address any underlying issue. It's one thing when you just say \"no account matches that username/password\" to prevent account login probing. But it's pretty terrible when the issue was \"your credit card payment couldn't be processed\" but instead they just \"cancelled your account due to TOS violations\". \n\nWhat if it was simply my credit card was expired and I didn't update it in time? Oh cancelled for TOS violations makes total sense why they killed my site. /s",
                "author": "IsABot",
                "score": 1
            },
            {
                "body": "imagine your credit card info is stolen. Bad hacker sells the same info to 5 people. they all try to open the account. \n\nAre you also using different names? \n\nDo they have anything in terms of service against multiple accounts?",
                "author": "CatolicQuotes",
                "score": 1
            },
            {
                "body": "How would you convince leadership to invest resources into better UX for people who are banned from being customers, which also comes with an increased security risk?",
                "author": "webu",
                "score": 1
            },
            {
                "body": "You've built up a straw man there.  Expired CC should be a billing question, not a TOS question.  Yes, telling you that your CC is expired (or, ideally, warning you it is about to expire before it gets to that point) is appropriate and is good customer service.  None of this changes the fact that refusing to elaborate on TOS violations is well-established best practice.\n\nAs an example on the other side, if the company has reason to believe that CC fraud is involved, then telling you that your account is closed and not mentioning CC in any way is absolutely the right move, 100% of the time.  That information MUST NOT be relayed to actual fraudsters.\n\nNoting OP's edit, they asked for a review, DO did one, and they quickly lifted the ban.  This was a ban DO *had* to do, because fraud was indicated by the CC issuer.  And they *must not* give any information to CC criminals.  Assuming their statements are truthful, Digital Ocean handled this situation *perfectly*.  The only party that deserves blame here is the CC issuer, for creating the false positive in the first place, and potentially for not communicating with OP if they thought their card was compromised.",
                "author": "GrandOpener",
                "score": 1
            },
            {
                "body": "They have a system to incorrectly bans MANY customers resulting in a loss of cash flow.",
                "author": "CobblinSquatters",
                "score": 1
            },
            {
                "body": "Fixing false positives definitely has a business case, it's justifying investment in the UX for true positives that would be a challenge.",
                "author": "webu",
                "score": 1
            },
            {
                "body": "Except they already said they had other accounts with the same card that never failed and got banned. So my example is still in the same realm. If a payment fails, for whatever reason, you can just say it. It doesn't need to say oh we think it's fraud. Just \"payment failed\", they'll never know why exactly. If they use it, then the account just gets banned, I'd be smart enough to think I got caught if I was using a stolen CC. Do we really think scammers are that stupid and fall for that obscurity? If that card failed, why didn't DO look at all the other accounts to see if that card was used and ban all other accounts with it on file? CC Lookup exist in merchant accounts. \n\nA singular failure should not kill your account especially if you know you get false positives. Multiple failures should trigger it. Like when scammers try to use a few  different cards in a row and they all get rejected. Credit cards are already insured, so this really only hurts legitimate users. Scammers just move onto the next card when something gets blocked/banned. This is just shit customer service and corporate policies not security. Issues like this can happen simply due to how your merchant is set up. For example heavy throttling settings can trigger it. As could something like changing the zip code for the card but not updating it in the account if zip verification is mandatory. Or a ton of other configurations can cause false positives. Luckily OP didn't have any significant business on that account. As it easily could have cost them a ton of money. DO was not \"perfect\" but you do you. Thankfully I shifted away from them to Linode like 6 years ago.",
                "author": "IsABot",
                "score": 0
            },
            {
                "body": "Indicative how? I'll wait.",
                "author": "CobblinSquatters",
                "score": -1
            },
            {
                "body": "You don't.  You start or go work for a competing company with a better philosophy.  Or you just accept that your company does some things sub-optimally and think about your weekend and evening plans so you don't feel compelled to off yourself.",
                "author": "Science-Compliance",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757472174.0,
        "title": "Express.js vs Hono.js : Which one is best for the backend ?",
        "author": "Mr_Gyan491",
        "id": "1nd2qgl",
        "selftext": "I am planning the tech stack for the backend of a ecommerce website with some custom functionalities.\n\nServices : \n- payment \n- order management \n- admin panel\n- User authentication \n- search\n- location based filtering \n- and all common e-commerce services\n\n\nI have experience in express.js. but I never built any production and scalable application.\n\nBut this time, the platform will handle millions of users, so I have to choose the right tech stack.\n\nWhich one works the best for you ?",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1nd2qgl/expressjs_vs_honojs_which_one_is_best_for_the/",
        "num_comments": 26,
        "comments": [
            {
                "body": "just pick what you know in this case",
                "author": "bnugggets",
                "score": 5
            },
            {
                "body": "if you’re just using a node web server, scalability is affected more by how you write your code than what router or web framework you use. \n\nHono is built on web standards and has better typing in my opinion. If you know Express, it won’t be hard to pick up. If you just want to build quickly, choose what you know. If you are running it on edge then go with Hono.",
                "author": "bnugggets",
                "score": 5
            },
            {
                "body": "1 million per month is nothing. No need to stress optimizing at this point in time",
                "author": "bnugggets",
                "score": 5
            },
            {
                "body": "How many active users do you expect to have? Most likely, this discussion is a waste of your time. Build the thing first and worry about optimization when it has been shown to matter.",
                "author": "DamnItDev",
                "score": 3
            },
            {
                "body": "The guy in this video does a good comparison: [https://youtu.be/k1IUqAQN7KE](https://youtu.be/k1IUqAQN7KE)\n\nPersonally, I like the Hono API more and think it makes better use of TypeScript.",
                "author": "gdmr458",
                "score": 2
            },
            {
                "body": "If you aren't locked to them, Nuxt and Nitro are the fastest web frameworks",
                "author": "Somepotato",
                "score": 2
            },
            {
                "body": "I am building it for a client. He is an influencer.\n\n1million/month is the estimation",
                "author": "Mr_Gyan491",
                "score": 2
            },
            {
                "body": "my suggestion.. build a quick poc using both tech, then run load tests according to your expected usage to get a benchmark.\n\ncurrently, we just use express for internal apps with small number of users.. but we use java/vertx for high throughput backends.",
                "author": "Both-Fondant-4801",
                "score": 1
            },
            {
                "body": "I'd recommend looking at fastify.js too as an option. It's very similar and an easy transition from express but with some added niceties, a great ecosystem with plugins for all that, and some of the best performance out there.",
                "author": "dillydadally",
                "score": 1
            },
            {
                "body": "If your considering express, I would also check out fastify",
                "author": "tquinn35",
                "score": 1
            },
            {
                "body": "Build a poc with each and see which is better to build with. You an also use Autocannon if you want to do a simple benchmark.",
                "author": "ddyess",
                "score": 1
            },
            {
                "body": "I like express for its simplicity and large ecosystem of packages",
                "author": "kush-js",
                "score": 1
            },
            {
                "body": "My favorite part of watching development in the web space is the rediscovery of strong typing.",
                "author": "noideaman",
                "score": 1
            },
            {
                "body": "Have you used it ? \nHow was your experience?",
                "author": "Mr_Gyan491",
                "score": 1
            },
            {
                "body": "I think you mistaken your word if I am not wrong.\n\nAre you recommending nest.js",
                "author": "Mr_Gyan491",
                "score": 1
            },
            {
                "body": "I have, but only in a hobby project, so other devs might be able to answer better. I did go to it after a ton of research though and it stood out as the best option. \n\n\nMy experience was very good. I have not used Hono, but I felt Fastify was *objectively* better than Express in every way. Faster, more scalable, easier to use, easier to design something more organized, etc. The large plug-in ecosystem made a lot of stuff super easy. And it's almost like a superset of Express, so it's really easy for anyone that knows Express to pick up. The big things it adds are better async support, the plug-in architecture, and better performance. It's known for being the fastest js backend framework. I also liked that it was well known enough that it was one of the few frameworks that seemed to be well supported by third party services like AWS.",
                "author": "dillydadally",
                "score": 1
            },
            {
                "body": "🫂",
                "author": "Mr_Gyan491",
                "score": 1
            },
            {
                "body": "1 million per month is almost no activity. Less than 1 request per second.\n\nIf you had that many requests per second or minute, then you should worry about the performance consequences. And also be ready to spend a bunch on infra.",
                "author": "DamnItDev",
                "score": 1
            },
            {
                "body": "There is another version of express called utimate-express. Process 10k more requests per second and leading the top of benchmarks tests for JS.   \n  \nIt should be compatible with the original so it's a better option if speed is what you are after. I agree with what u/bnugggets said though",
                "author": "kromsten",
                "score": 0
            },
            {
                "body": "Sorry, my mistake, it seems I answer wrong discussion. LOL.... I believe you can try Hono.js, it will give you the performance and architectural flexilbility needed to build great ecommerce backend. Combine it with a microservices approach to ensure your platform is scalable and maintainable for years to come.",
                "author": "HelloMiaw",
                "score": 0
            },
            {
                "body": "using cloudflare tech stack -> hono.\n\notherwise i would just stick with expressjs.",
                "author": "treksis",
                "score": -1
            },
            {
                "body": "Hono won the benchmark",
                "author": "Mr_Gyan491",
                "score": -1
            },
            {
                "body": "Give your experience above, maybe you can try node.js, this is an excellent choice and you can combine it with other specialized technologies, your express.js will be a great foundation.",
                "author": "HelloMiaw",
                "score": -2
            },
            {
                "body": "Django might be a better option to get all that running quickly. It has the admin panel, auth built in",
                "author": "thebreadmanrises",
                "score": -4
            },
            {
                "body": "Suggesting python for the backend should be punishable.",
                "author": null,
                "score": -4
            },
            {
                "body": "I heard hono.js is more performant , and scalable is that true ?",
                "author": "Mr_Gyan491",
                "score": -7
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1750708416.0,
        "title": "Agency refusing to transfer WP Engine site",
        "author": "goth__potato",
        "id": "1liqkvm",
        "selftext": "**Edit:** **The Agency removed my Wordpress admin privileges this afternoon, and I no longer have the ability to access Tools, Settings, Plugins, etc. I think my only option at this point is to completely recreate the website somewhere else. I'm mostly concerned at this point with ensuring that I'm not missing something/that I won't run up against something in the process that will hinder me from doing so.**\n\nHi everyone! Wondering if anyone could provide any guidance or insight! I apologize if this is unclear - I am trying my best to understand everything!\n\nMy organization paid a local PR and web development agency to create and manage our Wordpress site. This was several years ago, and was in place before I joined the organization. The Agency has been a nightmare to work with, and when I came onboard our website was a hot mess (unorganized menu, broken links, poor formatting, non-mobile responsive etc.) though I have slowly been working to fix things myself. Prior to this, I did not have Wordpress experience, but I have since taken CSS/HTML classes and have been teaching myself.\n\nOur website is hosted on WP Engine, I own our domain name through Bluehost, and nameservers are pointing to custom Cloudflare servers (managed by the Agency). We are now looking to transfer our hosting directly to WP Engine managing hosting, and looking to cut out the Agency as a middle man. WP Engine requested the Agency's support PIN in order to complete an internal transfer, but the Agency is refusing. This is an email that we received from them:\n\n\"*We do not design websites for other hosts, and we do not transfer our websites outside of our hosting control and environment. So if you wanted to move away from (the Agency), you would be taking on a redesign of your website, and we would not provide support for that undertaking. It may be easy for someone to look at the site and think it can just be moved to another host, but that is simply not how it works. We hold the license for all of the plugins and the theme that you use, we manage and pay for transactional emails through our email platform, we manage backups, we manage security and Cloudflare services, we manage your Jetpack features including email subscription and social media posting, we hold the license for your image optimization service through Imagify and Cloudflare image hosting for media files. None of those services may transfer to another hosting provider outside of (the Agency). WP Engine is one of many services we use to manage your website, and your website cannot simply be moved to your own account, cutting us out. Your website is a service that (the Agency) provides to you and manages for you. Similar to all other major national vendors (Civicplus, Revise, etc) if you do not wish to use (the Agency) for your website anymore, then you would have to develop a new website. The content -- content of posts and pages, and your images/documents/media files are certainly your property, but the website is a service used under license from (the Agency).\"*\n\nTo address some of the points above:\n\n* We do NOT have a signed contract, or any documentation outlining the above, or terms for their services.\n* Our website is using a Kadence Child theme, which it sounds like the Agency is alleging they own the rights to, though I have heavily modified the theme at this point. We are using Kadence and Stackable blocks.\n* There were plugins installed prior to my joining our organization, which the Agency is alleging they hold the licenses for. I have since paid for and installed additional plugins (including a notification bar plugin) because the Agency refused to support these. I take care of plugin updates myself, because the Agency does not do it (though we are paying them to).\n* Transactional emails through the Agency email platform: We have no idea what this is, and are pretty sure that we are not using this. We use email through Google Workspace, which we manage internally at our organization.\n* Jetpack features including email subscription and social media posting: We are not using this. We use third-party newsletter and form builder services, hosted externally (not Jetpack).\n* *We hold the license for your image optimization service through Imagify and Cloudflare image hosting for media files:* I am unsure what the ramifications of this are.\n* The Agency also holds our Google Analytics account. I do not have admin privileges to the Analytics portal.\n\nWe are a nonprofit in which our website is not necessarily mission critical, though it would still be a huge loss. The Agency has now removed my admin privileges to our site, but I managed to download a XML backup of the website this morning before they did so.\n\nDoes anyone have any advice on what we should do next? Should we count this as a loss, and work on setting up an entirely new website on WP Engine? My plan was to remove the Cloudflare nameservers in Bluehost, revert to the default Bluehost servers, and then point DNS to WP Engine. I am confident that we could re-build our website ourself, using a different theme, and part of me wanted to start over anyways instead of continuing to try to fix our existing site that we are unhappy with. However, this would be incredibly time-consuming, and not something we could have completed quickly. I'm mostly concerned about Google Analytics and SEO, or anything else that I may be overlooking.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1liqkvm/agency_refusing_to_transfer_wp_engine_site/",
        "num_comments": 34,
        "comments": [
            {
                "body": "If you have admin access, add a backup plugin like duplicator and take a full backup of your site, download it and spin it up somewhere else.",
                "author": "_listless",
                "score": 17
            },
            {
                "body": "This is the type of agency that needs to be exposed. A, website should always be the property of the business. Not the damn agency.",
                "author": "rubixstudios",
                "score": 12
            },
            {
                "body": "I'd escalate this. My wife and I run a software consulting company and wife is an attorney and has sent many threatening letters for things like this. If your company is paying them for this site, you should have access to the admin portal so you can make changes. And once you do, you can make a backup like others said. Don't give up. DM me if you want more info, happy to help.",
                "author": "Yodiddlyyo",
                "score": 6
            },
            {
                "body": "I’ve helped clients with this situation before. Keep paying for their services and start copying the site to your own build. Check your contract to see if you own the design. \n\nGoogle analytics can be helped as they won’t release it. \n\nSeo is the most important. On your rebuild make sure urls are the same as well as meta and other items.",
                "author": "whodis123",
                "score": 5
            },
            {
                "body": "Why use AI to write something for you, just write it yourself...",
                "author": "therealbigfry",
                "score": 4
            },
            {
                "body": "/r/legaladvice",
                "author": "BehindTheMath",
                "score": 3
            },
            {
                "body": "If they agree that you own the data, ask for a database backup. \n\nThen install on a new theme. \n\nDM me happy to help you navigate it. Eff those guys.",
                "author": "radicaldotgraphics",
                "score": 3
            },
            {
                "body": "Do you have full wordpress admin access to the site though? If so, you can create a full backup of the site and DB and just transfer it over with a plugin.\n\nAll other license you can buy a new one that you control and you can rotate out the keys.\n\nSEO will be fine as long as all links resolve the same, but you probably will lose historical GA data without them transferring it.\n\nThere is nothing unique about WPEngine sites that cannot be moved to any other host.",
                "author": "IsABot",
                "score": 3
            },
            {
                "body": "This is the way. OP, you may need to buy licenses for the paid plugins, but other than that this will give you a clean build of what they have.",
                "author": "No-Professional-1884",
                "score": 3
            },
            {
                "body": "Hi, thank you, I appreciate this so much - and my sentiments exactly. I'm actually the Systems Admin for our organization, and while I don't have much web development experience, I immediately flagged this whole set up as fishy. They are absolutely fleecing our organization; I don't even want to share how much we've been paying over the years, it's shocking. I've officially begun the process of setting up a new website with WP Engine's hosting.",
                "author": "goth__potato",
                "score": 3
            },
            {
                "body": "I did, but they removed my access this afternoon. LOL. \n\nThank you though, this is immensely reassuring and exactly the information that I was looking for. I've already created a new GA account and am in the process of starting up a new website on WP Engine (I have the account created, I'm just trying to pick a new theme/builder to get started with). We are short on time before we have to pay the Agency for another year so decided to stick with WP Engine for now.",
                "author": "goth__potato",
                "score": 3
            },
            {
                "body": "Does your site do anything other than informational pages?",
                "author": "whodis123",
                "score": 3
            },
            {
                "body": "Regardless of lack of contract you're a non-profit that paid them to build you a site and set up hosting, now years on they want to keep fleecing you as a middleman for hosting costs, then locked you out of the website when you questioned the arrangement.\n\nWith an attitude like that and the amount of spin they wrote trying to justify themselves, even if you did get them to help transfer the site the chance of such a petulant agency sabotaging the code in some way out of spite is probably pretty high as they really seem like arseholes of the highest order.\n\n>I am confident that we could re-build our website ourself, using a difference theme, and part of me wanted to start over anyways instead of continuing to try to fix our existing site that we are unhappy with.\n\nI believe that's your answer 100% because although it will take you time and money to get everything up and running again once it's done your nonprofit will regain full control of what you paid for in the first place.\n\nAs an old webdev with a lot of experience building for non-profits I find it pretty disgraceful they've obviously baffled your predecessors with bullshit to keep up the cosy arrangement. I got a lot of time on my hands and would be happy to offer some free help or advice if I can so if interested send me a message.",
                "author": "xPhilxx",
                "score": 2
            },
            {
                "body": "Yeah, I think I understand what’s going on here.\n\nIt sounds like this was more of a **website-as-a-service** setup. The organization didn’t fully own the site, instead, it paid a smaller upfront cost and a monthly fee that covered the whole stack: hosting, plugin/theme licenses, backups, Jetpack, email delivery, maybe Cloudflare, etc.\n\nFrom the agency’s perspective, that monthly fee gave you access to a system *they* built and maintained. So when that relationship ends, they keep the infrastructure. It’s not necessarily shady, it’s just how their business model works. Like leasing a car: you get to use it, but you don’t own it unless that was clearly part of the deal.\n\nThat said, your **content** (posts, pages, media) is yours, and it’s good they gave you that export. Rebuilding is annoying, but you’ll have full control going forward.\n\n**For the future**: If you want to truly *own* your website, be cautious about what you’re signing up for and if something is too good and cheap to be true, there is always a catch. Ask questions like:\n\n* Will the hosting account be in your name?\n* Are plugin/theme licenses yours or the developer’s?\n* Who has access to backups and DNS?\n* Will you get FTP/database access?\n* Can you migrate the full site to another host if needed?\n\nIf the answer to most of those is \"no,\" then it’s a managed service, not a site you fully own. Ask for this clarity in the contract that you sign with them.\n\nI hope you get this resolved soon, I know it can be hard to juggle through all the technical details for someone who does not spend their days into it.",
                "author": "groundworxdev",
                "score": 2
            },
            {
                "body": "Unfortunately, they removed my admin access this afternoon. 🥺 Thank you though.",
                "author": "goth__potato",
                "score": 2
            },
            {
                "body": "I can't believe it took their second comment for me to realize this was AI. I feel dumb!",
                "author": "goth__potato",
                "score": 2
            },
            {
                "body": "Just informational pages. \n\n  \nI just created a new Google analytics and I'm working on starting up a new website on WP Engine (in the phase of trying to pick a new theme/builder). I appreciate your help, your response definitely made me feel a bit better.",
                "author": "goth__potato",
                "score": 2
            },
            {
                "body": "Since you are able to install and update plugins. You can use a plugin to backup and migrate.\n\nI personally use updraft. The migration part is behind a paywall but honestly, i paid $30 for it 5 years ago and i still use it. You backup and download the backup to your local computer. Then on a new Wordpress installation at a different host, you upload them and restore and you’re done. It will automatically do the database replace to the new domain and put all of your content back exactly how you had it.\n\nP.S. get away from bluehost. Go to porkbun. For one, bluehost charges $15 for domain privacy and $15 to register. You get everything and more domain features on porkbun for about $12. And bluehost is such a terrible company.",
                "author": "be-kind-re-wind",
                "score": 1
            },
            {
                "body": "Download UpdraftPlus. Download the site, set up a new site somewhere else, install Updraft Plus, and tell it to restore. Updraft has a paid version, but the free version will do what you need.",
                "author": "KoalaBoy",
                "score": 1
            },
            {
                "body": "Wow that sucks. I have worked on sites for non-profits including one where one of the web hosts 'lost' the website. It was one of the big cheapo hosting companies. It's kind of the same problem you have except without the malice built in.\n\nLike you've identified, you're going to have to recreate the site. If you've stopped payment to this agency of vipers, you should immediately take screen recordings / screen captures of what each and every page looks like. If they've already taken the site off-line, then check the wayback machine at [archive.org](http://archive.org) to see whether or not your website has been recorded. New sites or sites with low traffic don't usually get captured and stored.\n\nThere's a bunch of web browser tools (Firefox, Chrome, etc) that will make pdf or jpg files of each webpage of your site. You can also just use (if on a Mac) Quicktime to record every page of your website. \n\nYou would also save yourself time by copying the text on each page and pasting the text into a simple text document. Even if you're going to re-do the site, I find it helps to have text to work with, look at, in order to see about making it better.\n\nGood luck.",
                "author": "cinqorswim",
                "score": 1
            },
            {
                "body": "This is your regular reminder that a written contract is not required to have a legally binding agreement. Emails are a contract. Text messages are a contract. Any kind of documented agreement between parties can constitute a contract.\n\nFuck these people, get a lawyer and nuke their entire business.",
                "author": "TheOnceAndFutureDoug",
                "score": 1
            },
            {
                "body": "Hey! We work with clients that have been messed over by agency and helped an AI client that had similar issue for his WordPress website and currently working with him for 3 years.",
                "author": "vishalnegal",
                "score": 1
            },
            {
                "body": "The transactional emails are probably referencing a SMPT service like Mailgun or SendGrid - you need such a service for emails to be sent out from the website (if you have a contact form, internal Wordpress notifications, etc..)",
                "author": "microwaveddinner95",
                "score": 1
            },
            {
                "body": "Thank you. We actually do not have a signed contract, or any other documentation to reference.",
                "author": "goth__potato",
                "score": 1
            },
            {
                "body": "Thank you!",
                "author": "goth__potato",
                "score": 1
            },
            {
                "body": "Hi, thank you for spelling this out, and I do believe this is what the Agency is trying to say. Unfortunately, they are absolutely fleecing our organization - the yearly fee we are paying them is extraordinary. And the thing is, all I want from them is the Wordpress site backup file. I'm not asking for anything else to be transferred. \n\nAgain, I was not apart of the organization when they signed onto this.",
                "author": "goth__potato",
                "score": 1
            },
            {
                "body": "Unfortunately, they removed my admin access today so I no longer have access to Plugins. Lol. I believe I am SOL. \n\nAnd thanks for the advice re: Bluehost. I am aware, and agree. We purchased a few other domain names this year which I registered with Porkbun. I have not gotten around to transferring our current website domain.",
                "author": "goth__potato",
                "score": 1
            },
            {
                "body": "Thank you! Our yearly renewal is up on July 1, so I am hopeful we will have at least until then before he takes our website offline (he insinuated as much). But who knows, since he already went in this afternoon and removed my admin rights! They're actually trying to force us to pay for the next year's renewal, through claiming that we did not give them the requisite 30 days written notice to quit (we gave them 20 days notice) and despite there being no signed formal contract. \n\nYou are absolutely right, and I should start screenshotting/recording as much as I can. Thanks for some tips on how to do so!",
                "author": "goth__potato",
                "score": 1
            },
            {
                "body": "Thank you! This makes sense. I actually switched out our Contact and other forms to Fillout, which I manage, so this should be a non-issue.",
                "author": "goth__potato",
                "score": 1
            },
            {
                "body": "Thank you! I actually did create a blank Wordpress installation on WP Engine this afternoon. I am not quite sure what to do with the XML file, however, though I suppose I could reach back out to WP Engine support.\n\nI honestly hate the Kadence Child theme we are using, so I'm willing to start over with a new theme/builder. It just sucks because we only have just over a week's lead time at this point, and our website is decently sized, consisting of about 40 web pages. I am thinking I may just have to get something \"bare bones\" spun up for now.\n\nUnfortunately, our Google Analytics was set up as a \"Property\" under the Agency's account, so there's nothing I can do there. I believe I'm going to just have to record our current Analytics data (we need this for State-mandated yearly reporting purposes) and create a new GA account.\n\nI do not have access to the Cloudflare settings, this is managed by the Agency. :-( WP Engine also suggested checking with the Agency on this in order to avoid any downtime, but at this point our relationship is so soiled that I don't think this is possible.\n\nAdditionally, they removed my Admin access today, so I no longer have the ability to take any site backups. I do have access to the Wordpress Media Library, which contains over 1,000 files, but I don't see a way to bulk export these. Do you have any advice regarding this?",
                "author": "goth__potato",
                "score": 1
            },
            {
                "body": "let me know if you need help crafting an email so it makes your transition easier. DM, I will help for free.",
                "author": "groundworxdev",
                "score": 1
            },
            {
                "body": "Yeah no host access / ftp access / admin dashboard access. Yeah they locked you out.",
                "author": "be-kind-re-wind",
                "score": 1
            },
            {
                "body": "It sounds like you're in a really frustrating situation, but there are still steps you can take to regain control. If the agency is refusing to transfer the hosting, your best option might be to manually migrate your content (since you already have the XML backup) and set up a fresh WordPress installation on WP Engine. While this can be time-consuming, it’ll cut out the agency and give you full control of your site.\n\nAs for the Kadence Child theme, since you’ve made significant modifications, you may have a case for ownership over it, especially since they’re claiming rights to something you’ve altered. The plugins they claim ownership over should either be transferable (if you purchased them separately) or easily replaceable if they’re not.\n\nYou’ll want to regain access to your Google Analytics as soon as possible. Contact Google Support and explain the situation—they should be able to help you recover the account. For SEO, make sure your new site has the same URLs as the old one, or set up 301 redirects. This will help retain your search rankings. If you're keeping the same domain, the transition will be much smoother.\n\nSwitching the nameservers to point to WP Engine sounds like a good move. Just make sure to check the Cloudflare settings so you don’t affect security or performance. It’s also a good idea to ensure there are no conflicting caching or DNS settings that could cause downtime.\n\nIf you haven’t already, back up everything you can access—emails, Google Analytics, image hosting, etc. Take full backups of the site and its components.\n\nSince you don’t have a signed contract, legal action might be tricky, but you could look into local laws or consult with a lawyer to see if they’ve breached any obligations.\n\nIn the long run, starting fresh might be your best bet. You’ll have full control over your site and won’t be dependent on a problematic agency. Just make sure to plan for SEO and Google Analytics during the transition.",
                "author": "CommentFizz",
                "score": -1
            },
            {
                "body": "It sounds like you're in a really challenging situation, but it seems like you’ve got a solid plan in motion. Rebuilding the site from scratch might be the best option, especially since the current setup isn’t working for you, and you’d have more control over everything moving forward. The XML backup should definitely help with restoring your content, but as you mentioned, migrating plugins and themes will take some effort.\n\nIn terms of Google Analytics, try reaching out to Google support directly—they can often help in these kinds of situations, even if you don’t have admin access. For SEO, ensuring the URLs are the same is key, and you could implement 301 redirects to minimize any ranking drops. If you're changing the theme, make sure to maintain a clean structure to keep things optimized.\n\nSince you’re dealing with a legal gray area with the agency, speaking to your lawyer sounds like a smart next step. I’m hoping they can help you navigate the renewal issue, especially since there’s no formal contract. Hopefully, you’ll have time to transition smoothly before the renewal deadline!\n\nHave you had a chance to try contacting WP Engine directly about your access or about transferring the site? They might have additional options available to help you out.",
                "author": "CommentFizz",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1758195690.0,
        "title": "Claude's quality drop is killing my productivity. Any alternatives?",
        "author": "havoc2k10",
        "id": "1nk5xq0",
        "selftext": "I just cancelled my Claude subscription. I cant take it anymore. I've been a loyal Claude user for almost a year, but the recent quality decline has made it practically unusable. What used to take one prompt now takes five revisions, and I'm still getting broken code, outdated syntax, and logic errors in simple functions.\n\nJust yesterday, I asked for a basic React form validation, something Claude handled perfectly months ago. Instead, I got a mess of incorrect state management and three rounds of failed revisions. I'm paying premium prices for results that are worse than what I got from free tools last year.\n\nIve heard mixed things about Cursor. A friend mentioned that some platforms like mgx use a multi-agent approach where different AI specialists handle planning, coding, and review separately, which supposedly reduces these repetitive errors. But I'm hesitant to invest in another paid platform without real user feedback. I don’t care about flashy marketing or AI hype, I just want something that gives me working code without wasting half a day.\n\nIf you’re on Windows and found something reliable, I’d especially love to hear it.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1nk5xq0/claudes_quality_drop_is_killing_my_productivity/",
        "num_comments": 18,
        "comments": [
            {
                "body": "Hot take: AI hasn’t gotten worse, it’s always been bad, you just convinced yourself it was good before.",
                "author": "margmi",
                "score": 25
            },
            {
                "body": "I think, people started coding thinking AI is great, then they started understanding code then realised how terrible generated code is.",
                "author": "bhosdka",
                "score": 14
            },
            {
                "body": "You could use your brain. Form validation ain't that difficult",
                "author": "Wandering_Oblivious",
                "score": 12
            },
            {
                "body": "There's all sorts of alternatives... Copilot, gemini, codex, Augment code, roo/Cline, etc\n\n\nOr, you know, you could always just write code? ",
                "author": "nickchomey",
                "score": 9
            },
            {
                "body": "lol you came to the r/webdev to complain that your vibe coding isn’t going well.  Try r/impostors instead",
                "author": "anonahnah9",
                "score": 6
            },
            {
                "body": "What about, y’know, programming yourself ?",
                "author": "Narfi1",
                "score": 4
            },
            {
                "body": "Just do it yourself you bum. AI sucks and no self-respecting person should be using it",
                "author": "HeracliusAugutus",
                "score": 4
            },
            {
                "body": "Are you sure you’re in the position to evaluate code quality when you need an AI to implement form validation?",
                "author": "terfs_",
                "score": 3
            },
            {
                "body": "... when you downgrade from the master to operator... :) It's just funny to see posts like this. :)",
                "author": "Neomee",
                "score": 2
            },
            {
                "body": "Congratulations, you just made yourself look dumb.",
                "author": "DarthRiznat",
                "score": 2
            },
            {
                "body": "The problem is you will end up going faster than your knowledge permits and it will get very frustrating if you no longer have the skills to code your way out of the requests you are making ... you'll start noticing problems but be unable to fix them very fast\n\nTheres a whole market of engineers fixing vibe coders projects",
                "author": "CopiousCool",
                "score": 2
            },
            {
                "body": "I find I waste more time than I gain with AI, it used to be useful when I first started using it as a tool to learn but the minute I asked it to do much more than a snippet I found I was doing more error checking than learning or creating anything of worth.\n\nIt has it's uses (debugging/documenting imo) don't get me wrong but  personally was relying on it a little too much for either things I didn't understand, couldn't / wouldn't do but ultimately I was learning faster through a combo of AI prompts and then thorough checking through traditional educational methods and resources\n\nIf you need the code as a one off, consider paying a developer, it may be cheaper than renting an incompetent AI but if you want to learn to program then lean more into that and use the AI as little as possible.",
                "author": "CopiousCool",
                "score": 1
            },
            {
                "body": "I think the only way is to have an option of selecting LLMs as your task requires. The models are converging in capabilites, but diverging on characteristics. I use opencraftai for my work and so far it has been good - doesn't matter if GPT 5 tanked, or sonnet 4 does not write like 3.7",
                "author": "Away-Albatross2113",
                "score": 1
            },
            {
                "body": "i respect your opinion of my action, have a good day.",
                "author": "havoc2k10",
                "score": 1
            },
            {
                "body": "I wouldn’t go that far,  I use it often as a lead for quick boilerplate code.  However, I have enough experience to know when the code it provides is not up to par.\n\nGets even better when you train it to use your preferred file structure and coding practices.\n\nBut using it to vibe code and then trying to pass whatever it outputs as production ready code does indeed suck.",
                "author": "anonahnah9",
                "score": 1
            },
            {
                "body": "im still learning to code in the process, AI saves the hard coding while its not perfect yet, true i am thinking of hiring real dev to help the projects in long term. Thanks for the input",
                "author": "havoc2k10",
                "score": 1
            },
            {
                "body": "I'm gonna really push back on this as part of the KD effect.\n\nAs someone who finds very little time to code, as my day job is management, using LLMs for development is a literal 10x process for me.\n\nBecause it does the grunt work while I do other things. I'm not expecting it to be great, let alone one-shot things. But the ability to (literally) talk to for 2-3 minutes, have it run while I'm in a meeting or a 1:1, complete the linting, code reviews, and push through something like code rabbit gets me 70-80% of what I need. I then can fix the specific issues at a much faster rate.\n\nAnd yeah, sometimes the code quality is not good, but I'll level with you, sometimes MY code quality isn't great either!",
                "author": "web-dev-kev",
                "score": 1
            },
            {
                "body": "Im an experienced dev and I can tell you ChatGPT paid $20 plan is more than enough for me.\n\nIt saves me a ton of time,  but I don’t expect it to produce good code that doesn’t need to be altered.",
                "author": "anonahnah9",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746279132.0,
        "title": "Any help/advice appreciated for a complete beginner starting a website from scratch (UK based)",
        "author": "Ok-Construction3849",
        "id": "1kdt24g",
        "selftext": "Hi Everyone,\n\nI wondered if anyone would be so kind as to give some guidance on starting to build a website.  A bit of background is that my other half has recently trained and qualified as a dog trainer and we (mainly me) would like to build a website to promote the business.  I imagine it would be mostly content and images, and videos if possible.  I'd also like to embed a contact form in the website too.   There won't be any payments processed through the website.  I know I will need to purchase the domain we would like, I almost did it a minute ago on Porkbun,  but I thought I would be better asking for some help and advice first.\n\nI have been searching most of the morning and feel a bit overwhelmed at all the options, A2, Site Ground, GoDaddy, 123, etc.  Am I better to purchase the domain through Porkbun and then look at one of these to host the website, or should I just do an all in one with one of these companies?\n\nI'd be extremely thankful and would appreciate any advice you can give me.\n\nThanks in advance and apologies if I've missed any important details.",
        "score": 5,
        "url": "https://www.reddit.com/r/webdev/comments/1kdt24g/any_helpadvice_appreciated_for_a_complete/",
        "num_comments": 41,
        "comments": [
            {
                "body": "sounds like you should use a site builder like Wix if you want to handle it all yourself without coding knowledge. Otherwise I'd suggest hiring a contractor to make a custom one for you if you're willing to spend more for a better user experience.",
                "author": "watlington",
                "score": 2
            },
            {
                "body": "Regarding domains, most are just resellers. I personally prefer to buy from the ones that are actual registrars: namecheap, godaddy, square space. There are a few others but these are the ones i personally used.\n\nSecondly, you want to buy it from someone who will make your life easier when it comes to configuring dns and other types of records. Square space has a modern and intuitive interface, but you're likely to find significant more resources (videos / tutorials) for namecheap and godaddy since they've been doing this for a long time.\n\nNow, regarding the creation of the website: without coding knowledge you should be looking at website builders. Most if not all of them will also allow you to easily purchase and register your website in a custom domain, saving you from having to configure things like i mentioned above - however it'll be more expensive. \n\nI'd recommend you watch a few tutorials online on how to build a website using one of these tools, so you can familiarise yourself better with what it's possible and how it can be done",
                "author": "Representative_Mood2",
                "score": 1
            },
            {
                "body": "Web/mobile developer here. I'm not a senior but I'm not a junior, so I can suggest something.\n\nNowadays, you have 3 options:\n\n- Coding\n- Website Builders (drag and drop)\n- Use AI\n\nBefore deciding which approach to take, you have to understand if web development is something that you want to do as a job. If not, I wouldn't waste time with trying to learn how to code.\n\nBut anyways, here is a solid breakdown for complete beginners:\n\n- Coding: You can build a website by doing coding. I would recommend starting with HTML, CSS and JavaScript, which is more than enough for a simple website like yours. There are plenty of tutorials and documents around that could definitely help you. Of course, it will take you time since you have never done this before.\n\n- Website Builders: No coding? No problems! You can use website builders such as Wordpress or Wix. Those services allow you to do drag and drop and therefore the whole process would be easier than coding. Other popular services are Workflow and Hostinger. As for coding, it has a learning curve but definitely way more relaxed. Bear in mind that drag and drop services might cost you more in the long term because you might need to pay fees for maintaining things like CMS, plugins etc...\n\n- Use AI services: There are AI services that build the website for you. Just write a prompt of what you want and the AI would generate a ready to use website in seconds. Of course this will lack creativity but for a dog sitting website I would say that is more than enough. Unfortunately I can't remember any particular service right now but I am sure that if you look online you'll find one for sure.\n\nMy personal recommendation: use drag and drop services. They are way easier to learn compared to coding and you can definitely be creative.\nIn alternative, use something called Vibe Coding, which means that you will build the website with the code written by the AI, and for this ChatGPT is more than enough.\n\nI hope this message is helpful. Anyways, check out my super fresh portfolio to see what I mean by creating something with coding 😁 https://www.emanuelesgroi.com/",
                "author": "emanuell27",
                "score": 1
            },
            {
                "body": "You sound like you'd be better off finding a WYSIWYG like Wix or Weebly.  If your budget is more than $500 get a contractor to build you one form scratch.  Find some websites you like for reference.  You should always purchase your domain name separately.",
                "author": "cyberbless",
                "score": 1
            },
            {
                "body": "[hover.com](http://hover.com) has a nice simple interface for registering and managing domains but I've heard good things about Porkbun too so you should be fine to register with either.\n\nIf you need an email address at your new domain Hover have a built in email product that you can purchase for any domain you register with them (most domain registrars offer this) but it might be worth checking out some other options away from where you register your domain - [workspace.google.com](http://workspace.google.com) or [fastmail.com](http://fastmail.com) or [migadu.com](http://migadu.com) or [tuta.com](http://tuta.com) or [https://mailbox.org/en/](https://mailbox.org/en/) ... these are just some of the ones I can think of but there are loads out there. \n\nAs for the website, [https://carrd.co/](https://carrd.co/) might be a really good and simple way to start out, despite the tagline including  the words 'one-page sites' you can actually add multiple pages. To use a custom domain you need the pro plan but it's really good value - [https://carrd.co/pro](https://carrd.co/pro)",
                "author": null,
                "score": 1
            },
            {
                "body": "My personal opinion:\n\nbuy the domain on Cloudflare and use their DNS. User in your position will likely eventually hit a point where cloudflare could help, and although not required to have your domain directly in their DNS to use their tools, it simplifies the number of dashboards you have to put your finger in to manage your site. Just don't get immediately distracted by all their shiny tools, and only focus on the DNS dashboard when needed lol. \n\nEither:\n\n1. Go the WordPress route, and use SiteGround's WordPress hosting. this gives you a hybrid of simple with a large ceiling.\n\nGo through SiteGround for the hosting, to keep it simple yet without running into the annoyances that you'll run into with A2/Godaddy/123, etc.\n\nSiteground's expensive, but I've honestly run into nothing but constant problems with the other three (same with bluehost, hostgator, etc. There's a reason they're all cheaper.)\n\n2) Skip hosting and go to something like Wix if you don't mind simple but with a low ceiling.\n\n**IF YOU GO THE BUILDER ROUTE...DO NOT** buy the domain in the same service (e.g. do not do as others have said which is to buy your domain within Wix so it's easy to connect from right there) . I've heard nothing but tales of woe whenever it comes time to leave those services years/months down the road, about them just either ignoring requests to transfer your domain or dragging their feet for weeks for the domain transfer process.\n\nFor example, I recently moved an old domain that I had sitting in squarespace (I originally bought it through google, and then squarespace bought their domains out)...\n\nSquarespace took two f\\*\\*kin weeks to approve my domain transfer...whereas most reputable others will take 1-2 days max....some even hours.",
                "author": "RePsychological",
                "score": 1
            },
            {
                "body": "Dear sir / mam\nIts been 11 year in IT with great Experience, I build websites ( front and backend ) , softwares ( front and backend ) i have great confidence to turn your requirements and imagination to 100% reality as per your expectations if you say 123 it will be exactly 123 , i offer all services including fixing and debugging , consultation, you will enjoy working with me on your business idea , i am most trusted and honest with proven and problems solving experience , your satisfaction will be my first priority then cost and cost i offer fair you will be able to afford, if you are texting me make sure you dont thing i have that much money etc feel free i am more interested in building your business online , once we build we can fix this issue so feel free to connect on whatsapp +965 51151471",
                "author": "Ok_Carry8705",
                "score": 1
            },
            {
                "body": "Thank you so much for all your input and help everyone, I really appreciate it. I was hoping to get started on this either this weekend or next weekend, so this is all incredibly helpful!",
                "author": "Ok-Construction3849",
                "score": 1
            },
            {
                "body": "start with something basic like a wordpress site, its easy to use and has tons of free layouts to choose from",
                "author": "Potential-Simple-974",
                "score": 1
            },
            {
                "body": "You sound like you'd be better off finding a WYSIWYG like Wix or Weebly. If your budget is more than $500 get a contractor to build you one form scratch. Find some websites you like for reference. You should always purchase your domain name separately.",
                "author": "Polex691",
                "score": 1
            },
            {
                "body": "Oh by the way, let me tell you that for dog sitting you really don't need a crazy website. Something super simple that shows who you are, where you are and how much you charge. Build the user experience based on the expected audience and don't fall in the limbo of Rookies Devs that want to make crazy animations everywhere and then they fail.",
                "author": "emanuell27",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1664491441.0,
        "title": "I do webdev for a small biz 10+ yrs. Last week, without telling me in advance, I received an email stating “we are moving from WordPress to SquareSpace, let’s discuss it” … The meeting is tomorrow.",
        "author": "cascad1an",
        "id": "xrl9tm",
        "selftext": "Edit 1: Meeting went well, presented my concerns. Turns out the email was very poorly worded, which my colleague admitted. There’s a lot of stuff they don’t know, obviously. We are working to answer some of our most important questions before making a final decision.  \n  \nSo this is a little bit crazy…. After nearly a decade of stepping into a role where I was required to learn WordPress, among other things (I do a lot of custom CSS tweaks, PHP snippets, and the like) I got an email last week from someone in the company who has zero say in that part of the business, stating that “the decision has been made to move to SquareSpace” and are essentially giving our Marketing person the reigns, to do a complete redesign, etc., stating that moving to a new platform is in our favor for “modernizing” and “ease of managing” the site.  \n  \nI want to fight this transition with every ounce of my being, because SquareSpace seems to be extremely limiting. We have an issue with content-generation at the very least, and my guess is someone thinks it’s too hard to post things, or do whatever they are wanting to do. But like this transition, none of this stuff has been mentioned prior.  \n  \nMy questions: what do I have working FOR me in terms of continuing to use WordPress? Aside from the fact that I’ve learned it quite thoroughly and am comfortable with almost every aspect of it, what can I tell them? Aside from training on the platform from content management (because it may be difficult to a new user), I can’t think of one reason why we would move to SquareSpace.  \n  \nApologies if this post is all over the place, it’s been a long week of preparing for the meeting and questioning what I know. I need ammo for the meeting tomorrow. TIA!",
        "score": 122,
        "url": "https://www.reddit.com/r/webdev/comments/xrl9tm/i_do_webdev_for_a_small_biz_10_yrs_last_week/",
        "num_comments": 153,
        "comments": [
            {
                "body": "Fully willing to be disagreed with here, but if I were in a position where a decision that will affect my job in every way was made without me, and the change was to switch to a tool that's easier for non-technical people to manage on their own... I'd start updating my resume.",
                "author": "MostlyGibberish",
                "score": 458
            },
            {
                "body": "Time to look for a new job OP.\n\nThere’s no need for an in-house developer if they’re moving over to that dumpster fire.\n\nThey’ll have their site looking like trash in no time because marketing people have deluded themselves into thinking they’re devs with no code tools.",
                "author": "ApatheticWithoutTheA",
                "score": 153
            },
            {
                "body": "This and, warn them that SquareSpace is a closed platform. They can't customize it beyond what's offered. I'm not even sure they could export content once in the platform if they decide to leave. \n\nhttps://www.zdnet.com/article/squarespace-the-apple-iphone-of-hosting-has-its-limitations/",
                "author": "joe4ska",
                "score": 72
            },
            {
                "body": "That was my first instinct. And yet, met with the OWNER this morning, whom I have a great relationship with, and was reassured nothing of that sort is happening. We have a tight knit leadership core, it’s just that one decided to go rogue, even the owner didn’t know that a decision was being MADE, and rather thought we were going to have a discussion about OPTIONS.  \n  \nEither way, appreciate the comment, and will be updating resume regardless.",
                "author": "cascad1an",
                "score": 56
            },
            {
                "body": "Writing is on the wall OP. They want to move to a platform where they don't need a developer. Maybe they keep you around for a bit but it seems like marketing wants to take over and have full control of the website.\n\nI would be updating my resume and moving on.",
                "author": "LogicallyCross",
                "score": 42
            },
            {
                "body": "cough selective cautious rob lavish onerous fanatical continue smoggy shame -- mass edited with https://redact.dev/",
                "author": "RobbStark",
                "score": 42
            },
            {
                "body": "Upvoted because it made me lol. Appreciate the reply!",
                "author": "cascad1an",
                "score": 31
            },
            {
                "body": "Owners often delegate and don't know or understand details.",
                "author": "ctorx",
                "score": 30
            },
            {
                "body": "In general, I think you would be well advised to better handle change. \n\nIf you're asking reddit for justification for your stance, you have no stance.",
                "author": "Majestic_Food_4190",
                "score": 20
            },
            {
                "body": "Absolutely. Our company (~30 people) decided to transition from JSF to a js framework (ended up being react). Our head of frontend development, who poured his heart and almost a decade of development into a framework on top of JSF, was simply... *notified.* He only knew of it beforehand because of some rumors i picked up.\n\nAfter seeing how management kept overruling all of our feedback and straight up ignored us he decided to quit.\n\nThe issue now is, that he WAS the frontend framework. Even though me and other frontend devs know how to build ui with it no one truly understands all the inner workings of it. Almost nothing is documented, and the existing documentation is so shallow it is useless.\n\nMorale is lower than i ever observed it in the company frontend team. All of a sudden the CTO listens to us a lot, i guess to avoid others jumping ship.",
                "author": "Anders_142536",
                "score": 19
            },
            {
                "body": "Good news is there are a million jobs for an experienced WP dev.",
                "author": "ApatheticWithoutTheA",
                "score": 17
            },
            {
                "body": "Change happens, however, I personally, would have expected some type of broader discussing with the support teams to get a general idea of support.. \n\nThis on the other hand feels more like a person trying to make there mark, had a good experience with square space and feels it may just be what the company needs to move it forward, however short sited it may be. \n\nI'm sure it was sold as 'It will be an easy, quick conversion' without doing a full audit of the current environment, but that just an assumption. \n\nIf your goal is to try and sway their opinion, I think you would really need  to know what the reasoning was, who knows it may just fit the needs better. While WP is infinitely more flexible, sometimes you don't always need it right? \n\nIf I was arguing this point, I would start by asking why, like what are the pain points that caused it, sometimes lack of understanding of one platform makes people think its not possible or its slow and clunky, but with CPT, custom admins etc.  You can actually streamline everything, throw in headless and you can do some very compelling stuff with WP. \n\nBut, at the end of the day, ultimately, its not your call it sounds like, so, while you can voice you opinions in a respectable way, then start learning SP.\n\nGood luck!",
                "author": "Shoemugscale",
                "score": 16
            },
            {
                "body": "Quit tomorrow lol. Recently I had to work on a Squarespace website where the client wanted some customization and it was the worst experience of my life.",
                "author": "gargafc",
                "score": 14
            },
            {
                "body": "Yeah, not everyone is into micro management haha",
                "author": "Majestic_Food_4190",
                "score": 14
            },
            {
                "body": "This is the comment I needed to read. You’re right… thanks dude",
                "author": "cascad1an",
                "score": 12
            },
            {
                "body": "Well, you roll out the checklist on what business demands.\n\nWhen run cost benefit analysis and make a reasonable guess how it's best to move forward.\n\n&#x200B;\n\n>I can’t think of one reason why we would move to SquareSpace.\n\nWhen talk. It's not a good sign exactly that they haven't consulted you at all, but given how you propose the problem here I doubt it would have been of much use either. Do not come to this as \"we must use wordpress\" standpoint. But actually listen and try to address things which concern you from business side and on top of that, as an addition, you can mention what bothers you as a professional regarding the possible change. And maybe wordpress will turn out to be the correct decision and it may not. But it's important to move where the evaluation leads and keep personal preferences to a minimum.\n\nAnd it might also important to note that if all you've used to is wordpress your perspective might be quite limited as well. And you may not be able to make a sound judgement on the topic.\n\nAnd lastly, your job, as a professional is to deliver value to the business. Not to see business as a vehicle to satisfy your own needs. Sure, any good relationship is reciprocal. To get value, you need to give value. They are hiring you to solve their problems, not yours. And if that cannot be set up in reciprocal manner, when you can think about changing jobs.\n\n&#x200B;\n\nIt's not the answer you were looking for I guess. But that's what I recommend. Don't come to the meeting with idea \"I must convince them to use x\". But as a professional who helps the organization to achieve it's goals. As one should. If the return for that is not up to your liking, when think switching jobs to a place which will be better aligned with what would satisfy you.",
                "author": "wherediditrun",
                "score": 11
            },
            {
                "body": "That's actually a good thing. You can now work with something that is used throughout the industry (useful for your next job) and where it is easy to find developers for (bus factor).",
                "author": "Revolutionary-Pop948",
                "score": 11
            },
            {
                "body": "Perhaps there’s a silver lining. This whole thing has definitely pissed me off enough to be super motivated, in a good way.",
                "author": "cascad1an",
                "score": 11
            },
            {
                "body": "I agree that now’s probably a good time to update your resume…\n\nAs someone who has been hired to build both SS and WP pages I can hopefully give you a few talking points.\n\n1. Customization - WP as you know is open source with nearly infinite plug-in options. SS is controlled by one profit-focused company with limited, ( sometimes overpriced ) plug-in options.\n\nOften, the only solution for necessary customization (a specific layout, or any JS) is writing JS/HTML/CSS from scratch and pasting that into a “custom code” box. This requires a “business” level subscription payment, by the way.\n\nExample: I’ve had one site lose all images after a weird JS update from SS. I spent an hour talking to clueless customer service, asking at minimum for at least information on what had recently changed. Their reply essentially: huh, we should keep track of changes shouldn’t we? We’ll pass that idea onto the team.\n\nI fixed it on my own after a few hours of troubleshooting, then updating custom code boxes. Their code editor is awful by the way, it lags and sometimes moves the cursor while you’re typing.\n\n2. Performance - I’m not a fan of Wordpress by the way, but I assume if you’re an expert in it, you’ll be able optimize performance pretty well. SS doesn’t allow much tweaking in this area, and customer service is trained to tell you that Pagespeed scores are not valid for all site types, and SS shouldn’t be judged by that metric.\n\nWhile it’s true Pagespeed Insights isn’t an all-knowing god here, it does show SS sites using an unwieldy amount of JS that you have no control over.\n\n3. Customer service - If they find any trace of custom code, they will try to pin problems on that and avoid troubleshooting issues that originate from their end. Been there. I wouldn’t call their customer service an upside. Not sure how easy it will be to find advanced, 3rd-party paid help in SS, I assume not too easy.\n\n4. Scalability - being forced to work in “code blocks” limits you to pasting snippets on each page. ( You can paste in the <head> too, using a very narrow text editor ) I’ve gotten around this by using a separate CMS to manage some content, and putting a cdn link inside the code block. This is more sustainable and allows me to make site-wide changes. It’s crazy to use a CMS in a CMS ( this level of crazy comes from my client that refuses to leave SS, due to sunken cost fallacy before I was onboarded :’) ).\n\n5 - Version 7.0 is probably not the answer - This previous version of SS is still running and allowed developers to edit template files, for full customization. I’ve spent several days trying to learn this, and while searching everywhere, could not find a good enough tutorial to really get me going.\n\nDocumentation wasn’t detailed enough for me either. Maybe someone with more experience in templating languages can pick it up, I didn’t have enough time to keep trying. Also, again no support is available when customizing, and I doubt it will be easy to hire 3rd-party support for this deprecated system. They do keep v7.0 sites running of course, but they’re heavily pushing the next version v7.1, which made me feel uneasy while putting time into v7.0.\n\nSummary - SS is advertised as a DIY platform for hobbyists and startups. It’s fine for that. If you don’t need precise control over CSS, and you’re fine with the limited plug-in options, it will be ok. If your business ever requires something more, you’ll be stuck fighting sunken cost fallacy too :) Good luck.",
                "author": "-_-__--_-",
                "score": 10
            },
            {
                "body": "It probably would be easier for them to build and update the site on squarespace than a 10 year old Wordpress project",
                "author": "DeusExMagikarpa",
                "score": 10
            },
            {
                "body": "The writing is on the wall dude, I wouldn't put much effort into fighting it... Just bounce",
                "author": "Logi77",
                "score": 10
            },
            {
                "body": "Sounds to me like your opinion isn't valued and anything said to try and mitigate those feelings are just platitudes. My clients come to me and will literally start a conversation with \"I know this isn't your forte but....\".\n\nLike seriously? who doesn't consult the business web dev on web dev stuff?",
                "author": "tridd3r",
                "score": 9
            },
            {
                "body": "No offense to that one guy but...\n\nJSF vs React is a no-brainer.",
                "author": null,
                "score": 9
            },
            {
                "body": "Square space is pretty limited in its functionality being a proprietary system. Not sure of many code changes able to be made on it. As for as I know SS is more of a brochure builder rather than a tool that can build robust feature full sites. \n\nIf you’re the site developer at the company, and it’s now randomly being told to you that they’re switching, that’s very odd and doesn’t sound very thought on from a technical stand point",
                "author": "hrbeaccoutnname",
                "score": 9
            },
            {
                "body": "You will be good anyway this goes dude, dont stress it out",
                "author": "Kuroseroo",
                "score": 9
            },
            {
                "body": "I think you’re probably right, that someone has an experience with it and it “works for them” kind of thin may be happening; can’t confirm that yet.  \n  \nAt the end of the day, I have tenure, and will likely be able to sway the decision, it just may be less comfortable than I am hoping since someone decided not to include me from the beginning (weird misstep on their part).  \n  \nBut at the end of the day, I’m down to learn whatever. I just think we’d be better served if I teach someone what they want to know, to start being more regular with content posting, etc. than we would be to jump ship and potentially have less customization and control. But again, it comes down to “what is the reasoning behind this” which I’ll go into tomorrow and hopefully be able to approach with tact. Thanks for the reply.",
                "author": "cascad1an",
                "score": 7
            },
            {
                "body": "> who doesn't consult the web dev\n\nFolks who are dissatisfied with the web dev and who have gone around them to directly convince upper management that they can do better. Anyone in this situation needs to understand that the damage to their reputation has already been done. Justified or not. Time to tread very carefully, be super nice and supportive, all while looking for a new job as a top priority.",
                "author": "tchaffee",
                "score": 7
            },
            {
                "body": "I’m okay with change. Just pretty sure they’re going to want something I can’t do over on SS, among other things. If you think this is somehow my be-all end-all going into tomorrow, that is also incorrect.",
                "author": "cascad1an",
                "score": 7
            },
            {
                "body": "Either way, slinging Wordpress at that one place isn’t going to be a “career”.\n\nI would strongly advise you decide if you want to be a web dev. If so update your skills and start looking. If not, then find a way to be useful outside of tweaking Wordpress.\n\nI don’t know your business so hard to say, but it is indeed possible moving to square space and letting the marketing person mess with little site content/layout stuff is a good call for your company.\n\nIf you think square space cannot meet some business need, then indicate what that business need is and articulate why squarespace cannot meet it.",
                "author": null,
                "score": 7
            },
            {
                "body": "This is delusional thinking.\n\nDevs also are not designers…\n\nSquarespace is fine for a large number of marketing site needs.",
                "author": null,
                "score": 6
            },
            {
                "body": "Piggybacking on this,   \nMake a list of all the WP plugins you use.  \nSee if SS does these things already.  \nCalculate the cost of adding all necessary plugins on SS.   \nMake note of any functionality that can't happen on SS.",
                "author": "dags_co",
                "score": 6
            },
            {
                "body": "Like literally knife battling on the street for a good dev!",
                "author": "Erole_attack",
                "score": 6
            },
            {
                "body": "Obv the first thing to point out is that they won't be able to offer the same lever of customization and service to their clients with squarespace. \n\nAlso, if the goal is for commercials to create websites without any dev or designer's input, I'd be afraid of all the things you might be doing that they aren't aware of, like SEO, UX and stuff like that. You have the expérience of creating website and a more global vision of what it is and how it works, outside of just what the client think he wants. I'd start by listing everything you do outside of pure code, that's your value in the company, why they need you, and how you can convince them that changing tool is a bad idea.\n\nI had this issue with an e-mailing builder/campaign tool. They forced me to change to another tool, I listed all the reasons why it would be a bad idea, they changed anyway. Now I just say \"nope, it's not possible to do that with current tool\". Now our e-mailing campaigns looks like shit and I love every second of it. If your job isn't on the line after the meeting, and they decide to switch tool no matter what you say, than just be prepared to tell them \"told you so\" every occasion you get. It's delicious.",
                "author": "AlyxAleone",
                "score": 5
            },
            {
                "body": "Why do they need to move to Squarespace to do a \"redesign\"?\n\nSimply build them a new theme in WP.\n\nSounds like the usual case of Marketing etc not knowing what the fuck they're on about.",
                "author": "BlackHoneyTobacco",
                "score": 5
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 5
            },
            {
                "body": "The owner didn't know?  \nEither out of touch or lying.  \nBoth won't be good for you.  \nOn the anti/work sub seems like a lot of people that start looking for a job (when encountering some BS at their current job) almost always get a better job offer.  \nJust sayin.",
                "author": "dshdhjsdhjd",
                "score": 5
            },
            {
                "body": "I completely agree. But in my experience they tend do a hell of a better job at designing than somebody who has zero experience building sites.",
                "author": "ApatheticWithoutTheA",
                "score": 5
            },
            {
                "body": "\"words are wind\"\n\nThey made the decision without you. It doesn't matter what the owner says, managers need to manage, and it sounds like they saw you as a barrier.\n\nWhy do you think they find it difficult to change/update content? Obviously marketing is important for your company. Did you or anyone on your team respond negatively or ignore requests?\n\nFrom my experience in office politics, people like to form routines and do things a certain way. Those with seniority are usually the most resistant to change.\n\nIf I were you, I'd take this as a sign that I need change. And I wouldn't run away to a new job immediately. I'd be humble and try out the change. Be disposed to their decision. They've likely discredited you, but there's no reason to think that the owner doesn't want you there, or that your career there is a waste, or that you have no value. Just step it up and incorporate the marketing plan to the business. Put the business first, don't worry about your workflow right now or about how you do things. What's difficult at first becomes easier over time.",
                "author": null,
                "score": 4
            },
            {
                "body": "Similar thing happened to me a few years ago.\nWe were a small in house team developing the company website and customer zone in Drupal/Angular.\n\nOne day the group decided to standardise the websites of all the countries (they had a point, we didn’t argue about it as it was a logical thing to do), so we had to migrate everything from drupal to some sitecore cms. \n\nUnfortunately they didn’t mention we would  become simple editors and wouldn’t even be allowed to develop plugins for it, everything had to be customised/developed by another team somewhere in Germany.\n\nI took the sitecore training courses then left the company.",
                "author": "damngros",
                "score": 3
            },
            {
                "body": "I wouldn't quit.   \nFirst of all for them to build the site, it will take time.   \nIt won't be ready in a day.  \nUse this time to polish your CV, have interviews and of course get paid.  \nYou might have less things to do (but I guess the marketing dept will have to consult you for when they need a button changed) so that's a win maybe?  \nAnd if they fire you, being preparing and having interviews, or even having a job offer will be perfect.   \nBonus points for compensation for firing you?",
                "author": "vskand",
                "score": 3
            },
            {
                "body": "What I'm going to say is going to upset a lot of people but it needs to be clear\n\nCMS based web dev for the most part is an extension of marketing. If you aren't fulfilling their needs then they have every right to look elsewhere and will. \n\nSome marketing people are idiots and make mistakes, but that's just life.\n\nWhat has likely happened is you are forgetting the business goals and over time you've probably caused a gap between the marketing and development cohesion.  \n\nThey want to do more but you want to keep control?\n\nIf the finance director was deciding to cut off wordpress and didn't understand the cost benefit then you'd have more of a fighting chance \n\nBut as it's the marketing person, you probably have less legs to stand on. The system needs to work for them more than it needs to work for you\n\nI don't think WordPress or Squarespace is better. Honestly any new builds I generally now recommend going headless.  So I don't see a point in arguing which pile of crap is better \n\nI'd look for a new job and look for the earliest opportunity to reskill to maximise your future opportunities",
                "author": "chachakawooka",
                "score": 3
            },
            {
                "body": "Squarespace or Wordpress isn't really what is up for debate.\n\nYou should listen to what's **not** being said here.\n\nIt sounds like they want:\n\n* easier access to update the website\n* new features delivered faster (or within deadline) compared to the status quo\n\nAnd they seem to believe that you are a roadblock to achieving these goals. \n\nIf you are a solo dev at this company, they might be right that you are the bottleneck.\n\nIf this person has clout, you should aim to rebuild trust between you and that department.",
                "author": "30thnight",
                "score": 3
            },
            {
                "body": "you need to ask them and figure out their motivations for doing so\n\nthen research squarespace yourself to see if any of those things are true or not\n\nare we improving content generation? yes? why? why couldnt we do it on  wp? etc..\n\njust basic logic",
                "author": "lunzela",
                "score": 3
            },
            {
                "body": "Oh wow.. at least you got some training out of it!",
                "author": "cascad1an",
                "score": 3
            },
            {
                "body": "Another way to look at it is that it may be easier for you to manage, if it’s simpler. I feel like the reason people (content editors, not-as-technical people) don’t use the highly customisable systems we build is because they’re more complicated. A hard lesson learned for me in web dev is when to recognise that I’m siding with a technology because it better excites me technologically i.e. I can see the potential, over what people actually want and need. Not saying thats you, but it certainly might be an opinion they hold about you going into the convos. Wishing you luck",
                "author": null,
                "score": 3
            },
            {
                "body": "Or it’s a tiny business and the owner doesn’t know anything about marketing. This happens all the time. Especially at the kind of business that has 1 dude making Wordpress updates for 10 years.",
                "author": null,
                "score": 3
            },
            {
                "body": "Square space has full template editing over ssh with git integration. It’s not that awful to work in.",
                "author": "makingtacosrightnow",
                "score": 3
            },
            {
                "body": "Square space is totally fine and will accommodate 99% of what people use Wordpress for.\n\nThe reality is slinging Wordpress is a dying trade and folks should either update their skills to be technical enough to work on bespoke applications, or train up to move into a more marketing/design kind of role.\n\nThe “Wordpress guy” isn’t a strong career move in 2022z",
                "author": null,
                "score": 3
            },
            {
                "body": "You can probably up your compensation when you move on.\n\nSo it may not be all bad. Sometimes you get complacent when you’ve been at a job for so long and can’t see there’s better things out there.",
                "author": "ApatheticWithoutTheA",
                "score": 3
            },
            {
                "body": "It's not unusual for the business to suggest moving platforms. But deciding without talking to you, does seem odd.\n\nThat being said, start compiling a list of features that you already have that can't be replicated in SS. If your site is more than just a marketing landing page, then you might have a case. If it's not, I would be worried",
                "author": "devperez",
                "score": 3
            },
            {
                "body": "Hey no problem, glad it made you feel better. Remember we work in a field with a really high demand, people are literally fighting for devs :)",
                "author": "Kuroseroo",
                "score": 3
            },
            {
                "body": "Moving backwards if they’re switching from WP to SS. Dang. Just step up the WP game.",
                "author": "saltymane",
                "score": 2
            },
            {
                "body": "At least it's not WIX. IT DOESN'T EVEN HAVE A RESPONSIVE WEBPAGE! God I hate that platform with a passion.",
                "author": null,
                "score": 2
            },
            {
                "body": "Personally I think it makes sense for an e-commerce platform. However as people have pointed out customisation is harder and requires some new skills but if you have been with them so long it sounds like something off the shelf may not cut it for them (which is why you are working on the platform for such a long time) and they will still want features, theming etc which you will be able to learn and adapt to. Something's will not be doable on a hosted platform so set that expectation to the business.\n\nAs a developer try to avoid putting yourself in a box of 'wordpress developer' as if you are good at things like HTML, CSS, js and PHP most your skillset can still be used regardless of the platform.",
                "author": "exploit332",
                "score": 2
            },
            {
                "body": "Update your CV and GTFO. Watch them burn from the outside rather than from within.\n\nIf you must stay emphasize the closed nature of Squarespace. You have no ability to separate front end from back end to create a headless stack in the future.",
                "author": "jerapine",
                "score": 2
            },
            {
                "body": "OP, if you want to keep the job, I would suggest looking into Divi (for Wordpress). Personally, I would present them an overview of Divi, it’s capabilities and why it’s a better fit than Squarespace. Squarespace is the opposite of “modernizing” and whomever is making the decision probably doesn’t know a thing about web dev or what platform is best for the company’s needs. With that said, if you don’t mind moving companies, I’d just go ahead and start looking for a new position somewhere that will value you. If this company valued you as their web developer, they would’ve consulted you first on the idea of migrating the entire site… \n\nThis was such a good reminder of why I went freelance. Friggen idiots maaaan.",
                "author": "thelastunicorn_",
                "score": 2
            },
            {
                "body": "You’re right, I intend to go into the meeting trying to better understand their concerns, first and foremost. After that, we can talk logistics. I’ve just never had to be in the position of defending something like this, as I am the trusted person on the matter (clearly not so much anymore but…)  \n  \nOne of the challenges of wearing many hats in a small business setting, has been not being able to focus on this stuff more regularly.",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "Oh god… LOL! Thanks for the warning",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "Sounds like you were joking about quitting, but looking for a new job while you are still employed is by far the best choice. Totally different vibe negotiating your salary when you're in control and can take it or leave it.",
                "author": "tchaffee",
                "score": 2
            },
            {
                "body": "I've had this exact experience several times. Client ignores advice, moves to SquareSpace, realizes x feature is missing. It's a nightmare. That can go several ways from there. All of them bad.",
                "author": "cranberrytech",
                "score": 2
            },
            {
                "body": "Am prepared for the “told you so” part for sure :)",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "Well I should clarify… it was refreshed about 5 years ago, after deciding it was time for a clean slate. Now they want to do the same thing, again, and sacrifice my knowledge/ability, for something totally new.",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "All good points. Thank you. I absolutely need another job offer in my back pocket soon.",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "Unfortunately these are the facts. Unless you can convince the business you'll make them more money on WP, they're not going to care about the technical differences.\n\nYou can also treat this as a learning experience to see why they're going to Squarespace and you'll have new skills under your belt to be the WordPress person AND Squarespace person.\n\nTechnology changes so fast you have to be intentional if you want to stick to one thing. As most have said, there are still firms set on using only WP and you may find your new home there.",
                "author": "Total_Lag",
                "score": 2
            },
            {
                "body": "Appreciate the reply, thanks! Some very good points made.",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "I have been asking for content for years, and finally a couple months ago the marketing person finally did a post, and it looked great. Don’t recall hearing any questions or concerns after that so I’m not sure what happened. Going to find out today though.",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "For sure, totally get that perspective. My issue is a lack of time, and lack of content (which I’ve requested over and over), so if the person posting that content simply is struggling with a perceived technical hurdle, then I’d rather help them overcome it. The ability to customize and tweak things has been a life saver, and don’t really want to lose it. Fully onboard with them doing the creative part.",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "Not if somebody important saw some great ads and lacks critical thinking. They probably think that if SS exists then all web devs are scam artists, and/or that the platform looks so good there's no way it doesn't \"just work\". There are plenty of idiots out in the sea. \n\n&#x200B;\n\nall imho of course. I'm sure there are devs who are capable of doing actual dev work and unironically use SS sometimes.",
                "author": "FuckingTree",
                "score": 2
            },
            {
                "body": "I’m inclined to agree with you, and hope this can all be chalked up to a lack of thorough understanding. Wasn’t sure which info to include, and was in sort of a blind rage posting this and probably left out some important details, but the post does touch on most of the important stuff… Appreciate all the comments!",
                "author": "cascad1an",
                "score": 2
            },
            {
                "body": "Wait a sec...you haven't updated the site to Gutenberg yet? It's been out for a really long time now.",
                "author": "stupidcookface",
                "score": 2
            },
            {
                "body": "Yeah you got a point.",
                "author": "JamesHagoodDev",
                "score": 2
            },
            {
                "body": "You really can’t go wrong with react.\n\nI’ve even used react as a frontend for a headless Wordpress backend before. (This was like 6 years ago but I used advanced custom fields and the rest api).\n\nGot my start on Wordpress, but you really do need to move beyond it or you’ll hit a rut and stop progressing.\n\nImo spend a bit getting comfy with react, then look for an agency gig that wants react. Then oportunistically pick up languages from there.\n\nA mid level agency react gig should pay between 70-100 in the US. Sometimes more. To give you an idea, I have 2 mid level react engineers working on my team and they both make over 100k. Granted, they are great devs.\n\nOf course if you prefer backend work, there are many opportunities there too. There id recommend node, c#/.net, or elixir. I’m a bit less familiar with that path as I went frontend -> full stack rather than the other way round.\n\nHappy to answer any questions I can.",
                "author": null,
                "score": 2
            },
            {
                "body": "Meeting went well, see edit at top of original post.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Regarding fighting the transition: if they've \"suggested\" this without consulting you, and they're including you now, they're much further down the road on their agenda than you think.",
                "author": "mindroot",
                "score": 1
            },
            {
                "body": "Tech platform migrations are very risky. If not done properly any number of things can go wrong. You need good SEO, redirects, sitemaps, performance audits, martech integrations, and so much more. It's doable but there is a huge checklist of things that need proper planning and QA. They would be very lucky to keep your knowledge around for existing undocumented functionality.\n\nThat said, after the task is complete and verified as functional there is a good chance they plan on laying you off. Trust nobody and watch your back.",
                "author": "bmlsayshi",
                "score": 1
            },
            {
                "body": "Square space has a developer component. If you’re willing to dig in and learn it, you could be creating a custom website that’s awesome with the ease of the front end of square space. It’s really simple for people. And there’s something to be said for that. When you have non-technical people doing the content creation, you want the layout locked down and everything as simple as possible for them to interact with. Square space can actually do that. It can keep the layout locked down, and if you go the route of a square space developer, you can customize and have many more options to your design.",
                "author": "glorywesst",
                "score": 1
            },
            {
                "body": "Is moving from WordPress to SquareSpace and upgrade?",
                "author": "JamesHagoodDev",
                "score": 1
            },
            {
                "body": "Jump onboard now or get kicked off the ride altogether - but that's assuming you can verify you should be doing anything about it at all. It seems like there are two issues. The first and most pressing is some rando apparently told you they're moving website platforms. If I were a contractor I'd remind them that (unless something in your contract specifies who you take orders from) you'll be billing all the same for the work. If they're adamant they have the authority to make the call you document everything and I'd just proceed as if it was duly signed off on.\n\n&#x200B;\n\nThe second issue is your reluctance to use SS. No shit, SS is a bad move. But if they got sold on the ads and you don't want to do SS then they won't have any use for you. I'd just go with it and be upfront about the limitations so that they don't expect that the migration will just fix all their problems and be painless forever and ever. Last I heard, SS has some weird setup when it comes to IP, copyright, and content so if they're anal about protecting their brand hopefully they learn that there are concessions you take when you throw all in for a proprietary platform as a service.",
                "author": "FuckingTree",
                "score": 1
            },
            {
                "body": "!remindme",
                "author": "dags_co",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "Finally someone in the exact same role as me, at the same company type. With the same idiots on the team. 😜\n\nI would say it is a joke. Hopefully.",
                "author": null,
                "score": 1
            },
            {
                "body": "Seriously, it is a good challenge to upskill. Sure, everyone is going to suggest you brush up the resume and start looking for a job. BUT.....  \n\n\nYou can embed code like React, VueJS into Squarespace and take over things that SS does not provide. You can also add hooks to make SS more interactive by adding your own API based service. The nice thing about SS is the built in CDN network for resiliency.  Unless you have your Wordpress site installed on 6-8 data centers around the world with load balance round robin, SS has that sheer advantage.  \n\n\nYou can just use SS as a loader for your Javascript framework based app.  \n[https://support.squarespace.com/hc/en-us/articles/205815928-Adding-custom-code-to-your-site](https://support.squarespace.com/hc/en-us/articles/205815928-Adding-custom-code-to-your-site)  \n\n\nNow add React to an existing website: https://reactjs.org/docs/add-react-to-a-website.html\n\n  \n\n\nThis in itself provides you a challenge to upskill.",
                "author": "originalchronoguy",
                "score": 1
            },
            {
                "body": "10 years with WordPress is great experience especially if you stayed at the same job with the same small company. But I would imagine the raises they give to keep you and your familiarity with the company would be more beneficial than a complete rework of the site or hiring a new dev/eliminating your position. I am unsure how much is easily transferable to squarespace. But they probably haven't researched that enough either. I would make sure at the meeting they know how it would look before and after the switch and make a trial/ dev environment for the current environment and one singular update on square. If they were happy with this then you could drop WordPress subscription. If they don't agree to that I would do what most people say and update the resume. Then it would be sure they will sacrifice quality and consistency for a quick buck. And it will look tempting for management who can get away with that foolhardy of a decision too within 2 years to say 'well I could do what that developer could do' and want to eliminate the position because your salary would just be a waste in their mind. As for wordpress positives i would say visualization is quicker and easier for an experienced person (you) to show and unexperienced person (managers or company) what the final product would look like. Saves a lot of time and resources to share a screen and an hour to add a new feature and get quick feedback on the Frontend. Good luck, would like to see an update!",
                "author": "Programmyboy",
                "score": 1
            },
            {
                "body": "Offer to solve all the problems with WordPress, if they have issues with posts, create an easy post form for them that updates the backend.\n\nTell them Squarespace is a downgrade with limited customisation and you're locked into a third party system which stores your data. \n\nOn WordPress it is open source and flexible and you host your own data.",
                "author": "EducationalRat",
                "score": 1
            },
            {
                "body": "Sorry to make multiple posts, but another option could be to leave and go freelance, offering them your services for Squarespace before you leave.\n\nThat way you get to add Squarespace customisation to your CV and use it freelance for any lowball clients who want really cheap sites.",
                "author": "BlackHoneyTobacco",
                "score": 1
            },
            {
                "body": "Here's what's going to happen: some marketing dipshit\\* thinks the one SquareSpace site they've used for their hobby site was so easy to use. Now they want to use it for the business site. But now it's no fun for them to enter content like it was for their personal site - or \"they have no time\" (marketing people never seem to have time to do their work\\*\\*) and are going to want you entering content in WYSIWYG fields all day. Then, they are going to want to customize to a level that is not possible in SquareSpace. Now it's your problem that their idea didn't work out. \n\nMake sure your strong objections to this idea are in emails or documented somewhere. Not just in a meeting. And then update your resume and start looking for something else.\n\n\\*I work with marketing departments and agencies as a freelancer. It is steady work but it is the same freaking problems with every.single.client.\n\n\\*\\*Marketing clients will put me on retainer to update their CMS based site because \"They don't have time\" despite the fact that I told them a CMS is twice the cost and not worth it if they aren't managing content themselves. But they insist they will edit content. Yet they never do. I can actually log into the dashboard and see they've never once made a change to content or added a new page in years.",
                "author": "HaddockBranzini-II",
                "score": 1
            },
            {
                "body": "You got exposed",
                "author": "CevicheCabbage",
                "score": 1
            },
            {
                "body": "I'm a freelance dev who often uses WordPress and had a similar experience with a client. It was a fairly large association, and their membership site was on WordPress. I did maintenance, and helped them make updates and implement new features. The site was looking a bit dated, but working pretty well and there were no complaints.\n\nBut then, one random day, they emailed me that they needed help migrating to Memberclicks. The marketing team got this idea, sold by all the \"bells and whistles\" of this platform. I gave them a lot of reasons why I thought this might be a bad move, and how WordPress could do all the same things, but they were set. I went ahead and supported them as best I could.\n\nNo more than a year later... they contacted me to design and build a new site, back on WordPress!! The other platform was a disaster for them — it was missing functionality and flexibility they needed. It was horrible for SEO. So this poor decision ended up costing them a TON of money. I didn't give them a low estimate for the new site.\n\nSo, I guess what I'm saying is... the choice might not work out for them, if they do move, and they will see the error of jumping around without consulting their own developer and really doing a proper analysis.",
                "author": "wisegirl1",
                "score": 1
            },
            {
                "body": "No matter what happens with your job or with your company. I mean, there are PLENTY of WordPress developer jobs out there. Not too many SquareSpace developer jobs.\n\nYou gotta think of your future skill set and employment; on top of everything else that might be going on internally.\n\nGood luck.\n\nYears ago I worked for a company that overnight decided to switch from ASP/.NET to WebSphere (Java). I understand both technologies are in fairly high demand now. But, it was just such a stark difference that I ultimately decided to move on.",
                "author": "ihaveway2manyhobbies",
                "score": 1
            },
            {
                "body": "What I recommend:\n\n* Create a list of pros and cons of SquareSpace and send it to them in writing (preferably email)\n* State that you believe SS is very limiting and you will take no responsibility over future complications and limitations\n* State that this decision was made without consulting with you\n* If you want to continue at this company, you will have to adapt and work with the new opportunities and limitations or leave. If they already had a meeting and reached a decision without your input, they will fire you very easily in the future for any reason.\n\nMy recommendation:\n\n* Do the above\n* Start looking for other jobs or opportunities\n* If you maintained the code, make sure you have it committed to a repo you own\n* Use any part of code in future projects\n\nGood luck",
                "author": "ashkanahmadi",
                "score": 1
            },
            {
                "body": "Start job hunting now.\n\nSomething as big as this wasn't decided with your opinion in mind. Do not quit immediately because you have no job now.\n\nHunt for one and then jump from ship to ship.",
                "author": "Gwolf4",
                "score": 1
            },
            {
                "body": "If you have been doing Wordpress for 10 years at the same place - I’d strongly advise you go find a new job. You are almost certainly making far less than you could be.",
                "author": null,
                "score": 1
            },
            {
                "body": "Im a developer who used SquareSpace on the insistence of a family friend and it was an absolute slog, it made every single thing harder than it was supposed to be. I think It's supposed to be for solo small business owners who donnt want to pay for a web developer, and I guess it's good for those people in the same way that geocities sites were good for people in the 90s",
                "author": "nice_porson",
                "score": 1
            },
            {
                "body": "Well, think about what's better for the company (because the managers likely already have in their heads what they want to do). I wouldn't straight up piss all over SquareSpace  - but we also don't know what its replacing. Is it just a corporate, lead generating, online brochure? Is there ecommerce? Does it act as a company intranet?\n\nIf the site you're currently managing is nothing more than a blog and info dump about the company - SquareSpace might be a good fit. And to be honest, you might be better off getting ahead of it by offering your 2 weeks notice ahead of any kind of termination (quitting looks better than being laid off, imo). But that's your call.\n\nIf there is more to what the site does (e.g. ecommerce, custom software, etc.) bring it up. I mean, the fact that they've already mentioned a product solution as opposed to bringing you in for the brainstorming session means that they're 90% confident that SquareSpace is the solution. Unless you have some secret sauce they're not aware of - they will be switching. THAT said, you can defintely move those bits to something like a dedicated server or heroku and have SquareSpace pull that data in via REST or iframe - so I'd focus there in you \"pitch\".",
                "author": null,
                "score": 1
            },
            {
                "body": "I might not know enough about wordpress/squarespace, but I’d say the same as one of my colleagues once said to the boss: “Good luck with changing everything if u know better, let’s discuss it further when you’re ready”.",
                "author": "Russell_Jack",
                "score": 1
            },
            {
                "body": "Compare your current feature list on WordPress with what is possible on SquareSpace. If there are any disadvantages or impossibilities when applying your site to SquareSpace then bring those up to whoever needs to hear it. If there are no disadvantages or impossibilities then maybe the move makes sense?",
                "author": "dptillinfinity93",
                "score": 1
            },
            {
                "body": "I haven't read all the comments, so apologies if this has already been said. But you have a couple of choices to make. If it is a company decision and it's from the top there is nothing to fight. Remember, you are employed. So in this case, you'll need to decide if you are going to stay or leave. If you have enough skills, and you are extremely proficient in the area of web design, you certainly will not have. a problem finding a new job. Heck, if something comes up you can come and work with us. I don't have a problem as i created our company to really help others. Either way, don't sweat it. If anything, please try to look at the positive. It's a new tool,, right? And potentially, they are willing to wait it out until you become as proficient, so perhaps do that while maintaining your current WordPress skills, which will make you more valuable in the marketplace. Do keep in touch. Peace & Love.",
                "author": "netooze_",
                "score": 1
            },
            {
                "body": "It's been over a decade since I met someone who didn't claim they knew how to program",
                "author": "PureRepresentative9",
                "score": 1
            },
            {
                "body": "Even if there’s an obvious and really great reason for OP’s company to stick with WordPress, it probably doesn’t matter. When managers get an idea in there head, they often can’t be persuaded out of it.\n\nI’ve seen management make obviously poor decisions at my workplace that ultimately cost the company large sums of money… but those managers have already moved on to a different company by the time the shit has hit the fan.",
                "author": "DontListenToMe33",
                "score": 1
            },
            {
                "body": "Exactly. Don’t have a fucking clue why they think I can’t make anything they want in WP.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "I don’t think you’re entirely wrong here. That was actually something that came up. I’m not the roadblock per se, but the WP platform is, due to either an unwillingness to learn or an unfamiliarity of features. It’s always tough when they suddenly decide something is “the most important thing right now” because I never even got the chance to make it right. So that’s where we’re going to start, rebuilding trust, and if they still aren’t a fan then I have many other domains I can mess around with. :)",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Good reply, thank you..",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Haha thanks for the comment, friggen idiots indeed. Will refresh myself on Divi as it’s been awhile",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "It isn’t their agenda to have though, that’s the thing. Very confusing all around.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Good to know, will look into it!",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "I don’t consider it to be, no. It will definitely be a regression away from the notion of future proofing, which we always try to do.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "If you don't know anything about web design, which most places that use Wordpress for anything besides a blog don't, then it might seem like an upgrade.",
                "author": "FuckingTree",
                "score": 1
            },
            {
                "body": "I’m not reluctant because it’s something “different,” but am so for the other reasons. And I’m actually an employee with tenure, not a contractor, which makes this even more interesting.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "**Defaulted to one day.**\n\nI will be messaging you on [**2022-10-01 04:19:42 UTC**](http://www.wolframalpha.com/input/?i=2022-10-01%2004:19:42%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/webdev/comments/xrl9tm/i_do_webdev_for_a_small_biz_10_yrs_last_week/iqgl0zo/?context=3)\n\n[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fwebdev%2Fcomments%2Fxrl9tm%2Fi_do_webdev_for_a_small_biz_10_yrs_last_week%2Fiqgl0zo%2F%5D%0A%0ARemindMe%21%202022-10-01%2004%3A19%3A42%20UTC) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20xrl9tm)\n\n*****\n\n|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|\n|-|-|-|-|",
                "author": "RemindMeBot",
                "score": 1
            },
            {
                "body": "Excellent. I’m always down to upskill! Just started dabbling with React recently as it so happens. Good to know about being able to embed it on SS!",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "That’s not a bad idea.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Holy shit… pretty sure you hit the nail on the head in the first part. I have a theory that the marketing person actually does use SS for their photography side hustle (haven’t looked for it yet) and that’s absolutely what is driving this decision. To be confirmed later…",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "I would absolutely bet that is true. Even recent raises haven’t kept up with the inflation rate.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "So how did the meeting go?",
                "author": "dags_co",
                "score": 1
            },
            {
                "body": "Sounds like the management you are tight with is not who makes the final decision.  Be worried",
                "author": "Beautiful_Proof_7952",
                "score": 1
            },
            {
                "body": "Hi, nice to meet you. Dispite taking some programming classes I can fully admit I don't know how to program.",
                "author": "MountainOso",
                "score": 1
            },
            {
                "body": "Oh yeah, for sure.\n\nIf they’ve already decided on Squarespace,  I doubt there’s much hope of changing their minds.\n\nAnd honestly, they probably have already decided that OPs job will be phased out. Because there’s zero need for a Dev with Squarespace. There’s virtually zero room for customization.",
                "author": "ApatheticWithoutTheA",
                "score": 1
            },
            {
                "body": "Says every politician, ever",
                "author": "Beautiful_Proof_7952",
                "score": 1
            },
            {
                "body": "It's the most delicious moments :) yum yum",
                "author": "AlyxAleone",
                "score": 1
            },
            {
                "body": "Only once per five years? For a lot of companies it's every few years. You'll get used to this. Don't take it so personally. Be supportive and as helpful as you can and in the meantime your top priority should be looking for other work.",
                "author": "tchaffee",
                "score": 1
            },
            {
                "body": "5 years ago? So guess you aren't using Gutenberg? \n\nIf that's the case maybe you have an angle to persuade them on WordPress and utilise Gutenberg. \n\nThey probably don't want a crap admin, flat design. And want to utilise visua administrative components for story building\n\nIf that is the case they might simply not know wordpress is still an option for that now",
                "author": "chachakawooka",
                "score": 1
            },
            {
                "body": "Elementor Pro is what I use for my WordPress site. It's an extremely capable page builder as well. I've never used Divi, so I'm not sure how it compares, but there's almost no design you can't build with Elementor Pro and a little CSS if necessary. It's similar to working with Squarespace in terms of ease of use, but you have infinitely more control and flexibility.",
                "author": "HighOnBonerPills",
                "score": 1
            },
            {
                "body": "And then you have to keep your job because you’re the only one who knows how to make that backend work.",
                "author": "glorywesst",
                "score": 1
            },
            {
                "body": "Yeah doesn't seem like a very good way modernize the product. I have nothing against WordPress and I personally think it is useful for agencies and smaller teams. But to me squarespace would be something I might would legit recommend to my grandmother. I haven't never used squarespace, I have just observed it. But I could be wrong, so I thought I would ask.",
                "author": "JamesHagoodDev",
                "score": 1
            },
            {
                "body": "Seems like that would be a discussion the company would want to include their developer in.",
                "author": "JamesHagoodDev",
                "score": 1
            },
            {
                "body": "I wish 'ya luck navigating it. I assumed you were contracting just because most of the time you put \"i do webdev for a small biz\" and \"wordpress\" together it's usually contract work for static sties and whatnot - but having full time tenured background should if nothing else be a good reason to not worry as much about whether they made such a sudden decision because of/in spite of you, it makes it much more likely someone fell victim to good advertising and hyped up in a vacuum.",
                "author": "FuckingTree",
                "score": 1
            },
            {
                "body": "Look at agencies around. I bet a/ 10 yoe you should be in the 100 - 120 range",
                "author": null,
                "score": 1
            },
            {
                "body": "Thanks, definitely going to see what else is out there.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "True!\n\nThe point I was trying to make was not about the decision at hand, but *how* it was decided and communicated.\n\nWe would have wished for a discussion in the team about what framework to transition to. The most technical arguments would have spoken for Vue.",
                "author": "Anders_142536",
                "score": 1
            },
            {
                "body": "It sure as hell is, but it was probably a sunk-cost-fallacy",
                "author": "Anders_142536",
                "score": 1
            },
            {
                "body": "COVID really put a wrench in things, a lot of people went remote and we stopped communicating as much. That’s what I attribute to not having had an update sooner. I’m jumping at the chance to refresh again, but want to show them what can be done with WP, which is anything SS can do and more design-wise.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "They have no idea that Gutenberg is a thing, and is a huge feature I plan to mention today.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Thanks! Good info. And I agree that it’s strange they’re the ones telling me, and not the other way around.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Really? Dude I really need to start looking out for me if that’s the case, holy fuck. Thanks!",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "Good luck",
                "author": null,
                "score": 1
            },
            {
                "body": "So code changes can be made? If so then that is quite interesting and does more than I knew since the last time I checked out!",
                "author": "hrbeaccoutnname",
                "score": 1
            },
            {
                "body": "Just to give you an idea, my salary was\n\n28k for 1 year. 38 k for 1 year. 45 for 1, 55 for 1. 75 for 1 90 for 1. 110 for 1. Then 140, 150, 160.\n\nI currently have a About 12 yoe. I’m full stack and work in react / node / elixir.\n\nWith ONLY Wordpress, I wouldn’t expect your salary that high, but you could for sure be in the 70-110 range depending on your aptitude.\n\nEach big salary jump up there was a job change.",
                "author": null,
                "score": 1
            },
            {
                "body": "Oh no, it’s updated, I just still use the classic editor via a plugin. Personal preference and nothing against Gutenberg. Just one of many small details that are relevant here to their limited experience trying to get content on our site haha. I do not let security vulnerabilities sit around like that by not updating stuff 🤣",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "I mean Gutenberg has been out for a while, but lets not kid ourselves here, it still needs work ( I do use it ) but it still has a lot to be desired, just saying. Other editors that have been around for a while, still have a leg up, from a authoring perspective. FSE will be the future, but its still not there IMO, they could have done a way better job in making things approachable, from both the dev and authoring side of things. \n\nNow with that said, taking fse out and simply using custom blocks has been nice, really helps keep things structured better, however authors do gripe at times when they can fuck up pages with all sorts of useless markup from older editors like wpbakery lol",
                "author": "Shoemugscale",
                "score": 1
            },
            {
                "body": "Good call. I made a long list of pros and cons this afternoon. There’s a clear winner, no matter how much I remove any bias towards it and want to like SS.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "I’m actually interested in getting to full stack, React was the next thing on my to-learn list. What would you suggest though?",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "I'm more worried about security patches more than anything - but it would have helped the op's ordeal with marketing I would think giving them the Gutenberg UI to work with. Guarantee that's the only reason they \"think\" they want square space.",
                "author": "stupidcookface",
                "score": 1
            },
            {
                "body": "I think one of the nice things about Gutenberg / blocks is has made it a lot simpler to just roll your own blocks, meaning less to worry about from a 'security' issue when it comes to plugins, because, you know, everyone loves to load plugins to do simple stuff lol. So from that perspective, it can really help security. \n\nGenerally, WP is fairly good at patching, and with a good update flow its not as big a deal as it used to be ( don't get me wrong here, it still very important, but with proper measures in place, you can really mitigate this e.g. WAF, ACL's etc ) \n\nNow, with that said, if OP wanted to quick-win this, then just load up Divi or something, divi can use custom blocks too, giving that 'feel' they may be looking for, even though I personally don't like them lol but thats not the exercise here",
                "author": "Shoemugscale",
                "score": 1
            },
            {
                "body": "Awesome.. thank you so much for this information. Just settled in for the night and getting cozy with my React path on pluralsight again. Will definitely lyk if there are any questions. It’s time for me to grow beyond WP.",
                "author": "cascad1an",
                "score": 1
            },
            {
                "body": "The x theme is better than divi IMO - although I actually prefer their older UI - the new UI feels a bit cluttered now in the advanced settings. Still a great theme and easy to develop on top of, they provide a lot of hooks and the ability to create custom elements/blocks. \n\nI haven't developed anything significant in wp since Gutenberg came out tho so maybe Gutenberg is the best option now, given the fact that it's first party supported.\n\nI talk about the security side after having been hacked 4 times now, each time I increase my security practices. Last hack was 3 years ago so I guess I'm in a good state now but took a while to get there. And I've always blamed wp because of it being the most exposed/targeted platform to find vulnerabilities which is why I'm adamant about updating for security patches.",
                "author": "stupidcookface",
                "score": 1
            },
            {
                "body": "I hear you, WP is world renowned for being 'hacked' however, its typically not 'WP-Core' but all the BS that is added on and poor coding practices etc. \n\nGutenberg (a a whole ) still needs work, while I like that its baked into the core the experience is just not there yet IMO. That said though, blocks are really nice and provide great flexibility. \n\nSecurity is / should be top priority with any site, but WP especially, we literally rely on 3rd parties to create code that we put on our site lol, so there is a lot of trust going on here, thankfully most are not intentionally bad, but, exploits can and do happen, that is why its so important to have proper monitoring and measures in place to actively stop attacks. If your not in a larg org with active monitoring, using tools like wordfence OR providers like WP Engine with WAF monitoring etc. Is a great option, not to mention the daily backups, Simple Plugin Manager etc. etc.",
                "author": "Shoemugscale",
                "score": 1
            },
            {
                "body": "Crazy",
                "author": "carlurbanthesecond2",
                "score": -1
            },
            {
                "body": "This was the best advise here. Listen to that guy and ignore the \"update your resume\" comments as they don't bring anything to the table.",
                "author": "Skarsburning",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1737123555.0,
        "title": "Any backend devs here? What email providers have you used in the past and which ones would you recommend",
        "author": "Familiar-Mall-6676",
        "id": "1i3hcdp",
        "selftext": "Hi guys,\n\nPermission to post mod. I think I am within guidelines of this subreddit? Kindly let me know. I was referred by another subreddit to post here instead.   \n  \nI hope we have some backend devs here? I am currently in the process of integrating an email service into our microservice for our SaaS. This service will handle all the essential email-related functionality required for a backend system to support our user base effectively.\n\nThe specific requirements for the email service include:\n\n1. **Welcome Email**: Sending a personalized welcome email to users upon signing up.\n2. **Password Reset**: Allowing users to reset their password by receiving a secure link or code via email.\n3. **Subscription Invoice**: Automatically sending an invoice or receipt email to users after every successful purchase or subscription renewal.\n4. **Newsletter**: Potentially sending periodic newsletters to users (maybe).\n5. **Inviting Colleagues**: Enabling users to invite their colleagues or team members via email, with customizable invite links or messages.\n\nThe application will cater to around **10,000 to 20,000 active users**, and the estimated email volume is over **100,000 emails per month**. Therefore, the service needs to be **reliable, scalable**, and capable of handling transactional emails efficiently, along with offering a user-friendly API for integration.\n\nThese are the providers I researched but I have no clue which ones to go with:\n\n|**#**|**Provider**|**Details**|**Price**|\n|:-|:-|:-|:-|\n||\n|1|Nodemailer|A Node.js module that enables applications to send emails easily|Free|\n|2|Sendgrid|A cloud-based service offering reliable email delivery at scale, including APIs for integration and tools for marketing campaigns|Free - up to 100 emails per day $19.95 - 50,000 emails $89.95 - 2,500,0000 emails Custom|\n|3|Postmark|A service focused on fast and reliable delivery of transactional emails, providing both SMTP and API options|$15 - 10,000 per month $115 - 125,000 $455- 700,000|\n|4|Novu|An open-source notification infrastructure for developers and product teams, supporting multiple channels like in-app, email, push, and chat|Free- 30k events $250 - 250k events + $1.20 per 1,000 additional events Custom|\n|5|Resend|A service designed for developers to deliver transactional and marketing emails at scale, offering a simple and elegant interface|$0- 3,000 emails/month|\n|6|Resend community wrapper|A NestJS provider for sending emails using Resend, facilitating integration within NestJS applications|Free- 3,000 emails/ month $20- 50,000 emails/ month $90- 100,000 emails/ month Custom|\n|7|Brevo|An all-in-one platform for managing customer relationships via email, SMS, chat, and more, formerly known as Sendinblue|Free- 100 contacts $9- 500 contacts $17- 1,500 contacts $29- 20,000 contacts $39- 40,000 contacts $55- 60,000 contacts $69- 100,000 contacts|\n|8|Fastmail|A service providing fast, private email hosting for individuals and businesses, with features like calendars and contacts|$5- 1 inbox $8- 2 inbox $11- up to 6 inbox|\n|9|Mailgun|A transactional email API service for developers, enabling sending, receiving, and tracking emails at any scale|Free- 100 emails per day $15- emails per month $35- 50,000 per month $90- 100,000 per month|\n\nI’m evaluating these providers based on their pricing, scalability, and the ability to meet the above requirements. I am thinking maybe nodemailer because it is free but I am just afraid that this will go straight to spam.\n\nWhat have you used in the past, what would you recommend based on your experience and why? I would appreciate your input.",
        "score": 16,
        "url": "https://www.reddit.com/r/webdev/comments/1i3hcdp/any_backend_devs_here_what_email_providers_have/",
        "num_comments": 58,
        "comments": [
            {
                "body": "Sidenote just want to say it’s refreshing to see someone do some preliminary research themselves first instead of asking the community to do all of the work for them, it’s rare these days! Best of luck with your project.",
                "author": "Valinaut",
                "score": 19
            },
            {
                "body": "We're an AWS shop and use SES.",
                "author": "mrbmi513",
                "score": 10
            },
            {
                "body": "Postmark. I build apps for smaller companies (like ERP systems) so I run many of those which all have email requirements. All of them go through Postmark for email delivery. It has been great from the start and the API is easy to use. No downtime or deliverability issues to date.",
                "author": "DewaldR",
                "score": 9
            },
            {
                "body": "I’ve used Mailgun on an array of projects, including sites with 1 million user accounts sending things such as account alerts, sign in codes/magic links, order notifications, and so much on.\n\nOkay, there’s probably cheaper platforms out there - but I’ve never had an issue with reliability and it included features such as analytics on email opens and click tracking.",
                "author": "softwareguy21",
                "score": 5
            },
            {
                "body": "Postmark always got the best reviews on various forums when I checked, but our hosting provider doesn't allow for sending messages via SMTP and we ended up just using sendmail.",
                "author": "Snr_Wilson",
                "score": 5
            },
            {
                "body": "I have always worked for companies that used a local/national mail provider, would not recommend because you are always writing all the integration code yourself. Had no choice in the matter because of:\n\n\\- we got a good deal  \n\\- we still have so many credits left  \n\\- other things were more important",
                "author": "j0holo",
                "score": 4
            },
            {
                "body": "I use Amazon SES for my application level email sending. SES has been reliable for me at emails that I see as part of the application sending (password resets, confirmations, welcomes etc).\n\nIf I was to have a newsletter I’d probably use a marketing campaign email platform (Mailchimp or something), gathering consent from the application. I think these platforms could be more beneficial by offering better marketing like insights etc. \n\nJust a note on invoices, if you’re using a payment gateway, like Stripe, I’d let them handle the invoices. You might not be though.",
                "author": "myloman16",
                "score": 4
            },
            {
                "body": "Use AWS SES. Cheap and scalable.",
                "author": "AnxiousLie6009",
                "score": 3
            },
            {
                "body": "Sendgrid and Resend for some small apps, Resend was slightly more smooth to set up.",
                "author": "pcofgs",
                "score": 3
            },
            {
                "body": "Resend was super smooth and easy for setup and also cheap",
                "author": "RIP-reX",
                "score": 2
            },
            {
                "body": "mailgun",
                "author": "Striking-Bat5897",
                "score": 2
            },
            {
                "body": "In my experience all the big ones work similarly well with hardly any differentiation on day-to-day usage. My go to is usually SendGrid since they have a decent free tier and if the project goes well I upgrade to a paid account.",
                "author": "indicava",
                "score": 2
            },
            {
                "body": "I use self hosted Postal which is absolutely brilliant imho.\n\nhttps://docs.postalserver.io/",
                "author": "chris552393",
                "score": 2
            },
            {
                "body": "Postmark has worked well for a range of internal and business apps I have built. Easy to sue either via SMTP or API calls, no issues with delivery thus far. Had little support interaction but what I did have was good",
                "author": "JediNarwhal97",
                "score": 2
            },
            {
                "body": "Postmark has been reliable for me as a low-volume user over many years.",
                "author": "h____",
                "score": 2
            },
            {
                "body": "Thanks for doing this research, it's awesome! One email provider that also deserves a mention is Mailtrap. They have a free plan for 1000 emails per month and the most popular $85 plan gives you 100k emails/mo.",
                "author": "Classic-Sherbert3244",
                "score": 2
            },
            {
                "body": "Interesting. Thank you for sharing. I saw that for one has to pay $1,250 for 2.5m emails per month.",
                "author": "Familiar-Mall-6676",
                "score": 2
            },
            {
                "body": "Yeah they sold to Sinch. Oh awesome, I'll check that out!",
                "author": "softwareguy21",
                "score": 2
            },
            {
                "body": "A2. Some packages allow SMTP, some don't, and the people answering the support ticket didn't seem to know if ours had the restriction or not.",
                "author": "Snr_Wilson",
                "score": 2
            },
            {
                "body": "Yep they are more expensive then sendgrid but sendgrid had some issues in our project and the support was really bad. The issue was resolved (don't exactly know what and how) but then we decided to switch to mailgun. I've used sendgrid and postmark for my personal projects and both work fine but when scaling, there might be an issue. Mailgun although a bit more expensive provides amazing service. So if it's not a small project, i would recommend switching to mailgun. Also if you are hosting on AWS, ses is also an option. Ive never used it but from what I've read and seen that it is cheap and offers good service.",
                "author": "AdditionalAd173",
                "score": 2
            },
            {
                "body": "Support is terrible since they were acquired by Twilio.",
                "author": "TechnicalAd896",
                "score": 2
            },
            {
                "body": "Majority of people in the community recommended AWS SES and Sendgrid. Some switched from self hosting to Sendgrid or from other providers to Sendgrid. Alot did complain about the customer support and reliability issues with Sendgrid not being too good. So, this is interesting. I'll look more into this. Thank you for sharing your experience.",
                "author": "Familiar-Mall-6676",
                "score": 2
            },
            {
                "body": "Unless you're sending more than 500 emails a day. A free google mail would do.\n\nOh nvm, you probably will.",
                "author": "curiousomeone",
                "score": 1
            },
            {
                "body": "Postmark and mailgun. Both are good but I feel mailgun has a slight edge.",
                "author": "AdditionalAd173",
                "score": 1
            },
            {
                "body": "Postmark excellent, send grid adequate.",
                "author": "TechnicalAd896",
                "score": 1
            },
            {
                "body": "don't have much experience but i've mainly used Resend and it seems good so far for user flow",
                "author": null,
                "score": 1
            },
            {
                "body": "Nodemailer is working pretty good for us!",
                "author": "SuccessfulTrick",
                "score": 1
            },
            {
                "body": "+1 for AWS SES. We use it for last 5 years. Sending 15k messages per day, invoices, registrations, password reset, system mails. We have daily quota of 50k email. No problems. But you should watch bounce rate. It is pretty low.",
                "author": "izdark",
                "score": 1
            },
            {
                "body": "I'm biased (co-founder) but be sure to also checkout [Waypoint](https://www.usewaypoint.com/). Waypoint is an email API with a powerful template builder. We also have prebuilt templates (below) for the transactional emails that you can easily modify with our no-code builder within the app.\n\n* [Welcome Email](https://www.usewaypoint.com/templates/saas-welcome)\n* [Password Reset](https://www.usewaypoint.com/templates/reset-password)\n* [Subscription Invoice](https://www.usewaypoint.com/templates/subscription-invoice)\n* [Inviting Colleagues](https://www.usewaypoint.com/templates/invite-to-collaborate)\n\nPS. even if you don't use Waypoint, you are welcome to download the templates above or use our open-sourced community version of our template builder: [EmailBuilder.js](https://github.com/usewaypoint/email-builder-js) (see [playground](https://usewaypoint.github.io/email-builder-js/#sample/reservation-reminder)).",
                "author": "fixie__",
                "score": 1
            },
            {
                "body": "With Nylas you can build this all yourself - lots of customisation - [https://developer.nylas.com/docs/v3/email/](https://developer.nylas.com/docs/v3/email/)",
                "author": "Tall-Shoulder1395",
                "score": 1
            },
            {
                "body": "😔personally ik damn well my ass would've bombarded anyone who seems in-the-know with the most elementary/google-able of questions",
                "author": "jacknjillpaidthebill",
                "score": 1
            },
            {
                "body": "Thank you! I’ve been exploring these providers by checking out their websites and searching through Google, but the information often feels biased and overwhelming. A lot of the articles I’ve come across focus on experimental mini projects, but we’re specifically looking for insights from a production-ready perspective. Perhaps even opinions as to why why teams switched from one platform to another, and what factors influenced those decisions.\n\nSo far, I’m quite happy with the feedback here. I didn’t expect the community to be this active and helpful.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for sharing.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "I used mailgun before as well. However, I've been disappointed with them since they were sold to a larger company. I switched to Plunk (useplunk.com), and it's been an incredible dev experience. Highly recommend.",
                "author": "l00sed",
                "score": 1
            },
            {
                "body": "Where were you hosting your service?",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Why don't you just use the API?",
                "author": "DogsAreAnimals",
                "score": 1
            },
            {
                "body": "I'll take a closer look at Postmark. Thank you for sharing your insights.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "do each of those apps have their own postmark account then? or do you have one master account you add multiple domains to?",
                "author": "Immortal_Thought",
                "score": 1
            },
            {
                "body": "Not much you can do when order comes from above ![gif](emote|free_emotes_pack|thinking_face_hmm)",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for your insight. I like your approach.  \n  \nWhat would you recommend if Stripe is not an option for invoice/ payment related emails?  Would you still handle it with SES?",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thank you for sharing.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for sharing.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Noted. Thanks for your input. So far Sendgrid has been the choice of many in this community.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for sharing. I'll take a look.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for sharing. What is your average email traffic for the apps you built?",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for sharing.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for the input.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Not applicable to our usecase but thanks for the sarcasm :)",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Could you share why that is? Also, aren't they more expensive than Sendgrid?",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Could you share why? Sendgrid seems cheaper. Also, most of the community members seem to like Sendgrid. Would love to hear your side on this.",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Thanks for sharing.  What is your average email traffic?",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Don't we all sometimes ![gif](emote|free_emotes_pack|joy)",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "It was a lot more work to implement when sendmail worked fine.",
                "author": "Snr_Wilson",
                "score": 1
            },
            {
                "body": "One master account with separate servers for each app.",
                "author": "DewaldR",
                "score": 1
            },
            {
                "body": "Sure, SES can handle that. Payment confirmation emails etc I’d handle in SES. I just meant that if you’re using a third party payment gateway you maybe only need to worry about sending the confirmation via your system and the invoice will come from the payment gateway. \n\nRegardless though, SES will handle that. It’s just another email send at the end of the day.",
                "author": "myloman16",
                "score": 1
            },
            {
                "body": "Great customer service XD",
                "author": "Familiar-Mall-6676",
                "score": 1
            },
            {
                "body": "Interesting. I knew they were aquired but didnt know that their quality dropped after.",
                "author": "Familiar-Mall-6676",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1630000271.0,
        "title": "Relational Database Indexing Is SUPER IMPORTANT For Fast Lookup On Large Tables",
        "author": "CharlieandtheRed",
        "id": "pc4pkq",
        "selftext": "Just wanted to share a recent experience. I built a huge management platform for a national healthcare provider a year ago. It was great at launch, but over time, they accumulated hundreds of thousands of rows, if not millions, of data per DB table. Some queries were taking many seconds to complete. All the tables had unique indexes on their IDs, but that was it. I went in and examined all the queries' WHERE clauses and turned most of the columns I found into indexes.  \n\n\nThe queries that were taking seconds are now down to .2 MS. Some of the queries experienced a 2,000% increase in speed. I've never in my life noticed such a speed improvement from a simple change. Insertion barely took a hit -- nothing noticeable at all.  \n\n\nHopefully this helps someone experiencing a similar problem!",
        "score": 363,
        "url": "https://www.reddit.com/r/webdev/comments/pc4pkq/relational_database_indexing_is_super_important/",
        "num_comments": 102,
        "comments": [
            {
                "body": "Reddit's API changes and their overall horrible behaviour is why this comment is now edited. -- mass edited with redact.dev",
                "author": "human_brain_whore",
                "score": 172
            },
            {
                "body": "Partitioning can also be super helpful in some circumstances too. At my old job about 90% of the queries my team wrote would filter on months, so most of the big tables were partitioned on them. There was a noticeable difference in query speed when you were filtering dates based on the yearmonth and via other methods.",
                "author": "houseclearout",
                "score": 76
            },
            {
                "body": "For us backend people you sorta just said water is wet :P\n\nIndexes can also get large and impact update/insert performance, so keep in mind there is a cost.",
                "author": "rollie82",
                "score": 49
            },
            {
                "body": "It's effectively splitting the table into separate files. If the database engine knows that all the data you're looking for resides in a particular partition it can massively reduce the amount of data it has to scan.",
                "author": "houseclearout",
                "score": 44
            },
            {
                "body": "Nice to see someone talk about the caveat. Indexes are not free, there's always a tradeoff. I've worked on read heavy, daily bulk writes, large dataset systems. There were tons of indexes, cause it made sense. But throwing in indexes without understanding why they exist isn't a silver bullet either.",
                "author": "folkrav",
                "score": 30
            },
            {
                "body": "Water is actually not wet; It makes other materials/objects wet. Wetness is the state of a non-liquid when a liquid adheres to, and/or permeates its substance while maintaining chemically distinct structures. So if we say something is wet we mean the liquid is sticking to the object.",
                "author": "WaterIsWetBot",
                "score": 26
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 20
            },
            {
                "body": "https://dev.mysql.com/doc/refman/5.7/en/partitioning.html\n\nNot sure what google search you did, but fwiw.",
                "author": null,
                "score": 19
            },
            {
                "body": "Schema design must take usage patterns into account, including the contents of WHERE and JOIN clauses, and in subqueries.\n\nThe next lesson is to pack keys, indexed columns, and fixed-width data types to the *front* of the table wherever possible.  Some storage engines must look for terminators of variable-length columns, in each row, before continuing to examine further columns.  The type order I try to follow is:\n\n* integer\n* bit/bool\n* enum/set\n* all date types\n* float\n* char\n* varchar\n* text/json\n* blob/binary\n\nWithin each type is a balancing act between size, reference frequency, and what is indexed.\n\nA schema must be efficient first and foremost, human readability is a secondary concern.",
                "author": "Caraes_Naur",
                "score": 18
            },
            {
                "body": "Although no harm in ordering the data types as such but I'm not sure how much improvement it would result in. Any source for this?",
                "author": "me_arsalan",
                "score": 16
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 15
            },
            {
                "body": "Could you elaborate what you mean by partitioning?",
                "author": "MiL0101",
                "score": 15
            },
            {
                "body": "I don’t get what your saying here? Partitioning for the vast majority of relational db’s is managed by the dbms itself (Which I think is what your arguing) Generally when a DBA configures partitions your setting things like page size, partition ranges etc. This is hugely relevant when dealing with large amounts of data. An index is great but when it’s 100’s millions of records, it still takes time to find data, this is where a “pre” partition step can save large amounts of time…. For the average joe, it’s probably irrelevant, but when you scale up past a point, it really matters.",
                "author": "Cieronph",
                "score": 15
            },
            {
                "body": "Yup, indexes are super important for large tables. \n\nHere's a fun index story: MySQL can do weird things when the table gets really big. \n\nWe have a table around 300,000,000 rows which is queried very often (thousands of reads per second at peak). One day, the MySQL query optimizer decided that using the index would be *slower* so it began doing full table scans. Caused a big outage when all the database replicas shot up to 100% CPU, busy doing all these full table scans. We fixed it with a `FORCE INDEX` in the query. I never expected this to be an issue though.",
                "author": "Magnetic_Tree",
                "score": 14
            },
            {
                "body": "Now this will come off as rude but I do not have ill intent. You were tasked to build a huge management platform for a national healthcare provider... without knowing what database indexes are and how they are important? It went live without indexes in filtered for columns?\n\nThat's... database 101 dude. Literally the first thing you learn after your rows and tables. I shudder when I wonder what other kind of shady stuff lurking in there.",
                "author": "pilibitti",
                "score": 14
            },
            {
                "body": "most data is written once and read many times, just depends on your use case.",
                "author": "waiting4op2deliver",
                "score": 11
            },
            {
                "body": "When you make a database table, you can declare indexes. Indexes are like the table of contents of a book. If you need to find a chapter, instead of flipping through all the pages, you could just go to the indexes and find their exact location.",
                "author": "CharlieandtheRed",
                "score": 11
            },
            {
                "body": "Yes. The normal table insert will be basically a constant speed because it just needs to append to the file. The indexes are usually b trees iirc depending on the type. Insert speed in these indexes is going to be log n time and require the index to be loaded into memory. Some indexes are going to be less performant too, notoriously full text indexing which requires that the text field basically have every substring indexed.\n\nDisk space is also going to be impacted. That probably won't matter since storage is so cheap, but it's worth mentioning.\n\nEdit to add: I expect that it still won't perform badly. Best practice is to only index what you need but in the real world over indexing rarely causes problems.",
                "author": "moderatorrater",
                "score": 10
            },
            {
                "body": "Not for anyone that has experience building out relational DB schemas. I can’t imagine delivering software that is as unoptimized as what OP describes. I struggle to understand how someone is capable of landing a contract like that if they are incapable of anticipating a few key indexes for each table.\n\nSure, don’t prematurely optimize but if your tables have no indexes I can’t imagine you understand the use cases enough to effectively design software for the org.",
                "author": null,
                "score": 8
            },
            {
                "body": "The table size doesn't really matter for this; if writing to the DB is very time sensitive per operation, adding indexes can slow this down (i.e., your write will go from 10ms to 12ms level of change). Obviously if you are *updating* 10m rows at once in such a way that the index is affected, this will impact your performance, so that should be avoided (I think in that case you might consider dropping the index before your update and rebuilding after).\n\nAll that said, 10m rows isn't reaaaallly a lot, but it's getting there, and depends on the content of those rows as well.",
                "author": "rollie82",
                "score": 8
            },
            {
                "body": "Had a similar experience with Couchbase. While indexing is really great, I recommend running some numbers before to check if you have enough memory and storage as indexes sometimes require good hardware.",
                "author": null,
                "score": 7
            },
            {
                "body": "That's why I was always hesitant to index too much -- the write times. I was so surprised that it didn't seem to affect it in any noticeable way.  \n\n\nWill that change once there are tens of millions of rows?",
                "author": "CharlieandtheRed",
                "score": 7
            },
            {
                "body": "You can index a text field for LIKES, it's slower than a keyed field, but it's not as slow as an unindexed text field.",
                "author": "dontgetaddicted",
                "score": 7
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 7
            },
            {
                "body": "https://labs.k.io/mysql-indexes-explained/",
                "author": "crslsc",
                "score": 7
            },
            {
                "body": "Also in other news, shitty attitudes = shitty attitudes",
                "author": "embiid0for11w0pts",
                "score": 7
            },
            {
                "body": "It's more slow in terms of your write throughput from what I've seen.  If you're doing 10,000 inserts a second, that's a lot of extra writes if you've got 64 indexes (and yeah, seen that, ugh)",
                "author": null,
                "score": 7
            },
            {
                "body": "[This video](https://www.youtube.com/watch?v=HubezKbFL7E) helped me a lot with understanding query debugging.",
                "author": "DondeEstaElServicio",
                "score": 6
            },
            {
                "body": "What's an index and how do you index a table?",
                "author": "pastrypuffingpuffer",
                "score": 6
            },
            {
                "body": "This. Of course OP isn't going to see any write delay if they aren't even writing many records per second.\n\nMy question is how does someone so utterly clueless end up being the person responsible to \"built a huge management platform for a national healthcare provider\" where there's apparently no one even remotely familiar with something as basic as database indexing.",
                "author": "quentech",
                "score": 6
            },
            {
                "body": "No, you just just resume querying `last_name` like you did before. The server does the indexing part for you once it is created.",
                "author": "Braastad",
                "score": 6
            },
            {
                "body": "To minimize physical page reads, ensure you get your clustered index right. This groups records physically next to each other in the tree that is the table on disk. If the rows are small you might many related rows in a single disk page (8k chunk for sql Server) this makes huge gains.\n\nDon't go adding too many indexes. It will improve read performance if they match the query projections and predicates. It can slow inserts and updates a lot.\n\nORMs hide a lot of this from you, but you really need to look at your queries hard to ensure they are optimal.",
                "author": "JohnSpikeKelly",
                "score": 5
            },
            {
                "body": "This comment and analogy is so undervoted. Excellent reference thank you",
                "author": null,
                "score": 5
            },
            {
                "body": "The time to write a single row should usually be minimal. You'll notice it a lot more if you are inserting lots of rows.",
                "author": "diolemo",
                "score": 5
            },
            {
                "body": "Reddit's API changes and their overall horrible behaviour is why this comment is now edited. -- mass edited with redact.dev",
                "author": "human_brain_whore",
                "score": 5
            },
            {
                "body": "This seems like a personal attack. I'm sure your knowledge isn't total and complete on every aspect of development either. So if you overlook one thing on one project, is it fair to criticize your entire skillset and call you clueless? Of course not.  \n\n\nAlso, this application is not critical to business function and does not contain patient information. It works just fine, they are very happy, and I'm actually very proud of its functionality -- it's one of the best applications I've ever done.",
                "author": "CharlieandtheRed",
                "score": 5
            },
            {
                "body": ":) I'm sure!  \n\n\nIf I don't see any write delays at a million rows, will I see it at, say, 10,000,000?",
                "author": "CharlieandtheRed",
                "score": 4
            },
            {
                "body": "I run pretty much all of my queries through EXPLAIN just to make the server tell me I'm dumb when I'm being dumb. It points out some glaringly obvious stuff sometimes.",
                "author": "dontgetaddicted",
                "score": 4
            },
            {
                "body": "Idk, I somehow went 15 years into development without ever having to do this. I always indexed IDs and foreign keys, but didn't realize you could index much more than that for huge performance benefits. Might be good to hear for some!",
                "author": "CharlieandtheRed",
                "score": 4
            },
            {
                "body": "Thanks! Reading the documentation, it says partitioning is not supported in MySQL. Is this correct?",
                "author": "CharlieandtheRed",
                "score": 4
            },
            {
                "body": "Reaaaally high level explanation that's not particularly accurate but good enough to get an idea.\n\nYour database engine stores the data somewhere. That somewhere is (usually) a binary file somewhere on your disk. Partitioning a table means your db engine will store the data in multiple files instead of a single one, based on different criteria, like the value of some column(s). This more or less means queries filtered on said column(s) will end up faster as the engine can simply scan everything in said file instead of the whole dataset.\n\nKeep in mind this is an explanation of horizontal partitioning (splitting the rows in multiple files). Some engines are more flexible than others with this regard, like supporting vertical partitioning (splitting some columns in separate files).",
                "author": "folkrav",
                "score": 4
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 3
            },
            {
                "body": "http://mysql.rjweb.org/doc.php/index_cookbook_mysql is an amazing resource for determining DB indexes. Before reading this, I didn't realize how important/beneficial it is to create specific indexes for specific SELECT/WHERE queries.",
                "author": "WOUNDEDStevenJones",
                "score": 3
            },
            {
                "body": "Breaking news: water wet! Grass green! Pig doesnt fly out of anus!",
                "author": "nuttertools",
                "score": 3
            },
            {
                "body": ">At the most basic level, this is what an index does.\n\nThat's exactly what [index cards](https://en.wikipedia.org/wiki/Index_card) were for, before computers. My mom learned about those in secretary school in the 1980s.\n\nNeed to find all books written by James Joyce? Pull up his card from the Authors index, and you'll get a list of his books.\n\nHowever, every time the library gets a new book, someone must diligently add it to each index it belongs to. Fast lookups, slow inserts.",
                "author": "n1c0_ds",
                "score": 3
            },
            {
                "body": "How do you find Couchbase overall?",
                "author": "Roci89",
                "score": 3
            },
            {
                "body": "I’m not sure if it’s unusual or not, but the industry is absolutely vast. \n\nI started out in “real-time” (sub-perceptual) audio / signal-processing, got into graphics programming…and then only a few years ago got into boring CRUD programming because that’s where the jobs and the money are, and I’ve got a family now. Plus, a lot of the problems I was solving for then are now basically solved…\n\nAnyway, the point is, even though I’ve been programming for decades now, I only started to learn SQL a few years ago. Even now it’s not something I need to touch with much frequency; it’s just not been a significant part of where I find my skillset most useful. I’m humble about what I don’t know, but sometimes there’s a job to do. Sometimes you’re not the best person to do that job, but you can make it work well enough for the business folks and there’s nobody else so you do it anyway.\n\nI understand how to make a good data structure, and I understand all of the reasoning here, but I also just don’t generally start with SQL.",
                "author": "LetterBoxSnatch",
                "score": 3
            },
            {
                "body": "Well, I obviously know what database indexes are lol wtf? I made my first database when I was 9, 22 years ago.\n\nI was always under the impression that you should not index too many columns, as it can lead to hyper long insertion times on new data. I always kind of followed that logic. With this problem, I decided to index a ton of columns on staging and it blew me away how performant it was and how I did not see any sort of decrease in insertion times.\n\nI write extremely clean code and contract out security audits and such to experts. I think I'm fine. The company offered me a 10% bonus on the next year's retainer because it has helped them so much and worked so well. ;) Now, me 10 years ago? Uh oh, that was ugly! I worked with some big agencies that got me on the right track. I never hate my codebases anymore, they're quite descriptive, organized, and pleasant.",
                "author": "CharlieandtheRed",
                "score": 3
            },
            {
                "body": "Water is not inherently wet -- it makes other things wet. :)",
                "author": "CharlieandtheRed",
                "score": 3
            },
            {
                "body": "Reddit's API changes and their overall horrible behaviour is why this comment is now edited. -- mass edited with redact.dev",
                "author": "human_brain_whore",
                "score": 3
            },
            {
                "body": "High performance, well-documented and easy to manage is how I would define it. I've used Couchbase Lite with the Sync Gateway to create a point of sale .NET app as well as an ERP and the experience with the SDK was seamless.\n\nIndexing was pretty straightforward since Couchbase will give suggestions on how to improve a query's performance. The backup tools are pretty similar to a mysqldump so it's easy to use.\n\nThe only thing with Couchbase is that it requires a lot of performance by default, having at least three nodes with each 8gb and 4vcpu is in my experience the minimum for a good production deployment.\n\nDon't cheap out on storage either, if your document count is in the millions and your indexing isn't efficient (as in you have a bunch of different queries) you will easily need a few dozen gb to store your indexes.\n\nAside from ressource management and backups, the performance and developer experience was on point. I forgot the main point: I think the Sync Gateway is one of the only \"free\" and NoSQL option for offline support of heavy client software. The other option would be SQL Server, but you would have to pay Windows Server licences.",
                "author": null,
                "score": 3
            },
            {
                "body": "I'm working in a system that was built about 12 years ago that is probably worse than OP's sounds. Some of the problems I've found in this system leave me wondering how this company has been operating for so long. We've got tables that should be indexed but aren't. We've got tables that have about 20 records in them that will rarely see more records added, that have indexes on every column. I've fixed individual bugs in the system that analysis has determined cost the company over a million dollars in its lifetime. It is pretty alarming how much bad and poorly optimized software exists in the world.",
                "author": "RandyHoward",
                "score": 3
            },
            {
                "body": "Yes I was gonna say this too but you beat me to it. =)\n\nI've seen people that over-index a table to a point where adding import feature on the frontend UI would cause a timeout exception. They had to use a batch job to process the batch insertion.\n\nMoral of the story: Don't add unnecessary indexes especially on tables that has batch insert/update.",
                "author": "shauntmw2",
                "score": 3
            },
            {
                "body": "You would do something like \\`SELECT \\* FROM students WHERE last\\_name = 'foobar';\\`. The index is only useful if you're using the indexed column in the query.",
                "author": "digitalgunfire",
                "score": 3
            },
            {
                "body": "Who hurt you",
                "author": "embiid0for11w0pts",
                "score": 3
            },
            {
                "body": "Not quite, so when you add an index to a column, it's generally a b tree index where the data for that column is ordered so that the database can search for data in that column based on the b tree search algorithm.\n\nIf you are partitioning a table, you're likely doing so because the table is so large that it's having trouble loading the required data (hopefully an index) into memory. There are a variety of ways you can partition a table, but a popular one is range based on time. So you would likely have an index on the same column you're partitioning by time range on, but it's not necessarily the case.",
                "author": "GrowTheWorld",
                "score": 3
            },
            {
                "body": "https://dev.mysql.com/doc/refman/8.0/en/index-hints.html\n\nIn case anyone was curious about that with MySQL",
                "author": null,
                "score": 3
            },
            {
                "body": "No. https://www.postgresql.org/docs/10/ddl-partitioning.html",
                "author": "digitalgunfire",
                "score": 3
            },
            {
                "body": "Nah, don't feel bad about not knowing anything. Learning is a daily journey!",
                "author": "digitalgunfire",
                "score": 3
            },
            {
                "body": "I'm the guy that showed Microsoft how FoxPro's Rushmore technology worked. They bought the tech and it's in SQL Server. It's worked that way a long time.",
                "author": "myearwood",
                "score": 2
            },
            {
                "body": "Avoid joining on non-index fields unless absolutely necessary.\n\nIN statements, and EXIST statements vary by performance in use case.\n\nDepending on the use case, if can be better to do an IN/EXIST statement over an OUTTER JOIN and vice versa.",
                "author": "Harrigan_Raen",
                "score": 2
            },
            {
                "body": "You can index text columns, for example in MySQL, with a fixed length, which can be useful sometimes.",
                "author": "bendeguz_szatmari",
                "score": 2
            },
            {
                "body": "that is interesting.",
                "author": "paulgrant999",
                "score": 2
            },
            {
                "body": "I think the OP is a web dev and the proper way of doing things maybe new. Indexing is the bread and butter of backend devs. Cloud based dbs can actively recommend indexes and even optize them for you. So for some engineers who work in this system may never have needed to write an index themselves.",
                "author": "tenochchitlan",
                "score": 2
            },
            {
                "body": "I blame the rise of ORMs. \n\nPeople just seem to forget about the finer points of SQL when they aren't exposed to it anymore. They just define their model and the ORM takes care of the db migrations etc, then they write the query as code and hope the ORM can write an optimised query.",
                "author": null,
                "score": 2
            },
            {
                "body": "Do you have any good resources on creating an efficient schema? I've been a full stack web dev for nearly 20 years and creating efficient databases has always been my Achilles heel.",
                "author": "RandyHoward",
                "score": 2
            },
            {
                "body": "You should know that just throwing indexes on columns willy nilly is worse than missing them in a lot of cases. Better to index once things actually slow down and need to be indexed than to index everything for a table that may never need it.",
                "author": "SupaSlide",
                "score": 2
            },
            {
                "body": "Unless it's a log that's only read when a dev needs to figure out what went wrong or management needs some data.",
                "author": "MrRosenkilde4",
                "score": 2
            },
            {
                "body": "**[Index card](https://en.wikipedia.org/wiki/Index_card)** \n \n >An index card (or record card in British English and system cards in Australian English) consists of card stock (heavy paper) cut to a standard size, used for recording and storing small amounts of discrete data. A collection of such cards either serves as, or aids the creation of, an index for expedited lookup of information (such as a library catalog or a back-of-the-book index). This system was invented by Carl Linnaeus, around 1760.\n \n^([ )[^(F.A.Q)](https://www.reddit.com/r/WikiSummarizer/wiki/index#wiki_f.a.q)^( | )[^(Opt Out)](https://reddit.com/message/compose?to=WikiSummarizerBot&message=OptOut&subject=OptOut)^( | )[^(Opt Out Of Subreddit)](https://np.reddit.com/r/webdev/about/banned)^( | )[^(GitHub)](https://github.com/Sujal-7/WikiSummarizerBot)^( ] Downvote to remove | v1.5)",
                "author": "WikiSummarizerBot",
                "score": 2
            },
            {
                "body": "You'll typically see the difference in write speed once you start bulk inserting/updating rows.",
                "author": "folkrav",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "Actually, I am. $180,000 this year in project sales. :) I'm a good developer, too. Sometimes we overlook things. That's the downside of siloed development, as we all know. Usually I work with the larger teams where we catch each other's oversights -- just not on this project. Not having an index on a couple of columns certainly isn't the worst thing you could do on a project, as it's completely remedied in one action, and would not deem the whole project a failure.",
                "author": "CharlieandtheRed",
                "score": 2
            },
            {
                "body": "It is possible to tell the query engine specifically what index you want to use, but 99.9% of the time the DB engine will automatically select the best index to use automatically. It’s very rare that there’s a circumstance where there are multiple indices to choose from and the DB engine picks the non-optimal one.",
                "author": "crslsc",
                "score": 2
            },
            {
                "body": "Seems like a waste of time if OP has gone this long without needing to index additional columns. They learned it when it became relevant. I've also never actually _needed_ to index secondary columns.\n\nA majority of projects never see the scale where an index is crucial.",
                "author": "SupaSlide",
                "score": 2
            },
            {
                "body": "If they're \"silently suffering\" then it probably isn't actually a problem its my point.",
                "author": "SupaSlide",
                "score": 2
            },
            {
                "body": "Post some examples.",
                "author": "eggtart_prince",
                "score": 1
            },
            {
                "body": "I've read through a bunch of this thread, but I still don't understand the idea.\n\nELI5 plz?",
                "author": null,
                "score": 1
            },
            {
                "body": "Combined index containing all fields used in the where clause, or individual indexes per column?",
                "author": "NotScrollsApparently",
                "score": 1
            },
            {
                "body": "Hey, thanks so much for a clear explanation near the end of your comment about how it works. I never realized / learned exactly how the speed up works.",
                "author": "musman",
                "score": 1
            },
            {
                "body": ">Indexes speed up read times at the cost of write times.  \n>  \n>Every time a record is created or updated, indexes have to be updated. That's write time.\n\nI would imagine that the additional time it takes to write because of an index is effectively independent of database size?",
                "author": "nitePhyyre",
                "score": 1
            },
            {
                "body": "Great to now! Yeah, we have some rather complex joins happening, I'm thinking that's where I got the performance jump. Do you know at what size these indexes will start lowering write speeds where it's noticeable?",
                "author": "CharlieandtheRed",
                "score": 1
            },
            {
                "body": "Great analogy. Makes perfect sense!",
                "author": "Aggressive_Sky5927",
                "score": 1
            },
            {
                "body": "MySQL won't use the index if the LIKE has a leading %, fwiw.  does work if there is only a trailing %",
                "author": "therealdongknotts",
                "score": 1
            },
            {
                "body": "Right? Not knowing to index your database tables would probably fail you an interview for any mid-level (and many entry-level) engineer interviews. This dude must be one hell of a salesman.",
                "author": "pyramin",
                "score": 1
            },
            {
                "body": "I had indexes though. I just didn't know I could have many more on queried fields without a performance hit to write.  \n\n\nIs something really that unoptimized if it's fixed with a single SQL statement? What I did here IS the process of optimization. Maybe one day I can write a perfect application, right at launch, like you ALWAYS do. :)",
                "author": "CharlieandtheRed",
                "score": 1
            },
            {
                "body": "Bro it's fucking RDBMS indexing. Is this a sub aimed at absolute fucking 1st-year SE students or what? This is the basics of the basics.",
                "author": null,
                "score": 1
            },
            {
                "body": "Hardware is so fast these days if in your early years you never dealt with much data scale it's not surprising you got away with it for as long as you did.",
                "author": null,
                "score": 1
            },
            {
                "body": "Needing to search by (short) variable length text columns is extremely common though, such as searching by name or email in a customer database. How should that be handled then?",
                "author": "Apoffys",
                "score": 1
            },
            {
                "body": "Nice thank you you taught me something.",
                "author": "dontgetaddicted",
                "score": 1
            },
            {
                "body": "True, bulk processing is a PITA when db has many indexes (or tons of data). \n\nSometimes it is better to drop indexes, process data and recreate indexes afterwards than to wait for processing with indexes in place.",
                "author": "radek_o",
                "score": 1
            },
            {
                "body": "I’m literally confused as to what they meant by files here. Did they mean separate tables?",
                "author": "Guilty_Serve",
                "score": 1
            },
            {
                "body": "Premature optimization is the root of all evil. You need real data first and then run benchmarks, let the DB choose and execution plan / caching strategy and see where you need indices. That OP examined the `Where` clauses instead, is a bad sign.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "Oh, so it works automatically after creating the index, that's nice :D",
                "author": "pastrypuffingpuffer",
                "score": 1
            },
            {
                "body": "Reddit's API changes and their overall horrible behaviour is why this comment is now edited. -- mass edited with redact.dev",
                "author": "human_brain_whore",
                "score": 1
            },
            {
                "body": "\\> let the DB choose and execution plan / caching strategy and see where you need indices\n\nI'm not sure I would want to add indexes to cover the needs of the execution plan that the DB created in the absences of any indexes. Databases can often create exotic execution plans in the absence of any indexes, especially if some of the tables are small enough for the DB to put in memory.",
                "author": "wllmsaccnt",
                "score": 1
            },
            {
                "body": "> Premature optimization is the root of all evil.\n\nYou should go to the source and context of that quote rather than repeat the abbreviated version:\n\n> \"We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil.\"\n\nhttps://ubiquity.acm.org/article.cfm?id=1513451 (emphasis added)\n\n> \"Premature optimization is the root of all evil\" has long been the rallying cry by software engineers to avoid any thought of application performance until the very end of the software development cycle (at which point the optimization phase is typically ignored for economic/time-to-market reasons). However, Hoare was not saying, \"concern about application performance during the early stages of an application's development is evil.\" \n\n> a short essay by Charles Cook ( http://www.cookcomputing.com/blog/archives/000084.html), part of which I've reproduced below, describes the problem with reading too much into Hoare's statement:\n> \n> > I've always thought this quote has all too often led software designers into serious mistakes because it has been applied to a different problem domain to what was intended. The full version of the quote is \"We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil.\" and I agree with this. Its usually not worth spending a lot of time micro-optimizing code before its obvious where the performance bottlenecks are. But, conversely, ***when designing software at a system level, performance issues should always be considered from the beginning. A good software developer will do this automatically, having developed a feel for where performance issues will cause problems. An inexperienced developer will not bother, misguidedly believing that a bit of fine tuning at a later stage will fix any problems***.",
                "author": "quentech",
                "score": 1
            },
            {
                "body": "Should I have known this as a full stack strong in backend?",
                "author": "Guilty_Serve",
                "score": 1
            },
            {
                "body": "I am hunting those small tables. Normalization can save memory. Indizes need memory. Everybody wants to sell me an  in-memory-db.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "I mean, if you had needed to do it, you'd know it, but you may not have. I learned all this when I worked with large datasets as a small team at my second role, but I didn't need to before that and didn't have to deal with this directly in a while (current work project uses Aurora, and previous job had sys admins and architects taking care of all this).",
                "author": "folkrav",
                "score": 1
            },
            {
                "body": "Nice thing about this is that with modern frontend tools, you can usually hide that extra time from the user.\n\nUse optimistic updates to instantly update the frontend... then dispatch the action to the backend. If it fails, just roll back the frontend changes.\n\nI work with React, so I use React Query / Apollo to do this easily. I'm sure there are others solutions for other tech stacks too!\n\nNote: this obviously doesn't work when you need to wait for the write to update the frontend for any reason.",
                "author": "clovell",
                "score": 0
            },
            {
                "body": "That link didn't explain what you have to do after you query \n```sql\nCREATE INDEX by_last_name ON students (`last_name`);\n```\nDo you have to do \"SELECT by_last_name FROM students\" afterwards or something like that?",
                "author": "pastrypuffingpuffer",
                "score": 0
            },
            {
                "body": "You can always add an index in SQL ( do it on weekend ). Maybe you cannot appreciate what a great invention SQL was. You can use SQL to change the SQL. Try that with the Cobol crap which we had before. I don't really know what you are talking about here because I have never experience a slow design by a coder. Typically stuff was slow because some boss thought she knew Excel and Database, or license cost, or oh we need to use NoSQL.",
                "author": "IQueryVisiC",
                "score": 0
            },
            {
                "body": "No, because `ALTER TABLE` exists.",
                "author": "Caraes_Naur",
                "score": -2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -19
            },
            {
                "body": "In other news: water is wet, `true != false` and you'll be tired if you don't sleep enough.",
                "author": null,
                "score": -33
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1759319842.0,
        "title": "Looking to start freelancing on the side (web dev) - would love some real world advice from people actually doing it",
        "author": "Upset_Weather9271",
        "id": "1nv66an",
        "selftext": "Hey All,\n\nAs the title says, I'm looking at starting some freelance work on the side (mainly web dev / small business websites). I already work full-time in ecommerce, so this would be a second job - more of a second income stream than a full career switch (for now, the long-term intention would be to do this work full-time).\n\nFYI - I'm looking at WordPress Web Development, no particular niche as of yet, but will likely get into one style of small business eventually.\n\nBefore diving too deep into the thick of it, I wanted to hear from people who've actually done it.\n\n**How realistic is it to make this work?**\n\n* How long did it take you to start getting regular clients or projects?\n* What did your first few months look like - quiet, steady, chaotic?\n* Was/is freelancing on the side manageable alongside a 9-5 style job?\n* Any \"wish I knew this before starting\" tips?\n\n**Platforms & Expectations**\n\n* Have you used any freelancing platforms (Fiverr, Upwork etc.) and if so,\n* Are they worth it?\n* Which one was easiest to break into starting from zero?\n* How quick was your first sale or client?\n* If you're happy to tell, how much (roughly) did you make in your first month? 6 months?\n* Would you say it's worth being on multiple platforms, or better to stick with one? Or none at all (if so, where to start?)?\n\nAny honest feedback is appreciated - I'm not expecting to make a living off of this right away, maybe even ever, but I'd love to get a realistic sense of what's achievable and what to watch out for.\n\nThanks in advance to anyone willing to share.\n\nCheers",
        "score": 14,
        "url": "https://www.reddit.com/r/webdev/comments/1nv66an/looking_to_start_freelancing_on_the_side_web_dev/",
        "num_comments": 11,
        "comments": [
            {
                "body": "I'm just about finished with my \"initial setup\" period, and there's a lot more non-coding work required than us coders usually expect. Stuff like setting up an LLC (if needed), writing up content for your site so you can market yourself, writing up templates for documents you'll need, answering emails, etc.\n\nAdvice: know when it's worth it to do something yourself, and when it's worth it to just pay for a service/product. If something would take you 100 hours to build from scratch, but you could buy a premade version for $20 and spend like 20 hours rebranding it - buying the premade version is likely worth it.",
                "author": "WeedFinderGeneral",
                "score": 5
            },
            {
                "body": "I’m in this same boat got laid off earlier this year and opening a Web Design Agency. My first client ironically came from yelp. Avoid yelp ads like the plague. Straight extortion. Just landed my FIRST retainer for SEO and that was HUGE. But still not livable currently. I feel like a struggling artist lol. My first month I made 200$, literally. Created a whole Figma mockup, did a 5 page Wordpress website. Fully custom as it can be. With a booking feature. She was a super easy and awesome client. But I did not make ANY money and currently still struggling to even land local jobs. I want to give up work a try since they have changed their policies, and it seems more USA dev friendlier as compared to fivver.",
                "author": "Regular_Assistant809",
                "score": 4
            },
            {
                "body": "WordPress freelancing takes 3-6 months to get consistent clients, and the first projects usually come from your existing network rather than platforms. Upwork and Fiverr are brutal for beginners - you'll compete against offshore developers charging $10/hour while trying to justify your rates. Most successful freelancers I know got their first 5 clients through friends, former colleagues, or local business connections. The 9-5 plus freelancing combo is manageable but exhausting. Expect to work evenings and weekends for the first year. Client communication during work hours becomes tricky - responding to emails at lunch, taking calls during commutes. Set boundaries early or clients will expect instant responses that aren't realistic with a full-time job. First month income is usually $0-500 unless you have immediate connections. Six months in, successful side hustlers make $1000-3000/month, but \"successful\" is maybe 20% of people who try this. Most quit after a few months when they realize the effort required. Fiverr works better for starting from zero because you can set lower prices to build reviews, but race-to-bottom pricing makes it unsustainable long-term. Upwork has higher-paying clients but requires strong proposals and portfolio before getting responses. Neither platform is sustainable alone - use them to build portfolio then transition to direct clients.",
                "author": "CremeEasy6720",
                "score": 2
            },
            {
                "body": "I didn't find clients for six months... so it didn't work out for me.",
                "author": "aphantasus",
                "score": 2
            },
            {
                "body": "Build a Goos portfolio do work for cheap etc",
                "author": "Baris_CH",
                "score": 2
            },
            {
                "body": "I'm building my own web design business too. Feel free to DM me to connect. Always good to share experiences and learn from each other",
                "author": "Honest_Noise_9349",
                "score": 2
            },
            {
                "body": "Thank you! I will keep this in mind",
                "author": "Upset_Weather9271",
                "score": 1
            },
            {
                "body": "Thank you, and goodluck!",
                "author": "Upset_Weather9271",
                "score": 1
            },
            {
                "body": "Great advice thank you!",
                "author": "Upset_Weather9271",
                "score": 1
            },
            {
                "body": "Sorry to hear",
                "author": "Upset_Weather9271",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1713816736.0,
        "title": "Feeling defeated by shift to low-code/no-code",
        "author": "pierrechaquejour",
        "id": "1cakwyr",
        "selftext": "I'm struggling with finding my place as a web full stack developer in this new landscape of self-proclaimed \"low-code/no-code\" SaaS solutions.\n\nManagement seems all too eager to \"replace\" in-house projects with these kinds of solutions, reducing our in-house dev team to glorified technical SMEs/admins for these various 3rd party platforms. Managing the inevitable Frankenstein abomination of integration points between all the platforms.\n\nIt's not the kind of work I wanted to be doing in this field.\n\nI understand the appeal. I understand not wanting to reinvent the wheel if another company has already built out a service. I understand not wanting to create a codebase that the company has to maintain indefinitely.\n\nBut it seems like a knee-jerk reaction by management to devalue any kind of in-house development. Is there really nothing to be said for building apps using actual industry-standard technologies instead of some vendor's proprietary system with their own best practices and pseudo-programming language?\n\nEven the terminology is demoralizing. \"Low-code/no-code.\" *But you hired me to write code. Why won't you let me?*\n\nAnyone else in the same boat?",
        "score": 92,
        "url": "https://www.reddit.com/r/webdev/comments/1cakwyr/feeling_defeated_by_shift_to_lowcodenocode/",
        "num_comments": 76,
        "comments": [
            {
                "body": "My company has been doing no / low code for a long time and let me say, its not good! Originally it might have been good so they could hire low skill employees, but they developed poor solutions and workflows that are now tons and tons of tech debt and costing thousands of dollars a month. Think about it this way, your stereotypical \"boolean block\" of a low code / no code block building workflow is equivalent to 1-2 lines of code. We've been digging ourselves out of this hole now for two years and will still continue to dig for at least another year. Good clean code is much more efficient, has better tooling and is 100% more customizeable than relying on a third party's \"no code\" (which just means they wrote the code and you can't touch it). \n\nAs an example, think of a MongoDB block that doesn't have a sort function, just a generic \"find\". I could go on and on...",
                "author": "JohntheAnabaptist",
                "score": 82
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 46
            },
            {
                "body": "I completely sympathize, and I feel like a lot of others here are missing the point.\n\nIt still all involves work, but now your skills development no longer about improving a transferrable skill like coding, or engaging in any kind of creative process. You're burning time and mental energy on learning non-transferrable factoids like *this* setting on *that* page connects *this* operation to *that* service, and *this* config file has to be laid out *this* way to be read by *that* obscure service you'll never use again. \n\nIt's just not an intellectually satisfying way to spend your working life.",
                "author": "bree_dev",
                "score": 36
            },
            {
                "body": ">which just means they wrote the code and you can't touch it\n\nThis part. It's still a code solution. But you've given up a massive amount of control and flexibility for the sake of a few efficiencies. Not to mention locked yourself into a multi-year several-thousand-dollar contract in the process. It's hard to watch it happen.",
                "author": "pierrechaquejour",
                "score": 33
            },
            {
                "body": "You can ALWAYS find someone who can write and understand **code**. But finding someone who knows how to manage that low code/no code crap.. gl with that.",
                "author": "mekmookbro",
                "score": 20
            },
            {
                "body": "Get good at it. Finish your work before the deadline, but don't submit your work early. Use that extra time for upskilling and applying to other jobs.\n\n\"But it seems like a knee-jerk reaction by management to devalue any kind of in-house development.\"\n\nThe unfortunate reality is that most businesses are really bad at handling in-house software development. There's probably a lengthy story behind the decision, and it's probably not as knee-jerk as you think.\n\nDon't try to reason with it though, it's not worth getting hung up on. The decision of switching to a low-code platform goes ***way*** beyond the scope of an IC. Just focus on getting as much value as you can out of the experience. You're still likely having to do all the same \"communication / administrative\" work that any other dev has to do, and that's still very valuable experience.",
                "author": "AssignedClass",
                "score": 18
            },
            {
                "body": "I find that all this \"low-code\" and \"no-code\" stuff to be just  marketing. Yeah you can do simple things with it, but the moment you have to do anything even moderately complex, which will happen because businesses are fickle bastards and want everything to be unique, you'll be forced into a situation where you need to use code.\n\nHeck, companies like Microsoft love to proclaim that things like Power Platform is a \"Low Code\" or \"No Code\" platform for \"Citizen Developers\". But the reality is that power automate is literally a visual programming language, and you'd need to know programming principles to really make full use of it. And no matter what Microsoft says, PowerFX is literally a programming language in and of itself.\n\nSo you pretty much just have to change your perspective. Yeah there is less code, and what is there may not be recognizable as traditional code. But it's still code nonetheless.",
                "author": "killerrin",
                "score": 11
            },
            {
                "body": "You have clearly never worked with one of these.  The one I was forced into didn't even have version control.  The developers had to check with others before deploying to the one production environment.  It is not a real way to work.  \n\nIt's giving a mechanic a child's tool set and saying fix my Porsche.",
                "author": "baconmehungry",
                "score": 11
            },
            {
                "body": "I had and lost this fight once in a former job.\n\nEspecially galling when the company would pay out to the third party to do something for them by implementing a new feature, which was apparently supposed to prove that it was possible all along and I just wasn't looking hard enough. Despite the whole point being that they did not offer access to the underlying code, just some vaguely customisable tags.\n\nReally all they were doing is paying vast sums for the privilege of developing somone elses business at zero cost to them.",
                "author": "YsoL8",
                "score": 11
            },
            {
                "body": "In an ironic way, it actually provides job security (down the road at least) back to us devs 😆",
                "author": "khizoa",
                "score": 10
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 9
            },
            {
                "body": "Fair. My company has slowly morphed into the type of place where the tech organization is not as valued, but it wasn't always this way, so there have been some wake-up calls lately. \n\nThe thought has occurred to me \"just go work for the vendors that are building the tools your company is seeking.\" Once these tech sector layoffs cool down, that is likely my next move.",
                "author": "pierrechaquejour",
                "score": 8
            },
            {
                "body": "I can actually have expertise in this.  My first job was hired as a developer for a branch of a major company.  First project was building an app in React Native and all was good.   The boss saw these low code tools as the future and forced our developer team into using them.  What should have been a 2 month project took 6 and cost us 3/4 of the development team because no one wanted to stymie their career working on this.  We worked in OutSystems, they had no proper version control system to speak of.  It didn't even run properly on a Mac, so we all had to run VM's on our company laptops.  It was a nightmare and caused the engineering team to fall apart.  By the end of 6 months there, I was the Senior Engineer, with a total of 6 months of experience.  For the final project I was assigned there, I refused to work on it.  I put my foot down to use real tools.  Guess how much productivity picked up and how fast that project went?\n\nThe boss thought every designer at the organization could just write code, not realizing that it was a drag and drop interface where you need to understand the concepts of code.   Get out while you can.  Apply, apply, apply while doing the bare minimum with these programs.",
                "author": "baconmehungry",
                "score": 7
            },
            {
                "body": "Thank you, yes it’s this exactly.",
                "author": "pierrechaquejour",
                "score": 6
            },
            {
                "body": "For what it's worth, I'd recommend at least sprucing up your resume and taking a look at what opportunities are out there. \n\nThere's no guarantee that tech layoffs will cool down to align with your timeline and if your company is transitioning towards no-code solutions from vendors, there's potential for them to look at your team and decide they're better off going fully 3rd party and you'll be let go anyways. \n\nNot trying to be a downer, just sharing my recent experience where I tried waiting out the space cooling down and ended up laid off anyway. I wish I had spent the time in advance looking for something new rather than spending a number of months unemployed, and there's definitely a bias that some recruiters have where they prefer a new hire that's actively employed already rather than someone who's been let go. Just my two cents",
                "author": "Lolzomg",
                "score": 6
            },
            {
                "body": "Lowcode makes a lot of sense for content pages without much logic and with content that changes often. You really only need real developers for sites that have a lot of logic. Web apps not web pages. If your site has a lot of logic it will be a disaster for sure. My last company had both, the landing page was webflow and the app was react. I think that's pretty reasonable",
                "author": "Jewcub_Rosenderp",
                "score": 5
            },
            {
                "body": "There's an advice from Pirate Software on YouTube: \"Don't work for companies where IT is a cost center\".\n\nThe appeal of low code/no code is that when you're not running an IT business, the ROI for having and running an internal IT team diminishes. It's not just about cost but also the effectiveness of the solution.\n\nWork for companies where IT is a cost center, gain experience and pivot to something else.",
                "author": "cydestiny",
                "score": 5
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 5
            },
            {
                "body": "Nope. Not 1 single bit. We're problem solvers. I don't care what the solution is. If it's a fancy new ReactJS app, a Laravel CRUD, or a WordPress site. I don't care. I'll get it done. It's my job to know these tools, utilize these tools, and solve the problem the client/employer has within their desired requirements. As again they're just tools and basically no different than a wrench to a mechanic.",
                "author": "krileon",
                "score": 5
            },
            {
                "body": "I'm all for finding an outside solution to a technical problem if it's what makes the most sense. I think the more common scenario I've seen is the solution being retrofitted onto the problem without direct input from us \"problem solvers\" getting things done. \n\nI.e. I see a problem I can fix with a hammer but leadership buys me a bulldozer that costs them $100k/year and requires special training to use.",
                "author": "pierrechaquejour",
                "score": 5
            },
            {
                "body": "I am not sure why you are getting downvoted?",
                "author": "Pandektes",
                "score": 5
            },
            {
                "body": "Broooo, 3rd category killed me 🤣. Reminded me of WeWork, their bars, and the CEO who was always drinking.",
                "author": "PsychologicalCry1393",
                "score": 5
            },
            {
                "body": "These solutions often over promise and under deliver. Companies tend to underestimate what the customizations will cost and vendors don't make that clear. Custom development is also very expensive though. We aren't doing a great job in showing companies how we can save them money doing custom development, when there isn't strong leadership emphasizing MVP. ",
                "author": "labellebrown",
                "score": 4
            },
            {
                "body": "Don't forget burnt-out lone-wolf full stack developer whose job description is a war crime at company who wishes they didn't need to use tech at all.",
                "author": null,
                "score": 4
            },
            {
                "body": "one size doesn't fit all.\n\ncustom solutions are better if you have a good engineer... or a nightmare with the wrong one.\n\nmaybe the place you work at doesn't respect quality solutions, or recognize the power of fundamentals.\n\ni roll my own stuff in our dev shop because i can do it quickly and the end result is always exactly what we need. no new technology has to be researched or integrated, so no headaches or misfits.",
                "author": "uniquelyavailable",
                "score": 3
            },
            {
                "body": "I suspect most smaller agency type companies would go this route. I think the draw is speed, ease of use and cost. Most don’t want to be tied to a developer that has built a custom application they can untangle when you leave. As others have said bigger companies with specific tech focus might be a happier place. Good luck if you need it.",
                "author": "okanime",
                "score": 3
            },
            {
                "body": "I can't even get a job yet I have the education and skills. This low-code shit is low-key making me worried. Then there's the AI hype and lack of entry level positions. I feel your pain, though. Reminds me of how in one of my courses we suddenly spent three weeks learning Wordpress when I was already a Nodejs dev. Nothing wrong with a CMS, but NO CODE? Absurd and truly limits innovation.",
                "author": "Xhaa",
                "score": 3
            },
            {
                "body": "Dude I feel you, it massively sucks.  My suggestion is to invest heavily, like push down your col as far as possible for you, then try to retire or semi retire and do whatever you want.",
                "author": "Zeimma",
                "score": 3
            },
            {
                "body": "gen x.\n\nI can you give you a real world example. I had a client who wanted to simply update a row in a spreadsheet. Have it create files, folder in drop box w/ pre-filled templates so insurance adjuster can fill out. And have the job create a PO and invoice in quick-book.\n\nWithout having the user log into a webpage. **Users do not want to learn a new thing.** Force to use a web browser when their workflow is just adding a new line in excel. You can build a new 6 figure app and get churn and users abandon the app in 30 days. or build a solution that keeps the client and generate value.\n\nA low-code Make integromat. Did everything. Just add the record, a bunch of PDF contracts filled out, pushed to their vendor's DropBox sites. A PO mailed out. And all the vendors needed to do was reply to the emails. No one had to login into a website.. A bunch of back-n-forth emails, adding files to a sub folder on newly created sub-folder handled insurance adjuster estimations. Even compiled all the iPhone photo uploads into a PDF pamphlet/report.\n\nSomeone was quoting $60K to build this with SSO.... It was done in 20 minutes with make. now compete against that!",
                "author": "originalchronoguy",
                "score": 3
            },
            {
                "body": "Just don't use those, aren't you the professional there and the technical knowledge? Be clear about how bad these platforms are and flat out refuse to build crap.",
                "author": null,
                "score": 2
            },
            {
                "body": "This happens when your team is seen as a bottleneck and no one is trying to fix it. Work with the other departments to understand what they need and find a simple way to help them achieve their goals. \n\nIf you are re-inventing the wheel building tech that already has solved problems (like a homegrown CMS), start talking to people and figure out if you are aligned with business goals",
                "author": "30thnight",
                "score": 2
            },
            {
                "body": "\"Be the guy that fixes the machines that fix the machines\" - My dad \n\nUnderstand how no code solutions work and how to build them.  We just built one in house. \nMake a proposal to build one in house but really it sounds like it's time for a new job",
                "author": "oomfaloomfa",
                "score": 2
            },
            {
                "body": "Just wanted to chime in and say I 100% understand how you feel because I'm in a similar boat. Project I'm on isn't necessarily gunning for low/no code tools, but when a problem comes up, it's always \"here's this existing tool, let's just use it\". And now you're stuck gluing it all together and it is not satisfying at all. But like you said, logically it makes sense from a business perspective. Why spend time and money developing something that already exists?\n\n  \nThis is also especially prevalent in the DevOps community. I've had to shift to more of a DevOps role and the problem you described is just how they operate. God forbid anyone create internal products/tooling anymore.\n\n  \nI don't really have a solution, just wanted to say that you are not alone and yes, it does suck being in that kind of environment.",
                "author": "lil_doobie",
                "score": 2
            },
            {
                "body": "Say no to no code! https://www.reddit.com/r/SayNoToNoCode/s/aL67oauSuz",
                "author": "BakerAmbitious7880",
                "score": 2
            },
            {
                "body": "This sounds like a best case scenario, where there is no customer facing app, no ui, no user roles, hell.. not even any users.\n\nBut a real app usually has a few of those parts and that's where this low code magical fairy land falls apart. Because as soon as it has some real requirements you're fighting against the low code solution. Getting this low code thing off the ground with a real app will eventually cost you multiples of 60k in developers, consultancy and licenses.",
                "author": "phexc",
                "score": 2
            },
            {
                "body": "What's your skillset?  (More specific than full stack.)  Sounds like it's time to pivot away from internal tooling.",
                "author": "greensodacan",
                "score": 1
            },
            {
                "body": "> It's not the kind of work I wanted to be doing in this field.\n\nOk.. find a new job?",
                "author": "Astro-Zennix",
                "score": 1
            },
            {
                "body": "Integrating such services require still code, and a well written one to ensure you handle issues when they shows up. \n\nBut anyway, i disagree with the latest sentence: they hire us to solve company problems with technology and support business to make money - writing code should be just one of the tool we use to achieve that, and no code low code and AI are just new tools.",
                "author": "learnagilepractices",
                "score": 1
            },
            {
                "body": "Low code / No code is only really viable as MVP, or market assessment tool. When building a long-term sustainable SAAS, the more time pass, the more your needs get specific, at so many levels, and not having control over the implementation of your software is such a huge limiter. \n\nI've worked twice for compagnies that started on No code / Low code tools, where I was basically tasked to rebuild the whole thing to get more control over most of the aspects of the service.\n\nEven though it can seem like a good solution, probably cheaper on short term to develop, but at mid/long term it'll be an issue for the compagny inevitably.\n\nOverall I really don't see a \"trend\" of compagnies going more & more towards no code path, there are tons of startups opening job posts everyday for all kinds of SAAS & other software.\n\nOn the other hand, I've seen a significant increase in the minimum requirements when it comes to skill, experience & technical knowledge / skills. Compagnies are less taking the risk of hiring unseasoned / junior devs. There are still logs of jobs for juniors, but the marked is kinda saturated with them, which makes recruitment harder since job applications are flooded with hundred / thousands of entries. So compagnies set minimum experience higher & filter everything under to make the process manageable.",
                "author": "PuzzleheadedDust3218",
                "score": 1
            },
            {
                "body": "I’m learning Mendix which many business have started to adopt. Mendix Mastery is a good YT channel to learn Mendix quickly. Hope to eventually get some Mendix Developer money haha",
                "author": "No-Treat-3592",
                "score": 1
            },
            {
                "body": "Can y’all help me? I’m trynna get a projector 😭 https://www.tiktok.com/t/ZP8NAQpmy/",
                "author": "Anxious-Orange3582",
                "score": 1
            },
            {
                "body": "Agreed! We are doing things differently. Try [https://www.primelayer.com/](javascript:void(0);). You will get SOURCE CODE. We are confident you will love it!",
                "author": "PrimeLayer",
                "score": 1
            },
            {
                "body": "That is a **YOU** problem. Clients/employers want solutions. If the solution works with Zapier/Make/Integromat, let it be. Why spend 4 weeks engineering something when it can be done with 2-3 clicks.",
                "author": "originalchronoguy",
                "score": 1
            },
            {
                "body": "Working with low/no-code now and have been for a little over a year. We are about to start v3 of our app and we've all decide next version we are getting out of that environment.\n\nThe first iteration was like the wild-wild-west where we were learning the tool and what code we did write was kind of all over the place.\n\nV2 we took things we learned and standardized how things are done for instance button handlers, state, computed properties, and it's still a mess.\n\nWhere it all fails\n\n* Code reviews are hard. The files to review a slew of just yaml files and it makes it difficult to see the developers intent. Multi-dev is a mess. We are always fighting merge conflicts and resolving those in a yaml file is absolutely painful. I would rather spend a few hours and recreate what I did than try and resolve the conflict\n* It lacks a good testing framework for both unit and E2E. The SaaS behind the tool has tried several times to deliver a way to write tests and it's never worked out. We've had several things break that simple tests would have caught. Our users lack confidence in the tool and my dev team pray each release didn't introduce a bug.\n* High learning curve. Learning the tool is pretty easy, having someone new come in and learn the codebase is very difficult. \n* There's often more than one way to do something so without a standardized way to accomplish a task it can lead to a mess that's hard to follow and understand\n\nWhere it shines\n\n* Simple UI's, or wiring up a component to a REST API is waay faster and easier\n* UI designs and mock ups are more interactive and often lead to re-use in the final component\n* Our product team can build simple things to show us what they envision\n* It is faster to get certain features out the door\n\n\n\n I think overall tools like these do have their use cases the problem is the business doesn't seem to understand that. If you want a simple dashboard, a form, or a config tool then a low/no-code could be the right way to go but it's important to know the limitations of what you are building and when to stop and migrate out of a low/no-code solution. Thankfully I think our product team has realized we've grown beyond the capabilities of our tool and sounds like for V3 we'll be back to using Vue or React with a backend. \n\nWould I use them again? Sure, but only for the right things. We may use it for V3 but it would probably just be for an admin area or a configuration tool that integrates with what we build outside of it.",
                "author": "socialg571",
                "score": 1
            },
            {
                "body": "It's a completely different skill set.\n\nCoding is, at the end of the day, *how* to solve a problem.\n\nWhat low code is, or what it's supposed to be, is an answer to *how* to solve the problem.\n\nThis means that the low-code developer has just moved up one rung. They are now deciding *what problem to solve.*\n\nBut that is an entirely different job. It fundamentally relates to the theory of the business. The executives are doing this, not the developers. Or at least, they think they are.\n\nSo what ends up happening in reality is that you get immediate friction between executives and developers if they haven't picked the right low code solution - and by the way - there never is one.\n\nEDIT: I wanted to add, if low-code worked, you wouldn't need developers. How to abstract a real world problem is the hard part. It doesn't matter if it's python, or c++, or assembly, the hard part is figuring out how to abstract it. There's actually nothing inherently easier about a low code solution, because the hard part is still the hard part. Writing code is actually easy. *It's knowing what to write that's the hard part - and low code doesn't do anything but take away a huge portion of your abstraction tool kit.* \n\nLearning 10,000 words is harder than learning 10 words, but knowing 10,000 words *makes things so much easier.*",
                "author": "johntwit",
                "score": 1
            },
            {
                "body": "Yeah it’s just a modern branding of CMS/CRM systems. ",
                "author": "Disgruntled__Goat",
                "score": 1
            },
            {
                "body": "Try [https://www.primelayer.com/](javascript:void(0);). You will get SOURCE CODE. We are confident you will love it!",
                "author": "PrimeLayer",
                "score": 1
            },
            {
                "body": "I just quit my job for the same reason, outsystems sucks imo, has too much limitation like version control, automation testing, UI. With me, it is a big bad career move",
                "author": "Ok-Examination-1048",
                "score": 1
            },
            {
                "body": ">Obviously if a company can get the needed solutions from a no-code tool, it would be a sensible thing for them to use that tool. Nothing's wrong with that\n\nHaven't seen a company that uses these no/low code solutions not end up in a position where they didn't have to implement massive workarounds causing massive issues.  Or end up having to drop them all together and spend truck loads of money not only from the loss of using it to begin with but also having to fix the issues it caused.",
                "author": "Zeimma",
                "score": 1
            },
            {
                "body": "People who know how to use Wordpress are the people who can make someone a website. May not be your thing, but you gotta admit there is some value to it.",
                "author": null,
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "there's also the incestuous circle of execs who bounce companies and schmooze connections so even if your org doesn't adopt the next new platform, you'll spend a quarter doing a competitive analysis on the benefits of adopting a third party to fuck up your data or keeping it in-house",
                "author": "a_reply_to_a_post",
                "score": 1
            },
            {
                "body": "True facts. I'm actually considering adding it to my toolkit anyway. MAYBE I'll be able to start freelancing with it, though I prefer React/Node/Next aka JS world.",
                "author": "Xhaa",
                "score": 1
            },
            {
                "body": "If that's what leadership wants then that's what leadership wants. I'll give them my 2 cents in a professional manner, but if it's what they want then it's what they get.",
                "author": "krileon",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "We're still in demand, but salaries are not nearly as high as they were before. I know some people can't get a new job simply because they'd have to take a salary cut that they can't afford.",
                "author": "ReasonableLoss6814",
                "score": 1
            },
            {
                "body": "The strongest argument for no-code **is churn**. No one really has a good rebuttal to this. A new web app requires a login. How to enter in data. You are forcing users to learn a new tool. You are forcing them to change they way they work. They have data in one place, now they have to upload it to a new website or use a form entry to re-enter that data.   \n  \nIn my experience, people hate that. Especially corporate employees. They hate having to learn a new platform and this leads to churn. I've seen $150k, $350k custom web apps completely abandoned in a month because the end-users refused to learn a new process that takes an extra 20 minutes out of their day. Anything that inconvenience a user is already in a losing proposition. The perceived so-call benefits of adopting a new workflow is hard to overcome. Many see very little net-gain.\n\nA no-code solution like the one I describe, they do nothing else. They already add records to an existing spreadsheet on a fileserver. Now, everything else is done for them in the background. That is a powerful concept to grasp and I have not seen one good rebuttal to it. Is it perfect? No, but I've seen it cover 90% of corporate workflow use cases. In my example, vendors don't even need to get onboarded (ask for new logins to a shiny 6 figure web app).",
                "author": "originalchronoguy",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "why would I waste my time teaching a JR dev nobody reddit loser what the site is and how to use it lmfao\n\nand you don't even wanna pay me what I get in 2h of work\n\ngo back to studying little kid. But actually, don't bother, AI will take your JR dev job away, thank god.",
                "author": "lunzela",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "If you can get it for $30 a month then be my guest.  The only ones I see are many thousands of dollars and most often support is another many thousands.  I may be more used to the corporate space as that's where I work.  None of our saas and no/codes are cheap and we often run into their limiters often such as connection, in/out bounds, and etc.",
                "author": "Zeimma",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "That all looks like all self service stuff.  So now you have to commit to learning that exact thing.  So the effective cost per month is now getting much higher.  Those sound cheap on paper but the extra effort to learn and build falls onto the owner unless you hire someone then that cost gets much higher.",
                "author": "Zeimma",
                "score": 1
            },
            {
                "body": "Despite developers nearly universally disliking it, the money men will keep pushing it until the technologies have sufficiently evolved to be as good. \n\nYour best bet is to just keep looking for shops that don’t use low/no code. \n\nI feel the same way a lot do the time, but the suits with the money foam at the idea of cutting development budgets by hiring lower skilled employees to use low/no code solutions despite the problems it causes. \n\nStay away from big corporate jobs consulting type stuff if you want to avoid it. Look for tech specific roles, not being hired as a tech worker for a company whose product is not a technology.",
                "author": "deletable666",
                "score": 0
            },
            {
                "body": "In my workplace, we have CMS to churn out webapges fast on service side. But the hoops they have to jump through to get some basic stuff get working is insane. Everthing feels like bandages. But as soon as you need even remotely complex bug you will need product engineers, that where our place is in such workplaces. But if you want to be a full stack developer then your workplace is probably not where you want to be and you know this too. So, switch.",
                "author": "SweatyActuator2119",
                "score": 0
            },
            {
                "body": "Just leave tbh - it doesn’t sound like you agree with the direction the company is going towards\n\nFind something else that’s more aligned with what you want to do",
                "author": "heraIdofrivia",
                "score": 0
            },
            {
                "body": "I've worked on several projects that migrate companies off of proprietary KMS, LMS, and DMS systems. It takes some creativity, and often a mix of lots of database or obscure serialization format inspection, and I've had to resort to writing a custom parser or code generator a couple times, but I actually find it a lot of fun. The biggest problem is that someone who used one of those solutions has to be pretty motivated to migrate off by the time they actually go for it, so they often set deadlines against contract and license expirations rather than against time estimates from engineering. My enjoyment probably comes from my inquisitive desire to know how things work and my background in cybersecurity where you have to put a lot of things together that someone has tried to obscure.\n\nThat said, I've seen a lot of migration in both directions. Some companies just can't manage a robust engineering team. Those systems might be better for them. Lots of low margin companies only pay enough for junior developers and will never have long tenure.\n\nThose systems are doozy though. It takes a lot of money to leave them, and by that point, you have probably been using it far outside its intended purpose or scale.\n\nI don't think in the next 10 years we will low code replace software engineers. Certainly some engineers will run into multiple negative experiences with this happening, but others may never see it. Any individual only sees a small sample of all companies.",
                "author": "PaluMacil",
                "score": 0
            },
            {
                "body": "Idiots trying to cut costs. The solution is to always just pay and hire better developers than to either outsource the in house solution or to use no code tools.",
                "author": "tony4bocce",
                "score": 0
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "lmfaooooo\n\nyeah that's why we fired 2 teams of 4 people each team 1 in nextJS and team 2 in symphony that were doing 1 task per week.\n\nyeah sure thing buddy, tell me more about how you get fired from your job from working with a dogshit javascript library taking 50years to do 1 basic task.",
                "author": "lunzela",
                "score": 0
            },
            {
                "body": "Why would they need to pay thousands of dollars for a no/low code solution then?  It's still money being spent.  You do know that contact work exists right?  No one said they had to be permanent staff.",
                "author": "Zeimma",
                "score": 0
            },
            {
                "body": "my team / project was literally chosen because of how performant everything is.\n\nhow about you check astro and see how their claim to fame now is \"running on the server like PHP\".  But you're too dumb to understand that you've been hoodwinked for 10 years to use react and all this fancy shit and you become a worse developer because of them.  \n\n\nSure I can go explain the entire stack and what we do, I charge 400E/h if you want me to share screen it to you so you can learn something.",
                "author": "lunzela",
                "score": 0
            },
            {
                "body": "Where are they still paying 200-400k? I was looking for jobs \\~6mo ago, and could only find \\~half that.",
                "author": "ReasonableLoss6814",
                "score": 0
            },
            {
                "body": "I do full stack from html to js/ts to go to PHP to C#/C/C++ to db admin to sys admin and have spent at least 5 years in each part of the stack. Right now, mostly doing backend shenanigans.\n\nI'm in the EU right now, moved from the US for another job and not sure I'm willing to move back; life is too good here. But... that's probably my problem. Jobs pay less here (but you have way less expenses; we don't even have a car here), but usually not that much less.",
                "author": "ReasonableLoss6814",
                "score": 0
            },
            {
                "body": "EU generally pays lower but EU workers have more vacation and generally better healthcare than the american shitshow you pay out the ass for",
                "author": "a_reply_to_a_post",
                "score": 0
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -1
            },
            {
                "body": ">I'm not too sure what we are arguing about. Low/No-code solutions clearly have their place.\n\nThat's the thing I don't think they do.  They are often way more expensive than the equivalent of a single contract work.",
                "author": "Zeimma",
                "score": -1
            },
            {
                "body": "lol.\n\nwhy does management want to replace you? because you're doing a bad job\n\nI started leading a team of 2 and now leading a team of 6 and 2 more coming, everything custom coded in php + vanilla js / SCSS",
                "author": "lunzela",
                "score": -2
            },
            {
                "body": "I've been doing this for 16 years. I've probably worked with things you would never want to even imagine. I've learned to be flexible. I've obviously had pushback on several tools and if they respect my opinion enough to listen then fantastic, but it's not my place to make the final call.",
                "author": "krileon",
                "score": -4
            },
            {
                "body": "If they can write code, they can manage low-code/no-code.\n\nA lot of low code requires programming background. Authenticating with APIs, iterating through records, doing regular expression and building out logical conditional flows.  Make (integromat) takes about 15 minutes to show someone. I can show someone how to parse a Google Sheet, make an image, animate that image into a video, and create a MP4 1080x1080 that sends to Facebook Ad Manager. To publish 1000s of custom video ads w/ for every Pizza Hut locations FB pages complete with maps, animating titles of individual location phone numbers. 1000 personalize, individual FB video ad for every single location. With this week's discount code unique to those  restaurants.\n\nI can teach someone how to make 30 second videos this way in .... 15 minutes. Do you know how a JWT Bearer token works? Do you know how to read JSON? Then I can teach that person to automate.\n\nNow automate the creation of 1000 videos using traditional code w/ automatic media AD buying. It will take a developer more than a month to build that.",
                "author": "originalchronoguy",
                "score": -17
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1581266890.0,
        "title": "I'm constantly developing my 2010 era forums, but for less and less users",
        "author": "jaredNC",
        "id": "f1b7lr",
        "selftext": "Starting Note: I won't post the link to the website here because I don't want this post to be considered a stealth marketing ploy. This is a rant from one web dev to others.\n\n&#x200B;\n\nWeb Forums have always been an important part of my life. As a socially awkward kid they were my main source of social interaction. As an adult, they are the motivation for my career switch from Accounting to Data Science. I first got involved with forums in 2006, eventually became a moderator of my favorite website, and in 2010 I broke off to make my own set of vbulletin forums. Finding myself sick of dealing with profit-driven website owners, I finally had the freedom to do whatever the community wanted and let the community members do (almost) anything that they wanted. I've paid for the website entirely out of pocket, save for a few months during college where I took some donations. Profit was never my motivation. It was always about the experience and the community.\n\nOver the past decade I taught myself PHP and added countless custom features to the forums. Robots with home-made AI, a virtual economy based on the forum currency, a fully functional user-controlled government, countless forum games and simulations and more. As I started studying data science, I delved into subjects like data mining and user behavior analysis and predictions. Without any sort of profit motive I was always able to focus entirely on user experience and what's best for the community. Most recently I added an entire Pokemon Go module to the forums, where users can catch and train pokemon by posting in various sections. Now I'm in the middle of developing a financial markets section, with loans and investments.\n\nNow for the elephant in the room. Looking at the statistics, my userbase has been in decline ever since 2012. The first couple of years we siphoned users off of several big forum communities that had terrible moderation. Ever since then it has been a dedicated base of core users (lifelong friends at this point) with a few off them dropping off every once in a while. Peoples' lives change and their online habits change with them. A lot of people prefer discord, reddit, twitter, whatsapp, telegram and whatever other platform is more convenient for them. People get in fights over politics, or romance (there are at least two marriages between people who met on this website). Attrition is unavoidable. However, there has never really been a reliable source of new members.\n\nMaybe in the back of my head I have the hope that someone will give me an idea to bring new people to the community. But realistically, I'm jaded and I don't expect that things will ever get better. The problem is, as the community gets ever smaller my projects get less and less feasible. I may code an entire financial market system, but without enough users it simply can't function. Aside from usability of the website, I just have this feeling of sadness that so few people in the world will ever benefit from all my efforts. I have put so many hours into developing features and games, into keeping the website economy stable, into mediating fights, and I've made the greatest effort to always keep a fair and respected moderation team.\n\nBut such a small number of people have ever seen it, experienced it, appreciated it. And as time goes on it will continue to deteriorate down to nothing. I will keep the lights on as long as I'm alive and have a few dollars to my name. But I am scared that one day it will just be me working on large scale projects that only half a dozen people ever even see.\n\n&#x200B;\n\nAm I crazy? Am I wasting my time?\n\nIt feels like I'm spending my life writing some massive novel that will never be published or read.\n\nEdit:\nI never expected so much positive feedback on this post. You guys are giving me so much inspiration and so much to think about. I think in the immediate future I'll draft a post about the Pokemon system for next Showoff Saturday. For the near future, I'll be starting a new project: Capitalism MMO. Technically, it will be entirely separate from the forums. I can employ best practices and compile all the code on github.\n\nBut discussions about the development will be on the regular forums, and forum currency can be used to buy in game cash (it's not capitalism without unfair advantages from old money!). Lastly, the direction and management of the game will ultimately be guided by a reinstated forum based government.\n\nIf anyone is interested in being a part of this open source project (particularly front end CSS is my weakness) you can contact me with a private chat.\n\nThank you all for giving me a new motivation and hope!",
        "score": 364,
        "url": "https://www.reddit.com/r/webdev/comments/f1b7lr/im_constantly_developing_my_2010_era_forums_but/",
        "num_comments": 129,
        "comments": [
            {
                "body": "Unfortunately forums were pretty much doomed the second the first celebrity signed up to Twitter. Why go to a handful of different sites to talk about your specific interests to a tiny group, when you can go to a single site and communicate with hundreds of people?\n\nIt sucks, but maybe you should try pivoting on what you have. Sounds like you could come up with a really decent browser game... a text-based, player-driven MMO of sorts. You clearly have the passion and the ability to create something awesome. You just need to find the hook that will get people interested.",
                "author": "intothewoodscomic",
                "score": 113
            },
            {
                "body": "Why did you start down this path? For yourself.\nThat in itself should be the biggest motivation.\n\nI would recommend continuing doing what you seem to love.\n\nIf others want to come and play, great.",
                "author": "PointandStare",
                "score": 101
            },
            {
                "body": "Forums still have a purpose. The site you're reading this on, for example.\n\nI don't really see how there is much overlap between Twitter and a forum.",
                "author": "crazedizzled",
                "score": 87
            },
            {
                "body": "reddit is one of the sites that literally killed \"forums\", that and facebook groups. those 2 are not \"forums\" in the way anyone talks about forums from the 2000s.\n\nthey're actually much better imo, I dont miss those days at all except maybe for the nostalgia",
                "author": "cannotbecensored",
                "score": 60
            },
            {
                "body": "> they're actually much better imo\n\nCompletely disagree. I consider any knowledge located on a Facebook page to be completely lost after the day or two it'll appear on people's feeds. Reddit is slightly better but still changes how you locate information.\n\nForums have the advantage of organizing and categorizing. Facebook and reddit have neither.\n\nForums died off because of the convenience of Facebook/reddit (and maybe performance/usability of some forum systems) but _not_ because they're inferior. I refuse to participate in any FB groups beyond liking pictures of cars.",
                "author": "the_bananalord",
                "score": 40
            },
            {
                "body": "Actually I started this for all my friends. We hated the admins/owners of the website we were on and we couldn't do a lot of the things we wanted (such as having a forum currency). During the past 10 years, the website has been a huge part of my life (and the lives of other members of the community). To this day we're still having irl meetups. If it was just a selfish thing I think I would have stopped many years ago.",
                "author": "jaredNC",
                "score": 37
            },
            {
                "body": "**I went through this exact experience.** Even including splitting off from terrible moderation and for-profit run sites. Honestly the parallels are striking.\n\nI was a member of a community way back when and eventually became the sole tech admin of it. The community morphed through various stages and moved between different websites with different staff members due to legal issues, drama, and bad moderation, but the community as a whole generally kept together for over a decade. The problem which struck our community in its final form was it became narrowly focused on a particular region of a videogame rather than the videogame as a whole. That region eventually ceased to exist; it merged into another region. This spelled doom for the community because suddenly nearly all the content on the site became irrelevant and its purpose to exist, while not totally irrelevant, was much less attractive to new members. Old members were returning less, less new and interesting content was being posted, in-game trade activity went elsewhere with more users, etc.\n\nIt wasn't easy to make the decision to officially announce the forum would close. I tried to get community engagement with other aspects of gaming, but the fact is most members went elsewhere for the content they wanted at this point so without changing the core concept of the entire site there wouldn't be any reason to try. Nobody wanted the forum to close, but keeping it up and maintained just didn't make sense when it was hardly being used for much.\n\nI guess what I'm trying to say is sometimes communities dwindle and die and there's just nothing you can do about it. Thinking it's a failure on your part and that if you'd just do \"something\" you can revitalise the community will mess with your head. Not that that isn't possible, but you'd have to really dive into and consider why people aren't using the site anymore and how that can be resolved.\n\nIn my case the reason was simple: we couldn't compete with the preexisting sites for the merged-into region. For many smaller forum communities I fear being discoverable through search engines is far less common than it used to be. Bigger sites with their own communities (hello reddit) generally rank higher. Such is the reality of consolidation.",
                "author": "ArgyllMonk",
                "score": 32
            },
            {
                "body": "Doing something for yourself is not neccesarily selfish, depending on the context.\n\nGood luck.",
                "author": "PointandStare",
                "score": 25
            },
            {
                "body": "Yo nothing in my post suggests suicide.",
                "author": "jaredNC",
                "score": 22
            },
            {
                "body": "I recently opened an old school forum for web designers/developers and have had some enthusiastic success building a community, but for sure getting people to stick around and participate is hard.\n\nThink about what you can do to lower the barriers to entry as much as possible. People are lazier now.\n\nSocial logins, less sign-up forms, guided on boarding, clear call to actions etc. Anything you can do to reduce friction and mental effort.",
                "author": "xadz",
                "score": 20
            },
            {
                "body": "Your post makes me sad, because I, too, was once deeply involved in forums and running my own was what got me into web development in the first place. I met some of my closest and most long-time friends that way. Now I'm not a part of any and there is a part of that experience that I've never found again in the same way. \n\nIf you can't get the satisfaction of having a large user base at your own forum to appreciate your work, do you know of any places where you could share some of your work with other people who run forums? Like building mods or themes and letting other people use them?",
                "author": "Arqueete",
                "score": 20
            },
            {
                "body": "It feels to me like you're thinking of this thing as your baby, and you need it to be a beautiful baby. If it's not, you've \"wasted your time.\"\n\nIt's not your baby. It isn't needed right now, so use what you've learned and make something new and better with your friends. Have you ever asked your close group of friends/users what they think? Bring them along or have them help make something new and awesome.\n\nFor real, the world doesn't need a vBulletin add-on. It needs you excited about whatever you're making.\n\n/IMO",
                "author": null,
                "score": 17
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 16
            },
            {
                "body": "> Ever since then it has been a dedicated base of core users (lifelong friends at this point) with a few off them dropping off every once in a while. Peoples' lives change and their online habits change with them. A lot of people prefer discord, reddit, twitter, whatsapp, telegram and whatever other platform is more convenient for them. People get in fights over politics, or romance (there are at least two marriages between people who met on this website). Attrition is unavoidable. However, there has never really been a reliable source of new members. \n\nWhy not poll to measure:\n\n* why people have joined the site\n* what they like / dislike (and why)\n* what features or changes they'd like to see\n\n... and if you have emails, use that channel as a way to remind your existing users to visit and give them some sort of compelling incentive to do so?\n\nAny chance of integrating some of the other apps/mediums out there somehow?",
                "author": "-vz8-",
                "score": 15
            },
            {
                "body": "I think it’s a generational thing. I feel like older people cherish the personal interaction you get on a traditional forum, getting to know the community etc. \n\nThe younger generation is more used to “social” media platforms where quantity is more important than quality. People post on Instagram to thousands of followers they don’t know, they tweet to a mass anonymous audience.\n\nMaybe I’m just bitter and old but I don’t feel like younger people want the same things from their online usage as we do.\n\nAs others have stated though, you clearly have the technical ability to create, maybe you just need to move away from forums into something more age-agnostic.",
                "author": "maxoys45",
                "score": 14
            },
            {
                "body": "Ease of access is not the problem. I do get the lazy part. One of the nicest members was telling me in telegram the other day that he accidentally got logged out a couple months ago, and he hasn't had the motivation to log back in. I told him I could reset his password, and he said he remembers the password. He just cba to type it in.",
                "author": "jaredNC",
                "score": 14
            },
            {
                "body": "Text based player driven MMO would be fun, but I also think it would take me a year or more to have even some alpha version that people could use. Most of my programming is done in my free time (or my procrastination time) and all my existing code is heavily integrated into vbulletin. I think 90% of code would have to be written from scratch.\n\nStill, it might be something that I start doing as my next side project. Having something separate from the forums would also let me publish it fully on github, which allows for more exposure and something to put on the CV.",
                "author": "jaredNC",
                "score": 14
            },
            {
                "body": "What you're doing sounds very interesting.\n\nSadly I think the attrition of your core userbase is inevitable, maybe they get married, people have kids grand kids, they need to take up more sport to keep healthy, jobs change etc.\n\nI remember fondly the era of specialized forums which were real communities and very dedicated to a single subject.\n\nLike you said for a community to stay strong it has to get new members.\n\nTechnology wise the thing I can see as most helpful (maybe you've already done them) make signing up as painless as possible let them signup with their twitter, with their facebook etc, make sure your forum can be used well on mobile people are busy but their will always be lines, ques, etc when you just need to pass the time on your phone.\n\nIf you want to preserve your codebase or get more people to work on it, try and reach out to the FOSS folks who are interested in linux and other pieces of software if you can rebrand and show your code as being free, respecting privacy you might get volunteers to help you",
                "author": "Hero_Of_Shadows",
                "score": 13
            },
            {
                "body": "Also, babies grow up and leave you.",
                "author": "dietcheese",
                "score": 12
            },
            {
                "body": "I experienced the same thing running a few forums which are now 10+ years old and were once booming but now barely used. I too ran them for fun not profit, going out of pocket with no plan for monetization. We still have a bit of community but nothing like it was in the past. For my forums the traffic went mostly to facebook. To me it's really just a small symptom of the slow overall decline of the internet as a whole. I remember when I first got online many years ago the internet was this amazing place where mostly intelligent people would volunteer their time to create shared resources and shared community. Nowadays though the normies and rent seekers have gotten online and basically ruined what the internet once was. Everything is a race to the bottom now, everything is driven by advertising and profit. It's just the way the world works unfortunately.",
                "author": "shazvaz",
                "score": 10
            },
            {
                "body": "So I googled around and found your site. My suggestion would be that you update what's accessible for non-members to see. Currently, I have absolutely no idea about what this website is about since it's all restricted to signed-in members.\n\n*What are these games in the menu?  What do people talk about here? Why is the title in the tab in Russian? Is this a Russian forum? Why can't I even see \"What's new\"?*\n\nThese are some of the thoughts running through my head as I spend a minute or two on your site. If I didn't know better, I wouldn't even know if this site was even active. (Yes, yes, I know I can see some post dates in the \"new members\" section but I don't know what other sort of activity there is outside of that etc)\n\nThe front page should explain to potential users what you're offering. You're trying to \"sell\" them a reason to join. You need to appeal to them, and not expect them to give up their personal details before they even know what the point of this site is.\n\nSomeone here also mentioned SEO. By having everything behind closed doors, new potential members cannot find your site. At the very least you should have a page that lists all sub-forums. But ideally, you should try to open up the forum and posts to the public so that people can search for, idk, episode discussions of the latest pokemon episode and find your forum listed on the result page on google. (As you can see, I still have no idea what's being discussed behind the closed doors).",
                "author": "grapefruyt",
                "score": 9
            },
            {
                "body": "That's how I used to do it, but that was years ago. I haven't visited any of those old forums for a while. This post makes me feel bad about it.",
                "author": "Sw429",
                "score": 9
            },
            {
                "body": "How do people even find forums?\n\nLike do people just Google online place to discuss cowboy boots without shit mods?",
                "author": "_foolsErrand",
                "score": 8
            },
            {
                "body": "You have a point about people not wanting to create anymore. There used to be so many memes, everyone had photoshop. We could do collab work like a photoshop worm, we would do lets play threads, rating threads, forum RPGs etc.\n\nNowadays the people who still log on don't have the motivation to do anything but post at each other. The pokemon go module was really great for a few power users. Four people got 151/151 for Gen 1, and two people got 251/251 for Gen 2. But by and large people are too tired with work and adult life to make an effort on a web forum.",
                "author": "jaredNC",
                "score": 8
            },
            {
                "body": "PWA stands for progressive web app, no other languages required. What forum software are you using? I'd be surprised if there wasnt a plugin already.",
                "author": "xadz",
                "score": 8
            },
            {
                "body": "Develop the new stuff without a dependency to the old stuff. This will allow you to drive traffic to it and eventually to your old site. You should not need to require people be active in your forum to use stuff you make going forward. It's ok that they are separate things.\n\n> Text based player driven MMO would be fun\n\nIs there any reason it needs to be tied to a particular platform? Why not make it interop into twitter, slack, discord, etc.",
                "author": "FearAndLawyering",
                "score": 7
            },
            {
                "body": "There are counterpoints though. ProductHunt was a simple forum meant to showcase new tech products - it was super basic and sold for $20m. There will always be room for niche communities which can benefit from custom forum software. The key is that you must target and cultivate a niche rather then expecting for them to come to you.\n\n\nReddit famously posted fake content to get the site off the ground.",
                "author": "the_web_dev",
                "score": 7
            },
            {
                "body": "I think you need to find a niche to stay relevant nowadays, even if it's just a particular trait of your community.",
                "author": null,
                "score": 7
            },
            {
                "body": "A poll wouldn't accomplish as much as a discussion thread, and we've had lots of those. probably 99% of active users joined because they didn't like the mods at whatever forum they were at, and they saw that this website was a lot more laid back plus all the active development of games and features. I even have a section for suggestions of new features, and I make an effort to implement whatever people ask for as long as it's within my ability.\n\nFor integrating other apps/mediums, I technically have (or had?) facebook login, though it has never once been used. I have integrated the telegram and discord chats, and I made a telegram bot that can quote messages directly to the forums, uploads images to imgur and posts them on the forums, and people on the forums can post a command to send a message to the telegram via the bot.\n\nWhen it comes to ease of access and features, I've done and continue to do everything I can. Its just that no one sees it and the website has no topic or subject that can be marketed. It's the best (traditional, not reddit style) forum experience I've ever seen, but with no actual purpose or niche.",
                "author": "jaredNC",
                "score": 6
            },
            {
                "body": "I think there are enough games in the world. People actually want meaningful conversations, which they don't get on sites like reddit, where disagreement is downvoted and made invisible. They also don't get it on the social network sites, where people just try to market themselves. \n\nMake a better reddit for real people. We need it.",
                "author": null,
                "score": 5
            },
            {
                "body": "You've got it right. Attrition is inevitable. If I had even a dozen new users a year, the forums would stay active and probably grow organically. In reality, I've had 3 \"active\" new users in the past year, and only one of them has posted more than twice in 2020.\n\nThe registration process is easy and there's facebook linking and etc. There's just nothing to market. It's \"forums but without the terrible moderation and also lots of cool games and features\" but there's no theme. There's not some game, webcomic, hobby or interest to market. And so all of my efforts over the past decade to attract new people have mostly fallen flat.",
                "author": "jaredNC",
                "score": 5
            },
            {
                "body": "I think some phrases might have triggered the bot:\n\n>I'm jaded and I don't expect that things will ever get better\n\n>I just have this feeling of sadness \n\n>I will keep the lights on as long as I'm alive",
                "author": "th4",
                "score": 5
            },
            {
                "body": "As someone who frequents that forum, I have to admit that while it's an amazing community, there's no obvious incentive for a new user. If I didn't play some dumb flash games 5-10 years ago (one of the shit communities from which this aforementioned forum was born) then I'd have literally never had a reason to encounter this place.",
                "author": "NaruTheBlackSwan",
                "score": 5
            },
            {
                "body": "Neither are made to be permanent knowledge sharing solutions but are both a much better solution for sharing or discussing current topics (Nothing like the dreaded years old zombie thread, was there?) than 2000's forums.  \nNot that forums really were the best way to permanently share knowledge anyways, wiki's and SO are way better in that aspect.\n\nWith a classic flat forum it's hard to keep the \"line\" in diverging conversations, for example this exact thing where we are way of topic from OP's question. That's next to impossible with flat forums to follow but quite usable with a threaded forum. Anyone remember all the OT warning that constantly had to be given back then? Not a problem on Reddit.\n\nFacebook are made to share and discuss today's (at most the weeks) topics so you have to go into it with the expectations that anything said there are just like conversations at the bar, gone in the morning.\n\nIMO The 2000's forums did everything from blogs and QA to knowledge dumps and topics irrelevant the next day, but it did neither of these things well enough to compete with what we have today.",
                "author": "aDinoInTophat",
                "score": 5
            },
            {
                "body": "Reddit won’t replace online forums for knowledge collection until they dramatically improve the search feature that’s been essentially broken for years.",
                "author": "zushiba",
                "score": 5
            },
            {
                "body": "There will always be an interest for dedicated forums for niche topics. There are subreddits, but they're not as good as individual forums with proper categorization.\n\nReddit is great, we're all on it, but it isn't perfect either. Agree 100%",
                "author": "mailto_devnull",
                "score": 5
            },
            {
                "body": "It seems like the ease of access of subreddits waters them down a bit compared to forums. Any subreddit of a certain size has the same community and style of post essentially. There are certainly trade offs between reddit and old fashioned forums, and one of those tends to be depth in my experience.",
                "author": "StickInMyCraw",
                "score": 5
            },
            {
                "body": "I kinda feel your sadness. I have great memories of the forum era and I still think they are an awesome tool. Unfortunately, nowadays, people are drawn to instant gratification websites with fast and shallow interactions. I think about that feeling you have about wasting time with side projects but be sure that learning is never wasted. All you have built into your forum was not wasted. If you want to go furthet you could build a saas service out of the features you have and let people use it for whatever instead of holding all those features for a single purpose forum/site/service subject. A financial system is useful and you could still use vbulletin. All I want to say is that thinga evolve and change and sometimes what we loved dies or forever is not the same. Dont hold to something because of a distant good memory, evolve and change with it!",
                "author": "Fenweldryn",
                "score": 4
            },
            {
                "body": "This is a problem that people have faced since the beginning of time.\n\nhttps://poets.org/poem/ozymandias\n\nThis may not help, but it may help you not feel so alone in it.",
                "author": "Meloetta",
                "score": 4
            },
            {
                "body": "I liked forums because they were a great source of traffic; - getting reputation, badges, custom colors for my username meant a lot of traffic for my services. Sadly, this doesn't exist anymore.\n\nI wish reddit allowed signatures in comments, I'd make it a full time job to fix people's issues here for free.",
                "author": "npmbad",
                "score": 4
            },
            {
                "body": "You're killing me, smalls.",
                "author": "rowtuh",
                "score": 4
            },
            {
                "body": "If it was me, I would start thinking about something new. While there is a romantic notion to sheperding around a smaller and smaller group of people until its just you at then sweeping up the spotlight - it sounds like you've lost whatever spark it was that fed this idea and kept it healthy.\n\nIt sounds like you've gotten a lot of joy from this project, and so there's definitely aspects of this work you like. I would maybe stop thinking hard about how to get people to your site and start thinking the way you did when you started. Serve yourself. What do *you* dislike about current online communities and social hubs? What would you take from them? What do you not see in whatever space you are serving that you want to see? Build it.\n\nI think there's this curve of community creation where you forget that the only way to serve your userbase is to serve yourself. Your mistake (in my opinion) is to look to them for inspiration when in fact the inspiration has always come from *you*. So that's where the pivot and rebirth also needs to originate from. Your mistake is that you forgot that you are a leader, not a follower in your community.",
                "author": "abeuscher",
                "score": 3
            },
            {
                "body": "Forums as they existed were more a function of what was technically possible at the time than they were necessarily an expression of “the best way for people in interest groups to interact” (whatever that is!).\n\nOther technologies have come along, and disregarding the socio-economic-political shit-show that’s come from that - the reality is that there are newer, better solutions to that problem. You can’t really put the genie back in the bottle.\n\nTimes change, and we just have to accept that things we loved are just moments which pass.\n\n(PS I’d hope the irony of this post being on Reddit - probably the closest analog to traditional   Forums that exists right now is not lost on anyone)",
                "author": "beavis07",
                "score": 3
            },
            {
                "body": "Not crazy, and not wasting your time. I'm an admin on a very small board (<100 active members) for a very *old* game, so slightly different in that we have to react to player counts. We're the same way as you, but we take in about USD$60/mo in donations from 3-4 players to cover our server costs. Even if it didn't bring in that much, we'd still finance it with admin money. In the end, it's what we like doing.\n\nThat's actually a good idea to incorporate your website into a game. It'll drive users to your website. Do what you like/love!",
                "author": "Genesis2001",
                "score": 3
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 3
            },
            {
                "body": "Great job spending so much time coding such a feature rich forum engine. I had a large online community in the late 2000's and it was also forum based. Had several hundred thousand posts.\n\nI still have my forums but they are all but abandoned. We've switched to discord for its chat room like features, which have brought the community more together.\n\nIt's my personal opinion that forums are on the way out. But i could be wrong, who knows!",
                "author": "AdmiralAdama99",
                "score": 3
            },
            {
                "body": "This is the same story for most forum community admins. I’m in that boat as well, with a couple different forums. Some bigger than others. Just how it goes. But as long as you have the time and money to support those websites staying alive, might as well keep it going. Social networks will always change but now forums are good for niche groups and for archiving. I think they’ll always have a place on the internet, they just won’t be the top trend ever again is all.\n\nYou’re only wasting your time if you aren’t enjoying it or if it’s for nothing. If people still use it then I’d say it’s worth it. If they don’t, then it probably won’t hurt it to just leave it there either. I have a couple that I run updates on every couple of months and make sure they didn’t get hacked or anything but otherwise just leave there for nostalgia’s sake and leave some good threads up that we can look back on. Nothing wrong with nostalgia at all.",
                "author": "CircaCitadel",
                "score": 3
            },
            {
                "body": "when you can go to a single site and communicate with hundreds of people?, this is true and untrue\n\nforums gather ppl that really care about the theme, or themes, twitter is just a market of works with ppl screamming and celebrity screamming high",
                "author": null,
                "score": 3
            },
            {
                "body": "> Why is the title in the tab in Russian?\n\nAs someone who has frequented that website for years, this baffles me all the same. I logged in one day and the title at the top of my screen was in Russian and it never changed back. Odd.",
                "author": "NaruTheBlackSwan",
                "score": 3
            },
            {
                "body": "I am going to make my next project be independent of the forum. It's bold and it might take me many months or even years, but advice like yours has given me inspiration.\n\nAs for interlinked between platforms, I'll see what I'm able to do. I've already got a telegram bot that can integrate with external sites, so I have a starting point.",
                "author": "jaredNC",
                "score": 3
            },
            {
                "body": "Where would I be allowed to market it? I guess on here we're allowed to do the Showoff Saturday, so I could work on drafting up a nice post about the Pokemon game for next weekend. Are there other places were such advertising would be welcomed?",
                "author": "jaredNC",
                "score": 3
            },
            {
                "body": "Have you got a PWA that people can save to their mobile homescreens? A lot of my most active visitors use the PWA and I get much higher pages per session on this channel.",
                "author": "xadz",
                "score": 3
            },
            {
                "body": "Just curious, what vBulletin version do you use? I used to admin and mod some forums, I always found vB3 to be the best version. Regardless of it’s dated table-based layouts.",
                "author": "ThatGreenAlien",
                "score": 3
            },
            {
                "body": "Maybe you could look into studying marketing and branding a bit and see if you could find a common theme/angle to rebrand and market it from. I think forums without terrible moderation and lots of games sounds like it could be quite fun, like some kind of internet haven/fun space?",
                "author": "legable",
                "score": 3
            },
            {
                "body": "I'm dying tho.",
                "author": "KaosNC",
                "score": 3
            },
            {
                "body": "4.06\nI can't upgrade to newer versions because I've modified dozens of the core files, and upgrading would break a bunch of the things that we're used to.",
                "author": "jaredNC",
                "score": 3
            },
            {
                "body": "> Also, babies grow up and leave you.\n\nThis is a great way to put it.",
                "author": "April1987",
                "score": 3
            },
            {
                "body": "Google searches Reddit pretty well",
                "author": "roselan",
                "score": 3
            },
            {
                "body": "Ah, I use XenForo which has one. Perhaps try this? Just from a cursory Google so proceed with caution: [https://vbulletin.org/forum/showthread.php?t=326873](https://vbulletin.org/forum/showthread.php?t=326873)\n\nAll you really need is an app icon, a manifest file and a little service worker to help cache some stuff and make smoother. Your code modifications shouldn't matter.",
                "author": "xadz",
                "score": 3
            },
            {
                "body": "I’ve been working on the same website for 18 years. I was told this past week that it will be sunsetted in 2 years. It’s like 2 decades of my life’s work is just going up in smoke.",
                "author": null,
                "score": 2
            },
            {
                "body": "Ha similar boat was talking to my gf just last night about what to do about this forum I've been managing for 10+ years.\n\nCommunity just very very recently became inactive, went from hundreds of posts a day to 2 or 3 in a year. There's big drama between members every couple of years that causes a bunch users to leave and I am not into the content anymore so I have a hard time working on it. I am also just very busy as a professional programmer and tech manager now. Definitely a sadness to it.\n\nIn my professional life I worked on more and more modern tech and to be honest I think a huge problem is forums just didn't keep up. I managed a huge open source community for a fortune 500 company and have seen a lot of communities and games thrive with open source and modding. I had this big plan to revitalize the forum by open sourcing it and allowing community devs but it's almost fucking impossible with the older PHP forums.\n\nA lot of the code or customization is actually stored in the database so versioning or traditional pull requests are basically impossible. Even using recommended modding techniques and creating plugins is basically a death sentence for ever upgrading your forums core software again (e.g. how you mentioned you can't upgrade your version or it would break). The forum software as a whole is also just this huge monolith almost every major forum distribution is having difficult maintaining or updating. There's just way too many features and coupled systems to update or translate to something new.\n\nWe let some people have access and they would often break things and it would be diffcult to track down what broke so we'd just have to revert and often lose a lot of other work. I tried contributing to the core forum software repo and it's took years for my requests to get in so we switch to new software and now are having the same problem all over again. I don't blame them it's just an incredibly out of control task to develop these systems now.\n\nI could honestly see a modern forum with SPA and mobile elements still do well. On dev side using node and npm could actually make plugins and modding maintainable. I haven't seen any real attempts at this everything modern that is out there is either a service or an extremely light version of a forum not really comparable to the older forums.\n\nIt's in an odd spot because I think there is actually demand but you are either playing catch up with the older forums that have been building out features for decades or you are competing with services that are \"good enough.\"",
                "author": "otw",
                "score": 2
            },
            {
                "body": "Old school forums are mostly dead. I also ran a somewhat popular forum with several thousands of active users at its peak for ~15 years, and it's pretty empty lately. I see the same on other forums I frequent, most of the active users are registered 10+ years, there's no new blood.\n\nI guess instant messaging apps and gigants like reddit, twitter, facebook groups have taken over. I don't think forums will be coming back to the same popularity ever again.",
                "author": null,
                "score": 2
            },
            {
                "body": "I coded my first forum back in 1997 I think. It too got me started on my path that lead me today. No regrets really.\n\nMy forum was a Final Fantasy forum. 1 of the largest of my country in the 200X era. Today it's a ghost town xD but people who I met there are still my RL friends and I'm intending to keep my forum around forever.",
                "author": null,
                "score": 2
            },
            {
                "body": ">But such a small number of people have ever seen it, experienced it, appreciated it. And as time goes on it will continue to deteriorate down to nothing. I will keep the lights on as long as I'm alive and have a few dollars to my name. But I am scared that one day it will just be me working on large scale projects that only half a dozen people ever even see.\n\nIt's very easy to think that way when you're at early stages of growth for whatever project you're working on. You have to change your mindset. Not sure who said this originally, but luck or that big break in terms of success and/or growth and/or awareness is just when opportunity meets preparation.\n\nYou can see when opportunity meets preparation playout if you look carefully in many different industries, occupations.\n\nTake for example\n\n1. Actors and actresses - they start out poor, without much acting work and still have to hone their acting craft and get rejected by 100s of auditions and maybe get a few small audition successes and may have no national or global recognition of their name. But they still work on their craft and improve, still do what is needed and go for auditions. Their so called 'lucky big break' is when they someone sees they're potential for particular film, tv or project based on the depth of that person's past acting resume, experience and skill sets. That luck is just when their years of preparation meets an opportunity. Without that preparation or effort into your own projects and ideas or advancing your own skill set and experience, you'd never be ready for when that opportunity or you may never get that opportunity.\n2. Professional sports folks, tennis, boxing, athletics, swimming etc. They all start out early with just training and honing their skills. Then key choices / selection / opportunities in their journey level them up to the next step towards where they end up as professionals in their field. Without that training, they most likely won't have those opportunities open up for them.\n\nIn both examples, there's no guarantee of success or that lucky big break will come from doing the required work, preparation or personal growth/learning. But there's a 100% guarantee without such preparation and accumulation of experience, that you will get less or no opportunities for that big break :)\n\n&#x200B;\n\n>A lot of people prefer discord, reddit, twitter, whatsapp, telegram and whatever other platform is more convenient for them\n\nAs to discussion forums, I've been using forums since 1999. Owned my first forum in 2000 and worked for vBulletin from 2001 for over a decade and I still basically work with forums for server related forum optimisations mainly with Xenforo to this day. Yup that's 21 yrs of my life dedicated to all things forum/forum server related :)\n\nI don't think forums are dead for some specific topics/usage cases i.e. highly technical in depth discussions won't work on twitter, discord or whatapps like platforms. For some topics maybe.\n\nBut I have an inherent bias to prefer forums over other discussion alternatives and even my own open source project's (LEMP stack auto installer script) main  community forum is using Xenforo forum software.\n\nNot all topics would be suited to the chat like mediums for discussions so choose your medium carefully. I belong to a few large web master forum communities (and [one of them linked to your reddit post](https://www.theadminzone.com/threads/an-interesting-topic-on-reddit-about-our-audience-which-is-no-longer-our-audience.152660/)) and the unwritten rules are:\n\n1. Some forum topics do have a shelf life and expiry date. With regards to web dev, that would be as long as the web dev maintainers have a passion and drive to fuel that community through time, effort and finances. I started my open source LEMP stack auto installer project in 2011 as a fork of another project with virtually a small number project users/followers and no awareness of my project and started the forum community side on Google+ Group and built it up to 300+ members and migrated to Xenforo in 2014 and now has 1,800 members and between 2,000 to 3,000 new installs/downloads per month and the LEMP stack now powers some of the largest vbulletin, xenforo and invision discussion forum communities online - including Alexa Top 10,000 and 100,000 ranked community forums. I started my open source project as I thought I could build a better LEMP stack from my experience in optimising large community forums for scalability and performance which also translated into better performance for wordpress as well. But the start had very little number users and no one was aware of my project and there was a level of trust to be built up - as who would trust their entire site's operation to an unknown LEMP stack offering Nginx, PHP-FPM and MariaDB MySQL auto installation. Sometimes early on I did see it your way, who will know of the project's existence and is all that effort worthwhile ? But as time went by and users and awareness grew, I realised the growth was because of that continued effort during the quite times. The quite times allowed me to hone my skills and improve my project the way I wanted to steer it without the traditional open source crowded 'too many cooks in the kitchen' pull request/code contributions. It was my own personal moment of seeing where preparation meets opportunity. Those quite times allowed me to add and expand features which where attractive to users and over time, growth and awareness through word of mouth followed.\n2. Only start a community forum for topics your passionate about.  A community's growth is inherently linked to it's owner(s) and key staff/members passion about the topic(s). Once that passion fades or is diluted i.e. starting too many communities about different topics, then you're more likely to see a decline in community growth. As you said, folks life circumstances change, life priorities change etc. This happens for both members as well as staff and forum owners too. So once you start many communities/projects you're passion and drive is diluted. But then it goes back to what I wrote above about preparation meeting opportunity. If you don't see community growth or project immediate awareness (as opposed to potential future awareness) as a measuring stick but part of that preparation phase, you won't put undue pressure and expectation on yourself.\n\nHope that helps\n\np.s. might be obvious but I'll also point out awareness doesn't necessarily translate 100% to how much forum or community activity you have or how many members you have. Some folks are just users + lurkers or potential users + lurkers. Only a small fraction of my projects users are actually registered members on my community forum. I'm surprised how many web hosts use my LEMP stack internally or are aware of it's existence when I encounter them but only a handful ever registered on my community forums.",
                "author": "centminmod",
                "score": 2
            },
            {
                "body": "We've seen computing go from centralized to distributed and now it's going back to centralized.\n\nTwitter is a dumpster fire and just about everyone hates it.\n\nPeople will undoubtedly fragment their communication again and prefer smaller groups centered around a common topic....it's inevitable.\n\nTwitter will be relegated to press releases and crazies yelling at other crazies. Like public bum fights.",
                "author": "Ariakkas10",
                "score": 2
            },
            {
                "body": "Thanks",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "It really shouldn't cost you $60 a month to host a forum with such few members. I was paying that maybe 5+ years ago but now with AWS free tiers or even just shared hosting you can get all the features and power you need for a few dollars a month.",
                "author": "otw",
                "score": 2
            },
            {
                "body": "I've been searching for the niche for at least the past 7 years haha. I long since gave up on competing with the big websites. At this point I'd be happy just having a few dozen more active users. \n\nWe had some of our best moments with an active community of less than 100 people.",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "Yeah, today the forums exist mostly as archives of the past. A few dedicated users still post regularly, and some people are playing the Pokemon game.\n\nNothing before was a waste of time, because I learned so much about programming and it led me to my current career path. From a more personal side, so many people in our small community made lifelong friends and had incredible experiences. I've met people from the community irl more times than I can count, and even as recently as a couple months ago. So definitely not a waste.",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "Can't you offer to take over hosting it? With AWS and low traffic you can probably  maintain it for a few bucks a year.\n\nImo one of the biggest tragedies is the loss of decades worth of archives because some business loses the profit incentive.",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "Man, this is a good post.\n\nI don't know what else to add other than confirming that you're hitting the nail on the head. I'd never suggest my forum architecture for a business or a large scale application. I just want to keep the archives open forever and it would be nice to let a small community of old schoolers keep enjoying the blast to the past.\n\nForums are kind of like a retro  barcade.",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "Oh God the nightmare of porting an old school forum into a completely uneeded blockchain model sounds terrible.",
                "author": "otw",
                "score": 2
            },
            {
                "body": "I'm glad that you at least allow me to keep the website archives ;)\n\nMost of my other forums that I used to frequent have deleted their archives. Millions of posts, decades of lore all lost forever.",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "Same. I haven't registered for a web forum in over a decade. I couldn't imagine using one again. Seems archaic but that's just my way if life. Not that I have much to say as a regular IRC user...",
                "author": null,
                "score": 2
            },
            {
                "body": "Ok, then if you feel comfortable about opening up the codebase I'd try reaching out to linux people they're always looking for software they can host themselves or places to organize themselves that aren't beholden to the corporations.",
                "author": "Hero_Of_Shadows",
                "score": 2
            },
            {
                "body": "I was thinking about making a goal accountability forum and this thread is dissuading me haha.\n\nBad feels post",
                "author": "_foolsErrand",
                "score": 2
            },
            {
                "body": "Great! The forum era was so special and I have similar experiences as well. One of the main forums I grew up on and dedicated a lot of time to as a member and later admin was actually managed externally. It was the official forum of a band that had management. They eventually decided to pull the plug on the forum entirely but didn’t tell me ahead of time so that I could back it up (kept asking for the cpanel access many times to do it). But they never let me. Over a decade of a forum was lost. Still quite upset about it, even 3 years later. Thought about creating a new site to replace the old one but I know it wouldn’t be worth it if we didn’t get the old posts back. RIP.",
                "author": "CircaCitadel",
                "score": 2
            },
            {
                "body": "I don't have any experience with mobile applications, and I'm the only developer for the website. There is a mobile theme and I try to make everything as mobile friendly as possible.\n\nBut looking into PWA, I guess there's a way to do it through google with just the basic web dev languages. I thought I'd need to know Java or C++.",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "Reddit is a forum... just a great big forums with lots of categories and sub-topics.",
                "author": "HistorianCM",
                "score": 2
            },
            {
                "body": "RIP :(",
                "author": "jaredNC",
                "score": 2
            },
            {
                "body": "I understand that the goal of this post wasn’t to market your website and you needed to rant. \n\nHow about marketing it though? Making blog posts here on reddit or in other places? Clearly the webdev community is interested in looking at it at least! Would love to check it out !",
                "author": "davidmdm",
                "score": 1
            },
            {
                "body": "The work you are doing sounds interesting. What I would suggest is trying to translate it to some new medium. The forum was really just a platform for you to experiment and bring your ideas to life. Now, though, there are new platforms and new ways to communicate and interact with people. For example, your financial markets feature could end up being a good fit for a mobile app. The world will always change, it’s up to you whether you choose to change with it. Good luck.",
                "author": "soulprovidr",
                "score": 1
            },
            {
                "body": "websites in general are becoming more and more useless.\n\nhumans work in hierarchy. the top websites are slowly capturing all the use cases and small websites are dying off.\n\nit's not just forums, it's everything.",
                "author": "cannotbecensored",
                "score": 1
            },
            {
                "body": "Probably because of Discord, or just because there's no interesting content.",
                "author": null,
                "score": 1
            },
            {
                "body": "I run a small internet community which has catered to about 50-100 users for the past 15 years. Instead of worrying about growth in number, I focused on growth in our friendships.\n\nI've traveled the country and met about half of the users in person. We'd hang out, play video games together IRL, cook food, do local touristy things. Great times.\n\nI always encourage members of the community to visit each other in real life so that we're not just anonymous avatars on the internet.\n\nDon't be discouraged, you don't need to have millions of users. Just focus on how much you can improve the lives of the people you do know. https://a16z.com/2020/02/06/100-true-fans/",
                "author": "itsrachelfish",
                "score": 1
            },
            {
                "body": "Ever thought about moving it to a decentralized blockchain?  Maybe something like EOS?  It sounds like you have the experience and could two into massively popular new domain with the same vision.",
                "author": "oojacoboo",
                "score": 1
            },
            {
                "body": "You seem like a decent person and i have been in those shoes before (creating/developing a community/forum/site combo) and trying everything to keep it alive for like 10 years.\n\nFrom what you write it feels like you are trying too hard with all the fancy features. The features you have listed could be totally independet SaaS products. I have too less info about your community and niche to come to a good conclusion. But here are a few things to think about.\n\n1. Do you understand the needs of your community ?\n2. Do you consider the features you add to be of value to the community other than fun/gimmicks ?\n3. As a new user, would i be overwhelmed by your content or can you manage to portray the value of your site in a short time and few infos (media/text)\n\nI could go on with that list if you are interested but those should be a couple of questions that you need to answer for yourself. We live in a fast paced world. We are bombed with info due to the phones in our pockets, so we dont want to waste time (excluding procarstination). Take tikok as an example. Short videos of whatever in an unlimited stream. And it works. There is nothing to explain, you can watch or create thats it! So maybe take a few steps back and try to get an objective view about your site and put more focus on adding value, easy fast access, straight to the point hassle free experience. Sometimes less is more..",
                "author": "isnixx",
                "score": 1
            },
            {
                "body": "Can you pm me the link please?",
                "author": "Psycork",
                "score": 1
            },
            {
                "body": "May I have a link to your forum?",
                "author": "Morguard",
                "score": 1
            },
            {
                "body": "Check out services like [Spectrum.chat](https://Spectrum.chat), they have an interesting thing going on with community-based discussion, but it seems to mostly lean towards software development. Perhaps figuring out a way to modernize the old bb forums into something like this but for all sorts of niche communities. There might even already be something like that but I'm not aware.",
                "author": null,
                "score": 1
            },
            {
                "body": "OP I'm going to be a bit blunt here. Sometimes you need to hear tough words.\n\nFor the longest time, I refused to use touchscreen phones. I hated using a touchscreen to type. Even as they were becoming the norm, I still had a Nokia N95 and a Blackberry for the longest time. Even when my provider killed off Blackberry services, I kept it for it's keyboard and small size. I used my Nokia N95 as well for work until 2016 (I'm not a luddite I had a tablet I just hated typing on a damn touchscreen)! The end finally came for me one day when I needed to use an app for work and on the same day I sent a text message to someone and that person replied back \"Yo who the fuck texts people anymore?\". And it was that day I realized that the era of small, stylishly designed phones was over and in a world of slab computers sitting in your pocket, it would never be coming back. And so, with a heavy heart, I bought an iPhone. Today I am writing this to you on a Samsung Galaxy S10.\n\nI guess what I am trying to say is this. Your forum? It's a Nokia N95 phone still sat in your pocket. Still usable today, but not what people really want any more.\n\nThe forums of the noughties and twenteens such as vBulletin board, phpBB, myBB, etc are dead and dying. They might still be actively developed software, but consolidation in social media has killed their user bases off.\n\nBut not entirely though.\n\nI think what is truly dead is the old forum style espoused by phpBB, myBB, etc. Almost all of the forum sites I am still a active member of are based on software such as Discourse, though myBB seems to be trying to adopt a new UI.\n\nBut they are still out there. They just aren't generically popular any more thanks to the fact that most people find everything they need on the main social media sites. In other words, these days a forum has to be niche. And I do mean *niche*. All the sites I am still active and participate in are very much niche. Generic interest forums sites (And OP, yours sounds very much like a generic interest site) are never going to be able to compare to the main social media sites with their centralised point of interaction, massive user numbers and ability to offer interest grouping. And lets be honest...do you really want them to? Frankly not having to keep up with several different sites when I can just follow them under the one roof is a boon to me.\n\nOP, your probably going to have to let go and accept that at some point, your forum is going to either become a Facebook group or die off. Unless you offer an area of really niche discussion or content, people are going to find what they need on Facebook, Twitter, Reddit, Discord, etc. That's just the way progress (Good or bad) goes. I feel sad for you OP, but perhaps one day, when there hasn't been a post or a user login in months, you will know it's time to turn off the proverbial lights and set the site to archive/read-only mode and let it be a collection of happy memories for you and your users to occasionally reflect on.",
                "author": "thekeffa",
                "score": 1
            },
            {
                "body": "I’ve always created a forum community all throughout my life for various purposes. Since the only purpose for my forums was creating a close community, I just moved to a private Slack these days, and it’s relatively similar. Since it sounds like you’re doing a combination of forum and game, I would probably make some sort of app as opposed to adding new features to a forum. I think people see forums and they just think it’s something old, outdated, and dead and full of spam bots, because most of them are. If you rebranded into something new I think it could be interesting and turn it around in the future.",
                "author": "floppydiskette",
                "score": 1
            },
            {
                "body": "What about front end CSS is your weakness?",
                "author": "SwankEagle",
                "score": 1
            },
            {
                "body": "I’d be down to help out.",
                "author": "kilakewe",
                "score": 1
            },
            {
                "body": "you can expand your skills into community management and building tools for things like telegram etc - it's important that you do that rather than focusing only on forums.",
                "author": "just-jake",
                "score": 1
            },
            {
                "body": "If it's open source, why the secrecy of PMs? Why not just link to the source?",
                "author": "nermid",
                "score": 1
            },
            {
                "body": "Experienced the same couple years ago a phpbb2 built forum. Had games too, forum currency,  betting section,... Then friends moved, got married, lost interest... The only regret I have is not making a nostalgia backup before closing it down...",
                "author": "stefaanvd",
                "score": 1
            },
            {
                "body": "Well I used to use forums too but they're just old technology these days.  Reddit more or less replaced them. The only thing they're good for these days are communities for products in a controlled environment",
                "author": null,
                "score": 1
            },
            {
                "body": "Hi u/jaredNC\n\nI'm going to ask you to suspend reality for a moment, and ask you to remove your 'webdev' hat and slide a 'CEO' nameplate onto your desk.  \n\nHere are some questions to ask yourself as chief executive of your community:\n\n1. Do you offer domain expertise in something that is unique, compelling, comprehensive, or indispensable to the world?  What authoritative content do you offer that will bring in new users? \n2. What is your competitive context, and how well do you benchmark against others?\n3. Most importantly, what is your community objective and tactics?  What is your new member onboarding process? How do you identify superusers? When was the last time you audited your guest experience? What are you trying to accomplish with your community?  \n\n&#x200B;\n\nThese are the tough, challenging, and fundamental questions that forum administrators need to ask themselves nowadays and execute on.  Ten years ago, you could build a forum and the world would come.  The web has grown up, Facebook has vacuumed up social chatter, and forums that continue to offer low-quality, social chatter will naturally die.  Forums of general, social, lifestyle chatter won't be able to compete against the machine learning, cloud platform of social networks.  \n\nI wish you well from one forum admin to another.",
                "author": "joelrangelle",
                "score": 1
            },
            {
                "body": "r/communitymanager",
                "author": "HistorianCM",
                "score": 1
            },
            {
                "body": "I would start fresh and build a new product. Yes, it's a pain in the ass but after a certain time it's time to let old technology go. Not just for technology's sake but because new technology is more capable. 2010 to now, it's long enough. If the product was growing or even stable I would say don't touch it but if it's declining then it's time to make a change.\n\nThere was a forum I thought was interesting years ago, NodeBB. Perhaps you could take a look at NodeJS and a React frontend.\n\nForums aren't dead you just have to tweak them for this social media upvote downvote Trump troll age. For example. It's pretty easy to get millions of users, just declare your forum open season let anyone post anything with no moderation. Of course for moral and other reasons we don't want to do that, so tighten the rules a bit. Forums also seem to follow the inevitable cycle of getting \"corporatised\" to the point that ads product placements upsells and community engagement goes down the drain. When this happens the users move onto another forum and that creates an opening. There's also lots of new technologies like WebRTC, websockets, web assembly and so on to build off of.\n\nMore is less, see if you can rebuild and tailor your forum to a specific purpose and specific community. In the end the features don't matter content is king to a forum so there's always an opening for a new entrant who's feature light and has lots of good content. Perhaps your forums die off because you add too many features. A forum that attracts people who like to thumbs up and thumbs down is different than a forum that attracts people who like to anonymously clap (medium) and is different from a real time forum.\n\nGood luck",
                "author": "bhldev",
                "score": 1
            },
            {
                "body": "Long sign-ups forms are definitely a thing I don't miss.",
                "author": "Sw429",
                "score": 1
            },
            {
                "body": "For many years we had things public and we tried pushing content like blogs or compiling interesting news articles. We tried streaming video games and making clans on specific games or on steam. I can count the number of people who \"stumbled upon the website accidentally\" and stuck around on one hand.\n\nAll of our active members have been through referral or through large events like another set of forums being shut down and the users having no home. At some point we decided to close off the website to guests to have more privacy. Anyone can register an account and get instant access to everything, but this way Google crawlers don't document everything for potential HR workers to find when someone is applying for a job.\n\nI'll certainly make a lot more of the content guest visible before the Showoff Saturday though, as now there's a reason again to make it more public.",
                "author": "jaredNC",
                "score": 1
            },
            {
                "body": "You could search on Google, or AltaVista before that, or on Yahoo! before that. Maybe you were in a Usenet group. Maybe you had a Geocities site and found a related site using a GeoGuide (a banner you could submit to direct users to your site). Maybe you joined a webring and found a related forum that way.",
                "author": "TexasWithADollarsign",
                "score": 1
            },
            {
                "body": "I usually come across forums whenever I do research for working on cars.",
                "author": "Eightball007",
                "score": 1
            },
            {
                "body": "Everything. I'm not artistic, I'm bad with colors, and especially working inside vbulletin my entire experience with CSS has been trying to figure out how to override things to make a custom page look halfway readable.",
                "author": "jaredNC",
                "score": 1
            },
            {
                "body": "The open source \"Capitalism MMO\" is a future project I want to start. I will share a link to the github repository as soon as it is started. Right now its just an idea.\n\nThe other stuff (forums, games built ontop of forums) can't be fully open sourced because vbulletin is a paid commercial software. The Pokemon module is mostly my own code, so I do have a github repository for that. I'll share it next weekend for Showoff Saturday, along with a long writeup about the game and how it works.",
                "author": "jaredNC",
                "score": 1
            },
            {
                "body": "> All of our active members have been through referral or through large events like another set of forums being shut down and the users having no home.\n\nExactly what I expected. Your entire growth has been based on the premise of word-of-month recruitment working. Now you have a lot more advanced technology and an abundance of \"modern\" forums to compete with. \n\nYou either need to motivate your existing users to recruit new members more often or need to give new people an elevator pitch as to why they should join. (and a way to find them /SEO)\n\n> At some point we decided to close off the website to guests to have more privacy. \n\nYou could choose which sub-forums are open to public and leave the more private ones private.\n\n> but this way Google crawlers don't document everything for potential HR workers to find when someone is applying for a job.\n\nPeople should know not to use their real names or easily identifiable info on a forum... But I get the point.",
                "author": "grapefruyt",
                "score": 1
            },
            {
                "body": "Closing the forums? That’s where you became a small club for existing members.\n\nHalf of my traffic comes from Google searches.",
                "author": "iScooter",
                "score": 1
            },
            {
                "body": "It's like <$10/mo for our forum hosting. The rest is a virtual dedicated server for hosting our game server. This is compared our bills 5+ years ago being $150+/mo that ran our game server.. now that was overpriced for what we needed..",
                "author": "Genesis2001",
                "score": 1
            },
            {
                "body": "Unfortunately traffic is not low. The site has huge traffic, but I work for a fortune 150 company and the site is no longer “on brand”.",
                "author": null,
                "score": 1
            },
            {
                "body": "Thanks, your post is really good too and the responses made me feel less alone. Funny how many people are in the same spot.\n\n>I just want to keep the archives open forever and it would be nice to let a small community of old schoolers keep enjoying the blast to the past.\n\nYeah I am a bit of a data hoarder and our forums are very RP based so there's years of posts you could fill multiple books with. I had a lot of my favorite sites shut down when I was a kid and it was honestly kind of traumatizing to have all your work just gone like that.\n\nHowever, I think eventually it becomes infeasible to keep the forum open to posts and registration. Just keeping up with security updates and spam bots is very difficult for me and I can't imagine it being worth it for another ten years with so few people posting. Or honestly if something happened to me it might be gone forever. I also just would like to move on to something new I think sometimes holding on to the past can be unhealthy.\n\nI am looking into removing our registration restriction for reading (general) posts (so sites like Archive.org can index it) or setting up a bot to crawl our site then just sticking it on GitHub or something as a static archive and then creating a Discord where old members can meetup. Probably export the email list too or something.\n\nI want to find a way to preserve the whole site in a downloadable VM or repo something too but it's tricky to host that publicly since it might contain personal information, private messages, password hashes, etc etc that are pretty difficult to strip out. I might just keep that archive private or something in case anyone really wants to revisit it I could host it again.",
                "author": "otw",
                "score": 1
            },
            {
                "body": "He’s literally talking about an economy, voting, currency, etc.  It’s an undertaking for sure.",
                "author": "oojacoboo",
                "score": 1
            },
            {
                "body": "Oh yeah game servers can be expensive still especially for older inefficient single threaded games. The pricing really hasn't scaled much there.",
                "author": "otw",
                "score": 1
            },
            {
                "body": "Well, looks like it may be time to start archiving.",
                "author": "NaruTheBlackSwan",
                "score": 1
            },
            {
                "body": "You could probably set it up as a read only archive on AWS for a few bucks a year.",
                "author": "jaredNC",
                "score": 1
            },
            {
                "body": "Yeah so I don't really understand your point, what would be the gain of all that work just to be blockchain for no reason?",
                "author": "otw",
                "score": 1
            },
            {
                "body": "Over 5 years ago, when we had those huge servers, we ran other types of game servers, but now we've consolidated to just a single type and host 4-6 on a single, small VDS for like $20/mo (+$10 or so for Windows license).\n\nI just checked and our total server bills are actually $40/mo with an additional $15/mo in distributed domain costs (annual price divided by 12) and forum licensing ($50/6-months).\n\n**edit:** grammar",
                "author": "Genesis2001",
                "score": 1
            },
            {
                "body": "Decentralizing currency and governance within an economy and distributed community is literally one of the main benefits of platforms like EOS.  There are a number of projects that have done exactly this.",
                "author": "oojacoboo",
                "score": 1
            },
            {
                "body": "Vbulletin 4. I think there was some general vbulletin mobile app, but because of my heavy code modifications it wouldn't work or would break some things, like the \"anonymous\" forum section.",
                "author": "jaredNC",
                "score": 1
            },
            {
                "body": "What forum cost a licensing fee just curious?",
                "author": "otw",
                "score": 1
            },
            {
                "body": "Yeah but I mean he doesn't have a problem with anything decentralization could solve or anything he has a problem with forum activity. I also think in general blockchain would be a way too heavy solution for a small little forum.",
                "author": "otw",
                "score": 1
            },
            {
                "body": "When I google something I’ll often but ‘reddit’ on the end and the first result usually is what I needed and then I can save it to my account, very handy.",
                "author": "DriveByFruitings",
                "score": 1
            },
            {
                "body": "We use Invision because it's what we've always used, and we like it. The licensing is just paying for support and updates for 6 months.",
                "author": "Genesis2001",
                "score": 1
            },
            {
                "body": "People care about decentralized solutions, millions of people.  That’s a market of potential users.  So, while I get your point, I completely disagree.\n\nAlso, the traditional forum format sucks.  That’s partly why people don’t use it much anymore.  There are far more efficient ways to consume data and have conversations.\n\nA forum is a community.  That’s what matters.  Traditional forum software should be entirely irrelevant to the objective, providing tools for a community to thrive.",
                "author": "oojacoboo",
                "score": 1
            },
            {
                "body": "I am a huge fan of blockchain and decentralization, don't get me wrong. But I've been in the community since 2010 or so and there's just too many \"put this on blockchain for no reason\" ideas. Blockchain adds a TON of overhead to programming and performance, it is not a good solution unless you have some amazing benefit from it.\n\nIf you have a forum that needs to be run democratically and have no single central figure, then maybe. If the forum is extremely controversial or risks being shut down, then maybe. These guys niche community does not need blockchain.",
                "author": "otw",
                "score": 1
            },
            {
                "body": "I have no idea on what community it is.  I didn’t see that mentioned.\n\nI agree we don’t need a blockchain for everything either.\n\nI also know if you have a traditional forum and that’s it, you’re done.  It was an idea/angle that’d allow tapping into a very eager market of potential users.  Whether or not it truly makes sense would depend on a lot more information than we have in this thread.",
                "author": "oojacoboo",
                "score": 1
            },
            {
                "body": "You're kind of talking about it like it's some business, a traditional forum might be done in a money sense but I think there's still niche communities who like them.",
                "author": "otw",
                "score": 1
            },
            {
                "body": "\nIf you or someone you know is contemplating suicide, please reach out. You can find help at a National Suicide Prevention Lifeline\n\nUSA: 18002738255\nUS Crisis textline: 741741 text HOME\n\nUnited Kingdom: 116 123\n\nTrans Lifeline (877-565-8860)\n\nOthers: https://en.wikipedia.org/wiki/List_of_suicide_crisis_lines\n\nhttps://suicidepreventionlifeline.org",
                "author": "hotlinehelpbot",
                "score": -23
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1692430846.0,
        "title": "Me and my son created an online retro video games shop and a FREE CMS as a consequence",
        "author": "hendrixstring",
        "id": "15v9m9v",
        "selftext": "My 17 years old son, Daniel, is an avid retro video games collector.\n\nHe has been selling and collecting his games on marketplaces.\n\nLast year, he decided to create an online store. \nSo, he started looking into commerce platforms and found it hard to get started (with Wix/Shopify/WordPress). They were also pricy for his budget (He is only a teenager).\n\nI decided to help him, so I created a website prototype and a commerce system on top of Firebase generous Free Tier. We named the software `SHELF`\n\n[https://www.shelf-cms.io/](https://www.shelf-cms.io/)\n\nOur software is **FREE Forever** and his online shop [https://wush.games](https://wush.games) costs us less than 1$ a year and uses Shelf CMS.\n\nWe use:\n\n- Firebase **Firestore** database,\n- **Firebase Authentication**\n- **Cloudflare R2** for images and collection storing (The most generous object storage)\n- **Google Functions** for checkout and payment processing\n\n`SHELF` is packed with many goodies:\n\n- 5 types of discounts\n- Open source and secure light backend (Google Functions)\n- Image editor and Gallery\n- JSON view for developers\n- Product Variants\n- Mobile friendly and really many more features\n\nWe also created a cool Docs site to educate people of all kinds about E-Commerce, which you can find at [https://shelf-cms.io/docs](https://shelf-cms.io/docs)\n\nIt is **FREE FOREVER**. We want to help other developers get started with e-commerce. But, we need your help with visibility and here is how you can help:\n\nShare the project with people, that may benefit from it\n\nStar any of the repos at [https://github.com/orgs/shelf-cms/repositories](https://github.com/orgs/shelf-cms/repositories)\n\nFor this who wonder, the front-end tech stack:\n- `NextJS` - for managing pages\n- ReactRouter - for routing the single page application\n- `ReactJS` - for UX/UI\n- `TailwindCSS` - for styling the html\n- `Node.js` - for some backend functions",
        "score": 292,
        "url": "https://www.reddit.com/r/webdev/comments/15v9m9v/me_and_my_son_created_an_online_retro_video_games/",
        "num_comments": 62,
        "comments": [
            {
                "body": "Strong contender for dad of the year!",
                "author": "sesseissix",
                "score": 111
            },
            {
                "body": "I posted it few days ago and the mod said that only Sauterday is allowed for showing projects. So this is why friend",
                "author": "hendrixstring",
                "score": 31
            },
            {
                "body": "Isn't it against rules to self promote spam? I feel like I've seen this post several times the last few days.",
                "author": "rickyhatespeas",
                "score": 27
            },
            {
                "body": "Not self promotion spam? cause this was you one month ago.\n\n>Hey guys. I have a question.\n\n>Why would I use Shopify if I can use shelf-cms with firebase for free ?\n\n>It literally costs nothing, less than a 1$ per year for firebase fees.\n\n\nhttps://www.reddit.com/r/shopifyDev/comments/154qi73/really_struggling_here_on_why_to_use_shopify/",
                "author": "PrettyPinkPansi",
                "score": 26
            },
            {
                "body": "Why does this keep getting posted?",
                "author": "rapidjingle",
                "score": 20
            },
            {
                "body": "Looks amazing. Will give it a go on my mext e-commerce project",
                "author": "myfacewhen-_-",
                "score": 19
            },
            {
                "body": "/r/daddit worthy indeed 🤩",
                "author": "AccordingRoutine9850",
                "score": 16
            },
            {
                "body": "Your entire account seems to be based around elf promotion and then you defending yourself about self promotion.\n\nI would definitely call that spam.",
                "author": "nubbins4lyfe",
                "score": 16
            },
            {
                "body": "You're correct. It's been posted here at least 3 times, looking at his history. At least a dozen times across various other subs as well. OP is also spam promoting other projects as well.",
                "author": "Fig_Bucking_Fella",
                "score": 15
            },
            {
                "body": "Thank you, I appreciate it",
                "author": "hendrixstring",
                "score": 14
            },
            {
                "body": "That’s fair! Good luck with your projects!",
                "author": "rapidjingle",
                "score": 12
            },
            {
                "body": "It also sounds much better if you make the sale as \"me and my son\" because it reaches that \"comfy family\" zone.",
                "author": null,
                "score": 10
            },
            {
                "body": "You didn't even answer the question LMAO 😂",
                "author": "ysmsb",
                "score": 9
            },
            {
                "body": "Isn't WooCommerce free?",
                "author": "nelsonbestcateu",
                "score": 8
            },
            {
                "body": "Thank you for the kind comment.\n\nI appreciate it",
                "author": "hendrixstring",
                "score": 8
            },
            {
                "body": "Exactly, this person was talking about ads, you still haven't said anything useful...",
                "author": "ysmsb",
                "score": 7
            },
            {
                "body": "Wait... the other pre-built platforms were too hard to get started but building a whole new headless platform wasn't?  Smells fishy.",
                "author": "andyhast81",
                "score": 6
            },
            {
                "body": "Yeah man. Your boy can consider himself lucky.\n\nReading this gave me wholesome vibes.",
                "author": "Bottlefistfucker",
                "score": 6
            },
            {
                "body": "Almost sounds too good to be true after the shit I’ve been dealing with on shopify haha, I do have a question though how does your cms integrate with say google ads, meta ads, tiktok ads, google analytics.\n\nShopify makes it super easy to do all that cos it’s big enough to the point where the providers allow some integration and it auto populates all the ads and stuff for you so I’m worried if I swap to your CMS id have to do that manually which I do not want to do for hundreds of products manually",
                "author": "Sakatard",
                "score": 4
            },
            {
                "body": "Yeah, please do\n\nand tell me how it went",
                "author": "hendrixstring",
                "score": 4
            },
            {
                "body": "How much .io domain cost you?\n\nThat must be costly.\n\nStill a top notch project :)",
                "author": "Aggravating_Page435",
                "score": 3
            },
            {
                "body": "I believe it is. \n\nBut, I don't have working knowledge with PHP",
                "author": "hendrixstring",
                "score": 3
            },
            {
                "body": "Thank you.\n\nIt costs around 17 bucks a year.\n\nI had a discount so I bought it.",
                "author": "hendrixstring",
                "score": 3
            },
            {
                "body": "Would love you to try it out\n\nand tell me how it went !!!",
                "author": "hendrixstring",
                "score": 3
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 3
            },
            {
                "body": "He did between the lines :) ..,",
                "author": "derAres",
                "score": 3
            },
            {
                "body": "Very cool.\n\nI may just be missing it, but what service/tools did you use for your docs? Love the design.",
                "author": "pancakeses",
                "score": 2
            },
            {
                "body": "Documentation is simple and impressive , like it.",
                "author": "salmanoushad",
                "score": 2
            },
            {
                "body": "Looks awesome! I might give it a shot for a comic book shop I’ve been meaning to setup. Cheers!",
                "author": "Bythegram_bot",
                "score": 2
            },
            {
                "body": "Thank you very much.\n\nI am really enthusiastic about documentation.\n\nThank you for the feedback.",
                "author": "hendrixstring",
                "score": 2
            },
            {
                "body": "תודה חבר",
                "author": "hendrixstring",
                "score": 2
            },
            {
                "body": "Cool man, \n\nWould love to see what you make of it",
                "author": "hendrixstring",
                "score": 2
            },
            {
                "body": "Thank you programmer friend.\n\n\\- Usage stats:\n\nA bit background about users behavior.\n\nMost users will browse collection of products with paging, but will not \n\nenter the product page that often.\n\nSo\n\n\\- you want to serve from the database in product page,\n\n\\- You want to export collection of products into json stored in a less expensive storage such as Google Firebase Storage, or Cloudflare R2 (Recommended, no traffic fees)\n\nWe pay 0 dollars because we use R2 for storage,\n\nAlso, we never seem to go above 50k requests in Firestore,\n\ntherefore we pay 0\n\n&#x200B;\n\nWe are using NextJS, but not that much. Our app is a single page application, for which ReactRouter works amazingly well.\n\nWe use NextJS more for the building and we have another route for docs and it helps.\n\n&#x200B;\n\nWe use Firebase function with Node.js to listen to events, send emails, doing checkout and payments with PayPal (you can roll your own gateway)\n\nUsually, your functions will be the least invoked component of your commerce app.\n\nWe pat Google few cents per month just for keeping the functions in their cloud.\n\n&#x200B;\n\nI hope I answered, but if I wasn't clear, please ask more",
                "author": "hendrixstring",
                "score": 2
            },
            {
                "body": "he is our son, mutually",
                "author": "hendrixstring",
                "score": 2
            },
            {
                "body": "Thank you, it is very kind of you",
                "author": "hendrixstring",
                "score": 2
            },
            {
                "body": "Thanks\n\nI hope it will help you to accomplish things",
                "author": "hendrixstring",
                "score": 2
            },
            {
                "body": "I've been looking for a lightweight CMS. Will definitely check this out.",
                "author": "mrcncpt",
                "score": 1
            },
            {
                "body": "מרשים מאוד. כל הכבוד!",
                "author": "draxter",
                "score": 1
            },
            {
                "body": "Thanks. I need to work on such a website project soon so this might help me",
                "author": "SnooKiwis5050",
                "score": 1
            },
            {
                "body": "Good job. I would like to try this.  \n\n\nThat's great. Can you share the usage stats for firebase (curious to know more about $1 billing).  \n\n\nWhy do you use ReactRouter and React explicitly, because NextJS has page based routing and also it uses React JS and supports JSX?   \nAnd also I guess by NodeJS functions you mean the NextJS inbuilt support for API?",
                "author": "-programmer_",
                "score": 1
            },
            {
                "body": "to be clear, your son or your wife's son?",
                "author": "blancorey",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "So cool to do projects like this with your son, and it looks great!! Well done and all the best!",
                "author": "bawjawz5",
                "score": 1
            },
            {
                "body": "We were drawn yo building it one feature at a time.\n\nIt really helped us to reduce costs",
                "author": "hendrixstring",
                "score": 1
            },
            {
                "body": "It is English.\n\nWhat do you mean ?",
                "author": "hendrixstring",
                "score": 1
            },
            {
                "body": "Yeahhh, would love you to try it out",
                "author": "hendrixstring",
                "score": 1
            },
            {
                "body": "Thank you.\n\nIt was a rough and long road, but we did it",
                "author": "hendrixstring",
                "score": 1
            },
            {
                "body": "yes",
                "author": "potatodioxide",
                "score": 1
            },
            {
                "body": "will share when done 👍",
                "author": "SnooKiwis5050",
                "score": 1
            },
            {
                "body": "Thanks for taking time to write such a long response. Let me explore it. I'll get back to you with further question :)",
                "author": "-programmer_",
                "score": 1
            },
            {
                "body": "Thank you, SnooKiwis5050, for voting on SokkaHaikuBot.\n\nThis bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/).\n\n***\n\n^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)",
                "author": "B0tRank",
                "score": 1
            },
            {
                "body": "Oh yes friend,\n\nWe want to make an english version for the store as well. As soon as my son will understand how to ship packages securely worldwide.",
                "author": "hendrixstring",
                "score": 1
            },
            {
                "body": "Hi, thanks.\n\nFor the docs I used MDX format,\n\nYou can fork another repo I wrote to achieve the same thing\n\n[https://github.com/micro-gl/micro-gl.github.io](https://github.com/micro-gl/micro-gl.github.io)\n\n&#x200B;\n\nIf you have any questions, i would love to help",
                "author": "hendrixstring",
                "score": 0
            },
            {
                "body": "Yeahhhh,\n\nI will be glad if you would.\n\nTell me how it went",
                "author": "hendrixstring",
                "score": 0
            },
            {
                "body": "^[Sokka-Haiku](https://www.reddit.com/r/SokkaHaikuBot/comments/15kyv9r/what_is_a_sokka_haiku/?utm_source=share&utm_medium=web2x&context=3) ^by ^SnooKiwis5050:\n\n*Thanks. I need to work*\n\n*On such a website project*\n\n*Soon so this might help me*\n\n---\n^Remember ^that ^one ^time ^Sokka ^accidentally ^used ^an ^extra ^syllable ^in ^that ^Haiku ^Battle ^in ^Ba ^Sing ^Se? ^That ^was ^a ^Sokka ^Haiku ^and ^you ^just ^made ^one.",
                "author": "SokkaHaikuBot",
                "score": 0
            },
            {
                "body": "Good bot",
                "author": "SnooKiwis5050",
                "score": 0
            },
            {
                "body": "Well, every 3 years I get to build something that excites me,\n\nand then it usually sits in the drawer.\n\nAnd sometimes, months later, I will get some motivation to share it.\n\nReally, not more than this.\n\nAll of my projects are free and usually open source",
                "author": "hendrixstring",
                "score": 0
            },
            {
                "body": "What i meant to say, that it is very hackable in the positive way.\n\nYou can write scripts and bots to automate most of the things you need using Firebase credentials",
                "author": "hendrixstring",
                "score": -3
            },
            {
                "body": "I have already came up with a plan to make this CMS extendible so other people can write their own apps around it.",
                "author": "hendrixstring",
                "score": -4
            },
            {
                "body": "Yes,  I tried a month ago.\n\nI truly want to share this with people.",
                "author": "hendrixstring",
                "score": -4
            },
            {
                "body": "This is not spam.\n\nI posted it a few days ago, but did not realize, that it is only allowed at Saturday.",
                "author": "hendrixstring",
                "score": -8
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1759762196.0,
        "title": "UI/UX designer + backend dev starting to build simple websites — need guidance on hosting, updates, and maintenance",
        "author": "Away_Rich1183",
        "id": "1nzl624",
        "selftext": "#    I’m a UI/UX designer, and my friend is a backend developer with limited frontend experience. We’ve decided to start creating fairly simple websites together (small business pages, portfolios, etc.), but we’re a bit unsure about the practical side of things.\n\nWe’d love some guidance on a few key points:\n\n* Who usually handles **hosting and domain setup** — the developers or the client?\n* Can we **host and manage updates** ourselves (and if so, what’s a good setup for that)?\n* What’s the best workflow for **deploying and maintaining** simple websites without overcomplicating things?\n* Are there modern, lightweight tools or platforms you’d recommend for small projects?\n\nBasically, we want to understand how small web studios or freelancer teams usually manage these aspects.  \nAny advice, personal experience, or resource links would be greatly appreciated!\n\nThanks in advance 🙏",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1nzl624/uiux_designer_backend_dev_starting_to_build/",
        "num_comments": 10,
        "comments": [
            {
                "body": ">Who usually handles **hosting and domain setup**\n\nIt depends on the client and their needs, but it's best to assume you'll always the be the one taking care of that and charging them accordingly. I do so in my business.\n\n>Can we **host and manage updates** ourselves (and if so, what’s a good setup for that)?\n\nShouldn't your backend developer know this? You certainly can do that and it depends on what you stipulate in your contract.\n\n>What’s the best workflow for **deploying and maintaining** simple websites without overcomplicating things?\n\nDifficult to tell as it's dependent on your tech stack and your client's budget. You certainly won't be having any workflow for a WordPress site if that's all the client can afford.\n\n>Are there modern, lightweight tools or platforms you’d recommend for small projects?\n\nDefine small. Is that a budget of, say 3k, or 30k?",
                "author": "BionicGuy",
                "score": 3
            },
            {
                "body": "Ok so Im a 23yo guy who graduated graphic design, but always wanted to work as an UI/UX and the friend is 20yo and he still studies in uni, we want ti start our business, but we don’t know how. We need some kind of advice. Every suggestions is welcomed. Thank you in advance💚",
                "author": "Away_Rich1183",
                "score": 2
            },
            {
                "body": "Front end/full stack but also sales and marketing interested guy here:) wanna team up and split the proceeds? ",
                "author": "Gnoob91",
                "score": 1
            },
            {
                "body": "bulgarian?",
                "author": "Away_Rich1183",
                "score": 1
            },
            {
                "body": "Sure, happy to help :) I would say, find your clients first, then worry about the rest. Most people learn on the go, and you'll learn that the technical side of creating the website is only a small part of the whole equation.\n\nIf I were in your shoes, I'd ask yourself who your target audience is. Do you want to create websites with elaborate designs and functionality, or focus more on low-budget sites that use UI templates?",
                "author": "BionicGuy",
                "score": 1
            },
            {
                "body": "Yup, that’s where I was spawned",
                "author": "Gnoob91",
                "score": 1
            },
            {
                "body": "Yeah, i found the first 2 clients, and they both want a simple site for their busynesses. So now i need help",
                "author": "Away_Rich1183",
                "score": 1
            },
            {
                "body": "Great! Once you know what their requirements are, you gotta find out their budget (or suggest multiple pricings) and decide from there how to build a website that fits into their budget.",
                "author": "BionicGuy",
                "score": 1
            },
            {
                "body": "So if your in a rush to close the clients, check out [SIFO](https://app.sifo.ai) , you can build their site and any client site on there fast AF and deploy in one click, theres domains too.",
                "author": "Jean-G",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757495000.0,
        "title": "How can developers efficiently use headless CMS systems for scalable content management in modern web apps?",
        "author": "Wash-Fair",
        "id": "1nd94rh",
        "selftext": "A headless CMS lets you manage content separately from your website design. That means editors can update stuff anytime, while developers build cool frontends with any tools they want. Content is shared via APIs, so sites load faster and work well on all devices, from phones to smart TVs. It’s great for scaling and reusing content without repeating work.\n\nWhat’s been your experience using headless CMS so far? Any favorite platforms or challenges?",
        "score": 6,
        "url": "https://www.reddit.com/r/webdev/comments/1nd94rh/how_can_developers_efficiently_use_headless_cms/",
        "num_comments": 13,
        "comments": [
            {
                "body": "I’ve used a couple of headless CMS setups, Payload and Strapi mostly. The biggest win is how easy it makes scaling when you’ve got multiple frontends pulling from the same content source (website + mobile app + maybe even a kiosk display). Editors get a clean UI to manage things, and devs don’t have to worry about breaking layouts.\n\nThe challenge for me has been figuring out permissions/roles and sometimes the learning curve of customizing deeply (especially with Strapi). But once the structure’s in place, it’s super efficient.",
                "author": "Soft_Opening_1364",
                "score": 12
            },
            {
                "body": "What you describe is very rare best case scenario. The reality is that a headless CMS is configured to have tailored content structures for the designed frontend - and someone had to code that and any change, new content structure would have to be coded as well. Having async requests on a website may give good scores on lighthouse but content loads way after the page itself.\n\nWhen all of this isn't needed or there are no money for it a simple Wordpress or blog-as-a-service will be way better solution.",
                "author": "riklaunim",
                "score": 4
            },
            {
                "body": "You're describing a scenario where content is pulled from a headless cms asynchronously into a web page. This is not how people are generally using headless setups. It's a combination of static rendering and dynamic server rendering.\n\n\nYou are right about the content structure and front end coupling though. What can happen is that people end up writing components to match the shape of the data structure coming out of the CMS, when they should be more agnostic general purpose components. The way to think about this scenario is \"what would happen to the front end stack if we had to switch to a different data source tomorrow\" and let that guide the process. ",
                "author": "Lord_Xenu",
                "score": 4
            },
            {
                "body": "I started just fiddling with them and now I’m a contentful certified specialist. So, yeah, I like them very much. But don’t fool yourself: it’s A lot of custom components and tailoring the code to make everything work",
                "author": "qagir",
                "score": 3
            },
            {
                "body": "It will quickly reveal which of your developers understand CSS and which do not. As content changes, does the page shrink and grow appropriately, or does it break? \n\nAlso, as we move towards static site generation, make sure you set up webhooks to trigger a fresh deployment when new content is published. \n\nA headless CMS is a bit of a PITA for a smaller company just trying to manage a single website, but if you have one set of content being deployed to many mediums, it’s a lifesaver.",
                "author": "phoenix1984",
                "score": 3
            },
            {
                "body": "u/Lord_Xenu That’s a solid point. I have seen teams run into trouble by tightly coupling components to a CMS schema. Designing agnostic components makes it way easier to swap data sources later without breaking the frontend.",
                "author": "Double_Try1322",
                "score": 2
            },
            {
                "body": "Yep, I don't think I said anything like that! ",
                "author": "Lord_Xenu",
                "score": 2
            },
            {
                "body": "Referring to OP claims :)",
                "author": "riklaunim",
                "score": 2
            },
            {
                "body": "My challenge has been indexing. Once you get over a certain amount of content searching for it gets really slow. Webiny CMS is good with that because it has elastic search (via AWS OpenSearch) built in so it’s pretty fast.",
                "author": "endymion1818-1819",
                "score": 1
            },
            {
                "body": "Used it on a client's site once. Their site went down when the service went down.\n\nIt's not hard to build out a CMS within a site's admin interface, it's a solved problem for decades.\n\nYou can build out the API to directly access it via desktop and mobile apps as well.",
                "author": "rjhancock",
                "score": 1
            },
            {
                "body": "I have been a back end dev (rails) for… god 14 years now… but my job involves a lot of microsites, so when I need to spin something up quick, I’ve been turning to something like Sanity and Astro in lieu of building out a whole backend or otherwise homespinning it. I find that that combo greases the wheels substantially, and more often than not most use cases fall easily into a free account tier and can be hosted on Cloudflare for free after the fact. It means I can bust work out super fast, and the folks I work with who end up using the apps as editors are happy because the backends are consistent and familiar.\n\nI’m also experimenting with using a very large and long running Wordpress site as a headless cms with Astro. This is in my free time since it’s a friend’s site and I’m happy to advise them when plugins inevitably collide and break but its so disruptive that I figured it was worth a spike to see if it could have all the benefits of legacy articles and editor familiarity without dealing with Wordpress and its wild west plugin ecosystem as the rendering layer.",
                "author": "tumes",
                "score": 1
            },
            {
                "body": "You can use a SSG or other setup but it also has to be tailor-coded and is not some paradise of add anything anytime or make the frontend magically work on \"all devices\".",
                "author": "riklaunim",
                "score": 1
            },
            {
                "body": "This kind of technical debt happens a lot in move-fast/noob teams.",
                "author": "Lord_Xenu",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757674283.0,
        "title": "Project management for updating content?",
        "author": "FridaG",
        "id": "1nezyzf",
        "selftext": "Wondering if anyone has some advice about their approach to managing content updates across many pages?\n\nThe issue i have run into again and again is that businesses/stakeholders generate an endless back-and-fourth email chain of various page updates. On the flip side, devs generally want to use a platform like basecamp that stakeholders don’t want to use.\n\nIs there a good way that anyone has come up with to manage before vs after page content updates? \n\n- A spreadsheet does’t work well because there is too much content for a cell. \n- airtable (and other no-code relational dbs like seatable, nocodb, and baserow) are better and support a more robust project management architecture that non-technical people understand, except there is still the problem of actually formatting the list up content updates in a way that is efficient to interpret and act on. \n\nIt’s almost as if some combo of craft docs’ block links + notion tables + airtable would be the ideal solution.\n\nAsking here because i imagine many web devs have a decent solution, whereas the project management sub tends to be more focused on apps like clickup, monday.com, and 10,000 “let me show you my half-built app on github”\n\nThanks!!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1nezyzf/project_management_for_updating_content/",
        "num_comments": 12,
        "comments": [
            {
                "body": "Yes, i actually have tried to solve this problem recently by building into the headless cms.\n\nIn the specific case i am asking about, it’s just a standard CMS that i didn’t build; i was asked to do the project because my boss knows i used to do web dev. But it was a problem i used to run into all the time where my non-technical boss at my small start up would email me content change requests every day, it was a nightmare. So i am more looking for a generalisable approach to solving this problem.",
                "author": "FridaG",
                "score": 2
            },
            {
                "body": "Interesting. Yeah. Seems like a common problem without a good solution.",
                "author": "kixxauth",
                "score": 2
            },
            {
                "body": "Yeah, we still do use it form time to time,  it we also have a api script to sync content from notion into our CMS. But we are using that less and less now",
                "author": "spuddman",
                "score": 2
            },
            {
                "body": "this is a common pain point in web development workflows. the fundamental issue is that content updates require different levels of detail and context than typical project management tools are designed for :))",
                "author": "scotchlurker",
                "score": 1
            },
            {
                "body": "What content management system are you using? I would think this problem should be solved in the content management system.",
                "author": "kixxauth",
                "score": 1
            },
            {
                "body": "If only there was some industry standard system by which a non-technical person could manage content directly without the need to involve a developer.  A Content Management System if you will.  I wonder if something like that exists.",
                "author": "_listless",
                "score": 1
            },
            {
                "body": "Have you tried using a dedicated CMS like Sanity or Strapi for this? Seems like a problem that a headless CMS would solve perfectly by giving stakeholders a simple UI to edit content without touching the code.",
                "author": "Creepy_Constant3582",
                "score": 1
            },
            {
                "body": "We handle these within our CMS, offering two options: a comment/feedback system or our custom CMS page editor. Depending on the customer, some prefer the comments system, while others don't mind going in. We work with many small businesses that use an SEO retainer. Initially, we tried sending them a link on Notion, but then we discovered that we had to revisit and update parts of the copy based on the specific block we needed to. Our process typically involves building the page, sending a draft, receiving comments, making changes, and then pushing live. We did try sending them a link on Notion first, but then we found that we had to go back and update bits of copy depending on the block we wanted to use.",
                "author": "spuddman",
                "score": 1
            },
            {
                "body": "What is your solution?",
                "author": "FridaG",
                "score": 1
            },
            {
                "body": "Lol fair",
                "author": "FridaG",
                "score": 1
            },
            {
                "body": "I did make one with strapi actually, but this specific project isn’t a CMS i had any part in making. \n\nSometimes you just need an efficient way to solve a specific and narrow problem presented to you without engineering an entirely new platform",
                "author": "FridaG",
                "score": 1
            },
            {
                "body": "Interesting, your challenges with notion are similar to the ones i imagined using that platform for content revision",
                "author": "FridaG",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1751584943.0,
        "title": "Blaze-install: A faster, more reliable alternative to npm v1.10.10",
        "author": "Apart_Competition_56",
        "id": "1lr3xzr",
        "selftext": "**Blaze-install: A faster, more reliable alternative to npm**\n\nhttps://preview.redd.it/ben7nq88tqaf1.png?width=1024&format=png&auto=webp&s=4614590a6951e6b1ad3f080bd65a467ce3de9278\n\nHey r/javascript! I’m back with an update on my package manager project, **blaze-install**.  \n*(This is my second post—my old GitHub account was closed for no reason, so I had to set up a new one. Sorry for any confusion!)*\n\n# Key features\n\n* Fast installs with parallel downloads and global caching\n* Consistent lockfiles across all platforms\n* Monorepo/workspace support with proper dependency resolution\n* Built-in security auditing and auto-fix for vulnerabilities\n* Self-healing diagnostics (`blaze doctor --fix`) to auto-repair common issues\n* Plugin system for extensibility (hooks for all major commands)\n* Works with React Native, Playwright, and other complex setups\n* Offline mode and prefetching for fully local installs\n* Interactive CLI with progress bars and colored output\n* Dependency graph visualization (`blaze graph`)\n* Full lifecycle script support\n* Peer dependency handling with auto-install prompts\n* `.blazerc` and `.npmrc` config support\n\n# Latest release highlights\n\n* Plugin system: Easily extend blaze-install with before/after hooks for all major commands. Example plugins included!\n* Offline mode (`--offline`) for cache-only installs\n* `blaze prefetch` to cache all dependencies for offline use\n* Improved self-healing and diagnostics with `blaze doctor --fix`\n* Enhanced peer dependency handling with clear warnings and auto-install prompts\n* Visual dependency graphs with `blaze graph`\n* Interactive upgrades for outdated dependencies\n* Even faster installs with parallelized network requests and metadata caching\n\n# Why I built this\n\nAfter running into platform-specific lockfile issues and spending too much time debugging workspace problems, I wanted a package manager that just works and is easy to extend.\n\n# Current status\n\n* Core functionality working\n* Test suite passing (14/14 tests)\n* Plugin system operational with example plugins included\n* Ready for community feedback\n\nI’m not here to make anyone mad or stir up negativity—I genuinely want to hear your honest feedback and learn what real developers need from a package manager. If you have constructive criticism, suggestions, or edge cases you want me to test, I’m all ears!\n\nWhat pain points do you face with current package managers?\n\n**GitHub:** [https://github.com/Nom-nom-hub/blaze-cli](https://github.com/Nom-nom-hub/blaze-cli)",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1lr3xzr/blazeinstall_a_faster_more_reliable_alternative/",
        "num_comments": 22,
        "comments": [
            {
                "body": "If this is compatible with NPM and it has clearer peer dependency resolution errors, then I'd give it a go. I really struggle when NPM yells at me about peer dependencies.",
                "author": "theScottyJam",
                "score": 3
            },
            {
                "body": "Yes, it's fully compatible with npm! You can switch back and forth seamlessly since it reads your existing package.json and .npmrc files.For peer dependencies, blaze-install gives much clearer error messages and actually prompts you to auto-install missing peers instead of just yelling at you. Instead of npm's cryptic warnings, you get actionable prompts like \"Missing peer dependency: react@\\^18.0.0 - Install it now? (y/n)\"\n\nWould love to hear how it handles your specific peer dependency issues!",
                "author": "Apart_Competition_56",
                "score": 3
            },
            {
                "body": "The github link is broken by the way.\n\nNot much opinion from me, i usually just use what everyone uses lol",
                "author": null,
                "score": 2
            },
            {
                "body": "I just tried it, but it instantly failed when trying to require a nonexistent file in your package, `../lib/index`.",
                "author": "abrahamguo",
                "score": 2
            },
            {
                "body": "Thanks for reporting the issue. The error you encountered (Cannot find module '../lib/index') was due to a recent migration in the codebase:\n\n* I moved the source files from lib/ to src/ for best practices.\n\n* The build process now compiles everything from src/ to lib/ using TypeScript.\n\n* For a short period, the published package was missing the compiled output in lib/, which caused the require error.\n\nThis has now been resolved:\n\nIf you update to the latest version, everything should work as expected. If you run into any further issues, please let me know!",
                "author": "Apart_Competition_56",
                "score": 2
            },
            {
                "body": "Great, I'll try it out next time I'm upgrading dependencies and am running into these kinds of issues.",
                "author": "theScottyJam",
                "score": 2
            },
            {
                "body": "I still see the same missing files, and get the same issue, on 1.11.0.",
                "author": "abrahamguo",
                "score": 2
            },
            {
                "body": "I now see stuff in `lib`, but not an `index` file, and so I get the same error in 1.11.1.",
                "author": "abrahamguo",
                "score": 2
            },
            {
                "body": "Cool. That is now working for me. However, the project that I want to use it in, uses packages from GitHub (i.e. that are *not* in the NPM registry). It looks like blaze fails with a 404 because it tried to look up the package on the NPM registry — and, it did not print a helpful error message — just a generic Axios 404 — so it took a bit of digging into the source code of Blaze to determine that that was the issue.",
                "author": "abrahamguo",
                "score": 2
            },
            {
                "body": "I did too lol, but I fixed the link, and I got tired of certain things, so I upgraded. want something done right do it yourself right...",
                "author": "Apart_Competition_56",
                "score": 1
            },
            {
                "body": "might find some reason to use here: [blaze-install – The Fastest Node.js Installer](https://nom-nom-hub.github.io/blaze-cli/)",
                "author": "Apart_Competition_56",
                "score": 1
            },
            {
                "body": "Cool shoot me some feedback when the time comes and thanks for considering ✔️",
                "author": "Apart_Competition_56",
                "score": 1
            },
            {
                "body": "just released v1.11.1",
                "author": "Apart_Competition_56",
                "score": 1
            },
            {
                "body": "literally just fixed it...",
                "author": "Apart_Competition_56",
                "score": 1
            },
            {
                "body": "Thanks for the feedback!We’ve just added full support for GitHub and tarball installs in Blaze, with clear error messages and private repo support. You can now use specs like user/repo, user/repo#branch, or direct tarball URLs, and Blaze will handle them natively (no more npm 404s or generic errors). Check the latest version and README for details!",
                "author": "Apart_Competition_56",
                "score": 1
            },
            {
                "body": "I just tried it! However, a couple things I noticed:\n\n* My projects use private GitHub packages. When I simply list the package in my `package.json`, NPM is able to detect my OS SSH key to download the repo from GitHub (the same as if I cloned the repo), but Blaze says that it cannot find the repo, so I still can't install my dependencies.\n* Blaze also causes the following deprecation warning to be printed in my terminal:\n\n&#8203;\n\n    (node:80309) [DEP0190] DeprecationWarning: Passing args to a child process with shell option true can lead to security vulnerabilities, as the arguments are not escaped, only concatenated.",
                "author": "abrahamguo",
                "score": 1
            },
            {
                "body": "Looking into it now... I report back here soon",
                "author": "Apart_Competition_56",
                "score": 1
            },
            {
                "body": "Fixed! v1.11.6",
                "author": "Apart_Competition_56",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1756822513.0,
        "title": "Webdev gurus - your advice needed on managing a backend database with front-end searchability",
        "author": "AmelieRennard",
        "id": "1n6knrl",
        "selftext": "Hello all, I hoped you could help me understand the best options for how to best manage a database that has frontend searchability.\n\nWe currently host on WordPress and have a database of individuals of varying skills and experience. We manage the data in the backend of WordPress whilst using the plugin Search & Filter Pro to manage the frontend search capabilities.\n\nRecently my business has been talking about moving the data to a Workday module and building an API to populate the backend of the site. This seemed to make sense as it may be possible to pre-fill certain details about individuals featuring on the site, except I've been told we won't actually be using any existing Workday data to populate fields...\n\nThese leaves me honestly struggling to understand why they are wanting to do this, as there is nothing overly complex about the data we hold. It's sort of like an B2B e-commerce minisite, except users aren't buying items, but contacting individuals with enquiries for work. It has basic filtering capabilities based on categories, or through searching a specific search term. \n\nI've asked the business what's prompted this desire to move the data, and the answer was that 'WordPress doesn't manage the data well' from a frontend dev perspective, but am I correct in thinking that moving to Workday (or any other alternative database platform) wouldn't resolve this issue? Thank you in advance for your valuable insight!",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1n6knrl/webdev_gurus_your_advice_needed_on_managing_a/",
        "num_comments": 11,
        "comments": [
            {
                "body": "Is workday a database? Also how many users do you even have featured on your website, by the sound of it you could be using a .txt file as a db for all it matters.",
                "author": "disposepriority",
                "score": 2
            },
            {
                "body": "Thank you for validating my concerns - I feel a lot more reassured that challenging this is the right thing to do. I’ll be raising it again with my manager next week!",
                "author": "AmelieRennard",
                "score": 2
            },
            {
                "body": "So wait, use the Workday API as a search engine to search custom fields? Don’t do that. \n\nDon’t expose your internal users to the internet. Workday holds your tax docs and pay info. That’s a huge security risk.\n\nThere is a WP plugin for contacts that does exactly what you are looking for: as https://wordpress.com/plugins/contact-list\n\nOr better would be one of many CRM’s out there.",
                "author": "who_am_i_to_say_so",
                "score": 1
            },
            {
                "body": "That sounds like a bulshit answer they gave you. I agree that changing your backend won't help with that, generally. Press for a hard answer on the specific thing they actually want to accomplish that they can't currently.",
                "author": "ja734",
                "score": 1
            },
            {
                "body": "Elasticsearch. And create your own tables within wordpress to manage specific data rather than using the post or metadata tables.",
                "author": "IsABot",
                "score": 1
            },
            {
                "body": "You are right to be skeptical. Moving to Workday will not magically fix frontend search issues, especially if you are not planning to use existing Workday data to populate fields. That just adds complexity without solving the core problem.\n\nBest practice for this kind of setup is:\n\n1. Keep the data in a proper relational database (MySQL or Postgres).\n2. Expose it through a clean API layer.\n3. Use a dedicated search/indexing solution like Elasticsearch, Meilisearch, or Algolia for fast, user-friendly queries.\n\nWordPress can work fine as the presentation layer, but when the data and search requirements grow, you separate concerns: database for storage, search service for queries, and frontend for display. This approach scales better and avoids tying yourself to a platform like Workday that is designed for HR operations, not custom public-facing search.",
                "author": "ajbapps",
                "score": 1
            },
            {
                "body": "It is primarily a HR management platform I believe, but with the ability to create modules with custom fields to manage data. We have around 300 people profiled on our website currently.",
                "author": "AmelieRennard",
                "score": 1
            },
            {
                "body": "I think it was more sync Workday data into WordPress as a one-way flow, but I do agree, it doesn't seem like a very smart thing to do from a security perspective, even if that particular data is ring-fenced.\n\nAnd thank you for your recommendation! I'll take a look. Yes, we do have HubSpot Enterprise as well, perhaps that's also worth investigating - thank you again",
                "author": "AmelieRennard",
                "score": 1
            },
            {
                "body": "I'm glad I'm not alone in this thinking! I had another call with them today and there's still no clear answer... but to be honest there are some additional benefits to moving this data to HubSpot, so I guess we'll see what their scoping document comes back with :)",
                "author": "AmelieRennard",
                "score": 1
            },
            {
                "body": "Thank you, I was looking up Elasticsearch yesterday briefly as an option. Will explore further!",
                "author": "AmelieRennard",
                "score": 1
            },
            {
                "body": "No problem! Your gut is 100% right on this one.",
                "author": "who_am_i_to_say_so",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1756833672.0,
        "title": "Need genuine opinion",
        "author": "Extreme-Maize-5335",
        "id": "1n6pmjy",
        "selftext": "Am I on the right track?\nHey guys,\n\nI'm a student working on what I hope will be a strong portfolio project, and I'd love to get your opinion on my project.\n\nThe Abstract Idea:\nThe project is a real-time asset tracking and management system. Think of it like a simplified logistics platform. It has three main user roles:\n\n * Clients (Web App): Can view the live location of a specific moving asset assigned to them on a map.\n * Operators (Web App): An admin-style dashboard to manage the assets and the field agents' schedules.\n * Field Agents (Mobile App): A simple, dedicated mobile app that the agent uses to broadcast their live GPS location back to the system.\n\nTech Stack & Architecture:\n * Framework: Next.js (App Router) for both the UI and the backend API.\n * Database & Auth: Supabase (PostgreSQL).\n * Real-time Layer: Pusher for WebSockets.\n * Map: Leaflet.\n\nThe core data flow is: The mobile app sends GPS coordinates to a Next.js API endpoint. This endpoint then triggers a Pusher event, which updates the map on the client's web dashboard in real-time.\nFor security, I'm going deep and implementing Row Level Security (RLS) in Supabase to make sure a client can only see the asset assigned to them and that different user roles have the correct permissions.\nMy Progress So Far:\nI've completed the full authentication and role-based authorization flow for the web app (client/operator roles), built the UI skeletons for all pages, and have a basic proof-of-concept working where the map updates its marker from a test page.\n\nMy Questions for You:\n * On a scale of 1-10, how would you rate the complexity and impressiveness of this project for a student portfolio aimed at getting a job?\n * Are there any major flaws with this approach (Next.js API -> Pusher -> Client)?\n * Is this a good demonstration of skills for a modern full-stack or frontend role?\nI know the \"asset tracking\" idea is a bit generic, but I'm trying to focus on demonstrating solid engineering principles rather than a unique startup idea.\n\nAny and all feedback or harsh truths are welcome. Thanks for your time!\n\nPs-I used gemini for summarising this up 😭",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1n6pmjy/need_genuine_opinion/",
        "num_comments": 10,
        "comments": [
            {
                "body": "A complete MVP like that is certainly impressive. It shows two things 1. You are capable of working across a full stack 2. You can get a project to a usable state.\n\n\nRealistically someone hiring you isn't going to have a ton of time to spend diving into what you built. What they will do is use the project as a conversation starter. Maybe they want to talk about your technical knowledge of websockets or databases, or what obstacles you had to overcome or what aspect your particularly proud of. So be prepared for it to be a gateway into further conversation and be comfortable communicating about it.\n\n\nIf you want to talk about design patterns or experience learning a new tool that is a good opportunity. You want to show off / sell your skill set. Don't get bogged down in this one thing that didn't work and took more time than it should, unless you're then talking about relevant skills used to overcome the challenge like debuggers and profilers and weaving in logs, etc...\n\n\nAlso one thing that makes managers weary when someone shows off a portfolio is how much did they create themselves vs how much was a template or AI provided. Again its a point to just make sure you are using your project as a tool to sell yourself and your skillset.\n\n\nAlso when I hear \"asset tracking and management\", my initial thought goes to financial assets like a brokerage account. You may want to add some context around that like specifying physical assets / delivery service.",
                "author": "_edd",
                "score": 2
            },
            {
                "body": "That's awesome idea you should work on it",
                "author": "Prathamesh9890",
                "score": 2
            },
            {
                "body": "honestly this looks like a really solid portfolio piece i’d rate it around 8 out of 10 for a student project because it touches auth real time data handling security with rls and frontend mapping which shows you can integrate multiple moving parts the nextjs api → pusher → client flow is totally fine and pretty standard the only weakness is that asset tracking isn’t a super unique idea but that doesn’t matter since hiring managers care more about seeing clean code good architecture and working features than originality you’re definitely on the right track",
                "author": "BeeSwimming3627",
                "score": 2
            },
            {
                "body": "Pretty much how many of the apps work like Uber, Foodora ect. So I'd say it's a solid project and one that can show off something that is both mobile, browser and server.\n\nMake sure to include gifs or images with descriptions if you wanna use it in job applications. They don't wanna sit and read through a bunch of text, just list your tools, languages and what you built in short with some images/gifs.",
                "author": "Fun-Consequence-3112",
                "score": 2
            },
            {
                "body": "Thanks for responding, as for the asset thing, it is somewhat related to delivery service like zomato or uber.\n\nAlso can I dm you?",
                "author": "Extreme-Maize-5335",
                "score": 2
            },
            {
                "body": "Yeah I know that the mvp is kinda common but I honestly couldn't think of any other idea.",
                "author": "Extreme-Maize-5335",
                "score": 2
            },
            {
                "body": "I'm not a recruiter so I can't tell you but I don't feel it is if you do it well.",
                "author": "Fun-Consequence-3112",
                "score": 2
            },
            {
                "body": "Yes but when I see it in my surroundings, I feel it doesn't have much use-case as such.",
                "author": "Extreme-Maize-5335",
                "score": 1
            },
            {
                "body": "Won't including gifs and images be informal?",
                "author": "Extreme-Maize-5335",
                "score": 1
            },
            {
                "body": ">Also can I dm you?\n\nNo, but you're welcome to ask questions here.",
                "author": "_edd",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1751002135.0,
        "title": "Am I the A-Hole? (Low Code No Code)",
        "author": "AtainEndevor",
        "id": "1llly4w",
        "selftext": "My previous job, the company had bought into a LCNC solution. I was more or less lucky enough to be put in charge of the back end where I could develop the APIs that would handle business logic and data. The LCNC portion was just for the UI, but in the end could not deliver. LCNC company replaced project managers at one point and at another had over a dozen members on their team to work on the front end.\n\nAs for the back end, it was me and a \"part time\" dev who would jump back from the front when they thought I was falling behind. It almost always ended up being a short coming on the front end. I'm not trying to boast, but the amount of formatting I had to do on the backend... I thought the whole point of the front end was to format data to make it pretty for the user. It was pretty much one step below building a webpage and sending it through as an iframe... Which we actually did for one page...\n\nThe project ended up failing, company went in the hole after nearly 2 years of development. Despite returning to traditional development and cranking out a significant module in a couple months with a team of 5 and a lot of promise on the way, the company ended up selling off the devision. I was lucky enough to find another job before the sale.\n\nI was then thrown into another platform (Power Pages) and while significantly more powerful (no pun intended) than the platform that practically ruined my last job, I still feel I'm significantly hindered as a developer. I'm constantly asked about possibilities and how long it would make take to build something through the platform, and if I had my way with \"traditional\" development, I'd know exactly how to solve the issue or give accurate predictions, but I feel now I'm at the mercy of a random checkbox setting that absolutely ruins a page. I'm sure there's definitely some inexperience with the platform and even bias, but I just feel so tied down with it all. Seeing my previous company fail and go to ruin because of it, I don't want to see my current company follow the same route.\n\nTLDR: I'm trying to curb my bias. From my perspective, LCNC has been attempted for quite a while, but at the end of the day, it just can't quite hit it. A paint-by-number won't make the Mona Lisa. I want to do my best, I want to deliver, but I'm finding I just can't. As much as I hate it, I feel like a craftsman blaming his tools, but instead of saying \"It's the saw's fault\", I felling I've been given a circular saw with no blade. Should I keep trying or find a place that believes more in development? Is there hope for this NCLC?",
        "score": 28,
        "url": "https://www.reddit.com/r/webdev/comments/1llly4w/am_i_the_ahole_low_code_no_code/",
        "num_comments": 16,
        "comments": [
            {
                "body": "Low code is rubbish for serious apps. \n\n\nThey can use it for the landing page but that's it, and it just adds more headaches than any problems it solves. ",
                "author": "No-Transportation843",
                "score": 58
            },
            {
                "body": "> Should I keep trying or find a place that believes more in development?\n\nAnswer #2\n\nA general programming language is the most powerful user interface there is to a computer. Attempting development tasks with anything less will almost always end in tears once you leave the happy path. And even for all report tools I have ever seen I can't remember a single one were my team didn't have to mitigate some inflexibility.",
                "author": "hissing-noise",
                "score": 17
            },
            {
                "body": "The company I work for is heading in this direction and it's been worrying me. I'm sorry you actually had to go through everything I've been worrying about. :/",
                "author": "Opinion_Less",
                "score": 7
            },
            {
                "body": "i work for a company that provides a low code product. you almost certainly have heard of it. they’re pulling in 10 digits of revenue yearly. \n\nthe vast majority of their customers are customers who have their main .com websites, marketing pages, landing pages built in our platform. \n\nthat should tell you a lot about what these low code platforms are actually good for. \n\nanything beyond a landing page, or hell anything that even needs an API - stay away from low code.",
                "author": "jcl274",
                "score": 7
            },
            {
                "body": "I feel you, I'm working with a shitty custom build lcnc tool and I'm so done. \nIt's a tool that should never be used by developers, let the person that thought that creating it was s good idea \"write\" in that.\n\nJust look for a better job, companies rarely leave lcnc solutions because \"iT's eAsiEr so jOb sHouLd be fAsTer and cHeApeR\" (insert spongebob emoji).",
                "author": "AlwaysAnxiousNezz",
                "score": 3
            },
            {
                "body": "Unfortunately AI has led many managers and clients to believe that everything should now be much faster, easier and even achievable by beginners",
                "author": "Thunderstorecom",
                "score": 3
            },
            {
                "body": "Your intuition is absolutely right. Low code turns into a maintenance nightmare while the clients get a worse experience. Managers see the promise of quick prototyping and buy into the hype because they know they’re jumping ship in 2 years and won’t have to see the project through to the end. Shitty situation, I’m sorry.",
                "author": "brianluong",
                "score": 3
            },
            {
                "body": "Low-code/no-code tools can be helpful for simple stuff, but when it comes to real complexity, they often fall short and feel limiting. It’s frustrating when you know how to solve problems cleanly with traditional coding but get stuck fighting the platform instead. If you want to build quality, scalable solutions and feel fulfilled, it might be worth looking for a place that values proper development more. That said, LCNC isn’t going away, so knowing when and how to use it can still be valuable. But don’t lose sight of your skills and passion for craftsmanship.",
                "author": "CommentFizz",
                "score": 3
            },
            {
                "body": "Pfft, there is nothing more powerful than a magnetic needle and a very large, slow rotating, single platter HDD.",
                "author": "Annual-Advisor-7916",
                "score": 3
            },
            {
                "body": "Been doing integrations for 7 years. There is a suite of low code tools for integration - they all suck and are overpriced. They were the focus of my job and I hated it every step of the way. I just convinced my boss to let me switch to Python and it's like the world is open and it's essentially free at our data volume. Will save 100k /yr.",
                "author": "Chamchams2",
                "score": 2
            },
            {
                "body": "Low code .. until it isn't.",
                "author": "jeff77k",
                "score": 2
            },
            {
                "body": " It’s programming, nonetheless. Unless that low code doesn’t allow for invoking custom code (most of them do), I call it skill issue. A craftsman blaming the tool indeed. Just ship it. I did lcnc as well back in 2019 (client’s stack), for a whole year. Didn’t love it, sweared a lot to myself, but didn’t whine to anyone. Had a job, delivered, got paid. ",
                "author": "Various-Army-1711",
                "score": 1
            },
            {
                "body": "I have no experience in lcnc myself, but my university uses mendix (low code) for its schedule app, and it fucking sucks. Never works the way it should, slow as fuck.\n\nI'm pretty sure that if you take a team of the more skilled cs students, they can build a better app than that lowcode bullshit",
                "author": "RealLamaFna",
                "score": 1
            },
            {
                "body": "The point and click/drag and drop Low Code No Code crap we've had for the past several years is now being replaced by AI tools.   That sort of \"traditional\" LCNC stuff never really was a viable solution for anything but the most simplest of simple things.  Anything more than simple solutions turned into a huge mess with those tools. \n\nAI is upending everything, especially that space.    The AI no code tools are another story.  That shit is going to replace us all., sorry to say.",
                "author": "eggbert74",
                "score": 1
            },
            {
                "body": "My team is _constantly_ trash talking everyone else in the company for their low code solutions. On one hand I do get it, it’s a lot of power for people who might not always understand the full ramifications, but on the other hand I’m always trying to convince them try to see what problem we’re not solving that’s making the other teams want to handle it themselves. There’s a reason people turn to these things, if you can figure out what that reason is and help them out they might be so so insistent on using that tool.",
                "author": "ryaaan89",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746535801.0,
        "title": "Should I move from Supabase to a self-hosted backend?",
        "author": "Vegetable_Play_9821",
        "id": "1kg3net",
        "selftext": "I’ve been using **Supabase** for my current app—mainly for Postgres, authentication, and storage. It’s been super convenient for getting started, but I’m starting to think about switching to a **self-hosted setup on my VPS** instead.\n\n# Reasons I’m considering switching:\n\n* **Cost**: Supabase pricing adds up quickly once you outgrow the free tier.\n* **Control**: I’d like more flexibility over the backend stack and performance tuning.\n* **Vendor lock-in**: I want to avoid being tied to a hosted platform long-term.\n\n# My concerns:\n\n* Supabase has great built-in tools like auth and a database UI that I’d lose.\n* Managing my own backend means more DevOps and security responsibility.\n* I might be overcomplicating things too soon.\n\nHas anyone here made a similar move? Was it worth the added complexity? Any advice or things I should watch out for?\n\nThanks!",
        "score": 8,
        "url": "https://www.reddit.com/r/webdev/comments/1kg3net/should_i_move_from_supabase_to_a_selfhosted/",
        "num_comments": 26,
        "comments": [
            {
                "body": "Supabase as we know it can be self-hosted: [https://supabase.com/docs/guides/self-hosting](https://supabase.com/docs/guides/self-hosting)",
                "author": "_listless",
                "score": 24
            },
            {
                "body": "**Cost**: Supabase can be self-hosted somewhere like Hetzner, and it's \\~$5/month rather than the $25/month for Supabase's managed-hosting.\n\n**Control**: You can swap out any part of Supbase's stack, with whatever you'd like to use instead. It's modular and open-source.\n\n**Vendor lock-in**: Supabase is built on normal, open-source technologies. It has easy egress/migration. There is no vendor lock-in. I prefer [Pocketbase](https://pocketbase.io/), but I like Supabase too.",
                "author": "AmSoMad",
                "score": 22
            },
            {
                "body": "Self hosted supabase doesn't have the UI?",
                "author": "Nitrodist",
                "score": 12
            },
            {
                "body": "Man, what happened to supabase? The whole spiel was that it was pretty much like firebase but for you to self host.",
                "author": "arivanter",
                "score": 7
            },
            {
                "body": "My guess is the vibecoders don't even know enough to articulate the question, so they get an LLM to write the question for them.  The utter absence of understanding, effort, or even thought in llm-powered \"development\" is staggering.",
                "author": "_listless",
                "score": 7
            },
            {
                "body": "I can't help you there. I work with a lot of companies that use Oracle services, and I'd never use oracle personally. As far as I understand, you should be able to host a Dockerized Supabase instance on Oracle VPS (even the free tier).",
                "author": "AmSoMad",
                "score": 7
            },
            {
                "body": "This explains so much.",
                "author": "_listless",
                "score": 7
            },
            {
                "body": "But why though? Do you have thousands of simultaneous users? Do you have more than 100k MAU? Do you have entire infrastructure ready to handle security side of it? \n\nSupabase in its essence is just a cloud host of your Postgres instance with added sugar such as Auth handling and analytics",
                "author": "rimyi",
                "score": 6
            },
            {
                "body": "🧐",
                "author": "TruePadawan",
                "score": 4
            },
            {
                "body": "you can self host supabase coolify makes it really easy",
                "author": "SleepAffectionate268",
                "score": 3
            },
            {
                "body": "How does noobs like these gets access to oracle's free vps tier, tried with lots of credit cards, none worked",
                "author": "RIP-reX",
                "score": 3
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 2
            },
            {
                "body": "Managing your own Supabase or similar will be MUCH more expensive than supabase cloud due to the additional work you have to do.\n\nIs your time really worth such less?",
                "author": "ducki666",
                "score": 2
            },
            {
                "body": "Isn't self-hosting the reason supabase exists? If one would accept potential high costs and vendor lock in,  firebase",
                "author": "Recent-Assistant8914",
                "score": 2
            },
            {
                "body": "Switched from supabass to selfhost appwrite. Never looked back and love it 👌",
                "author": "NickHatBoecker",
                "score": 1
            },
            {
                "body": "The answer is neither. Convex",
                "author": "Consistent_Skirt_441",
                "score": 1
            },
            {
                "body": "If you're primary issue is cost and those number are $25 vs $5 and not  $2500 vs $500. I think it's clear - self host. You're obviously not making any profit at this point or your funding is severely limited. Save the money.",
                "author": "CarelessPackage1982",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "I am using Oracle vps free tier",
                "author": "Vegetable_Play_9821",
                "score": 1
            },
            {
                "body": "It absolutely does",
                "author": "AdPrestigious7157",
                "score": 1
            },
            {
                "body": "Man idk I am new to full stack",
                "author": "Vegetable_Play_9821",
                "score": 1
            },
            {
                "body": "If you signed up but didn't get the free tier you should contact their support and see what the issue is. I was at a company where I was comparing different solutions and when I tried it failed for me. Sending support an email fixed my issue in a few days.",
                "author": "CarelessPackage1982",
                "score": 1
            },
            {
                "body": "Tried it too, but not a satisfactory reply was some shit generic bot replies from them",
                "author": "RIP-reX",
                "score": 1
            },
            {
                "body": "Thats what I’ve always thought",
                "author": "Nemosaurus",
                "score": 1
            },
            {
                "body": "Self hosting is a terrible idea. I assume you are new to all this, so I will spare the details why. It just is and should absolutely not be an option you should consider.\n\nThe other options are other hosting services with SQL. Again, you will have the same concerns there, just more control. But it also means more work on your end, especially with security.",
                "author": "am0x",
                "score": -5
            },
            {
                "body": "Umm the comparison was between self hosted anything vs supabase as we know it",
                "author": "Vegetable_Play_9821",
                "score": -14
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -16
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1733947055.0,
        "title": "How I got out of tutorial hell",
        "author": "yeahimjtt",
        "id": "1hc2fv1",
        "selftext": "Don't get me wrong, tutorials are important when you are first starting your web development journey. They should not be where/how you build the majority of your projects from.\n\nThis took me a long time to realize, I thought hiring managers and recruiters would find these projects interesting enough to give me a shot... I was very wrong.\n\nThis realization is what got me out of tutorial hell, I realized that re-building an already made product that showcased no effective problem-solving skills of my own was going to get me no where.\n\nAs someone who was in tutorial hell myself for a long time, I know how hard it is to think of what to build; it seems like everything that has a chance of being successful is already built.\n\nWhat I found best to building a successful project was fulfilling these requirements:\n\n1. I needed to be passionate enough to finish the project\n2. It needed to serve a particular unpopular niche to have the best chance with establishing presence for SEO to eventually have organic growth.\n\nWhat I landed on was a platform, similar to dribbble, where developers could easily find images from developers portfolios for inspiration.\n\nThis was:\n\n✅ Something I was passionate about\n\n✅ Serving a purpose within a particular untouched niche\n\nUnfortunately, at the end I was left with a project with no users (of course) like a lot of projects we make. So I decided to take a leap and do what is known as \"building in public\".\n\nI made an X account, started to find users apart of the niche and directly messaged them about my project. This did not work at first as everyone's always a little skeptical being the first user on a new website.\n\nAs I continued to publicly market my product on X, I decided to find ways to market my product directly to users email inboxes.\n\nWhere I struck gold was finding this GitHub repository: [https://github.com/emmabostian/developer-portfolios](https://github.com/emmabostian/developer-portfolios)\n\nThis single repository got me my first 20+ users that helped establish the foundation of my site.\n\nThe repository is filled with developers who uploaded their portfolio link, along with their name, to be publicly showcased. This was my niche served to me with no fluff.\n\nThe approach I took was sincere when emailing users from this repository, clearly stating how I came across their email address, and portfolio site and why I thought they would be interested in my site.\n\nWithin the email, I also included positive feedback I had from their site as I did have to browse it to find their email address.\n\nFrom this, I was then able to continue \"building in public\" with a decent enough level of success by eventually getting 80+ users and about 20k monthly visitors for my first month after launching my project.",
        "score": 63,
        "url": "https://www.reddit.com/r/webdev/comments/1hc2fv1/how_i_got_out_of_tutorial_hell/",
        "num_comments": 35,
        "comments": [
            {
                "body": "I dont mean to sound mean, but shouldn’t it be glaringly obvious that copying tutorials is NOT developing them? Anybody can copy the code.",
                "author": "DanishWeddingCookie",
                "score": 46
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 23
            },
            {
                "body": "There’s definitely a plethora of online learning resources nowadays but the entry level bar for junior devs has been raised quite a bit as well so it equals out. It used to be you can get a web dev position just knowing basic site maintenance and some html/css/ vanilla js.",
                "author": "FitY4rd",
                "score": 12
            },
            {
                "body": "But authors are all start by practicing all of the things that already exist, like different poem types, short stories, speeches etc. Elementary school is like tutorial hell. You have to start there, but it's usually not enough education to build a skyscraper, pilot an airplane, write the great American novel, or build a complex piece of software.",
                "author": null,
                "score": 7
            },
            {
                "body": "totally agree, I guess I just thought it was cool that I was developing a netflix clone or something similarly popular being fresh out of college with no prior web dev experience.\n\nthought hiring managers/recruiters might also see that as cool but it is pretty much just copying code.",
                "author": "yeahimjtt",
                "score": 6
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 6
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 5
            },
            {
                "body": "Next, Tailwind, Typescript, AWS, and Firebase",
                "author": "yeahimjtt",
                "score": 4
            },
            {
                "body": "What is your tech stack to make this?",
                "author": "CutMonster",
                "score": 3
            },
            {
                "body": "Were you following tutorials to learn how to code or to learn how to create a successful app? To me those are two very different things. What they do have in common is that both are best learned by doing, not from tutorials. Most tutorials explain the problem and then the solution, skipping over the valuable lessons and details that lead to the specific solution. They have their place, but I’m happy to hear that you escaped tutorial hell",
                "author": "BankHottas",
                "score": 3
            },
            {
                "body": "often the first place they start learning is following someone else doing it and explaining how it works. for a lot of other skills this is how learning works too, through repetition. learning programming requires you to take the training wheels off early and fall a bunch, it’s not a natural thing for most people.",
                "author": "CertainlySnazzy",
                "score": 3
            },
            {
                "body": "If you're someone working on a portfolio or looking for inspiration, I built a platform to help you: [https://www.webportfolios.dev](https://www.webportfolios.dev)",
                "author": "yeahimjtt",
                "score": 2
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 2
            },
            {
                "body": "My experience is a little different. I got recruited to my university's internship program during my junior year. Which is an immediate out from tutorial hell. Then, I partnered with someone to build an interesting major project for an extremely niche market. The project is basically my baby now. Somehow, I made money from it, though not a whole lot. It was my proudest project. Then, we learned that there are a major competitor in our local market, which fuels me further to make the product better.",
                "author": "Lonely-Suspect-9243",
                "score": 1
            },
            {
                "body": "Let me tell you what i did , When i was learning JavaScript  i couldn't even build a simple todo app. Then i realized that what i am doing wrong is just copying someone else and not even using a single brain cell and boom i built my first web app and after that i never ever looked at any tutorial . Simply be determinate about what you want to learn even if it will take you months , and keep building stuff .\nHappy learning",
                "author": "Ayushgairola",
                "score": 1
            },
            {
                "body": "Totally not an ad",
                "author": null,
                "score": 1
            },
            {
                "body": "I see",
                "author": "MisterNirez",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "To learn, but I would still showcase the projects on my portfolio, which wasn’t great. Eventually I began to take what I learned from the tutorials and apply them to my own project that solved an actual problem",
                "author": "yeahimjtt",
                "score": 1
            },
            {
                "body": "My thought exactly.",
                "author": "AbraxasNowhere",
                "score": 1
            },
            {
                "body": "Yes I agree but you can’t expect hiring managers to want somebody that only programs tutorials and todo lists. That’s my point.",
                "author": "DanishWeddingCookie",
                "score": 1
            },
            {
                "body": "Please elaborate your thought further",
                "author": "yeahimjtt",
                "score": 1
            },
            {
                "body": "Correct, and you can’t expect to get a job right out of elementary school. And copying other people’s poems, short stories and speeches doesn’t make you a better author, reading them does, and then going off and practicing your own writing.",
                "author": "DanishWeddingCookie",
                "score": 1
            },
            {
                "body": "The way to get out of tutorial hell is not by copying the tutorial and being done with it, it’s expanding on it or breaking it and figuring out how to fix it, or fixing something you see wrong because of the knowledge you’ve learned, or taking a feature from it and putting it in another program.",
                "author": "DanishWeddingCookie",
                "score": 1
            },
            {
                "body": "Yes and No. When I first started there wasn't browser standardization, so you had to know the quirks between the different browsers and even the different versions of the same browser. JavaScript was a pain in the ass, and CSS didn't even exist yet.",
                "author": "DanishWeddingCookie",
                "score": 1
            },
            {
                "body": "In the original post he specifically mentions that he thought the managers and recruiters would find the projects he was completing enough to get him a job. And I was replying to that. Second paragraph.",
                "author": "DanishWeddingCookie",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "I think it’ll come back to bite them. AI isn’t good enough yet to be an authority on stuff like security for instance and if you rely on that you are going to only be as good as the AI.",
                "author": "DanishWeddingCookie",
                "score": 1
            },
            {
                "body": "That’s an inspiring journey! If you’re interested in building data pipelines, I’d love for you to check out my open-source project on GitHub at https://github.com/bruin-data/bruin and give it a star if you find it helpful—just launched and would really appreciate your support!",
                "author": "ericmurphy01",
                "score": 0
            },
            {
                "body": "Thank you, haha forgot to fix that",
                "author": "yeahimjtt",
                "score": 0
            },
            {
                "body": "As a hiring manager I want the guy that picks it up from the start. I want the guy who has the intuition naturally and doesn’t have to struggle through learning. Not everybody gets to start with tutorials, some of us read through the documentation and formed a sense of how it all worked without being led along.",
                "author": "DanishWeddingCookie",
                "score": -1
            },
            {
                "body": "I get the point. But my point is that the ones that struggle and get stuck in tutorial hell might not just be cut out for it. It takes a certain way of thinking and a methodical approach to problem solving, the ability to divide and conquer, the ability to hold both the street level view and the 30,000 ft view in your head at the same time. I’m not trying to diss the guy, I’m just saying just because somebody wants to learn to program doesn’t mean they will be good at it.",
                "author": "DanishWeddingCookie",
                "score": -1
            },
            {
                "body": "Am I hurting your feelings? Chill TF out.",
                "author": "DanishWeddingCookie",
                "score": -6
            },
            {
                "body": "If I went to become an author, I wouldn’t grab somebodies book and copy it down.",
                "author": "DanishWeddingCookie",
                "score": -13
            },
            {
                "body": "It’s not “pretty much”, it is. When I learned C++ back on MS-DOS 6, I had to teach myself and make up ideas of things to try. I had the book manuals and read them cover to cover back in high school. Then I got a job doing c++ but the company was getting clients coming to them asking for us to make websites, so I taught myself classic asp/sql server. And there wasn’t too much documentation or sites like stack overflow to lean on. Today people have it easier than it should be.",
                "author": "DanishWeddingCookie",
                "score": -15
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1759572962.0,
        "title": "Launched Geeky.chat - would love your feedback (and brutal roast my landing page)",
        "author": "musharofchy",
        "id": "1nxq8b0",
        "selftext": "Hey folks,\n\nI just launched [Geeky.chat](https://geeky.chat) \\- a multi-model AI platform built for teams. Think of it as an AI workspace where your team can chat with GPT-4, Claude, Gemini, etc., all in one place, with shared workspaces, team management, and some really powerful team features.\n\nI’d love to get your feedback on the **landing page** \\- copy, structure, clarity, pricing, tech vibes, conversion flow… or anything that feels off.  \n  \nDon’t hold back roast it if something feels wrong, overhyped, or confusing. I’d rather know now than after running ads.\n\nBuilt with Next.js + Tailwind.\n\nLink: [https://geeky.chat](https://geeky.chat)",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1nxq8b0/launched_geekychat_would_love_your_feedback_and/",
        "num_comments": 4,
        "comments": [
            {
                "body": "I went past the geek chat. Your PIMJO website is fire 🔥 \nAs a web dev I feel roasted myself, the team!\n\nStarting on a similar path with my brand WEBMEKA. \n\nNot here to roast. Am inspired. Motivated",
                "author": "shamulwa",
                "score": 2
            },
            {
                "body": "I think its a great idea to put multiple ai models in on place. Here are a few notes from a new-user POV:\n\n1. **Pricing duplication / nav confusion.** You have pricing in two places (homepage+ subpage) and the **Features** tab just links to the homepage. That made the flow a bit confusing. Either make the Pricing tab anchor to the homepage (and remove the duplicate) or point Features to a dedicated page.\n2. **FAQ accessibility.** I didn’t scroll far down: consider adding a FAQ button in the top nav so answers are immediately available.\n3. **Image overload.** There are 7 images visible in one scroll (slightly overwhelming). A carousel/slider or lightbox popup would be much cleaner so each image gets attention.\n4. **BOLD WORDS.** Bold main words or short instructions so people scanning the page can pick up the important bits quickly.\n5. **Less is more.** Fewer, clearer items beat a long list (overwhelming). Pick 3–4 core benefits to clearly show; The other info can go in dedicated subpages.\n6. **tiny fixes?:** “Every Aeading AI Model” -> Should it be Leading? “Simple, Transparent Pricing” -> I feel the comma is unnecessary. (Typically I don't use commas in headings) “Multi-model AI Platform for Modern Teams” reads a bit adjective-heavy.\n7. **Name:** I'm obviously not in a position to judge but: “Geeky” is cool, but it doesn't read like a team collaboration tool. Consider investing in a professional marketing advisor if you want to take this project seriously.\n\nI would treat the homepage like a 30-second presentation. Your hook should convey the main benefit (the multi-model access for teams) in one glance. \n\nAlso pls don't take this offensively. I don't want to seem like I'm giving a lecture XD.",
                "author": "Repulsive-Tip-7944",
                "score": 1
            },
            {
                "body": "Thanks for the kind words man, I am blushing :)",
                "author": "musharofchy",
                "score": 1
            },
            {
                "body": "Thanks for the honest feedback, we noted on this and will work on all these priority-basis",
                "author": "musharofchy",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745558555.0,
        "title": "EU Fines Apple and Meta €700 Million for Breaching the DMA Regulation, Protects Developers' Right to Link Outside the App Store",
        "author": "KvetoslavNovak",
        "id": "1k7d88b",
        "selftext": "On Apr 23, 2025 the European Commission found that Apple breached its anti-steering obligation under the Digital Markets Act [https://www.eurlexa.com/act/en/32022R1925/present/text](https://www.eurlexa.com/act/en/32022R1925/present/text) (DMA), and that Meta breached the DMA obligation to give consumers the choice of a service that uses less of their personal data.\n\nTherefore, the Commission has fined Apple and Meta with €500 million and €200 million respectively.\n\n**## Non-compliance decision on Apple's steering terms**\n\nUnder the DMA, **app developers distributing their apps via Apple's App Store should be able to inform customers, free of charge, of alternative offers outside the App Store**, steer them to those offers and allow them to make purchases.\n\nThis duty of the gatekeeper to allow developers to link users to alternative purchase options outside the gatekeeper's platform is set out in Article 5(4) of the DMA [https://www.eurlexa.com/act/en/32022R1925/present/text#Article-5-Obligations-for-gatekeepers](https://www.eurlexa.com/act/en/32022R1925/present/text#Article-5-Obligations-for-gatekeepers)\n\nThe Commission found that Apple fails to comply with this obligation. Due to a number of restrictions imposed by Apple, **app developers cannot fully benefit from the advantages of alternative distribution channels** outside the App Store.\n\nSimilarly, consumers cannot fully benefit from alternative and cheaper offers as Apple prevents app developers from directly informing consumers of such offers.\n\n**## Non-compliance decision on Meta's “consent or pay” model**\n\nUnder the DMA, gatekeepers must seek users' consent for combining their personal data between services. Those users who do not consent must have access to a less personalised but equivalent alternative.\n\nIn November 2023, Meta introduced a binary \\_Consent or Pay\\_ advertising model. Under this model, EU users of Facebook and Instagram had a choice between consenting to personal data combination for personalised advertising or **paying a monthly subscription for an ad-free service**.\n\nThe Commission found that this model is not compliant with the DMA, as it did not give users the required specific choice to opt for a service that uses less of their personal data but is otherwise equivalent to the ‘personalised ads' service. **Meta's model also did not allow users to exercise their right to freely consent to the combination of their personal data**.\n\nThe duty of the gatekeeper to provide users with a less personalized but equivalent alternative if they refuse data processing consent is set out in Article 5(2) of the DMA [https://www.eurlexa.com/act/en/32022R1925/present/text#Article-5-Obligations-for-gatekeepers](https://www.eurlexa.com/act/en/32022R1925/present/text#Article-5-Obligations-for-gatekeepers)\n\n  \nSource: [https://ec.europa.eu/commission/presscorner/detail/en/ip\\_25\\_1085](https://ec.europa.eu/commission/presscorner/detail/en/ip_25_1085)",
        "score": 58,
        "url": "https://www.reddit.com/r/webdev/comments/1k7d88b/eu_fines_apple_and_meta_700_million_for_breaching/",
        "num_comments": 18,
        "comments": [
            {
                "body": "Probably cheaper for Apple to pay the fine given how much money they make from the App Store.",
                "author": "dom_eden",
                "score": 14
            },
            {
                "body": "A Karen is usually not trying to make things more fair...",
                "author": "Got2Bfree",
                "score": 12
            },
            {
                "body": "[https://ec.europa.eu/commission/presscorner/detail/en/ip\\_25\\_1085](https://ec.europa.eu/commission/presscorner/detail/en/ip_25_1085)",
                "author": "KvetoslavNovak",
                "score": 9
            },
            {
                "body": "Yep. Google managed to appeal to a fine a few years back, but these fines can't be waivered without a court decision.",
                "author": "igorski81",
                "score": 9
            },
            {
                "body": "But  I believe this is a big win for developers anyway. This  is the way to avoid \"Apple Tax\" and still  be listed in the App Store.",
                "author": "KvetoslavNovak",
                "score": 8
            },
            {
                "body": "Not exactly. It is about the right of a developer to inform users,  including links, in the AppStore that they can go to his website and use a webapp or PWA version much cheaper.",
                "author": "KvetoslavNovak",
                "score": 3
            },
            {
                "body": "Of course the EU has. Apple was even forced to apply 2 years warranty in the EU.",
                "author": "KvetoslavNovak",
                "score": 2
            },
            {
                "body": "Hopefully, it has been a complaint of many for quite a while.",
                "author": "sentencevillefonny",
                "score": 2
            },
            {
                "body": "I have to agree with that.\n\nThe best example was the regulation for straightness of cucumbers to save space while shipping.\n\nThe regulation is revoked now...",
                "author": "Got2Bfree",
                "score": 2
            },
            {
                "body": "Source?",
                "author": "NiteShdw",
                "score": 1
            },
            {
                "body": "Has the EU ever succeeded in collecting any of those fines?",
                "author": "GreatCosmicMoustache",
                "score": 1
            },
            {
                "body": "yep, this is the big issues with fines, it happens for utilities companies too. They do something they profit from that is against the consumers roles and than they get a fine that is usually a percentage of what they got from their bad behaviour, and in most cases the consumer doesn't get the money they where overcharged for unless they request it.. On top of all this the process to request this money is extremely time consuming.   \nSo The big company wins, the government wins and the consumers is financially abused",
                "author": "geekyNut",
                "score": 1
            },
            {
                "body": "Connect the fines, yes. \n\n\nIn some case, get the company to do what they want, yes also. \n\n\nIn this case, my guess is Apple will rather pay that fine again than comply. Unless that would get them a bigger fine ",
                "author": "permaro",
                "score": 1
            },
            {
                "body": "What they mean is Apple won't allow external links, they'll just keep paying the fines, unless they become much bigger",
                "author": "permaro",
                "score": 1
            },
            {
                "body": "Can any of you find sources for this? \n\nHere's Intel winning a case that has been in court since 2010 to avoid a fine: https://www.theguardian.com/technology/2024/oct/24/intel-legal-battle-against-eu-880m-fine-competition",
                "author": "GreatCosmicMoustache",
                "score": 1
            },
            {
                "body": "Hahaha",
                "author": "KvetoslavNovak",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Yeah, mistakes will always happen.\n\nIf you can try something and revoke it quickly , it's not the problem.\nPeople inevitably make mistakes.\n\nI'm German, our government only sets up laws of they thought of every little details, this is why we're slowly falling behind.",
                "author": "Got2Bfree",
                "score": 1
            },
            {
                "body": "Is this about PWA?",
                "author": "omer-m",
                "score": -1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -7
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -13
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1721675410.0,
        "title": "I found the worst job description I’ve ever seen",
        "author": "KonyKombatKorvet",
        "id": "1e9mkbf",
        "selftext": "I wanted to post a screenshot because it’s almost unbelievable how bad the job posting is, but it’s 3 pages long…\n\nThis is for a Software Engineer Level 2 position:\n\nBefore you call it a joke, here’s the actual link to the posting https://civicpluscareers.ttcportals.com/jobs/14335811-software-engineer-ii\n\nAbstract requirements to analyze and design innovative new software solutions for enhancement of the company’s products. Develop Object Oriented Programming, .NET Core and ASP.NET server apps. Use Web API to add RESTful endpoints. Add and consume Docker containers for RabbitMQ, Redis and SQL. Employ Typescript and React for client-side web apps; Axios, Fetch and Ajax for server-side calls and parse JSON responses; CSS and SASS for branding. Create Azure DevOps pipelines and tasks to build, release, and test .NET, NPM, Docker build, Automation and API tests, and deploy to PR sites. Apply SOLID principles, use DDD to model the business domain, support RDM, and integrate apps in the .NET ecosystem. Develop loosely coupled components with dependency Injection. Create middleware for cross-cutting features of logging, error handling, validations, and auth. Scale containers with Kubernetes. Employ Zustand for state management, ESLint and Prettier for code quality, React Profiler to identify and fix bottlenecks, RPP and HOC design patterns, and Webpack to optimize production builds. Migrate products from CRA to Vite to boost module optimization and support HMR. Use NextJS and SSR to enhance SEO, SSG to pre-render webpages as static assets, and Azure Data Factory to consolidate data and feed it into Azure Blob. Implement and maintain SQL databases, and Redis cache clusters. Write SQL queries and Stored Procedures. Manage MongoDB databases. Retrieve data with GraphQL. Create C# Linq queries with joins and grouping clauses to filter and sort data. Implement encryption with standardized algorithms. Monitor database and clusters’ health and stability. Deliver end-to-end tested software solutions. Employ Jest and ViTest for client-side testing. Add unit tests for server-side components. Use Selenium for UI automation tests. Generate .NET SDKs with NSWAG to expose APIs to other products and for API testing. Generate custom SDKs with client authentication to remove security vulnerabilities. Use Cake to build JS SDKs for mobile apps. Calculate cycle time and track tasks with TargetProcess. Query Azure Application Insights logs to debug defects. Set up, configure, and assign Azure Web App resources. Implement authentication services. Use OAuth 2.0 and OIDC to enable SSO and allow secure API access, ADFS tokens and claims-based authentication to verify user identities and grant approved access, and Identity Provider OKTA to implement MFA and to assess permissions allotted to user sessions. Maintain security and compliance requirements. Monitor and block security threats in real-time. Implement NIST cybersecurity framework. Use Google Analytics and Gainsight to track users’ activity. Use Elasticsearch for full-text search. Write DSL queries for filtering. Develop reindexing processes for migration and database restructures. Scale indices to keep up with data loads. Develop interfaces to interact with AWS hosted zones and DNS records. Build mechanisms to disallow association of hosted zones with more than one domain to prevent route conflicts, record overwriting and keep SSL certificates valid. Mentor and coach team members, identify and suggest fixes for technical errors, performance setbacks and non-standard code. Run planning meetings.\nRequirements: \nBachelor’s degree in Computer Science, Computer Information Systems, Information Technology or a related field.\nTwo years of experience in analysis, design, development, and testing software solutions to include:\nAgile development practices and Object Oriented software development.\nC#, .NET Core, ASP.NET, MVC, Web API and Docker.\nSource Control Management with Git.\nSQL Server, Stored Procedures and Entity Framework.\nDatabase management with Mongo DB.\nRabbitMQ.\nRedis Cache.\nUnit testing and writing testable code. End-to-end automation testing with Selenium.\nReact, Angular, Typescript, Ajax, JQuery, and JSON.\nRESTful and GraphQL.\nContinuous Integration/Continuous Deployment and build pipelines using Azure DevOps.\nTargetProcess.\nReview peer code.\nAzure cloud platform - Application Insights, Web Apps and Key Vault.\nOIDC/OAuth 2.0, Identity Providers (ADFS and OKTA)\nBuild seamless integrations between multiple systems both internal and external.\nSearch technologies - ElasticSearch.\n\n",
        "score": 99,
        "url": "https://www.reddit.com/r/webdev/comments/1e9mkbf/i_found_the_worst_job_description_ive_ever_seen/",
        "num_comments": 44,
        "comments": [
            {
                "body": "Hey ChatGPT write a job posting for a .net developer that uses as many buzzwords and technologies as possible.",
                "author": "andlewis",
                "score": 205
            },
            {
                "body": "Let me guess, $15/hr?",
                "author": "jinendu",
                "score": 61
            },
            {
                "body": "Looks like a non tech person got a bullet point list of the companies tech stack and used AI to generate this listing",
                "author": "riolu98",
                "score": 33
            },
            {
                "body": "Thats what im thinking. HR went to the existing dev and asked \"so give me a breakdown of everything you do on the job and all the tech you guys use\", dev thought it was for a performance review or something so they made it seem as jargonny as possible to make it sound big complex and expensive. HR doesnt know any better than that and just puts it as the job description for a replacement/new addition.",
                "author": "KonyKombatKorvet",
                "score": 25
            },
            {
                "body": "Reminds me of the old (like passed around on VHS) rockwell automation retro encabulator meme in the mechanical engineering world, im very tempted to ask if my experience working with one qualifies me for the position.",
                "author": "KonyKombatKorvet",
                "score": 24
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 23
            },
            {
                "body": "crazy thing is the rest of the job postings for the company are totally reasonable.",
                "author": "KonyKombatKorvet",
                "score": 23
            },
            {
                "body": "They're hiring an entire team. \n\nYeah, we can do each of those things. But getting production work completed usually means taking on a small part of that stack and completing the task with quality solutions.\n\nAny idea of the pay scale?",
                "author": "PickleLips64151",
                "score": 21
            },
            {
                "body": "Internal experiment to see if excess buzz words drives more traffic by broadening search terms",
                "author": "weinermcdingbutt",
                "score": 17
            },
            {
                "body": "doesnt look far off",
                "author": "KonyKombatKorvet",
                "score": 12
            },
            {
                "body": "As a certified AI hater, I'm pretty sure ChatGPT would give a better result than this.",
                "author": null,
                "score": 11
            },
            {
                "body": "Sounds like they want an internal hire and they are forced to advertise for legal reasons so they did this. :D",
                "author": "JebCatz",
                "score": 9
            },
            {
                "body": "I think they just straight up pasted the bullet points and lost the bullets somewhere in the process",
                "author": null,
                "score": 9
            },
            {
                "body": "Yep. https://youtu.be/RXJKdh1KZ0w?si=ytqlNkqXSPCo9cTU",
                "author": "andlewis",
                "score": 7
            },
            {
                "body": "It'll be ironic when the bright spark that came up with this test realises that bots trained on keywords do like keywords, and so they'll change all their job postings to be this jumbled brickwall of vitriol and the conversion rate will fall so low it'll make satan's testicles look like they're hairy stars in the night sky.",
                "author": null,
                "score": 7
            },
            {
                "body": "Vim not mentioned? ok i am in",
                "author": "Salahkai",
                "score": 6
            },
            {
                "body": "AI would have included formatting",
                "author": "ReplacementLow6704",
                "score": 5
            },
            {
                "body": "Been looking all over for a job that has *checks notes* Axios fetching",
                "author": "ChuuToroMaguro",
                "score": 4
            },
            {
                "body": "Also the job is in Manhattan, Kansas. So the pay likely won't be as high as other places, but the money goes a lot further when you're an hour west of Topeka. But OTOH you're an hour west of Topeka. It takes a special breed to be happy with that.\n\nHalf of my family are from about 4 hours west of Topeka, so I say this with love.",
                "author": "ZealousOatmeal",
                "score": 4
            },
            {
                "body": "I consume Docker containers for breakfast",
                "author": "capn_fuzz",
                "score": 3
            },
            {
                "body": "Definition of textWALL",
                "author": "maje90",
                "score": 3
            },
            {
                "body": "ChatGPT wouldn't write it so badly.",
                "author": "Immediate-Flow-9254",
                "score": 3
            },
            {
                "body": "I could totally see a position requiring all of these  \nI cannot see requiring an applicant to have even 1/4 of these qualifications or believing anyone would apply to a job with this many buzzwords and no pay scale.",
                "author": "KonyKombatKorvet",
                "score": 3
            },
            {
                "body": "I love AI, and you're right.",
                "author": "Immediate-Flow-9254",
                "score": 3
            },
            {
                "body": "I feel like they got the developer that was highest on the spectrum to write a detailed spec of what goes on and just used it as-is",
                "author": "johnlewisdesign",
                "score": 2
            },
            {
                "body": "It looks to be $80-100k. I hope it’s much much higher.",
                "author": "erratic_calm",
                "score": 2
            },
            {
                "body": "could very well be the case",
                "author": "KonyKombatKorvet",
                "score": 2
            },
            {
                "body": "I'm out",
                "author": "overbyte",
                "score": 2
            },
            {
                "body": "That kind of makes sense. KC jobs are about $95-110k.",
                "author": "PickleLips64151",
                "score": 2
            },
            {
                "body": "I was in a situation like that. Legacy apps by different teams in different cloud vendor. New CTO comes in and want to consolidarte to Azure. So there is a migration period and some lingering legacy maintenance support to divest from. It happens more than you think.",
                "author": "originalchronoguy",
                "score": 2
            },
            {
                "body": "I hope huge homes are like $500k there then.",
                "author": "erratic_calm",
                "score": 2
            },
            {
                "body": "For $500K, you can get a nice home.",
                "author": "PickleLips64151",
                "score": 2
            },
            {
                "body": "wow that's a lot of buzzword soup",
                "author": "bigsauce456",
                "score": 1
            },
            {
                "body": "Hey, I sound like a perfect fit!",
                "author": "Mad-chuska",
                "score": 1
            },
            {
                "body": "My theory:\n\nRecruitment had no idea what to put here, so they had one of the existing Devs write out what skills would be useful, then they just copy pasted. \n\nIt's the only thing that makes sense. AI wouldn't even produce this kind of result.",
                "author": null,
                "score": 1
            },
            {
                "body": "My last boss wrote job descriptions by taking an export of jira tickets and pumping them into ChatGPT. This is about the result we had too.",
                "author": "elusiveoso",
                "score": 1
            },
            {
                "body": "This is more of a 'Software Engineering Manager'. Employers always want the overqualified candidate that does the work of 7 people. This position should be a manager of a Senior Software Engineer (Backend), Frontend Developer, DevOps Engineer, Database Administrator (DBA), Quality Assurance Engineer, Cloud Engineer, Full-Stack Developer, etc.",
                "author": "Reddichino",
                "score": 1
            },
            {
                "body": "This isn’t for _a_ software engineer.\n\nThis is for an _entire division_ of software engineers.",
                "author": "rekabis",
                "score": 1
            },
            {
                "body": "I lol’d",
                "author": "IronMayng",
                "score": 1
            },
            {
                "body": "\"highest on the spectrum\"",
                "author": "Reddichino",
                "score": 1
            },
            {
                "body": "Do dotNet places usually use both Azure and AWS?",
                "author": "ancientRedDog",
                "score": 1
            },
            {
                "body": "The number of buzzwords isn't that big.\n\nLooks like a typical Fortune 100 (not even big tech) microservice developer.\n\nOne that has to build internal APIs, interact with other teams.\n\nThey use Vault, again which is important for securing backend to databases.\n\nOIDC/Oauth is required for SSO (single sign on). Again, another task you do in the enterprise.\n\nRedis. Caching for your app.\n\nElasticCache, a search engine for youe corporate app.\n\nSame for Mongo/NoSQL.\n\nEverything is what a typical hire does in 3-4 months.\n\n**So what am I missing here?**\n\nMicroservice developer, building internal APIs that require guard rails like Vault and SSO.\n\nTheir API may have a broker/queue - Redis & RabbitMQ.   \n  \nThe green flags for me are: NIST, SSO, Vault for sure. Seems like the company values securing their code.",
                "author": "originalchronoguy",
                "score": 1
            },
            {
                "body": "I love that metaphor and I’m officially stealing it",
                "author": "CyberWeirdo420",
                "score": 1
            },
            {
                "body": "The only thing out of place is Jquery in this day and age. But that fits a Level 2 engineer at my place who could do all of that. Selenium/automated QA is a bit out of scope.\n\nThis is all going to be dependent on rate/pay.",
                "author": "originalchronoguy",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1756529039.0,
        "title": "Where do you deploy your stateful applications?",
        "author": "uber_men",
        "id": "1n3ss7z",
        "selftext": "VPS is one good option. I’m wondering if there are any managed platforms too , where one can deploy stateful servers. \n\nMy requirement is to get simple micro services deployed that handle websocket services.\n\nLambda, vercel and many other platforms are serverless and aren’t a fit for my use case. \n\nOtherwise do you think setting up a proper infra inside a VPS to handle proper containerisation and orchestration for each service deployed can be a good option? ",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1n3ss7z/where_do_you_deploy_your_stateful_applications/",
        "num_comments": 7,
        "comments": [
            {
                "body": "Interesting.",
                "author": "LucaLindholm",
                "score": 2
            },
            {
                "body": "Well, there are lots of managed container hosting platforms. For instance I believe Render and Railway both offer that. AWS has ECS/Fargate as well.",
                "author": "electricity_is_life",
                "score": 1
            },
            {
                "body": "Railway is fantastic",
                "author": "FormuxIO",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "like?",
                "author": "uber_men",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 0
            },
            {
                "body": "No one cares",
                "author": "Business-Row-478",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1748701378.0,
        "title": "One year of building AliasVault: the password manager that protects your privacy",
        "author": "lanedirt_tech",
        "id": "1kzy9rs",
        "selftext": "**🎉 One Year of AliasVault: From First Commit to Cross-Platform app suite**\n\nExactly one year ago today (May 31, 2024), I made the first commit to [AliasVault](https://github.com/lanedirt/AliasVault): a privacy-first, open-source password manager with a built-in alias generator and self-hosted email server.\n\nWhat started with just an idea, has in the last 365 days grown to:  \n⭐ 782 GitHub stars  \n🐳 5,200+ Docker pulls  \n👥 Thousands of active users on the cloud-hosted variant\n\nI started development using the .NET stack with an API and WebAssembly client. But in the recent months I've made it into a full cross-platform suite:\n\n* ✅ Web Client (WASM)\n* ✅ Browser Extensions for Chrome, Firefox, Edge & Safari made with React and WXT\n* ✅ Native iOS App (Face ID, Autofill) using React Native and Turbo Native modules\n* ✅ **Brand new** Android App — *just launched today on Google Play!*\n\n[New Android App in Google Play, compatible with both cloud and self-hosted AliasVault](https://preview.redd.it/3invtzwlm44f1.jpg?width=1440&format=pjpg&auto=webp&s=a79b09f949b52515c0fc83285e579c88cdf60f22)\n\nAliasVault is fully open source (AGPLv3), self-hostable via Docker, and actively maintained. Feel free to check out the repo and try it out yourself! :-)\n\n🧪 GitHub: [https://github.com/lanedirt/AliasVault](https://github.com/lanedirt/AliasVault)  \n📱 Website: [https://www.aliasvault.net](https://www.aliasvault.net)  \n📚 Docs: [https://docs.aliasvault.net](https://docs.aliasvault.net)\n\nThanks to everyone who contributed, tested, gave feedback, or just starred the repo! I have a lot of plans for the coming months in improving and making AliasVault even better while working towards the v1.0 release!",
        "score": 33,
        "url": "https://www.reddit.com/r/webdev/comments/1kzy9rs/one_year_of_building_aliasvault_the_password/",
        "num_comments": 15,
        "comments": [
            {
                "body": "Of course I use ChatGPT (my unofficial marketing co-founder) to help with making the text flow better, why wouldn’t I. English is not my first language, although I try my best despite my Dutch accent 🇳🇱.\n\nFor your question regarding trust in password managers, that is a very good point nonetheless. AliasVault is 100% open source, fully end to end encrypted and fully auditable. Everything from the encryption and build pipeline is available to audit on GitHub. The full security architecture is outlined here: https://docs.aliasvault.net/architecture/\n\nBTW: If anyone reading this has a background in marketing (and wants to help me get rid of my ChatGPT co-founder), feel free to hit me up. I’m looking for people to get AliasVault to the next level.\n\n(Edit: sorry reply was meant towards first comment in this thread. Thanks for your comment @pambolisal, we are alike!)",
                "author": "lanedirt_tech",
                "score": 16
            },
            {
                "body": "Thanks for asking! Yes I do combine it with my work. However I’m working as a freelance contractor so it depends on my other clients. \n\nIn 2024 I spent about 2 days a week on it excluding weekends. But now since January my freelance gig ended,  and because my goal is to grow AliasVault and introduce premium options later. So I’ve been working on it fulltime since January, using my savings to pay the bills. I estimate having spent around 1200-1500 hours on it so far.",
                "author": "lanedirt_tech",
                "score": 12
            },
            {
                "body": "I'm not OP, but I use ChatGPT to write my projects' README. I'm a developer, not a writer or technical writer (which I suck at doing and couldn't care less about).",
                "author": "pambolisal",
                "score": 11
            },
            {
                "body": "Thanks for your question!\n\nAliasVault is a password manager for people who have a high regard for privacy, as it’s built with privacy enhancing features in its core. It features a built-in identity generator (first name, last name, birth date etc.) and more uniquely: a built-in email server with encrypted email storage, allowing you to create a unique private email address for every service you use. All of this without any third party dependencies and a focus on user friendliness.\n\nIt’s fully self-hostable too, including the email server setup. It comes with an installation script that takes care of everything, you’re up and running in literally 5 minutes. It’s more light weight compared to Bitwarden as you can run AliasVault even on a Raspberry Pi with as little as 1GB of ram.\n\nMy vision for the future is to add more privacy related features to the AliasVault platform, such as integrating disposable mobile phone numbers right into the core as well. Also AliasVault will focus more on individuals & families as opposed to enterprise, which Bitwarden is marketed to.\n\nFor full disclosure: I do think Bitwarden is a good option as it’s open source too. But I also believe having (more) alternatives in the password manager space is always a good thing, so people can have a choice.",
                "author": "lanedirt_tech",
                "score": 8
            },
            {
                "body": "How many hours per day you spent coding? I suspect you have daily job so you had to combine both",
                "author": "Admirable-Area-2678",
                "score": 7
            },
            {
                "body": "Probably not a fair judgement, but this is pretty funny",
                "author": null,
                "score": 5
            },
            {
                "body": "I ain’t trusting my passwords with someone who couldn’t even bother to write their own Reddit post and \n\n##\n\n* ✅ needed to \n* ✅ use **ChatGPT** \n* ✅ to write it.",
                "author": "erishun",
                "score": 4
            },
            {
                "body": "🤔 **Part 1: Why do people not remove the emojis?**\n\nLook 👀, I can understand using ChatGPT to write stuff—we’re programmers 💻, not English professors 👨‍🏫. But seriously, just remove the damn emojis and—the—torrent—of—em—dashes. imo it looks unprofessional, it’s like using comic sans in your company logo",
                "author": "Polymer15",
                "score": 3
            },
            {
                "body": "This is great! If you do some nice conversion for imports from 1password (e.g. sha keys, cards, identity, databases) then I’m in!",
                "author": "isfluid",
                "score": 2
            },
            {
                "body": "How would one go about installing this on UnRaid?",
                "author": "Goldarr85",
                "score": 2
            },
            {
                "body": "I'm going to try it!",
                "author": "Fickle-Somewhere-475",
                "score": 2
            },
            {
                "body": "What's the pitch for this over something like bitwarden?",
                "author": "MadCervantes",
                "score": 2
            },
            {
                "body": "Thank you! Yes there are quite a few data model improvements planned on the roadmap for supporting more types of content. Once these are in AliasVault, the importers will be expanded, so any matching data from other password managers will be able to be imported with one click :-).",
                "author": "lanedirt_tech",
                "score": 1
            },
            {
                "body": "The recommended approach to install AliasVault is to use a Linux VM (Ubuntu or AlmaLinux for example), install docker & docker compose, then you can run the AliasVault install script which sets up everything for you. You can find installation instructions here: [https://docs.aliasvault.net/](https://docs.aliasvault.net/)\n\nThere is no one-click installation for NAS systems yet, but it is on the roadmap for v1.0 so will be looked at in the future.",
                "author": "lanedirt_tech",
                "score": 1
            },
            {
                "body": "Thank you! Happy to hear your feedback and experience with it after you had time to try it out! :)",
                "author": "lanedirt_tech",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1747924160.0,
        "title": "What are the best books or resources to learn web security (login, logout, email validation, etc.)?",
        "author": "dapoadedire",
        "id": "1kss55o",
        "selftext": "I'm looking for solid books or online resources that cover web security basics, things like secure login/logout flows, email validation, password handling, session management, CSRF, etc. Not just theory, but practical implementation details too.\n\nPS: I'm building an app called *ChefShare, it's* a recipe sharing platform where users can create, manage, and share recipes. The API supports user auth (including Google), recipe CRUD, likes, and comments.\n\nI'm rolling basic auth myself and want to get the security right. Password storage, sessions, input validation, all of it. ",
        "score": 33,
        "url": "https://www.reddit.com/r/webdev/comments/1kss55o/what_are_the_best_books_or_resources_to_learn_web/",
        "num_comments": 16,
        "comments": [
            {
                "body": "Guide \n- https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html   \n- https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html\n\nAlso go through OWASP top 10 for a few years\n\n\nFor you to test https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/README",
                "author": "ZnV1",
                "score": 16
            },
            {
                "body": "[https://thecopenhagenbook.com/](https://thecopenhagenbook.com/)\n\nYou might recognize Pilcrow - the creator of Lucia Auth.",
                "author": "anotha1readit",
                "score": 3
            },
            {
                "body": "Glad you liked it.\n\nIn case you have some time on your hands, do WebGoat.  \nIt's an intentionally insecure app that has lessons where you identify those vulnerabilities and patch it (and it also explains the issue and correct mitigation). \n\nThat's when you _really_ understand how your apps could be exploited in the real world. \n\nhttps://owasp.org/www-project-webgoat/#\n\n(copy pasted from my sibling comment)",
                "author": "ZnV1",
                "score": 3
            },
            {
                "body": "Thank you",
                "author": "dapoadedire",
                "score": 2
            },
            {
                "body": "Cool resources! Thanks!",
                "author": "Hatthi4Laravel",
                "score": 2
            },
            {
                "body": "Thank you! These are really helpful!",
                "author": "Mountain_Scratch751",
                "score": 2
            },
            {
                "body": "if there's any part of your code where you shouldn't use AI, it's security-critical code.",
                "author": "Wonderful-Archer-435",
                "score": 2
            },
            {
                "body": "This is going to be a learning experience for you, and perhaps not in a good way.\n\n  \nIt'd be better to use something with a mature user management system. The code in Drupal has been used for millions of logins and withstood millions of hacking attempts, why not leverage that? Even WordPress is an option.\n\n  \nIn the case of Drupal, a 'Recipe' could be a new entity type and you'd get CRUD forms automatically. Drush can generate all that for you. It's a steep learning curve but better than writing it from scratch.",
                "author": "TolstoyDotCom",
                "score": 1
            },
            {
                "body": "Are you open to using an auth provider instead of rolling your own? I'd recommend it thatw ay so that you don't have to worry about managing personal info and passwords. \n\nSupabase has been pretty great in my experience. I've also heard Clerk is pretty good",
                "author": "Nabbergastics",
                "score": 1
            },
            {
                "body": "This is great!",
                "author": "Wild-Consideration-3",
                "score": 1
            },
            {
                "body": "Thank you for this!",
                "author": "dapoadedire",
                "score": 1
            },
            {
                "body": "Hmm, good advice\nThank you.",
                "author": "dapoadedire",
                "score": 1
            },
            {
                "body": "Glad you liked it.\n\nIn case you have some time on your hands, do WebGoat.  \nIt's an intentionally insecure app that has lessons where you identify those vulnerabilities and patch it (and it also explains the issue and correct mitigation). \n\nThat's when you _really_ understand how your apps could be exploited in the real world. \n\nhttps://owasp.org/www-project-webgoat/#\n\n(copy pasted from my sibling comment)",
                "author": "ZnV1",
                "score": 1
            },
            {
                "body": "Glad you liked it.\n\nIn case you have some time on your hands, do WebGoat.  \nIt's an intentionally insecure app that has lessons where you identify those vulnerabilities and patch it (and it also explains the issue and correct mitigation). \n\nThat's when you _really_ understand how your apps could be exploited in the real world. \n\nhttps://owasp.org/www-project-webgoat/#\n\n(copy pasted from my sibling comment)",
                "author": "ZnV1",
                "score": 1
            },
            {
                "body": "Glad you liked it.\n\nIn case you have some time on your hands, do WebGoat.  \nIt's an intentionally insecure app that has lessons where you identify those vulnerabilities and patch it (and it also explains the issue and correct mitigation). \n\nThat's when you _really_ understand how your apps could be exploited in the real world. \n\nhttps://owasp.org/www-project-webgoat/#\n\n(copy pasted from my sibling comment)",
                "author": "ZnV1",
                "score": 1
            },
            {
                "body": "Start building the authentication system and use AI as your guide. Ask AI how to begin! let it give you the solution. Then, learn the details from the official documentation or ask AI to explain further. But don’t just copy and paste, understand what you're doing. Treat AI like your personal mentor. And yes, if a developer can't build a secure authentication system, they're not really a developer.",
                "author": "_sonu_singha",
                "score": -4
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1737959406.0,
        "title": "The Ultimate Free Resource Thread (please contribute!)",
        "author": "OriginalPlayerHater",
        "id": "1ib1r40",
        "selftext": "# Hosting Platforms\n## Static Hosting\n- [GitHub Pages](https://pages.github.com)  \n- [Cloudflare Pages](https://pages.cloudflare.com)  \n- [Netlify](https://www.netlify.com) (Generous free tier for personal projects)  \n- [Vercel](https://vercel.com) (Free for small-scale projects)  \n\n## Dynamic Hosting\n- [Render](https://render.com) (Free tier for basic web services)  \n- [Fly.io](https://fly.io) (Small free tier for apps)  \n\n## VPS Hosting\n- [Oracle Cloud](https://www.oracle.com/cloud/free/) (Legendary free tier: 2 VPS with 1 OCPU, 1 GB RAM each)  \n- [AWS Free Tier](https://aws.amazon.com/free/) (EC2 micro instances for a year)  \n- [Google Cloud Free Tier](https://cloud.google.com/free) (1 f1-micro VM, limited free resources)  \n\n---\n\n# Cloud Platforms and Resources\n## General Cloud Providers\n- [Oracle Cloud Free Tier](https://www.oracle.com/cloud/free/)  \n- [Google Cloud Free Tier](https://cloud.google.com/free)  \n- [AWS Free Tier](https://aws.amazon.com/free/)  \n- [Microsoft Azure Free](https://azure.microsoft.com/free)  \n\n## Specialized Cloud Tools\n- [Cloudflare Workers](https://workers.cloudflare.com) (Free for up to 100,000 requests/month)\n- [R2, CDN, turnstile and ddos protection](https://www.cloudflare.com/plans/free/) (Thank you /u/BPC56)\n- [AWS Lambda](https://aws.amazon.com/lambda/) (Free tier: 1M requests/month)  \n- [Backblaze B2](https://www.backblaze.com/b2/cloud-storage.html) (10 GB free storage)  \n\n---\n\n# Authentication & Backend Services for Web Development\n## Authentication and Database as a Service\n- [Firebase Authentication](https://firebase.google.com/products/auth) (Free tier available)  \n- [Supabase Auth](https://supabase.com) (Generous free tier for small apps)  \n- [Auth0](https://auth0.com) (Free tier: 7,000 active users/month)  \n- [Clerk](https://clerk.dev) (Free for 5,000 monthly active users)  \n\n## Backend as a Service\n- [Firebase Realtime Database](https://firebase.google.com/products/realtime-database) (Free tier with usage limits)  \n- [Supabase](https://supabase.com) (Free for up to 500 MB database and generous bandwidth)  \n- [Appwrite](https://appwrite.io) (Self-hosted, free and open source)  \n- [PocketBase](https://pocketbase.io) (Self-hosted, free and open source)  \n\n---\n\n# Code Repositories and CI/CD\n## Source Code Hosting\n- [GitHub](https://github.com) (Free for unlimited private repositories)  \n- [GitLab](https://gitlab.com) (Free for unlimited private repositories)  \n- [Bitbucket](https://bitbucket.org) (Free for up to 5 users in private repositories)  \n\n## CI/CD Platforms\n- [GitHub Actions](https://github.com/features/actions) (Free for public repositories, limited minutes for private)  \n- [GitLab CI/CD](https://docs.gitlab.com/ee/ci/) (Free for up to 400 pipeline minutes/month)  \n- [CircleCI](https://circleci.com) (Free for small projects, 6,000 credits/month)  \n\n---\n\n# Development and Deployment Tools\n## Containerization & Orchestration\n- [Docker Hub](https://hub.docker.com) (Free tier available for image hosting)  \n- [Kubernetes](https://kubernetes.io) (Self-hosted, free and open source)  \n\n## Static Site Generators\n- [Hugo](https://gohugo.io) (Free and open source)  \n- [Jekyll](https://jekyllrb.com) (Free and open source)  \n- [Astro](https://astro.build) (Free and open source)  \n\n## APIs & Webhooks\n- [Zapier](https://zapier.com) (Free plan with limited zaps and tasks)  \n- [n8n](https://n8n.io) (Self-hosted, free and open source)  \n- [Stripe](https://stripe.com) (No setup costs, pay-as-you-go for transactions)  \n- [Twilio](https://www.twilio.com) (Free trial with limited credits)  \n\n## Large Language Model (LLM) Tools\n- [Cline](https://github.com/cline-tools/cline)  \n  AI-powered coding assistant with editor integration and workflow automation.\n\n- [Roo Code](https://github.com/RooVetGit/Roo-Code)  \n  Autonomous programming assistant for VS Code with file and command management.\n\n- [Gemini 2.0 Flash via Google AI Studio](https://ai.google)  (15 rpm free)\n  Advanced multimodal AI model with text, speech, and image capabilities.\n",
        "score": 110,
        "url": "https://www.reddit.com/r/webdev/comments/1ib1r40/the_ultimate_free_resource_thread_please/",
        "num_comments": 19,
        "comments": [
            {
                "body": "I'd add [**seenode**](https://seenode.com) to Dynamic hosting category. [**UpCloud**](https://upcloud.com/) and [**Hetzner**](https://www.hetzner.com/) to VPS category.",
                "author": "No-Anywhere6154",
                "score": 5
            },
            {
                "body": "from my obsidian\n\n# Meta\n- https://docs.google.com/spreadsheets/d/1sFHNQKJ3H81nXiSPqslYurquBFJrU-X9qor14uXBueo/edit?pli=1&gid=0#gid=0\n- https://docs.google.com/document/d/1CGuBZOfhzFgBMTCBdJYX1tscYNXK-GXoZYewXu49Jb0/edit?tab=t.0\n- https://designresourc.es/\n- https://community-en.eagle.cool/tools/all/\n\n# Mocks\nAnthony Boyd rlly good ones [https://www.anthonyboyd.graphics/mockups/](https://www.anthonyboyd.graphics/mockups/)\n\nLS GFX - [https://www.ls.graphics/free-mockup](https://www.ls.graphics/free-mockups)\n\nMockups Design - [https://mockups-design.com/](https://mockups-design.com/)\n\nGraphberry - [https://www.graphberry.com/](https://www.graphberry.com/)\n\nMockupFree - [https://mockupfree.co/](https://mockupfree.co/)\n\nMockup World [https://www.mockupworld.co/](https://www.mockupworld.co/)\n\nResource Boy [https://resourceboy.com/mockups/](https://resourceboy.com/mockups/)\n\nYellow Images [https://yellowimages.com/mockups/category/free-mockups](https://yellowimages.com/mockups/category/free-mockups)\n\nFruited Mockups [https://fruited-design.com/free_mockup](https://fruited-design.com/free_mockup)**\n- \n# illustrations\n- https://storyset.com/search?q=tree\n- https://vectorcraftr.com/directory/techcompany\n- ### 3D Illustrations\n\t- https://storytale.io/browse/?isFree=true\n# icons\n- https://heroicons.com/\n- https://tablericons.com/\n- https://www.flaticon.com/\n- https://devicon.dev/\n- [icons, arrows, doodles](https://handyarrows.com/)\n- ### 3D icons\n\t- https://3dicons.co/\n# Generators\n- ![[Pasted image 20241124191320.png|100]] https://superdesigner.co/tools\n- https://sapiens.ui8.net/3f5d3s7 ![[Pasted image 20241124214940.png|100]]\n- \n\n# Design Examples\n- https://www.uidesigndaily.com/figma\n# Graphics\n- https://echarts.apache.org/examples/en/index.html#chart-type-flowGL\n\n\n# SVG background patterns\n- https://www.svgbackgrounds.com/\n- https://pattern.monster/\n- https://heropatterns.com/\n\n# Stock Photos\n- https://www.pexels.com/search/illustration/\n- https://www.unsplash.com\n- https://www.shopify.com/stock-photos\n- https://stocksnap.io/\n\n# Inspiration\n- https://www.desigeist.com/\n- https://www.jackywinter.com/category/illustrators-and-makers\n- https://www.lummi.ai/illustration\n\n# Figma Templates Mockups\n- https://craftwork.design/downloads/category/freebies/\n\n\n# Tools\n- [favicon](https://icon.horse/)\n- https://free-for.dev/#/?id=font\n- how much should i charge - https://thenuschool.com/how-much/ \n- page, flow checklist - https://www.checklist.design/\n- tools - https://www.bestfreetools.io/\n\n\n# API\n- picture ipsum https://picsum.photos/200/300",
                "author": "neuralSalmonNet",
                "score": 5
            },
            {
                "body": "sparkle attempt work smell salt offbeat normal expansion roll lock\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": "nrkishere",
                "score": 5
            },
            {
                "body": "[notificationapi.com](http://notificationapi.com) for 10k emails, 100 SMS, and other types of notifications",
                "author": "shishami",
                "score": 4
            },
            {
                "body": "LLM Tools:\n[Harbor](https://github.com/av/harbor) - dockerized LLM toolkit to run models and (many) related services locally",
                "author": "Everlier",
                "score": 3
            },
            {
                "body": "[stacktape](https://stacktape.com) is a Heroku-like PaaS that deploys to your own AWS account. Both AWS and stacktape have a generous free tier.",
                "author": "ugros",
                "score": 2
            },
            {
                "body": "Thank you so much",
                "author": "Parking-Awareness101",
                "score": 2
            },
            {
                "body": "You should definitely add [Turso](http://turso.tech) as a near-legendary free tier.",
                "author": "StringsAndHammers",
                "score": 2
            },
            {
                "body": "Love this! Thank you for sharing :)",
                "author": "Dear-Dingo-8448",
                "score": 2
            },
            {
                "body": "For frontend, I'd add [icones.js.org](http://icones.js.org)! Free icons (SVG, PNG, etc)",
                "author": "l00sed",
                "score": 2
            },
            {
                "body": "Koyeb.com pythonanywhere.com",
                "author": "kishore2u",
                "score": 2
            },
            {
                "body": "This. One thing though, the site always lags if I press load all and the search is pretty sluggish, but overall it's an unbeatable resource for open source icons.",
                "author": "darknezx",
                "score": 2
            },
            {
                "body": "Thanks a lot for making this post and everyone contributing !",
                "author": "STELLAR_Speck",
                "score": 1
            },
            {
                "body": "The oracle cloud entry should reflect the free tier allowing 4 x Ampere VMs of up to 24gb ram in total. The current one is for non-Ampere.",
                "author": "darknezx",
                "score": 1
            },
            {
                "body": "**Static Hosting:** [Nuxthub](https://hub.nuxt.com/)",
                "author": "sefabulak",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1759140621.0,
        "title": "Looking for a tool to convert table to website block",
        "author": "ariel4050",
        "id": "1nte4s2",
        "selftext": "https://preview.redd.it/t4u6gb9rv2sf1.png?width=1274&format=png&auto=webp&s=4452626c43c92cc25353d2963bfda9c3e6130b29\n\nYou know how platforms such as Coda, Notion, Smartsheet, etc let you build a table and then create different \"views\"? I am looking for a tool that can basically take a table (ideally from Coda but Google Sheets is okay) and transform it into a website block in the same format as the \"Card\" view I have set up in Coda (see image). It should have custom design capabilities that allow me to inject CSS rules and add scripts to enhance its functionality. I'd also like to add filtering options for users.\n\nPlease note that I am aware of services such as Sheet2Site, SpreadSimple, etc that can convert Google Sheets into websites. However, these tools require separate monthly subscriptions which I'd have to pay in addition to my existing web management platform. I **do not need** real-time syncing capabilities, and thus am only looking for tools that are free or charge a one-time fee.\n\nCan anyone recommend any tools that can help me achieve this? I am not a developer by any means so I will need something less coding intensive. I appreciate any suggestions. \n\n\\--  \nPS - Please excuse the blurring in the image. I'm super paranoid about privacy, even when it comes to work samples. ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1nte4s2/looking_for_a_tool_to_convert_table_to_website/",
        "num_comments": 2,
        "comments": [
            {
                "body": "I'd say, use a self-hosted static block and export your Coda/Sheets table to CSV or JSON. Then you can render cards on a single page and style it however you want.\n\n\n\nSimplest stack with no subscriptions would be: PapaParse to read CSV in the browser, a tiny template for a \"card\" HTML chunk and MixItUp or List.js for filtering/sorting, Fuse.js for search\n\n\n\nAll that gives you a card grid, custom CSS/JS, and no real-time sync.",
                "author": "firedogo",
                "score": 1
            },
            {
                "body": "Make a mockup that looks how you want with HTML and CSS. Export the table as a structured text format like CSV or JSON. Populate your HTML with the data from the CSV/JSON.\n\n(You're trying to do something that seems rather specific to your needs and rather basic to implement. There's likely not a dedicated tool for this, and even if there is, it's probably more appropriate to just set it up yourself anyway.)",
                "author": "ganja_and_code",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1760057398.0,
        "title": "Streamtario (beta) : a modern, open-source Stremio inspired media streaming platform.",
        "author": "DrIsLightInDarkness",
        "id": "1o2n09y",
        "selftext": "Excited to share a project I've been working on for sometime now i called Streamtario. It's a streaming app inspired by Stremio, but rebuilt from the ground up, still in development, there is a lot to be done and bugs on every corner, id love some help if anyone's interested, also i have yet to publish an installer/packaged version.\n\nSome of the key features include:\n\n* **Addon System:** Addon parsing compatibility with official and community Stremio addons.\n* **Search:** search for content across all your installed addons.\n* **Streaming:** A robust backend powered by a custom torrent client for real-time streaming.\n* **High-Performance Desktop Client:** A native desktop experience with a C++ host and an embedded MPV player.\n* **Profiles**: Create pin protected profiles and manage them at ease.\n* **History**: Keep track of what you watch and resume exactly where you left off\n* More Details on [GitHub ](https://github.com/Ali-Kabbadj/Streamtario)\n\nThe entire platform is built with a microservices approach, with services for account management, addon control, authentication, and streaming, all communicating through REST APIs, a federated GraphQL gateway, and a Redis event bus.\n\n# Architecture :\n\nhttps://i.redd.it/sv6sxxjik6uf1.gif\n\nas i said before I'm still actively developing it, but the core features are stable. I would love to get your feedback!",
        "score": 5,
        "url": "https://www.reddit.com/r/webdev/comments/1o2n09y/streamtario_beta_a_modern_opensource_stremio/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1751707218.0,
        "title": "Speed vs. quality trade-off in e2e testing - would love your feedback!",
        "author": "TranslatorRude4917",
        "id": "1ls5ud5",
        "selftext": "Hey r/webdev,\n\nI'm a FE developer, but also a bit of a quality freak—I always seem to end up being the testing and code quality evangelist on my team :D After writing hundreds of e2e test at several companies, and running into the same issues over and over again, I've started working on a side project to see if I can find a better way to tackle some of the common pain points.\n\nI think we've all felt the pain of brittle E2E tests constantly breaking with even minor UI changes. It’s a huge drain on developer time that could be better spent elsewhere. After speaking with several QA professionals as well, I know we're not alone in feeling this frustration, this affects developers and QA alike.\n\nThe core conflict, as I see it, is this: We have established best practices like the Page Object Model (POM) to help us write maintainable and scalable tests, however, the high manual effort and time required to implement industry best bractices correctly often leads to them being skipped, which circles us right back to the original problem of brittle, hard-to-maintain tests.\n\nTo help me get a clearer picture for my project, I'd appreciate it if you could share your experiences on the following:\n\n**What is your team's current E2E testing stack?** (e.g., Playwright, Cypress, or paid SaaS tools)\n\n**What is your team's approach to test structure and maintainability, specifically regarding the Page Object Model (POM)?**\n\n* we use POM\n* we try, but it's not a standard\n* we write scripts directly against the UI\n* we know it, but it's too much effort\n* wtf is POM?\n\n**What is your philosophical preference for testing tools?**\n\n* a utility that generates code I can own and run myself\n* a managed cloud platform that handles everything\n\n**What is your stance on AI's role in testing?**\n\n* I use AI tools and they're helpful\n* I tried them, but they were unreliable/flaky\n* I'm skeptical and prefer established frameworks\n* I'm open to AI if it assists with best practices, but not doing everything for me\n\nApart from this \"formal questionnaire\" I would also love to hear any stories, anecdotes, and just your overall feeling about the state of e2e testing and your relation with it.\n\nThanks in advance for your time and insights!\n\n[View Poll](https://www.reddit.com/poll/1ls5ud5)",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1ls5ud5/speed_vs_quality_tradeoff_in_e2e_testing_would/",
        "num_comments": 13,
        "comments": [
            {
                "body": "I don't even know what POM is xD..\n\nI'd rather not use AI at all when coding.",
                "author": "pambolisal",
                "score": 3
            },
            {
                "body": "We evaluated multiple web test frameworks and ended up with playwright. I think the POM is a neat idea, but in practice, it's just another abstraction that needs to be written and maintained. If you use aria labels and selectors, you get accessibility and something pom-like for free.   \n  \nAlso, with modern tooling, I do not think you need it, i.e. you can just pick a playwright selector from an HTML snapshot. It's not always perfect, but iof you use aria labels and roles, it should be rather good.\n\nDisclamer: I work at Octomind, a web test ai startup",
                "author": "kostaw",
                "score": 2
            },
            {
                "body": "e2e is hard to pick up for most teams, you need that one evangelist guy\n\nthey're either too stuck up in their ways, or too swamped with other work\n\nbut they always love it if you add the e2e scripts for them (assuming it doesn't break all the time or isn't a PR requirement)\n\nbeen pushing for e2e for several years and my projects are the only ones to ever have any in my business group.\n\n  \nlove PO, it's not really more effort, it's probably less when done right, if you have one test suite, not really that beneficial. when you have multiple test suites, then it shines. as that PO becomes like a selector utility / action utility that can be reused over and over.\n\n  \nregarding philosophy, i try not to test every little thing.\n\nfill out the required fields, grab a screenshot, go to the next page, repeat\n\nthe screenshots act as visual regression, commit those images as part of PR review\n\nthis makes any initial PR with long flows a nightmare, but long flows are where you want visual regression.",
                "author": "artesre",
                "score": 2
            },
            {
                "body": "Exactly my experience :)  \nUnfortunately, in my 9-5 job, we're using cypress that doesn't have built-in screenshot capability with regression tests like playwright, but in my side project I love doing that :D   \nJust clicking through a user flow, taking screenshots along a way.",
                "author": "TranslatorRude4917",
                "score": 2
            },
            {
                "body": "We use Playwright with custom fixtures and POM. Writing a first test is much slower because of it but adding test cases or making tweaks due to changes to the page layout is much quicker. It depends from project to project and person to person how deep the tests are, ranging from extensive test suites to simply opening every page and checking for errors.\n\nAs for AI tools, I'm very excited about the Playwright MCP:\n\n* It potentially allows us to write a lot of e2e tests by explaining a use case to Copilot in basic terms.\n* We could potentially use it to generate a set of tests to simply assert how the application works as-is, useful for adding tests to existing/legacy applications. Even if it only cover a small part of the application this would be useful\n* It could potentially be used as a tester too, just opening the application and clicking around, trying to find error messages or overlapping UI elements in a freeform way without having to actually write out test cases\n\nYou'll note I used the word 'potentially' in each point there, that's because the MCP is still in an early stage and has a few hiccups as-is. We've spent some time experimenting with it but it's clear that it needs a couple of updates from playwright and/or vscode, and a lot of work from us to set up a ridiculous set of prompt instructions to make it work properly.",
                "author": "Spongeroberto",
                "score": 1
            },
            {
                "body": "This might be a hot take but I feel like \"we\" (devs) have some kind of natural affinity toward over-complicating things with \"neat\" solutions. I personally think POM has its place, but also that its place is in fewer scenarios than most people have. One more buzzword. One more fad. One more reason to drive a thousand Medium posts about how this is the One True Way to Organize Tests and Maximize Productivity in Your Test Suite. \n\nMaybe I'm just jaded but I've come full circle on my test suites, from simple and direct to \"hey, that's as complex as the app itself now\" back to simple and direct. I think in E2E in particular, I tend to be much more focused on \"flows\". This might be specific to the types of apps I deal with but usually I've found it's more valuable in a given timebox of X days to try to cover more flows than one flow more thoroughly. If I find myself wanting to write whole classes just to organize all the data I'm managing to drive a few tests, my tests are probably getting too complex and it's time to test something else.\n\nThere comes a time when you have to ask - is my test suite so complex that I need a test suite for my test suite?",
                "author": "CodeAndBiscuits",
                "score": 1
            },
            {
                "body": "Thanks, that's also a valuable insight 😀 I suspected most of the webdev community is not familiar with testing best practices - that's what I experienced at most of the companies I worked with. I always feel like testing is hated upon and test code is treated as something secondary, the necessary evil. \n\nImo treating test code with the same care as the source code of the application has huge benefits, it makes your tests more reliable and allows you to have reusable test utilities to avoid code duplication. And magically, having a well-built test rig, and writing code that's testable results in better code quality in your source code as well. Something being testable requires respecting the SOLID principles, so a huge value I see in testing done well is that it pushes your project towards better standards in general :).\n\nThe Page Object Model (POM) is a common practice used in UI/e2e testing. The main idea is that you create an abstraction layer between the native UI elements and the testing framework to hide implementation details (fragile selectors, repeated UI interactions) avoiding code duplication and exposing a simple interface to your test framework.\n\nSo for example you could have the following Page Object and playwright test to test your Todo application. I think it's immediately visible how much time and maintenance effort one can save on the log run by adopting a smarter way of testing, plus using the domain language of your application makes your tests read like a novel.\n\n```\n // BAD: Test with raw selectors\nfill(\"input#todo\", \"do this\")\npressEnter()\nfill(\"input#todo\", \"do that\")\npressEnter()\ncheck(\".todo-checkbox:first-child\")\ncheck(\".todo-checkbox:nth-child(2)\")\nexpectText(\".footer\", \"1 item left\")\n\n```\n \n\n``` \n// GOOD: Test using Page Object\npage.addTodo(\"do this\")\npage.addTodo(\"do that\")\npage.toggleTodo(\"do this\")\npage.verifyTodoCount(1)\n\n```\n\n```\n// hide complexity of interaction\n// encapsulates brittle locators\nclass TodoPage {\n  private inputSelector\n  private footerSelector\n  private todoItemSelector\n\n  openApp()\n  addTodo(text) \n  toggleTodo(text)\n  verifyTodoCount(expectedCount)\n}\n```",
                "author": "TranslatorRude4917",
                "score": 1
            },
            {
                "body": "I read it as po-r-n until you capitalized it.",
                "author": "PureRepresentative9",
                "score": 1
            },
            {
                "body": "Hey I checked out Octomind, it's a great no-code solution.  \nGenerating tests using natural language worked exceptionally well, but I had some trouble with the recorder.  \nI find debugging tests quite accessible, I like that even though it's a no-code solution, you can check under the hood :) \n\nI agree with your statement that POM is another abstraction to be written and maintained, and that you can get \"something pom-like for free\", but I think that mainly applies to websites that follow accessibility standards. Unfortunately, all the companies I worked with were always behind when it came to accessibility, but that might be just me :D \n\nOne thing that I've never seen solved by anything else but pom is code duplication. Do you mind if I ask if Octomind is capable of something like that? If I had some repeated parts of the same flow in multiple tests cases, and that part changed, would Octomind be able to fix all broken tests at once by recognizing that pattern? If yes, that would be amazing!",
                "author": "TranslatorRude4917",
                "score": 1
            },
            {
                "body": "Thank you for sharing, it's great to hear that there are some like-minded devs as well who enjoy - if I can say - enjoy testing :D   \nI'm also doing the same practices in my daily job, depending on the area I'm working on I might write more complex or shallower POM.  \nSo if I got it right you're mainly using the usual programming tools for testing and not working with any saas product. Same for me, I like having control.\n\nAs for PW MCP: I haven't tried it yet, but I had pretty good results with Browser MCP and Playwright recorder. I recorded a test using PW + VsCode extension, then asked Browser MCP to repeat the same scenario but also create POM during the run. I only used it in simple cases so far, but the initial results were impressive.\n\nMy goal would be to create a tool that allows you to do this in one go: Immediately get POM as a result of a recording, and reuse that pom on subsequent recordings to always end up with maintainable code.",
                "author": "TranslatorRude4917",
                "score": 1
            },
            {
                "body": "I hear you, and you caught me, I'm definitely prone to overcomplicating things :D. \nI'm am a huge advocate of design patterns in general, and there was a time when I tried to mindlessly apply them everywhere. I needed some guidance to learn to set the beauty and elegance in simple, straight-forward solutions. Now I consciously want to avoid increasing complexity just for the sake of complexity. \nYour comment - and some of the others' as well - pushed me to rethink the approach I want to take with my testing tool, and enforcing POM usage is probably not the way to go. I'd still want to keep POM as an option, but not a requirement. I'm also curious to see the the results of the poll, probably that will also lead to this conclusion :)",
                "author": "TranslatorRude4917",
                "score": 1
            },
            {
                "body": "Yes we that aria could be used more... also in our own app. If you take the time to invest in POM, however, I just think it's usually a better trade-off to invest in aria instead. If you are set up to do so, e.g. can send PRs and get them merged.\n\nIn Octomind, each selector would need to be fixed one-by-one. However, there's a good chance you just click on \\`repair\\` and an agent will do the work for you and present you with a diff. And even if not, you can always change the selector in the snapshot by hand. In that case, of course POM would be better but it's also a very specific case. A lot of times, something in the UX flow changes as well and then the POM does not necessarily help. Note that in Octomind, we achieve re-usability by re-using tests as dependencies for other tests, so with a bit of luck you only need to fix very few selectors to get n test cases back to green.",
                "author": "kostaw",
                "score": 1
            },
            {
                "body": "Ahh I see, this sounds great! I'll spend some more time playing with the tool :)",
                "author": "TranslatorRude4917",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1754266497.0,
        "title": "Which is the best eCommerce/Site builder (If there all bad)???",
        "author": "CTT1_",
        "id": "1mgywng",
        "selftext": "Hey everyone,  \nI'm building a website for my 3D printing business, and I’m looking for the best website builder/platform that can handle everything I need without being too expensive or overly complicated to manage. Any recommendations or real-world experiences with a platform that fits these needs? Is there *any* platform that can actually do all this well? Or am I better off hiring a dev to custom build it?\n\nI hear Shopify, Wix, Squarespace, and many others are terrible and Webflow is too hard for newbies like me and Webflow and Framer doesn't have good eCommerce I guess? Loveable and Replit I'm not too sure of and how easy it would be to edit and build the site after using the AI builders\n\nAny help would be great! I spent weeks trying to find the best one and that WONT BREAK THE BANK like Shopify would if you count all the plugins + shopify I would have to pay for adding up to over $100+ a month or $1200+ a year which is crazy for a startup\n\n**Online Store / Shop**\n\n* Product listings with images, variants (size, color), and pricing and customer reviews\n* Shopping cart and secure checkout\n* Inventory management\n* Mobile-friendly design\n\n**User Account Creation / Login**\n\n* Order history & Tracking\n* Address book\n* Wishlist / Favorites\n\n**Subscription Plans**\n\n* Monthly boxes or Subscription\n* Automated billing & account access\n\n**Affiliate / Referral Program**\n\n* Customers can earn credit or commissions\n* Dashboard to track earnings and referrals",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1mgywng/which_is_the_best_ecommercesite_builder_if_there/",
        "num_comments": 9,
        "comments": [
            {
                "body": "If you're doing this yourself and want to spend as little time as possible learning how to use a platform, go with Wix or Squarespace.\n\nIf you're doing this yourself and you're willing to spend some time learning how to use a platform, go with Shopify.\n\nIf you're hiring a dev / team and plan on scaling in the future with custom functionality and want total control, go with Wordpress / WooCommerce. The learning curve for this option will likely be too steep if you're doing this yourself.\n\nThe reason Shopify, Wix, Squarespace etc. are expensive is because they're doing all the leg work for you. You can't have a platform that does everything you want, includes web hosting, and costs pennies. The cheapest (popular) option is Wordpress/WooCommerce, but that's cheap only in terms of dollars, once you factor in the investment of time it's a different story.\n\nYour requirements are pretty significant too. Some of the things you listed are pretty standard like secure checkout, inventory management, etc., but having regular e-commerce, plus subscriptions, plus affiliate and referral programs, with some of the other small functionality like wish lists.... this is a very comprehensive site you're looking to build. There is a lot more work than you likely think building out things like subscriptions and affiliate programs. If you think $1200 is expensive, you'll have major sticker shock when you see what a competent dev would charge to build this site.",
                "author": "sketchy_ppl",
                "score": 7
            },
            {
                "body": "If you got developer quotes, Shopify would start looking like a bargain. This project is a lot bigger than you may realize.",
                "author": "Bunnylove3047",
                "score": 2
            },
            {
                "body": "You should avoid drag-and-drop builders, they're limited, harder to scale, and lock you into their platform. You’ll end up paying for basic features like subscriptions, affiliates, or even custom checkout. They also add bloat, which slows your site. With WordPress and WooCommerce, you get full control, better performance, and tons of free plugins, no need to subscribe to expensive premium tools unless you want to. For hosting, I personally use NixiHost, they’ve kept my sites running smoothly, their pricing is fair, and their support has always been responsive.",
                "author": "Extension_Anybody150",
                "score": 1
            },
            {
                "body": "You can get all those features built-in with UltimateWB. Costs less than Shopify. Much better than going with a custom build because you get easy upgrades with platforms.",
                "author": "webdevdavid",
                "score": 1
            },
            {
                "body": "Thank you everyone for the replies and dms!! I decided to bite the bullet and went with Shopify. Since that seems to be the best overall and easiest to build a site",
                "author": "CTT1_",
                "score": 1
            },
            {
                "body": "I would suggest WordPress/WooCommerce for something like this. As you mentioned Shopify is great but their price adds up quick. Everything you listed can be added to WooCommerce quite easily with plugins, you just need the right ones and good integrations.",
                "author": "atlasflare_host",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1751123443.0,
        "title": "Created product to automate timesheets with Github and AI for developers. Should I monetize it?",
        "author": "Salty_Lychee8874",
        "id": "1lmp3yx",
        "selftext": "Filling timesheets have been a pain since the start of my career. I am just too lazy maybe, but i think my peers face the same. After trying so many available platforms, which are just too complex for me, I created platform to manage clients, automated time logs and beautiful timesheets that I can share across my clients.\n\nThe core was to automatically log my time based on the commits I push across my projects. At the end of the month, sprint I just select the logs and create a beautiful timesheet and don't miss any commits, plus my revenue.\n\nDo you face this problem, freelancers and other devs?",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1lmp3yx/created_product_to_automate_timesheets_with/",
        "num_comments": 13,
        "comments": [
            {
                "body": "I'd rather not rely on AI.",
                "author": "pambolisal",
                "score": 3
            },
            {
                "body": "Indeed.\n\n\nAlso the unexpected calls and discussions that happen as people ask questions.",
                "author": "0dev0100",
                "score": 2
            },
            {
                "body": "For consulting, billed time includes both meetings and development. If you’re basing a time sheet solely on commit timestamps to various projects, you’re not considering meetings, which can take up a substantial part of a developer’s day, especially as they move upward into leadership.",
                "author": "richardtallent",
                "score": 2
            },
            {
                "body": "Yes",
                "author": "TheX3R0",
                "score": 1
            },
            {
                "body": "Interesting! To be useful more broadly, you’d also need to pull in meetings from people’s calendars.",
                "author": "richardtallent",
                "score": 1
            },
            {
                "body": "Timesheets are definitely a pain for a lot of developers and freelancers I know. Automating them based on commits is a smart idea and could save a lot of time and hassle. If it works well, I’d say there’s definitely potential to monetize it. People pay for tools that actually make their work easier.",
                "author": "CommentFizz",
                "score": 1
            },
            {
                "body": "Why is that? In my usage, it has been pretty accurate plus it sums up all your commits from the day into one beautiful time log.",
                "author": "Salty_Lychee8874",
                "score": 1
            },
            {
                "body": "Can you please elaborate on that?",
                "author": "Salty_Lychee8874",
                "score": 1
            },
            {
                "body": "Yeah. It definitely made mine easier. I dont spend anytime on filling timesheets. Just complete tasks, write a good commit message (which i do anyways) and everything is ready when needed to bill the clients",
                "author": "Salty_Lychee8874",
                "score": 1
            },
            {
                "body": "It's a principle.",
                "author": "pambolisal",
                "score": 1
            },
            {
                "body": "Sure. Thats fair.",
                "author": "Salty_Lychee8874",
                "score": 1
            },
            {
                "body": "Great point. I will work on that as well.",
                "author": "Salty_Lychee8874",
                "score": 1
            },
            {
                "body": "I have an MVP. - [logtime.ai](http://logtime.ai) \\- will you give it a try?",
                "author": "Salty_Lychee8874",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1681735029.0,
        "title": "Cheaper Auth Provider than Auth0?",
        "author": "relderpaway",
        "id": "12peg4z",
        "selftext": "Hey, \n\nInitially we created our own auth solution but have been meaning to move over to a 3rd party provider for a while now. And I've just started looking more seriously at Auth0. Initially I really liked it but I'm starting to realise that they might want to charge us in the range of $3-$5k a month which is a bit too expensive I think. So I'm curious what other alternatives we should consider.\n\nOur current setup is a React frontend that registers and authenticates through a Kotlin/Java Backend that we control. We are in the 10-100k MAU user range which will hopefully continue to grow other the next few years. And we are in an area that deals with relatively sensitive data (As well as some fraud) so having an Auth provider that helps us combat that would be nice. \n\nSome thing that I liked from Auth0 That would be good to have in an alternative:\n\n* Ability to do a trickle migration of existing users (when a new user logs in Auth0 would send a request to our old auth service and then from there take over that user on subsequent logins)\n\n* Handles Duplicate users logging in (e.g if a User has both an Email and Facebook account under same email it would handle merging them.)\n\n* 2FA And login/suspicious behaviour protection. \n\n* Support for B2B single sign on things like Okta etc. \n\n* Seems like a pretty good dashboard to manage users, manage role based access controls, multiple different projects etc. \n\nIn addition to all the obvious things of hopefully having a pretty straight forward integration, good documentation, likely to be future proof in terms of upcoming features, supporting misc social platforms etc. \n\nOur servers are hosted on GCP so I think AWS Cognito is out. I see Firebase has some connection to Google so that might be worth considering haven't dug that deep into it but it seems to be slightly more hands off than Auth0? (or maybe Firebase is part of a bigger stack integrated into other different features, not just handling Auth?) \n\nAnyway theres a bunch of different providers but it feels hard to evaluate how well each of them fit to our specific use case, so any input is much appreciated.",
        "score": 80,
        "url": "https://www.reddit.com/r/webdev/comments/12peg4z/cheaper_auth_provider_than_auth0/",
        "num_comments": 88,
        "comments": [
            {
                "body": "Firebase is indeed part of a bigger stack, but its authentication service can be used independently. Firebase Auth supports social logins, 2FA, and has a decent dashboard. It may not provide all the features like trickle migration or B2B SSO out of the box, but there are a lot of resources/docs for that. Should work well with your existing GCP infrastructure. This would be my first option I take a closer look into.  \n\n\nOkta looks great as well and seams to fit your needs, but the pricing is pretty crazy at first glance ($3 per user per month?). \n\nMore flexible (but probably more complicated to setup) would be Hydra ([https://www.ory.sh/hydra/](https://www.ory.sh/hydra/)). Hydra is an open-source OAuth 2.0 and OpenID Connect server that can be integrated with your existing identity provider. It is designed to handle complex authentication and authorization scenarios.   \n\n\nAlso check out Keycloak, FusionAuth and Okta.   \nIt's hard to say what's the most fure proof, firebase is backed by google and okta is a giant company as well so I'd say they are most likely the most future proof, but who knows.",
                "author": "gerryvanboven",
                "score": 37
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 22
            },
            {
                "body": "I was in enterprise stuff for decades, and the real reason that nobody mentions is that when it all turns to shit, you have someone to blame. \n\nThere are all sorts of very robust auth solutions that would handle the OPs requirements for cheap/free, but they require someone at OP's company to stand up and take responsibility.\n\nThe down-side is that it requires a few humans and some work. \n\nThe up side is that you'll never wake up and discover that your entire company stopped because your auth provider farted or went bankrupt, or that they raised their prices 1000% \"because they could\"",
                "author": "CathbadTheDruid",
                "score": 19
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 12
            },
            {
                "body": "Check out Clerk. I haven't done the comparison in prices but it's a solid auth service",
                "author": null,
                "score": 11
            },
            {
                "body": "Check out supabase",
                "author": null,
                "score": 11
            },
            {
                "body": "Do not use Auth0, way too expensive! The costs are absurd, use cognito, firebase etc. Avoid Auth0 and Okta!",
                "author": "Kopias",
                "score": 10
            },
            {
                "body": "Firebase Authentication (or rather Google Identity Platform) if you’re using GCP could be a good match. \n\nHas pretty much all the features you mentioned.\n\nWith 100k MAU you are looking at something around $500-$600 billing wise.",
                "author": "indicava",
                "score": 9
            },
            {
                "body": "AWS through Cognito? It is very cheap but require a bit more manual work.",
                "author": null,
                "score": 9
            },
            {
                "body": "I have used keycloak on several of my projects. It‘s a great tool. But it also needs a lot if maintenance. So keep in mind when using self hosted auth provider you need to take care it runs smoothly and everything is secured. Probably you will need to hire additional people for handling the infrastructure and you will in the end pay the same as with Auth0.",
                "author": "DaSchTour",
                "score": 9
            },
            {
                "body": "My advice would be to give Keycloak a shot.\n\nWe use both Auth0 and Keycloak. Auth0 is easier to get into, but it's also easy to end up in scenario's where the price cannot be justified, especially if you are in a b2b context (not entirely clear from your post if this applies). We decided to work around some of the security features we would have liked to use, due to the pricing exploding if we would have used it (e.g. M2M token pricing is crazy expensive if used intensively).\n\nWe are much happier with Keycloak, but you become responsible for upgrading and maintaining it. On the other hand, you upgrade when you want, not when Auth0 decides you need to, which can be an advantage as well. If you deploy it on a containerized environment with a managed database, the management is quite low. It can be a bit overwhelming to configure, but it's worth learning. \n\nAnd Auth0 is actually owned by Okta now, so don't expect pricing to become better in te future.",
                "author": "Neeranna",
                "score": 8
            },
            {
                "body": "Azure B2C",
                "author": "Pacman1338",
                "score": 6
            },
            {
                "body": "Keep in mind: crap SLA, no geo-redundancy capabilities, and vendor lock-in.",
                "author": "legend4347",
                "score": 6
            },
            {
                "body": "Supabase Auth is what you're looking for: [$7000 on auth0 is $25 on supabase](https://x.com/kevcodez/status/1806977941626388783)",
                "author": "awalias",
                "score": 5
            },
            {
                "body": "Not really, a lot of big companies use okta for example",
                "author": null,
                "score": 5
            },
            {
                "body": "I don't think you know what you are talking about. Native App Auth is RECOMMENDED to use the web redirection in Oauth 2.0 RFC to mitigate lots of vulnerabilities. Even if you don't use an auth provider, you do need to mitigate this and follow RFC that is designed to be a standard instead of going to no man's land!",
                "author": "PretendBarracuda4920",
                "score": 5
            },
            {
                "body": "Was very cheap, and easy to use *as long as* you don't do much customisation.\n\nPrevious company wanted highly customised UI and flows, and while this is possible with their custom policies, it's horrible to work with. You can't use any frontend framework for UI, and the \"backend\" is very complicated and long XML files.",
                "author": "tkmaximus",
                "score": 5
            },
            {
                "body": "Maintenance probably is their concern. If you make your own authentication system you have to test it thoroughly, you have to maintain it, you have to bug fix, audit vulnerabilities, and when authentication is core for your service like the OP has mentioned, and you’re just that big (10-100k as mentioned) that you can’t afford a data breach or vulnerability exposed because you’re gonna lose your clients trust. So migrating to a third-party service that is well maintained and trustable (since it is their business model) you offload that responsibility from your developers and you can invest in developing new features for your app/service! That’s my take on it but only OP can confirm it :))",
                "author": null,
                "score": 5
            },
            {
                "body": "FusionAuth (disclosure I am biased, but seriously check it out)",
                "author": "halfanothersdozen",
                "score": 4
            },
            {
                "body": "We are busy migrating to [Ory.sh](https://Ory.sh) \n\nIt's a hell of a lot cheaper than Auth0, while still being relatively feature rich, open source and growing. So it seems like a good long-term bet if you are ok with growing with your provider rather than getting everything up front.",
                "author": "FoXtroT_ZA",
                "score": 3
            },
            {
                "body": "+1 for keycloak. Works like a charm once it is set up and no need to worry about some 3rd party service.",
                "author": "anon_blader",
                "score": 3
            },
            {
                "body": "It's got its quirks, but the critical data does remain secure.",
                "author": null,
                "score": 3
            },
            {
                "body": "I use Cognito through AWS amplify and it was incredibly easy to setup through the amplify cli.",
                "author": "Micah4thewin",
                "score": 3
            },
            {
                "body": "I don’t know that it’s even a hidden reason these days. I work in higher ed and more and more schools are moving from self hosted providers (shibboleth being the industry standard) to okta for exactly this reason along with it having more off the shelf support with third party software vendors. \n\nI hear cyber insurance is getting pickier and pickier about auth providers for insuring against cyber attacks, so that’s likely another reason to move away from home grown or self-supported stuff.  Then add in the ability to negotiate sla’s and potentially some level of liability in your vendor contracts and it really makes sense to put it on a third party.",
                "author": null,
                "score": 3
            },
            {
                "body": "The backend XML language is indeed painful. However it is possible to use a frontend framework for the UI (if a bit tricky).",
                "author": "sbergot",
                "score": 3
            },
            {
                "body": "Counter to that is most frameworks have very good auth already and you are just paying a new monthly fee + integration cost/time to setup with a 3rd party",
                "author": "SurgioClemente",
                "score": 3
            },
            {
                "body": "Azure B2C and/or Identity Server (Duende)",
                "author": "vORP",
                "score": 2
            },
            {
                "body": "Frontegg is my new favourite",
                "author": "mikaeljrich",
                "score": 2
            },
            {
                "body": "Supertokens",
                "author": "Horror-Temperature67",
                "score": 2
            },
            {
                "body": "(full disclosure I work here so fully biased, but thought I'd throw our hat in the ring) [PropelAuth](https://www.propelauth.com/) could be a contender!",
                "author": "brooks-devrel",
                "score": 2
            },
            {
                "body": "If you're looking for a cheap alternative which offers passkey-first / passwordless authentication, you can check out what we're building at [Corbado](https://www.corbado.com). I'm fully aware that we don't have the full feature set (yet) that you require, but still might be interesting for you.",
                "author": "vdelitz",
                "score": 2
            },
            {
                "body": "I’m not an expert in auth so I won’t be able to provide any helpful insight. But I could use some advice from you if you don’t mind. I’m currently working on a startup and we use JWT for authentication. You mentioned you had your own auth system, why not stick with that. Did you face any challenges that made you change your mind? Thanks",
                "author": "samu-ra-9-i",
                "score": 2
            },
            {
                "body": "Note okta has different pricing for workforce authentication and customer authentication. Workforce auth is like $2 per user per month yes, but customer auth is much cheaper (still fairly pricey compared to competitors though)",
                "author": "HopefullyNotADick",
                "score": 2
            },
            {
                "body": "I love passport! I'd use that if it was an option here, but they're using Java.",
                "author": null,
                "score": 2
            },
            {
                "body": "Not biased and I agree, check it out.",
                "author": "Fastbreak99",
                "score": 2
            },
            {
                "body": ">Clerk is a solid solution that can cover your needs, \"web dev influencers\" like Theo also endorse using it\n\nI believe that was a sponsored thing. Hard to tell these days.",
                "author": "cmgriffing",
                "score": 2
            },
            {
                "body": "Please excuse my naivete, but what specifically is the issue with OAuth? TIA",
                "author": "KeepOnLearning2020",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "I saw so many big projects that were using keycloak and its great but its also more effort and complexity on scale.\n\nI dont know about GCP but they probably provide an auth service as well that is able to do SSO. Isnt that enough? You get probably also around 50k MAU for free like on azure. \n\nI think also some features like Email merging are not really needed. I would take a look at GCP auth or stay on auth0 if you need all your edge cases.",
                "author": "KaiN_SC",
                "score": 2
            },
            {
                "body": "How does vendor lock-in compare in AWS Cogito VS Firebase/Google?  \nWhich one is easier to migrate from?",
                "author": "Infinite100p",
                "score": 2
            },
            {
                "body": "Indeed!",
                "author": null,
                "score": 2
            },
            {
                "body": "Thanks that makes a lot of sense. Appreciate the response",
                "author": "samu-ra-9-i",
                "score": 2
            },
            {
                "body": "To be honest I'm not sure.  Love your streams btw",
                "author": "Haris_pap",
                "score": 2
            },
            {
                "body": "As a user (or developer), you rely heavily on the goodwill of centralized authentication providers like Google and Microsoft. If they were to get hacked, go out of business or decide that you are not 'capable' of using their services (because of breaching a platform policy, politics etc.), you could loose access to your account and all the services that are associated with it.",
                "author": "this-oliver",
                "score": 2
            },
            {
                "body": "Thanks!",
                "author": "cmgriffing",
                "score": 2
            },
            {
                "body": "OAuth is a standard protocol, it's got nothing to do with any specific provider.",
                "author": "Wynd0w",
                "score": 2
            },
            {
                "body": "I'm not saying that it does. But it is used exclusively by centralized federated identity provider like Google, Microsoft etc.\n\n>From OAuth wiki: *'Generally, OAuth provides clients a \"secure delegated access\" to server resources on behalf of a resource owner. It specifies a process for resource owners to authorize third-party access to their server resources without providing credentials.'*\n\nOAuth provides a standardized way to 'ask' federations like Google whether you are who you claim to be. \n\nSSASY, on the other hand, uses public key cryptography to enable a decentralized and self-sovereign (some people call it 'self-custody') alternative. As a user, you rely on your cryptogrpahic key to prove that you are who you claim to be rather than a federation and it's servers.\n\nEdit: here is the link to the OAuth wiki -> https://web.archive.org/web/20230412092637/https://en.wikipedia.org/wiki/OAuth",
                "author": "this-oliver",
                "score": 2
            },
            {
                "body": "Opensezam répond bien à ce besoin. Il est géré par des développeurs français, ils sont très rapide à se déployer et peut être les moins chères du marché.   \n[https://opensezam.com/](https://opensezam.com/)",
                "author": "Fun_Contact4388",
                "score": 1
            },
            {
                "body": "Clerk is a solid solution that can cover your needs, \"web dev influencers\" like Theo also endorse using it",
                "author": "Haris_pap",
                "score": 1
            },
            {
                "body": "I recently released a [self-sovereign authenticator](https://www.ssasy.net) that you could try. It's an open-source and decentralized alternative to federated identities like OAuth, Google, Microsoft etc.\n\nedit: oops typo. The authenticator can be found at [www.ssasy.net](https://www.ssasy.net).",
                "author": "this-oliver",
                "score": 1
            },
            {
                "body": "Checkout SuperTokens. It’s open source, modern, flexible and has the least vendor lock in.",
                "author": "ilovefunc",
                "score": 1
            },
            {
                "body": "Hey, what's this feature of Auth0?\n\n\"Ability to do a trickle migration of existing users (when a new user logs in Auth0 would send a request to our old auth service and then from there take over that user on subsequent logins)\"\n\nI've been trying to find this feature of Auth0 but I can't ever find it.",
                "author": "Slomoose",
                "score": 1
            },
            {
                "body": "Check out SSOjet too.",
                "author": "a-jeet",
                "score": 1
            },
            {
                "body": "could checkout Corbado too (biased opinion)",
                "author": "vdelitz",
                "score": 1
            },
            {
                "body": "If you happen to be on Microsoft already (365 for email, etc), Azure Easy Auth with Azure AD for internal users, B2C for external users.",
                "author": "PlausibleNinja",
                "score": 1
            },
            {
                "body": "Userfront might be a good alternative. It's run by developers and, from my experience, they're super responsive. Looks like the pricing fits your needs: [https://userfront.com/pricing](https://userfront.com/pricing)",
                "author": "Boondoggle3000",
                "score": 1
            },
            {
                "body": "You can also take a look at Authsignal.com",
                "author": "insidethebarrel",
                "score": 1
            },
            {
                "body": "I second this! Haven’t personally used it, but heard great things.",
                "author": "alexmacarthur",
                "score": 1
            },
            {
                "body": "agree, its auth is underrated",
                "author": "deanwallflower",
                "score": 1
            },
            {
                "body": "If you're looking at 100k MAU it's better to use AWS Cognito, it comes around 275 USD, with the first 50k MAU being free.",
                "author": "Potato_Flat",
                "score": 1
            },
            {
                "body": "Same in my startup we use a jwt based auth system. Would like to know what challenges or limitations you faced with it ?",
                "author": "RK03_IND",
                "score": 1
            },
            {
                "body": "Also interested, please update",
                "author": "Stormblade",
                "score": 1
            },
            {
                "body": "Nice work on ssasy. My comment on that would be that the base ideas looks similar to webauthn. Webauthn is already implemented though by the major browsers/OSs and can be used without downloading any extension.",
                "author": "vladimirovitch",
                "score": 1
            },
            {
                "body": "Under Authorization > Database when you set up a custom database, can check \n> Import Users to Auth0\n\nAnd then under the Custom Database tab in Database Action Scripts can configure how it logs into your specific service.",
                "author": "relderpaway",
                "score": 1
            },
            {
                "body": "I'm not very familiar with Auth0, but Okta has a similar concept with their \"Password Import Hook\" where your hook passes the user's password back to the old system for verification and if successful, authenticates the user and sets the password in Okta.\n\nAuth0 may have something similar.",
                "author": "Wynd0w",
                "score": 1
            },
            {
                "body": "Cognito is alright, but if you want to do user migrations you are in for a world of hurt.",
                "author": "Interesting-Quit4446",
                "score": 1
            },
            {
                "body": "We're a Microsoft shop. Meaning all devs work mostly with .NET. We're currently using an old version IdentityServer and looking for alternatives and stumbled on Keycloak as it's free. I have already tested it out in Docker and it was smooth to get started. It's admin is powerful and have all features we need.\n\nMy concern is the maintenance burden involved, since it's written in Java. They seem to release major versions quite often and as I'm no Java developer I don't have the knowledge to go into the source code during version upgrades.\n\nDo you think it's feasible to go with it and upgrade it through just upgrading docker images? I'm hoping I will never need to look into the source code for custom things (besides changing the theme styles which I've already tested).\n\nOther alternatives we've looked at is Auth0, Zitadel and Microsoft Entra ID (prev Azure B2C). Auth0 has what we need but it's very pricey, we won't however need to maintain it. Zitadel lacks integration for BankID, but otherwise the pricing and features looks promising.",
                "author": "zaibuf",
                "score": 1
            },
            {
                "body": "How would you go about this?",
                "author": "Number_Four4",
                "score": 1
            },
            {
                "body": "The only challenge I faced so far was cookies, since our startup is built on MERN, the cookies were sent as 3rd party but we started using cloud flare which helped us with that issue apart from that nothing else really",
                "author": "samu-ra-9-i",
                "score": 1
            },
            {
                "body": "my bad. mistyped the url",
                "author": "this-oliver",
                "score": 1
            },
            {
                "body": "Oh interesting. We saw a warning in the docs that it wasn't supported, so never bothered to try it. The rest of our frontend was React, so would have been ideal for the same there",
                "author": "tkmaximus",
                "score": 1
            },
            {
                "body": "Here are the steps I started with: https://dev.to/illusivemilkman/amplify-authentication-flow-without-any-front-end-frameworks-vanilla-javascript-3hjg",
                "author": "Micah4thewin",
                "score": 1
            },
            {
                "body": "TY!",
                "author": "KeepOnLearning2020",
                "score": 1
            },
            {
                "body": "Only works for people using \"boring\" but battle tested frameworks tho, which don't seem to be the trend thus the need for those 3rd party solutions even for small/medium apps that wouldn't require the functionalities and \"peace of mind\" they provide",
                "author": null,
                "score": 1
            },
            {
                "body": "TY!",
                "author": "KeepOnLearning2020",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "just make ur own auth with createContext",
                "author": "Owenn04",
                "score": -7
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757900218.0,
        "title": "Built an event registration site on Replit – where should I deploy?",
        "author": "Straight-Attitude488",
        "id": "1nh8zag",
        "selftext": "Hey everyone,\n\nI managed to build a working event registration website on Replit. It has some complex conditions and features, and it’s running without any errors. I haven’t deployed it yet and I’m not sure which platform would be best.\n\nShould I deploy it to GitHub Pages? Or is there another hosting service that makes more sense?\n\nI don’t have much experience with deployment, so any guidance (step-by-step advice would be amazing) would really help.\n\nTechnology Stack\n\nFrontend: React with TypeScript Vite for build tooling and development Shadcn/ui components (built on Radix UI primitives) Tailwind CSS for styling Wouter for client-side routing TanStack Query for server state management React Hook Form with Zod validation\n\nBackend: Node.js with Express.js TypeScript Drizzle ORM for database operations PostgreSQL database Payments:\n\nStripe integration for payment processing\n\nDevelopment: Hot module replacement for fast development Type-safe end-to-end development with shared schemas",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1nh8zag/built_an_event_registration_site_on_replit_where/",
        "num_comments": 2,
        "comments": [
            {
                "body": "GitHub Pages is not general hosting. It's only meant for non-commercial static pages.\n\nYou'll need a proper host to support your backend service. There are a million options in that space - many services works by you providing a container image (or the service building it for you from your repository) of your service and then runs that for you. \n\nGoogle Cloud Run, AWS App Runner, Render, Fly, etc. are common alternatives.\n\nRunning a VM yourself is another popular alternative, any hosting company that offers a VPS will work. You do not need a large or expensive server, so you'll probably get by with $5-10/month.",
                "author": "fiskfisk",
                "score": 2
            },
            {
                "body": "github pages for sure the node support is perfect for complex conditions and features, especially when they run without errors",
                "author": "itsanargumentparty",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1749104706.0,
        "title": "Need some insight",
        "author": "Equivalent-Put-7523",
        "id": "1l3s6aa",
        "selftext": "Hello friends,\n\nI have a pretty long question about building a complete website solo. If you’d rather keep scrolling, no worries, but if you’re willing to help, thank you so much for your time!\n\nI’m going to build a website for someone I know. It’s the first time I’ll be doing this (semi-)professionally, and I’d love to get some advice upfront on how to set things up as a solo developer. So I don’t run into too many problems when i'm halfway done and I will need to start over.\n\nPreviously, I’ve made basic websites and shops using WordPress, Elementor, and WooCommerce. Since then, I’ve taken full-stack web development courses, and I now feel comfortable working with HTML, CSS, and React. I also know how to build simple backend functionality, but I feel like I should avoid building things from scratch, especially for things like shop systems and instead rely on existing tools or platforms.\nThat said, my issue with WordPress and its plugins is that many of them require monthly subscriptions, which I’d really like to avoid. For example, I don’t want to use Elementor anymore because it’s quite limited without the pro version, and I have the skills to build the layout/design myself anyway.\n\nSo here’s my main question:\nWhat stack/setup would you recommend for building a site like this on my own, using some coding, avoiding subscriptions, and still keeping things manageable? \n\nThe website should include:\n- A basic main/home page\n- A small shop page (selling books)\n- A page to book courses (probably similar to a shop page)\n- A page with free downloadable resources\n- Detailed pages about each course\n- English & German translations (this feels like it might be the most difficult part)\n- A responsive design (I know how to do this with plain CSS, but any tools I use should also support it)\n",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1l3s6aa/need_some_insight/",
        "num_comments": 15,
        "comments": [
            {
                "body": "If you completely want to avoid subscriptions, you will need to code a lot on your own. \n\nFor ecommerce backend you can use MedusaJS, which is a sort of open source Shopify. It has some things out of the box, but many others you have to code yourself. For a basic shop selling products, integrated with Stripe for payments, it should be easy. \n\nFor storefront/frontend they also offer a starter project built with React and NextJS, so you should be familiar with the stack already. You'll have to host this somewhere, a VPS in Hetzner or DigitalOcean should do. \n\nAbout design, you'll have to roll your own. Maybe ask the client for references of 2-3 pages that do the same and that they like.\n\nAs this is your first time, estimate how long it will take you, then triple it.\n\nIf I were you, tho, I'd just so it in Shopify.",
                "author": "FalseRegister",
                "score": 6
            },
            {
                "body": "That’s a solid start  shipping something small but polished beats sitting on big unfinished ideas. I’ve seen folks gain traction by turning a simple tool into a niche lead magnet or even a paid mini-SaaS. If you’re thinking of scaling it, UX and SEO can make a big difference early. Happy to share what’s worked for us if you're exploring next steps.",
                "author": "Intelligent_Event623",
                "score": 2
            },
            {
                "body": "just write thr backend with php from sratch. not so big project u would definetly need ready parts.",
                "author": "AdOther7046",
                "score": 2
            },
            {
                "body": "Building a secure webshop without prior experience all by yourself is not the best idea. It is cheaper both in working hours as well as sanity to just get a shopify store. There are so many layers to selling online that have been solved in shopfiy, i wouldnt bother to go ahead and recreate them. The monthly fee is something you/they should make up for with the first few sales.",
                "author": "thraizz",
                "score": 1
            },
            {
                "body": "Using a headless e-commerce backend is such a pain the ass, you gotta tool so many exceptions and work arounds (shopping car functionality for example) you might as well have built it from the ground up custom using your own database and custom CMS. \n\n\nShopping cart that's easy, oh wait doesn't exist gotta do some weird thing. Okay, how about a guest cart. Forgot password functionality. Slow API calls. Uploading images. Adding reviews. All headaches that are a pita!\n\n\nWordPress is so awful and such a pita and has terrible performance, really doesn't do you any favors. It might make one thing easier, then makes 5 other things insanely painful (ie having to make 2 sequential api calls just to get a user's data because you need data fetched from the first call to access the 2nd just to display their username, nevermind more useful data like order history, or the fact only admins can see certain data so you need to create a custom php plugin so users can just... Do basic things).\n\n\nDoable, but ends up being more work when the hope is it'd be less. I've done it. Custom building was so much easier with something like graphql. Literally every simple thing is just a massive keyboard smasher besides inputting products into the database, which honestly will not be hard to create custom on your own. You can create custom wordpress plugins with php fairly easily I suppose, but then what's the point over just using a custom CMS you build.\n\n\nUsing next and ssr/ssg helps makes things really responsive and fast and great for SEO which you'll want with an ecommerce site. App routing, ssg, isr, dynamic routing, internal vs external API calls, you'll have to learn but otherwise it's just built in top of react with some quirky folder structure as the means for routing.\n\n\nTailwind is easy for styling, you can plug in components with easyfrontend so quickly or go more in depth with something like shadcn, or a mix.\n\n\nSubscriptions, maybe deployment on AWS but their first instance is free I think? Custom DNS, shouldnt cost much...\n\n\nStripe API for payments, that pretty much handled security and the like.\n\n\nAnyways it sounds like a headless backend might be the easy route. Trust me, it's not. Either fully utilize an ecommerce package like Shopify or woocmmerce, or go custom. Don't try to make a react site that uses an ecommerce backend. Besides you really should use next, not just react. So so much better and professional.",
                "author": "NICEMENTALHEALTHPAL",
                "score": 1
            },
            {
                "body": "A few thoughts/things to think about:\n\n* Avoiding subscriptions can be a false economy, if this is a project you're being paid for you need to compare your hourly rate to how long something is going to take to build from scratch\n* Learning new stuff on client projects is kinda sketch, it can make timelines and estimations very difficult. Billing the client for time you spent reading documentation for something you decided to use probably isn't okay.\n* Think about the client experience, if they're going to be dealing with orders, creating new products, setting availability for courses and uploaded content these all need to be easy. You may also need to do some training/write documentation to help them.\n* Maintenance, who's doing the updates, how is it being charged. \n\nBased on what you've said I personally would go the WordPress/WooCommerce route with [Bricks Builder](https://bricksbuilder.io/) and a plugin for multi language. I'd integrate a third party service like Calendly for the booking whilst you could do this inside WordPress I haven't found any plugins with a good end user experience (particularly on mobile)\n\nThe reason I'd suggest Bricks is that its a visual builder that puts you much closer to the CSS. Functionally it just gives you a GUI for changing CSS properties and it lets you create classes and variables to your hearts content. You can quite happily setup a design system for typography, spacing, colour palettes and layouts to speed up development and keep things consistent.",
                "author": "eadipus",
                "score": 1
            },
            {
                "body": "Good advise. For the UI you can use Shadcn for some basic components. For translations (if you decide to work with Next.js) you can use Next-Intl.",
                "author": "bert-reposible",
                "score": 1
            },
            {
                "body": "I would so so so recommend against a Shopify backend. Besides how expensive it is, it's a huge pain in the ass using headless e-commerce backend you're better off building a custom CMS with open graph or redux.\n\nSo simple to do each task with your own backend without being constrained.\n\nDoable, just so not worth how it makes one thing easy, 5 other simple tasks crazy complicated and suboptimal.",
                "author": "NICEMENTALHEALTHPAL",
                "score": 1
            },
            {
                "body": "You just use stripe API for payments, problem solved. It's what shopify and woocmmerce use anyways.\n\n\nWorst case scenario you aren't using jwt or you expose api secrets or username password?",
                "author": "NICEMENTALHEALTHPAL",
                "score": 1
            },
            {
                "body": "I meant Shopify as a canned solution, not as a headless ecommerce. Yeah, that would be mostly pointless.",
                "author": "FalseRegister",
                "score": 1
            },
            {
                "body": "And for emails? And for terms? And for shipment? Payment is just one of the things",
                "author": "thraizz",
                "score": 1
            },
            {
                "body": "Go canned or go custom, 100%. Op mentioned react so figured they were trying to go more custom.",
                "author": "NICEMENTALHEALTHPAL",
                "score": 1
            },
            {
                "body": "Resend? Nodemailer? Even emailjs worst case scenario a bad actor spams emails with the canned message you have, they can't manipulate the email content.\n\n\n Shipping addresses being revealed? I suppose if it was more than books that might be a bigger concern...\n\n\nUse jwt and some basic encryption sent to the server database, send things over the backend and not through the client?",
                "author": "NICEMENTALHEALTHPAL",
                "score": 1
            },
            {
                "body": "If going down the PHP route, I'd recommend using Laravel and using InertiaJs with Vue for frontend. This way most of the boiler plate code for setting up the project would have been taken care of and you can focus on building. Also the Laravel ecosystem is very good and you'd most likely find a few packages that might be handy, in regards to authentication, authorisation, image upload management and potentially inventory management too.",
                "author": "deewan84",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1748145393.0,
        "title": "Advice on Creating a Custom Automated Website for Law Firm",
        "author": "JusticeForSimpleRick",
        "id": "1kutk5f",
        "selftext": "I'm a lawyer interested in significantly automating my practice's workflows through a custom-built website. My goals include:\n\n* Automated client intake with integrated identity verification (e.g., ID scanning/verification).\n* Automatic creation and management of client folders and compliance records (such as trust accounting and client file management).\n* Potentially automating initial pleadings or drafting routine legal documents based on predefined templates or conditions.\n* A highly intuitive and polished client-facing UI/UX.\n\nGiven these requirements, I'm wondering:\n\n* What combination of professionals would I ideally need to hire or consult (e.g., software engineers, UI/UX designers, legal tech consultants)?\n* Are there existing solutions or platforms you'd recommend to build upon or integrate with?\n* Has anyone here implemented similar extensive automations? Any lessons learned or pitfalls to avoid?\n\nThanks in advance for your insights!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1kutk5f/advice_on_creating_a_custom_automated_website_for/",
        "num_comments": 15,
        "comments": [
            {
                "body": "Ultimately you need to hire a software consultancy that understands business. A good software consultancy will worry about who to hire and what technologies to use. \n\nPrice wise, you might shell out a bit, so decide what it’s worth to you. One of the consultancies I partner with does longer term engagements, so you get continuous feature integrations and refinements. Other consultancies might just charge a chunk of change for a prototype based on your requirements. Choose an agency that will help you get business results, not just a software product.",
                "author": "not-halsey",
                "score": 7
            },
            {
                "body": "Suppose you were a lawyer and wanted a new kitchen that had a wet bar. You wouldn’t ask someone how to gut a kitchen and rebuild it, because it’s out of your area of expertise. You hire a professional, just like a web developer who needs a complex contract would hire an attorney.",
                "author": "SaltineAmerican_1970",
                "score": 5
            },
            {
                "body": "Since you’re a lawyer … have you heard of filevine? Seems like an automation platform for your needs",
                "author": "Jazzlike_Syllabub_91",
                "score": 2
            },
            {
                "body": "Would probably need to integrate with [https://stripe.com/identity](https://stripe.com/identity) for the ID scanning / verification part. \n\nSounds like a non-trivial project overall. I wouldn't concern yourself with hiring different roles. You focus on hiring one tech lead or agency, and they would run the project and assemble a team.",
                "author": "apexdodge",
                "score": 1
            },
            {
                "body": "Where are you based? You want to hire a reputable web agency in your region that has a verifiable portfolio with already existing customers in your vertical.",
                "author": "waldito",
                "score": 1
            },
            {
                "body": "If you can show the flow you mentioned, I can help you automate it easily. At the end of the day, it's all about the results —  Let me know if you're interested in jumping on a call and walking me through the process. I can tell you on the spot where the limitations are and what can be achieved.\n\nI have already done one custom software for law firm I can share with you when you on call",
                "author": "Careless-inbar",
                "score": 1
            },
            {
                "body": "Litera.com - do not build this on your own.",
                "author": "acronym2k2",
                "score": 1
            },
            {
                "body": "this is easily like $250K+ and 6-12 months timeline if not longer",
                "author": "superb-nothingASDF",
                "score": 1
            },
            {
                "body": "Totally get where you're coming from. I helped set up a similar system for a small legal team, and honestly, automating folder creation and organizing client files saved them a significant amount of time. Curious - are you thinking of building this all from scratch or mixing in existing tools for parts like intake and file management?",
                "author": "Outrageous_Bridge312",
                "score": 1
            },
            {
                "body": "I worked with https://www.aetherealsolutions.com in the past for custom solution, you can check with them , highly recommended.",
                "author": "ashylaks",
                "score": 1
            },
            {
                "body": "How does one find a reputable agency to do this? All I can find are shady companies… this is not a normal project I’m doing. There is no margin for error. I’m dealing with sensitive client information. There will be a lawsuit if it messes up. Who are the big players in the industry I can trust?",
                "author": "JusticeForSimpleRick",
                "score": 1
            },
            {
                "body": "How big is your budget? Generally speaking, if your budget is 7 figures, you are entering big consulting territory, like Delloite, Accenture, PwC... Less than that, a local boutique firm where you can meet face to face. If on a shoe string, then it'd be a gamble on Upwork.",
                "author": "apexdodge",
                "score": 1
            },
            {
                "body": "What would it be called full stack developer agency? What exactly am I looking for?",
                "author": "JusticeForSimpleRick",
                "score": 1
            },
            {
                "body": "\"Custom software development agency\" is a good search term.\n\n  \nAnd you should probably read this post before hiring anyone: [https://raytha.com/blog/The-ultimate-guide-to-hiring-a-software-developer](https://raytha.com/blog/The-ultimate-guide-to-hiring-a-software-developer)",
                "author": "apexdodge",
                "score": 1
            },
            {
                "body": "Full stack dev + UI/UX designer + lawyer specialized in personal information or something like that.\n\nFirst two will get your project done\nThird one will make sure that clients won't sue for handling their personal information and that it is legally allowed to operate with the sensitive data such as ID\n\nI can help filling first two roles",
                "author": "dead_boys_poem",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1758884059.0,
        "title": "Building a tool that can help generate business ideas - Need Advice",
        "author": "mo_ahnaf11",
        "id": "1nqy7gp",
        "selftext": "ive posted on here quite a few times, ive been building a site that can be used to generate business ideas for a while now, ive been doing this solo this whole time, i havent really built production grade apps so this is literally like my first ever time lol so im kind of struggling in my approach and finding the best optimal ways to approach each feature\n\nill give you guys a breakdown of what my app intends to do and what it does currently\n\nits basically going to fetch reddit posts ->  pass them through an LLM to classify for pain point and then return the posts that pass to user\n\nthe user can then generate ideas tailored to his/her background using AI \n\nnow ive built most of it but i think my approach isnt optimal,  \nive currently done it this way: Users can create audiences (folders) and add subreddits to them, when a user clicks on an audience think of it like a folder, then i trigger a request to my backend(Express.js) which takes in all the subreddits in that audience and fetches posts from Reddits first and then runs them through an LLM second so you can already tell how much time it would take as im\n\n1) making a request to the server   \n2) im making a request to Reddit \n\n3) im making a request to the LLM\n\nthis all happens while the user is waiting on the frontend seeing a loading spinner \n\nNow what i was thinking is all this should happen in the background like a cronjob in node.js that would trigger the fetching from reddit and then classifying through an LLM and then saving the posts to the DB through which i can just trigger a request to the DB from the client and it can display the posts!\n\nwhat i found out is classifying through an LLM is expensive like classifying 1000 posts burns through like $2 of credits, i plan on deploying this app into production so how frequently should i be able to run this cronjob? like should it be like a once a week update where users get back new posts to view and generate business ideas ? I was thinking i could run this like every 2 hours but it would become very costly if i dont get any users \n\nJust wanted some advice on whether my thinking is valid and would love to hear from other experienced devs on how i should approach this ! I plan on making this a platform where people can come up with ideas, find cofounders, mentors and reach verified investors as well\n\nAlso since ive never really built a production grade app before, im not sure how it would fare with a lot of users, would Express.js handle many requests to the server simultaneously? ive been hearing things like a Queue Management system, load balancers and stuff like that but ive never worked with those things,\n\nDo i need to worry about them? ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1nqy7gp/building_a_tool_that_can_help_generate_business/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1623225679.0,
        "title": "Avoid Toptal as a freelancer",
        "author": "capraruioan",
        "id": "nvqdfw",
        "selftext": "&#x200B;\n\nThis might sound as a rant, but I'll try to avoid those feelings\n\n&#x200B;\n\nI've found out about them when searching for freelance platforms. I saw \"hiring the top 3%\" so I figured that it was some hard screening process involved.\n\n&#x200B;\n\n&#x200B;\n\nI applied to \"see what happens\" and scheduled my first call with a \"communication specialist\" where I talked about me, my work and expectations.\n\nAfter that, I received a online test with a deadline of 105 minutes since the start of the test.\n\n&#x200B;\n\nThis was a test with 4 tasks that were basically katas that you can find anywhere. The difficulty increased with every task. - the thing that bothered me is that the platform they are using gave you the task and a series of test values but not all test values. Behind the scenes they were running extra tests on your code and you end up getting a 75% when all your tests were green and not giving you a chance to revise your work.\n\n&#x200B;\n\nAnyway, I then scheduled my next call with a technical screener where I also talked a bit about myself and my projects. After that I had to pass a few tasks that represented me doing some algorithms to solve some problems like \"how many of each coin you would receive as a change when paying for something with a larger bill\"\n\n&#x200B;\n\nI chose to do it in javascript and got stuck because of how numbers work in js (3.4 was represented as 3.3999999) so I end up using 10 out of the max of 15 minutes trying to figure that out. The technical screener failed me and said I could reapply in 1 month.\n\n&#x200B;\n\nAfter 1 month I scheduled again the technical call and got assigned a different screener. This time I passed both  algorithmic tasks and he said that I will be receiving the final task that is a web app that I should make with a deadline of 2 weeks.\n\nA bit about the tasks: First one I had a deadline of 10 minutes and the second one, more difficult, a deadline of 20 minutes. This time constraint is very nerve wrecking especially when trying to figure out the correct algorithm.\n\n&#x200B;\n\nNow back to the web app: I received an invitation to their internal git and a mail with the web app requirements: A travel web app where a user can manage their trips:\n\n\\- user can authenticate\n\n\\- user can add / edit / delete trips\n\n\\- user can have 3 roles - so a user can be basic, manager or admin\n\n\\- trip has destination, start date, end date and comment\n\n\\- on display, trip should have countdown to start date\n\n\\- user can filter through trips\n\n&#x200B;\n\nAnd other talk about ui/ux, bonus for unit tests, etc\n\n&#x200B;\n\nSo, here is where I decided to write them an email about me dropping out.\n\nFirst, I have 8+ years of experience\n\nSecond, I have worked on projects that are now in production; one of them was built by only me from scratch\n\nThird, this kind of task was received by a friend of mine with less than a year of experience\n\nFinal, I won't to any unpaid work for nothing\n\n&#x200B;\n\nAt this point, I cannot feel anything but offended and mocked. I went along with the algorithm part because I figured it was good practice. But if they choose to ignore my experience and give any candidate a junior-level 2-week task without any compensation I am not sure how they can market themselves as hiring the \"top 3%\". More like \"top 3% juniors\"\n\n&#x200B;\n\n&#x200B;\n\nSo, I hope this will help some of you not waste valuable time",
        "score": 115,
        "url": "https://www.reddit.com/r/webdev/comments/nvqdfw/avoid_toptal_as_a_freelancer/",
        "num_comments": 125,
        "comments": [
            {
                "body": "Hiding the symptoms of carpal tunnel syndrome",
                "author": null,
                "score": 84
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 56
            },
            {
                "body": "You have 8 years of experience and had the freedom to choose your own tools and you tripped on the coin problem because you chose to model it using floating point values instead of say cents?",
                "author": "velit",
                "score": 40
            },
            {
                "body": "I didn't visit \\[\"The Toptal Screening Process\"\\] page :/ so i guess my fault here\n\nYou applied for a job without reading the screen process, and are annoyed when the screening process wasn't what you wanted it to be?\n\nMy friend, I don't doubt you are a wonderful developer, but your answers and inability to see other's views make me think that Toptal (and their customers) dodged a bullet in having to deal with your ego.",
                "author": "web-dev-kev",
                "score": 36
            },
            {
                "body": "So you didn’t even get in and you’re telling people to avoid it",
                "author": "DontLikeLikes",
                "score": 29
            },
            {
                "body": "what would you consider a senior task",
                "author": null,
                "score": 28
            },
            {
                "body": ">because of how numbers work in js\n\nAlso wanted to point out that this is NOT javascript specific, but present in almost all programming languages when dealing with floating point values.\n\nHonestly, this would be a red flag if I was evaluating someone with 8+ years of experience.",
                "author": "RustinWolf",
                "score": 28
            },
            {
                "body": "This sounds like a you problem.",
                "author": null,
                "score": 27
            },
            {
                "body": "One client asked me to do a task inside their existing project that was made by several freelancers in different styles.\n\nI accepted, made my estimation, did the task without any team members guiding me. I knew what I had to do even though the project was clearly made by different people and it was difficult to keep track of what was imported from where and what folder has what and etc.\n\nCompleted the task that is now in production, they evaluated my code, paid me for the hours spent and decided to keep me. I’ve delivered several features that are now in production and at some point I remained the only guy handling frontend for them.\n\nThat is what I would prefere. A fair chance to show I am a good fit for a client.\nThat is, to this date, the best selection process i’ve attended",
                "author": "capraruioan",
                "score": 25
            },
            {
                "body": "Yeah, I don't think this company is a scam and looking for free work.   The first test was to weed out beginners, the second test was to test your knowledge of logic/algorithms, and the final third test is to see how you handle a project without supervision -- which is incredibly important for freelance talent.\n\nLook, if I'm gonna hire a freelance developer at $150 an hour, I want to make sure they aren't only academic and know their stuff, I need to know that they also can code quickly and efficiently. \n\nTime is literally money to customers.\n\nNot sure how else you can \"test\" that skill, unless you give someone a typical project to complete.",
                "author": "Not-original",
                "score": 22
            },
            {
                "body": "As a development manager and technical director of a large application, developer ego is one of the traits that I aim to straighten out as soon as I detect it.\n\nI totally believe that you are as knowledgable and experienced as you say, but how would this company know that without somehow testing it? Give them the chance to learn how amazing you are, blow their mind with that 2 week task, which would probably take you less with your experience.\n\nI hate doing free work too, but certain jobs for me were worth it, so I did the work. Others weren't, so I bailed like you did. One of the bay area companies I freelanced for at some point, I went through something similar, then I made a ton of money afterwards when they hired me for the job.\n\nJust because you know your worth, doesn't mean others would, until you show them. Or just count your losses and move on. You're obviously not a fit for this company. If I managed you I would be telling you to work on your ego problem, because it will hold you back in your career.",
                "author": null,
                "score": 21
            },
            {
                "body": "And the reason for avoiding it is because they follow the steps described in their website.",
                "author": "sunotlac",
                "score": 20
            },
            {
                "body": "Seems like 8 months of experience.",
                "author": "MousseMother",
                "score": 17
            },
            {
                "body": "TL;DR - current TopTal developmer here. Yes their interview process is intensive and time consuming, but TopTal is great\n\nI've been a TopTal developer for around 3 years now and wanted to speak favorably for them. I know the development task feels a lot like \"working for free\", but should only take around 10 hours of your time (not trivial, but not super heavy either).\n\nThe contracts I've gotten through TopTal are great and they usually match my very high rate. I'd definitely recommend them to any freelancers out there.",
                "author": "BranigansLaw",
                "score": 16
            },
            {
                "body": "Im afraid 8+ years of experience doesnt mean much in our industry. It should, but it doesnt usually",
                "author": "NotGoodSoftwareMaker",
                "score": 16
            },
            {
                "body": "As someone who went throught the same process, I strongly disagree with the text:\n\n1. Any decent platform has closed test cases, in real world you have to know the corner cases and cover them all beforehand (no test cases).  You got 75% because you code does not work (and in my opnion if it doesnt work in any cenario, you should get way less than that)\n2. In the change task, it was not javascript way of dealing of numbers, limited precision is in the fundamentals about floating numbers. Again your code is wrong, it was not javascript but you failing a second junior-level task.\n3. About the final task it may take as long as you want, they do not define every small detail ( and do not demand unit tests ).  So you could even do a simple version in a few days.\n4. About the number of steps or the general flow, all of it is described in details in their page, so you you knew what to expect and evaluate whether it was worth or not for you to take part in it.\n5. Ranting about being a junior task only makes sense since you failed 2 junior tasks before.\n6. Free work? You really expect that they sell this crap, you think effort = freework? Do you also think you are doing free work when you go to a gym?\n7. Now this is purely a guess, but I would expect you to be from a rich country ( possibly USA ) and think it is not worth this level of effort because you can have access to better jobs with less effort. No harm in not taking place in opportunities that are not worth for you, but you guys seems to forget there are other standards around the world, that are way lower.",
                "author": "sunotlac",
                "score": 16
            },
            {
                "body": "You keep repeating this.",
                "author": "reddit_ronin",
                "score": 15
            },
            {
                "body": ">\\> \"there surely are others like me...\"\n\nYeah, that's the ego talking.\n\nWhat makes you think that someone looking for a job wouldn't read the application process, but would read your rant on reddit? Did you search on reddit about Toptal before applying, or just presume that you would pass their processes?",
                "author": "web-dev-kev",
                "score": 14
            },
            {
                "body": "Just feels like a good area for a refactor is what they're saying I think.",
                "author": "3rdPoliceman",
                "score": 12
            },
            {
                "body": ">First, I have 8+ years of experienceSecond, I have worked on projects that are now in production; one of them was built by only me from scratch\n\nBut how can you prove that? People do lie on resumes, provide fake references, etc. I'm not saying they have a perfect hiring process but from what I've heard the pay is good there compared to other platforms and they need to prove to their clients that their developers are as good as the clients' own employees. A relatively large take-home assignment is also a test of work ethics and a test of commitment. I understand your position if you have better prospects, but I understand where they're coming from too.  Hiring is hard...",
                "author": "Fatalist_m",
                "score": 11
            },
            {
                "body": "He got experience of *8+* years so he is not doing any web stuff now, it's for juniors.",
                "author": "MousseMother",
                "score": 11
            },
            {
                "body": "That's a fantastic experience, but not feasible for places like toptal where they have to go through many candidates. In fact it's not feasible in most places because of the resources it would tie up. The process can really annoying with you being made to jump through all these hoops, but it's a necessary evil. \n\nYou want a fair chance to show that you are a good fit, but so do 100 other people. How can you fault them for the process if you don't even know the outcome? Sure some people with under a years experience could complete this task, but there are also some with a few years experience who can't because maybe all they do is front end, or have never had to do something from scratch. Maybe they are just interested in code quality. But then again, maybe you are right and it really is just a shitty selection process.",
                "author": "truecoltpowernail",
                "score": 11
            },
            {
                "body": "This guy dumped all the math he knew.",
                "author": "MousseMother",
                "score": 11
            },
            {
                "body": "\"free work when you go to a gym?\" what does that even mean ?",
                "author": "Andrewdevfair",
                "score": 10
            },
            {
                "body": "Yeah please avoid Toptal. I only say this because my skills are ultra in demand there, its fucking awesome and i dont want to share it with you. Unless u want my referral link in which case come on down",
                "author": "fredblols",
                "score": 8
            },
            {
                "body": "Some bikes produce electric energy",
                "author": "IQueryVisiC",
                "score": 7
            },
            {
                "body": "no2: I am not basing my assumption on anything, \"got stuck because of how numbers work in js\", that sentence is not fair, you got stuck because you dont know how to deal with integers in js.\n\nno6: If the other part is not gaining anything from your effort I would not call it\"free work\" . It is perfectly fine not seeing a reason to do it. I do not see a reason to spend my time in many things , and that why I dont do then.\n\nno1: I have never seem a platform for training algorithms without closed tests,  and in real world you get only the problem description and has to be sure it work for any case - you are responsible to predict all possible cases, task descriptions wont come with a set of extensive tests.\n\nno4: What do you mean nothing there was explicit, isnt every detail corretly describe here? [https://www.toptal.com/top-3-percent](https://www.toptal.com/top-3-percent) ?\n\nYou may not like the process ( and that is absolutely fine ), but I am just pointing out why I disagree with all you said.\n\nI would consider fair any process where you can know all steps in advance and that are correctly followed ( not being punished by the process mistakes for example)\n\nA good process, on the other hand, is a little bit more subjective and in my opnion depend on type of company.  \n\n\nAnd I forgot about the 3%, althought you were making only a joke. obviously 3% approvred does not mean top3%. That would only be true if you process was perfect, another process that only approver only 3% may deny everyone that was approved in the first process.  People nitpick this number but it is obviously marketing.",
                "author": "sunotlac",
                "score": 7
            },
            {
                "body": "also the ego talking: of course i would pass, why would I think I can't take an interview knowing what i've been through in my journey?  \n\n\nand of course i'm not the only one. Whatever you do, you are never the only one to do that  \n\n\nno, i didn't search about them. Yes, I should've done that and avoid this whole rant",
                "author": "capraruioan",
                "score": 7
            },
            {
                "body": "Why would you need to divide $10 by 3? You're just checking to see how many times the largest coin value fits into the change, subtracting that then moving to the next smallest coin.",
                "author": "truecoltpowernail",
                "score": 5
            },
            {
                "body": "DRY my friend. I am sure you know about it since you're senior level.",
                "author": "ForwardClassroom2",
                "score": 5
            },
            {
                "body": "exactly. just because I didn't read before hand doesn't mean it is a good process. it is my opinion\n\n&#x200B;\n\nand there surely are others like me that maybe do not read everything so maybe they will receive a benefit from reading my post",
                "author": "capraruioan",
                "score": 4
            },
            {
                "body": "the experience you've described is very rare in the recruitment world, especially at companies with a recruitment process. Most companies will do the algorithm type questions, or give you a take-home throw-away technical assessment. Very few companies will give you access to production code, and if they do, they are probably small companies that don't have issues showing their codebase or sharing it with anyone.\n\nFYI I know for a fact Automattic (WordPress) hires the way you might like. If you pass the first few interviews, your real test is a paid project over a 6-week period. Maybe look into that. The reason I remember that is because it's extremely rare for companies to do this as part of the hiring process. There are so many complications that companies dont want to bother giving any developer access to their codebase.",
                "author": null,
                "score": 4
            },
            {
                "body": "no2: I still think that is a serious mistake, you may be great in other areas, bu this is still basic math operation and fundamentals, you should just learn it and keep your way.\n\nno4: Better than spending days on something you dont want to take part into. If I travel to Russia in winter and say \"Wow I cant believe they sell tickets to such a cold place\" I am being unfair. But ty for recognizing.\n\nno1:  I understand if you get nervous with countdown ( My first interview like that was in toptal and I also failed my first time because I was nervous, and then scored another company in the same day, and retook toptal and finished it in 3 minutes).\n\nWhat you mean doubt anyone could, many people do. Tests are not deterministic, you could be able to do it in another try, and the best dev in the world could fail it as well.",
                "author": "sunotlac",
                "score": 4
            },
            {
                "body": "Thank you for point 6. It's really easy to forget that the rest of the planet has different standards. Your characterization of USA as a rich country is a reminder of the privilege conferred to many based solely on where they were born. \n\nTo be fair, I also will not do these sorts of tests for no pay. Even when I was first getting started I wouldn't, but I didn't have to; I had code on github, apps running in production, and excellent references.",
                "author": "Pr0ducer",
                "score": 3
            },
            {
                "body": "What I like about this is that not only do they get to see how you work, but you get to see how their codebase really looks and how their processes are. I'm old enough and experienced enough that I can find work fairly easily, so I deeply dislike getting to a client and finding out that the entire place is a disaster.",
                "author": null,
                "score": 3
            },
            {
                "body": "That's actually wrong btw... If you do that you will be missing 1 cent for 10$/3",
                "author": "Annh1234",
                "score": 3
            },
            {
                "body": "Specifically React! Companies in the US are seriously struggling to hire atm and the coin is $$$$ tbh",
                "author": "fredblols",
                "score": 3
            },
            {
                "body": "I met some senior people in IT who probably have qualifications besides coding and where I wished they failed such a screening so I don’t have to work with them.",
                "author": "IQueryVisiC",
                "score": 3
            },
            {
                "body": "Well, if you apply to the screening process you agree that the screening process will be unpaid. Also, I think you should count it as an investment, investing your time for something that will pay off in the future with better clients and a great hourly rate.\n\nThey also look into the code quality, unit testing, security, etc, those things are usually in the senior territory. It's not just complete the project and kaboom.",
                "author": "darko777",
                "score": 3
            },
            {
                "body": "Generally expected that most people reading the threat will read the reply elsewhere unless it's very long i.e. >1000 replies.\n\nCopying and Pasting the same reply everywhere is somewhat obnoxious. :)",
                "author": "ForwardClassroom2",
                "score": 3
            },
            {
                "body": "Web app doesn't seem hard - what's the issue? It's probably just procedure and quality control",
                "author": "brovrt",
                "score": 2
            },
            {
                "body": "It doesn't make sense to pass the algorithmic tests and give up on the test project, then rant on social media about how bad they are. Really? I have nothing but a great experience with Toptal. They are professional, well organized, and kind during the interview process.  \nIf you are unable to complete the screening then why would you think that you will be successful on the platform?  \n\n\nGood luck anyway.",
                "author": "darko777",
                "score": 2
            },
            {
                "body": "I'm in the same boat, I went along with it until the 2 week project task, assuming that this is an inexact but understandable way to filter out bad clients.\n\nPutting myself in a hiring manager's shoes, I don't know what information I would gain about a candidate asking them to build a fucking CRUD app with auth (a time-consuming, but trivial problem) that I didn't already gain watching them code through some algorithm challenges and asking a few questions.\n\nIt gets worse the more I google them, $40/hour rates once you're through the screening, as an example, doesn't make me think the process will be worth it.\n\nI'm hoping I'm wrong, and I'm reaching out to them to see if a human can shed some more light into what they're looking for and what they can offer, compared to the arbitrarily high hoops you have to hop through with no guarantee of work the other side",
                "author": "Mattisfrommars",
                "score": 2
            },
            {
                "body": "There are lots of different people, some like techno-feudalism, so don't. I personally - type of chicken that is free-range, rather than battery. What this means is - I would pretty much fail any interview, were context would make me feel like an mediocrity. Live testing was a sure no go for me. Plus, why would I bother, if most of the clients will be corporate anyway. I avoid corporate at all costs. This is because I support small and medium business, and strongly believe - these market players can pay best, can offer best organic job roles where you develop and feel good, as well as these players contribute and give back to economy the most if calculating per USD/EUR earned. So again, I'm not going to bash anyone, but I have my red lines and one of those - no live testing. Give me the task, ask what do you want, ask for advice - I will give it, but when it comes to inner process of engineering - that is my craft. We can discuss it, I can take feedback, you can take feedback, but this inner process of engineering will not be micro-managed. Period.",
                "author": null,
                "score": 2
            },
            {
                "body": "Designers and developers do not need to be classified and spend their times for free. Especially if they are seniors. This way of discrimination is way too unprofessional. No future in this model.",
                "author": "Marketingdudes",
                "score": 2
            },
            {
                "body": "Just wanted to say I’m sad to see all of the downvotes. Spending 10+ hours of unpaid labor on 3 interviews seems kind of sus. I spent maybe 45 minutes total on interviewing and testing before getting my design job.",
                "author": "duckiezoomie",
                "score": 2
            },
            {
                "body": "I just finished the online test as a project manager and I had to answer 100 questions in 40 minutes. That’s a question every 24 seconds. Somehow I got through 55 of them within the 40 minutes. But the weird part is, from memory, some of the questions didn’t even contain the correct answer as an option. One of the questions was what’s the maximum recommended team size for a scrum team. As per the scrum guide a scrum team should be between 3 to 9 people. And 9 was not one of the answers. And there was another question on earned value analysis where the expected cost at completion should be 400K but that was not one of that answers. Which makes me think that this test is designed to fail you. Like intentionally. How can you ready, digest, think and answer a scenario based question in 24 seconds? I mean, I’m not a stupid person. I have more than 15 year of experience as a PM in tech; PMP, PMI-ACP and SAFe certified.\n\nAnd if you fail once, you have to wait for 3 months for your 2nd attempt. If you fail your 2nd attempt, you have to wait for a further 18 months. \n\nIt just feels like a scam. They don’t want to hire you for your skills. They are using tests which are rigged/impossible to get through to manufacture evidence for their top 3% bullshit.",
                "author": "maha_sohona",
                "score": 2
            },
            {
                "body": "Don't listen to all the haters in this thread. 99% of the advice in this sub Reddit is bullshit by imposters. If I listened to any of the crap spouted out here I wouldn't have my nice dev job at a multinational company. They didn't even make me do bitch work tests either. My diverse portfolio of projects impressed them.\n\nKeep fighting the good fight and never devalue your time.",
                "author": "MisterDangerRanger",
                "score": 2
            },
            {
                "body": "Aaah, I wish I've read this earlier! I just gave up working with the toptal guys.",
                "author": "messerke",
                "score": 2
            },
            {
                "body": "This is something I've always wanted to know: does Toptal take a % fee from the freelancer's project earnings? if so, how much is it?",
                "author": "West_Artist5347",
                "score": 2
            },
            {
                "body": "I agree, is very hard to account for every year of someone's experience. But I didn't even get the chance to showcase my projects, to give them a walkthrough. So, should I feel offended that they just assumed I don't know my shit?\n\nHiring is very hard. Their process was not for me. Naturally I search for something that not only agrees that I match their needs. I should also be able to select them based on my needs.",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "It’s not actually free work for them because i doubt they use it in anything commercial. I was refering to the fact that i’m wasting time instead of doing something that actually shows my skills instead of wasting days or weeks when I have work to do",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "So how did you build your network?",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "Provide a link? I just checked and it seems like you are lying.",
                "author": "sunotlac",
                "score": 2
            },
            {
                "body": "I would not feel offended if they disregarded everything I said on my resume or during the interview and focused on what they could test directly.\n\nAnyway, my friend applied there recently and after going through all the steps, he was denied without providing a specific reason or anything he should improve on, which is pretty shitty, so I'm not really defending their hiring process.",
                "author": "Fatalist_m",
                "score": 2
            },
            {
                "body": "My bad, I was projecting my experience with a similar interview, they wanted it done entirely in their exact code base, with a bunch of their attached boiler plate… it came off to me that they would definitely have no problem taking all those combined test results and implementing their own system, pretty much for free.",
                "author": "RecklessCube",
                "score": 2
            },
            {
                "body": "Letting people know through my attitudes that they can trust me. Being transparent with my work and mistakes. Working hard, studing a lot. Having a compromise with finishing things. Being pro-active.There's other things, but here I think it's enough.",
                "author": "nelson777",
                "score": 2
            },
            {
                "body": "They knew from the start that a refactor was needed. So after about one year of releasing features we finally got to the point where it took too much time to deliver something because of the limitations. So they agreed to let me do a refactor once the urgent tasks were delivered\n\n\nThe client was one of the best ones i found. They were not very technical but did their best to understand our point of view and let us decide in matters that were about code.",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "hmm.. then I think I should re-do that exercise to get it off my mind",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "Actually i don’t\n\nMultiply will work fine because there are no cases where that would happen for this exercise",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "Maybe for you. I’m not looking to get interviewed without them even looking at my experience. I’m not looking to get disqualified for stuff that will not even come up in my work there. \nI know my worth. I know the type of stuff that i did for my clients . I know what problems i fixed and how and why. And toptal wasn’t even interested.\n\nAnd above all this, I’m not looking to make money for them while being paid a percentage, that’s basically employment. I wanted to work directly for clients.\n\nSo if that’s a good fit for you, go for it. I’m better off without it. \nAnd also, how would you know what clients and pay is toptal offering vs what i have? Might wanna speak only about stuff you have knowledge of.",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "Lol! If you have your own clients and no room to add more why apply to TopTal at all? Either way you should go after your own clients but the trade off with a platform like TopTal or whatever freelance platform is that you give a little and they do the leg work for you of lining you up with potential clients. I've done UpWork for a while now and I have clients paying me five figures on a monthly basis. These are clients I may not have run into otherwise. I also have my own clients. You diversify. You walked away not for any logical reason but because you have a fragile ego. Nobody cares about you but you took it personally as if they did. Be smart and give yourself every advantage you can and then move in whatever direction you want. Good luck to you.",
                "author": null,
                "score": 2
            },
            {
                "body": "IMO it's better to give someone a clean project to build. This lets me see how they approach development, how they organize their code, what frameworks/libraries they choose to use, and how clean their code is.\n\nGranted, I've never given anyone a 2-week unpaid project, most of our assessments could be completed in a day.",
                "author": null,
                "score": 2
            },
            {
                "body": "I don’t have a fragile ego. I just want to work with people that doesn’t put value on things that have nothing to do with the work.\n\nI applied to try the platform of course. Same with other platforms. But toptal is not at all a freelance platform. It operates just like any other outsourcing company.\nAnd no, you DO NOT give a little for them to do the leg work. You actually give a big chunk towards them. \n\nGranted, you may encounter clients you wouldn’t in other circumstances. I just am not going to compromise on my principles. I choose who i work with just as they do. \n\nAnd for my ego: if they decide to say i am not worth my fee because I don’t want to do a project for free for them, it’s not my ego, it’s their faulty process. Even if i took the project, they decide based on that, and i know that will not reflect in any way the whole scope of my expertise. So again, is not my ego speaking here. Their process does not in any way going to reveal my experience and will not show the kind of value i can bring\n\nAs i said, i know my worth. I will not make myself a prisoner to their way of thinking and culture.",
                "author": "capraruioan",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Also on Toptal, Kinda sucks lately. As clients are paying kinda the same you would get in the market as a freelancer but only in Toptal they expect way more. Also for getting the job you need to pitch yourself and sell yourself to some moron toptal agent that decides if you are fit or not for the project, so they decide if they introduce you to the client or not. It just looks good on paper when you get accepted to it and bla bla. But not so happy with it honestly.",
                "author": "AnotherWorldWanderer",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "Any recruiters in the thread: What is the purpose behind giving such a short timeframe (10–20 minutes!?) To answer a complex algorithm question? It's not likely in day to day work is it?",
                "author": "Anbaraen",
                "score": 1
            },
            {
                "body": "It’s all BS. I know devs who are the equivalent of monkeys throwing shit at a wall and they get top dollar. \n\nMove on.",
                "author": "awardsurfer",
                "score": 1
            },
            {
                "body": "He had it better,  I didn't  they schedule a first meeting and the lady logged in and out  in a split seconds thinking I am not paying attention and sent me an email faulting me . \nWell I didn't waste time sending an email giving them a piece of my mind,they emailed me back to have a session I just ignored them cos I dnt have time for unserious people.  \nThey profile people and discriminate .\n In my book if Toptal is the last company on earth.  I wont work with them. \nThey are jokers.\n Even if one is a beginner, you still have to start from somewhere and gain experience. And most freelance companies don't have opportunity open for beginners,  they can be kept as intern and train them to their company standard and be paying them some stipends it doesn't have to be student or young people of certain age cos people change their careers and life choices and as they grow they absorb them into the company.",
                "author": "Superb_East_2076",
                "score": 1
            },
            {
                "body": "Man, I barely made it past the first test myself. I had three tests, the first two I got green's on and passed, but when I checked my test review at the end, it said I failed the second test. Wtf?? Already pissed off with Toptal.",
                "author": "00mba",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "Toptal developer here. I was sceptical, but in hindsight I think a lot of the people complaining are just salty about not getting in. I got my current contract (I've been on it for a year) within 24 hours of being on the platform, and another one within like 4 hours. It's really great",
                "author": "uncreativeuser1234",
                "score": 1
            },
            {
                "body": "I haven't even finished reading, but am already upset...  what is the legal basis for any of this!? This is a platform for independent contractors to advertise their services, and companies to advertise jobs.  That's it.  The fact they are so exclusive is already begging the question, 'Is this discrimination in access to advertising?'  Beyond that, as you are a sole proprietor, it's absurd to give you this much unpaid work, just to decide if you're allowed to advertise on the site. \n\nFrankly, I hope sites like this and Codeable get shut down in glorious fashion by the Department of Labor...",
                "author": "enlguy",
                "score": 1
            },
            {
                "body": "So basically you think you're too good to interview...  What a read ...",
                "author": "enlguy",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "What skills specifically are in ultra high demand? If you don't mind sharing your insights.",
                "author": "Minute_Bit8225",
                "score": 1
            },
            {
                "body": ">The contracts I've gotten through TopTal are great and they usually match my very high rate\n\nWhat is a \"high rate\"?\n\nIf you don't want to say, is it higher or lower than $100-$120 per hour, which I can get in my country (senior level)?",
                "author": "drum_playing_twig",
                "score": 1
            },
            {
                "body": "10 hours of your time? The Web App project has a deadline of 3 weeks not 10 hours, of course it can take a lot less but not 10 hours lol.",
                "author": "vanisher_1",
                "score": 1
            },
            {
                "body": "When i am taking my own time to complete a junior task i believe it to be bad practice for hiring a senior.\n\nI did not had the chance to showcase my experience. They just throw me in process..\n\nI am sure there are people who had great experiences, whatever that means for every individual, but i’m not one of those",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "I can understand the 2-week project task. But only in a junior hiring scenario. Not when I come to them with real projects that I developed for startups that are now in production :)",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "On what role? Because they do not offer those rates for webdev work. For fulltime yes, but for part time that seems way too high",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Not a recruiter, but I went through the same process and passed first three phases in one go, and the final on the second try; here's my take.\n\nThe online test was 2hrs for three questions. Unless you had seen the problems before or are really a wizard there's no way you would pass all three 100%. The real test then IMHO is, how do you work under pressure where you know you don't have enough time for all three and don't know the answer off the bat. Do you panic and mess up? Do you focus on aceing one, complete the second one but maybe don't cover corner cases and leave a comment on the third explaining your thought process and what you would do given more time?\n\nThe 20 minute grilling are an extension on that. Do you panic and then try to bullshit your way or ask insightful questions and explain your process as you code?",
                "author": "HaykoKoryun",
                "score": 1
            },
            {
                "body": "Can't really remember but not one of those",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Codility",
                "author": "Affectionate-Ear2540",
                "score": 1
            },
            {
                "body": "I dropped out, i didn’t get rejected\n\nSo i’m not salty cuz i was left out. I was salty because of this incredibly bad interview process  (my opinion)\nSure it can be great for whoever likes that culture and business practice. I just try to avoid it",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Didnt say that.. only that you cannot treat an experienced developer the same way you treat a junior",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "As someone who’s worked at Toptal, this comment section is ridiculous..  mistakes like these are easy to make for any dev.  Frustrating how they act like they’re perfect when I guarantee 15 years devs still make mistakes like this.",
                "author": "zuluana",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "Toptal to Transferwise USD, then into my eu account. Its a bit of a scam that Toptal charge a fee to withdraw but given that i get paid about double what eu developers do i dont really mind.",
                "author": "fredblols",
                "score": 1
            },
            {
                "body": "They do, and I believe that it differs based on the contract. For example, if they don't have many qualified candidates expressing interest for a job and you're unwilling to lower your rate, they will probably take a smaller cut to put forward an attractive candidate. It's on the contractor to request a rate they feel they are worth and remain firm with it.",
                "author": "BranigansLaw",
                "score": 1
            },
            {
                "body": "Maybe that's not the rate for everybody, but if you receive $50 from toptal, they charge the client $110",
                "author": "SveXteZ",
                "score": 1
            },
            {
                "body": "You can get $120, but Toptal has a lot of sketchy smaller firms who can't afford to pay, and then you find out that they ran out of money after a few weeks.",
                "author": "wavehnter",
                "score": 1
            },
            {
                "body": "Yeah you're correct. I totally understand why that would be frustrating. For me I knew about that step for a while because I don't know when you read about the process online people mention it, but yeah it is kind of ridiculous that they ask you to do it when you have other work that you could point to",
                "author": "uncreativeuser1234",
                "score": 1
            },
            {
                "body": "I think both junior and senior can get the same task, the assessment criteria are just different. The actual difference would be when you talk about the project afterwards and can discuss security, scalability, reliability etc of your project. As you probably know as an experienced developer - there is no perfect software and the ability to see all the imperfections and tradeoffs you made (even within libraries or frameworks you chose) is the difference between being junior and senior.",
                "author": "BeginningAbies8974",
                "score": 1
            },
            {
                "body": "I agree. But I believe a variation can be found that is feasible",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "But Toptal isn't hiring you for anything.  They are a job advertisement platform.  Legally speaking, it's not even clear to me how they're allowed to vet people to advertise.  It's the whole process that's flawed.",
                "author": "enlguy",
                "score": 1
            },
            {
                "body": "Tbh right i ended up here before fully reading that page because it's easier to find other people experiences of their process than to try and assume or guess what it's like to actually do it. /u/capraruioan thanks for making the post. \n\nAnd guys just to admit this i'm looking to see what other peoples experiences are because i believe i might not pass and want to be ready for the process. If i was 1000% percent confident in my ability to pass anything then i'd just of applied and air head my way through but i think that's a bad way to go about it if you're serious.",
                "author": "apexjnr",
                "score": 1
            },
            {
                "body": "Same outcome.\nAlso on their website does not say what to expect from each step so I would have ended up taking the screening process anyway.",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Thanks",
                "author": "Minute_Bit8225",
                "score": 1
            },
            {
                "body": "This basically means that you can end up with days or a week of Gap where there is no client that satify your rate and you are forced to to lower your rate, especially if you dind't diversify your own clients as a backup.",
                "author": "vanisher_1",
                "score": 1
            },
            {
                "body": "no2: because I've never had that case (i know, ironic with all my 8+ years i keep talking about). I can deal with floats. I don't doubt my ability to complete that task. But I know I cannot do it when is the first time I see that problem while also having a countdown beside me  \n\n\nno4: I didn't visit that page :/ so i guess my fault here  \n\n\nno1: sure, but not with a countdown beside me. It is impossible to predict cases in less than 30 minutes per task.. so again, I don't doubt my ability, but I know I cannot do it in that timeframe, i doubt anyone could",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Oh, then yes. Bad practice on their side",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "I think to some degree they just want a reason to filter people out",
                "author": "uncreativeuser1234",
                "score": 1
            },
            {
                "body": "Honestly man I'll say it bluntly because no one else here is: you're an idiot for dropping out. The quality of clients and the pay you get from TopTal would've more than made up for the few hours you spend in the screening process. You're just very sensitive and have a fragile ego.",
                "author": null,
                "score": 1
            },
            {
                "body": "Sine and SQRT is stuff you need for ray casting ( Wolfenstein3d ). Many coders are already overwhelmed with this, so I stopped there.",
                "author": "IQueryVisiC",
                "score": 1
            },
            {
                "body": "Thank you.\n\nI know is very rare but i’m sure they can come up with at least one task they faced in their project and ask: how would you do this?",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Oh.. how else would they see that reply? Maybe they wont read all replies",
                "author": "capraruioan",
                "score": 1
            },
            {
                "body": "Sorry but the top 3% aren't hired this way. They have their networking and people who wants to hire them receive their names throught their networking.  \nAlso... sorry recruiters, but this isn't a fading area. IT is an area in full blown expansion and with a ENOURMOUS lack of good professionals. The necessity is so high that companies, governments and universities are investing hard to teach people how to code since kids.   \nSo sorry again, we choose the company not the other way around.  \nThis kind of tests is for entry level devs in order to exclude really begginers. And hardly will be any good oportunities there.  \nDon't use these kind of recruitment system if you want a really good job.",
                "author": "nelson777",
                "score": 0
            },
            {
                "body": "I didn't  get in because I've dropped out because of the reasons listed",
                "author": "capraruioan",
                "score": 0
            },
            {
                "body": "Of course it is my problem. But with implications to anyone that wants to try their platform",
                "author": "capraruioan",
                "score": 0
            },
            {
                "body": "I’m not from US, i’m actually from a poor country but that doesn’t mean i have to settle for less. I had clients that used different interview process to place me directly inside a project running in production (it also required me to code), so clearly there are better alternative to their process.\n\nNo2: you are basing your assumption on the fact that i didn’t weite the technical definition in a rant post.. so yeah\n\nPoint 6: i wasn’t talking about doing actual work that they profit from. I was talking about the fact that i’m alteady doing paid work and i don’t see any reason to place my time on junior tasks\n\nNo 4: nothing there was explicit so that i would be able to determine whether i want to take part or not\n\nNo 1: sure, but where exactly dis you worked that required you to do a code without showing you all the test cases. Even more: where dis you do that while also having a timer beside you?\n\n\nI would like a fair process where i should showcase real world scenarios. Not algorithms with a timer beside me",
                "author": "capraruioan",
                "score": 0
            },
            {
                "body": "yes that would be more difficult",
                "author": null,
                "score": 0
            },
            {
                "body": "lol",
                "author": "Annh1234",
                "score": 0
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -1
            },
            {
                "body": "One client asked me to do a task inside their existing project that was made by several freelancers in different styles.\n\nI accepted, made my estimation, did the task without any team members guiding me. I knew what I had to do even though the project was clearly made by different people and it was difficult to keep track of what was imported from where and what folder has what and etc.\n\nCompleted the task that is now in production, they evaluated my code, paid me for the hours spent and decided to keep me. I’ve delivered several features that are now in production and at some point I remained the only guy handling frontend for them.\n\nThat is what I would prefere. A fair chance to show I am a good fit for a client. That is, to this date, the best selection process i’ve attended\n\n&#x200B;\n\nWith them, I didn't have the chance to do this. I didn't even get to showcase my project, to give them a walkthrough. I was just thrown in their hiring process.\n\n&#x200B;\n\nSo, there are better ways",
                "author": "capraruioan",
                "score": -2
            },
            {
                "body": "I'm not sure I understand what you are saying",
                "author": "capraruioan",
                "score": -2
            },
            {
                "body": "Of course is doable. But do I want to make this and waste my time when I could showcase whatever projects I’ve worked on? No!",
                "author": "capraruioan",
                "score": -4
            },
            {
                "body": "And how would you do it? Ratios and shortening or products in equal operator? Or introduce some epsilon? You can copy floats and they are still equal. Reproduce operations: still equal. Do integer stuff with them: all equals hold.\n\nDivisions, Sine, SQRT and you need epsilon",
                "author": "IQueryVisiC",
                "score": -4
            },
            {
                "body": "They are essentially milking you for free work. I had a company in Minnesota try the same and I backed out as well. I would charge 5-10k for an app like that depending if it were made in React. I agree with you, it’s bullshit. We need a standardized test like the Fundamentals of engineering, that way we won’t have to deal with companies trying this shit anymore",
                "author": "RecklessCube",
                "score": -5
            },
            {
                "body": "Yes, I know. I knew then that i could just multiply by 10 and get rid of the decimals. But as part of my personality, i tend to keep on trying to fix that issue and then implement a workaround.\n\n&#x200B;\n\nI know, I keep saying i have years of experience and get defeated by something that small :/",
                "author": "capraruioan",
                "score": -7
            },
            {
                "body": "One client asked me to do a task inside their existing project that was made by several freelancers in different styles.\n\nI accepted, made my estimation, did the task without any team members guiding me. I knew what I had to do even though the project was clearly made by different people and it was difficult to keep track of what was imported from where and what folder has what and etc.\n\nCompleted the task that is now in production, they evaluated my code, paid me for the hours spent and decided to keep me. I’ve delivered several features that are now in production and at some point I remained the only guy handling frontend for them.\n\nThat is what I would prefere. A fair chance to show I am a good fit for a client.\nThat is, to this date, the best selection process i’ve attended",
                "author": "capraruioan",
                "score": -7
            },
            {
                "body": "ok?",
                "author": "capraruioan",
                "score": -7
            },
            {
                "body": "I don’t really care for people who think this. I know my worth, I’m looking for people who can see that\n\nI have friends with almost the same number of years of exp as me that worked in corporations and didn’t face the challenges that i faced. So yes, those kind of devs can be quantified to less, but not me.",
                "author": "capraruioan",
                "score": -8
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1653660666.0,
        "title": "AMA A few Toptal alternatives - Tips on dev platforms from an ex Toptaler..",
        "author": "AlwaysBlue1",
        "id": "uyz2xm",
        "selftext": "Hello fellow devs,\n\nI'm a LatAm-based freelance developer with 8 years of experience across several global talent platforms including Toptal and other Toptal alternatives. On platforms like Fiverr and Upwork, the challenge is real, especially with Asian talents offering rates backed by their low living costs. Not to mention, many clients there tend to undervalue your expertise, making long-term, quality gigs a rarity.\n\nFor someone with my experience, platforms like Cloud Devs and other Toptal alternatives for niche talents stand out. They focus more on quality, value the talent, and offer a space where developers aren't constantly undercut.\n\n## Leading Toptal Alternatives for Developers in 2024:\n\n\nBest Toptal alternatives:\n\n# [CloudDevs](https://clouddevs.com/)\n\nAlthough they’ve been around only for a few years, they have really made their mark in the industry. Just do a simple google search for ‘hire Latam developers’, and they’ll be the first on your organic search results.\n\nHaving worked with them for the better part of the last two years, my experience has been nothing short of fantastic. Their client charge is just a transparent 20% fee (same as Upwork) except they provide fully vetted talent at that cost so the clients are getting a great deal unlike with Toptal which keeps between 50% to 100% margins. In addition, working with their small team makes you feel like a real person, not just a nameless pawn in a multinational company that will forget you exist at any given moment.\n\nTheir clients are primarily based in the US. This is their reason for hiring Latin Am talent, as they are the closest to the time zone of their clients. If you’re a senior developer with 5+ years of experience, confident in your tech stack, and have excellent English communication skills, I highly recommend applying through the Clouddevs site. Although they conduct extensive vetting with live coding challenges, language assessments and problem-solving assessments, their interview process feels very personal at each stage as there are no automated interviews.\n\nThe best part about working for CD is that the platform matches you up with the clients they feel are the best choices for you. So you don’t get stuck on projects beyond your expertise or interest, nor do you have to look through open positions and send out proposals to individual clients. CD manages all project technicalities, deadlines, payments etc., so again, none of it falls on your shoulders. As an added bonus, Cloud allows clients to buy you out of their platform if they love working with you, so you can directly work with a client you like as a full-time employee.\n\nAs a senior dev working full-time for Cloud Devs, I easily take home USD 100K+ per year. And unlike Toptal and other Toptal alternatives which generally offer short-term staffing gigs, Cloud Devs focuses on long-term contracts that are on average at least a year (or more) so I get solid work throughout the year.\n\nSo overall, I highly recommend working for Clouddevs if you think your talent fits the requirements.\n\n# [Unicorn.Dev](https://www.unicorn.dev/)\n\nNow if you’re a senior dev from a location other than the LatAms, Cloud has launched an international talent platform that you can join. Unicorn.Dev follows the same talent vetting and screening system as CloudDevs and sticks to identical standards and guidelines as it’s managed by the same folks.\n\nSo you do not have to worry about being left to fend for yourself. They’ll ensure you get continuous work and long-term projects to sign up for. And similar to CD, Unicorn.Dev will handle all your payments, oversee project management and coordinate with the clients.\n\nAnd the best part about this Toptal alternative is the price point they offer their clients. Due to the very low commissions they keep, Unicorn Dev is able to offer devs at 35USD per hour for their customers which make the platform extremely attractive for young startups and bootstrappers. Hence you’ll always manage to find work within the platform and you can expect to work with some fascinating new entrepreneurs!\n\nThe final platform I have some experience with is Bairesdev.\n\n# [Bairesdev](https://www.bairesdev.com/)\n\nI joined Bairesdev because marketing fooled me into thinking it's a recognized dev platform offering Latin American talent high quality clients. They conducted a strict vetting and screening process with multiple interviews with very robotic recruiters who didn’t seem to have a care in the world about who you are and what you did. But before you actually get to the interviewers, Baires is notorious for setting up numerous automated tests that all of us have to undergo. Let’s say all that is fine coz their intention is to get good talent? But what sort of senior talents would want to work for the crappy pay they end up offering?\n\nDuring the mere months I was there, the majority of projects that came my way were short-term gigs and at a pay that is way below average. I’ve heard fellow devs refer to Baires as a dev sweatshop, shouldn’t be a surprise why. So in my opinion Baires is the worst Toptal alternative out there.\n\nWhile a fresher may make some headway getting their feet wet in the industry through working for Bairesdev, it is unlikely that the senior dev talent is going to appreciate the work and payments that are on offer (I for one lasted only 3 months here).\n\n\nWhen it comes to all available alternatives, I choose CloudDevs as the finest toptal alternative. After many years of testing out other developer platforms, I found CD to be the most efficient in finding quality clients while paying you well.\n",
        "score": 440,
        "url": "https://www.reddit.com/r/webdev/comments/uyz2xm/ama_a_few_toptal_alternatives_tips_on_dev/",
        "num_comments": 42,
        "comments": [
            {
                "body": "Toptal is way too saturated with talent. I went through a 2-month hiring process with days and hours spent on their test projects only to enter the platform and wait for 9 months before a single gig came my way. It’s just not worth it if you ask me.",
                "author": "Express_Drink1594",
                "score": 31
            },
            {
                "body": "Question for OP: Did you ever do INDEPENDENT freelancing, and if so does the process of TopTal/CloudWays feeding you clients work better for you than finding your own?\n\nMy own story with TopTal...as a failure:\n\nI came back into the job market a few months ago after 10 months of \"burnout recuperation\" and Toptal came up on my radar as a potential alternative to independent freelancing. It sounded great. I am a web developer with 13+ years experience so I thought i'd be able to get a position there.\n\nMan was I wrong. I bombed out of the technical TEST twice. The first time i got a 34% and was told to spend a month on LeetCode and take the test again. Ok, done. But wait, what do these LeetCode algorthms have to do with me building wordpress and custom websites for clients?\n\nTest 3 2: failed with a 14%. Toptal's response: \"Please don't reapply for at least 2 years.\" Yeah ok. Not going to reapply at all as the 'tests' did not in any way test me for my 13 years experience.\n\nThat being said, I very quickly found a full time job as a senior web dev at a small agency earning more than TopTal had promised. PLUS I took on freelance projects independently ALSO earning more than I would have with TopTal, and from the sounds of OP's description, I am getting much more regular work from my freelance client than I would have with TopTal. Glad I dodged that bullet, inadvertantly.\n\nI do wish I'd known about CloudDevs at the time. But I'm guessing they have similar interview requirements and I would have bombed those too.",
                "author": "NiagaraThistle",
                "score": 16
            },
            {
                "body": "This is an ad.",
                "author": "seexo",
                "score": 10
            },
            {
                "body": "Exactly my thought process! They do not have sufficient gigs to go around and occupy their talent. And certainly not enough of long-term projects. I don’t want to waste time on short projects and then wait months for another one to come by. Unfortunately, its the same in most Toptal alternatives. I’m grateful to CD for prioritizing the long-term projects for us.",
                "author": "AlwaysBlue1",
                "score": 7
            },
            {
                "body": "Bairesdev? Really? I think they’re scam artists. Just don’t trust it. Toptal and Cloud are legit, but personally feel Toptal makes way too much money off of our hard work so it's a no for me.",
                "author": "nostalgicglucose74",
                "score": 6
            },
            {
                "body": "Thanks for the post!\n\nI’m on the flip side - I’m a front end dev who needs to regularly hire on better coders than myself for bits that are either too time consuming for me to figure out, or not in my wheelhouse. I like to take on bigger projects because they’re more interesting, and find people who can help me make my vision for the client happen. \n\nI’ve never bothered using Fiverr because I’ve always assumed the quality of dev would be pretty poor. \n\nUpwork has been pretty hit or miss for me, but my strategy is to put the project hourly rate above what the platform recommends for that kind of dev. \n\nI’ve found some excellent people that way, but every time I’ve cheaped out it’s bitten me in the ass. \n\nI’ll give CloudDev a go, even if they’re not in my time zone (I’m in Australia) - I quite like having stuff done overnight while I sleep!",
                "author": "MysteryBros",
                "score": 5
            },
            {
                "body": "I can't disclose exact rates unfortunately coz of the NDAs you have to sign when you join the platform. But when it comes to hours worked, you can expect a 40hr fulltime gig & 15-20hrs for a part-time gig at Cloud.  \nAt Toptal, it was about 35hrs a week full-time & 20hrs Part-time approx. Hope that helps!",
                "author": "AlwaysBlue1",
                "score": 4
            },
            {
                "body": "Thanks for sharing. If you don't mind, could you please share average weekly salary you earned.\n\nWas work constant or fluctuating? \n\n\nPlease also do tell how many hours of work one can expect?\n\nIf not publicly, please DM me. I will send you a message.",
                "author": null,
                "score": 3
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 3
            },
            {
                "body": "That's how long my first project at Toptal  took to find. But the next one took only two weeks.",
                "author": "ex-russian",
                "score": 3
            },
            {
                "body": "Thanks for this. I’m planning on taking on some freelance coding gigs and was wondering what the best platform would be to sign on. I like the thought of going with a platform that offers vetted talent as they would offer better opportunities to reach bigger clients. I’ll definitely be looking into CloudDevs.",
                "author": "Plastic_Accountant81",
                "score": 2
            },
            {
                "body": "Re: Bairesdev\n> During the mere months I was there, the majority of projects that came my way were short-term gigs and at a pay that is way below average.\n\nCould you explain a bit more what you mean about they pay being below average? AFAIK every engineer receives the same monthly salary regardless of the assigned project (or whether they're actually working or are between projects).",
                "author": "MauricioGalvis",
                "score": 2
            },
            {
                "body": "Thanks for the info. I won't waste my time with total now",
                "author": null,
                "score": 2
            },
            {
                "body": "Question for OP: is the technical part of the interview and the recruitment process for CloudDevs more or less the same as for TopTal? Prepping algorithms, data structures, grinding leetcode should be sufficient for both?",
                "author": "knightofren_",
                "score": 2
            },
            {
                "body": "I have a sole contractor business and constantly get harassed by the sales team at bairesdev. Infuriating. No clue where they got my details from, I can only assume they scrape LinkedIn or something.",
                "author": "alexthelyon",
                "score": 2
            },
            {
                "body": "Don't use clouddevs.  They are a complete waste of time on the customer side and will hurt your ability to make any money as a freelancer. Personal experience speaking, avoid!",
                "author": "DrInevitableLobster",
                "score": 2
            },
            {
                "body": "I did fiverr and upwork many moons ago sourcing my own clients as a young dev fresh out of college.\nFor me personally, it’s been one bad experience after another as so many clients that approached me were simply looking for the cheapest possible way to get their work done. That together with the fact that I prefer to work with serious clients that know what they want, so we don’t have to go back and forth making changes as they change their minds, was the thing that finally made me look for talent platforms like Toptal and other Toptal alternatives.\nHonestly it helps to have that intermediary to manage and oversee the project and ensure the clients pay you on time. Unfortunately, with Toptal it was a rip off coz they were literally minting money through our hard work and we weren’t even getting sufficient gigs.\n Complete opposite experience with Clouddevs for me. It’s a peace of mind to have them coordinate with clients and just send me the best gigs for my skills. As for their testing, I can assure its nothing ludicrous like toptal’s. Yes, they screen you, but it’s not some generic screening that everyone has to go through, it’s based on what you’re signing up to do. So my advice is give it a shot, even as a part-timer if you still want to have the freedom to work with your own clients. It’s worth it!",
                "author": "AlwaysBlue1",
                "score": 2
            },
            {
                "body": "Precisely the reason most of us are skipping Toptal. And yea I wasn’t sure of Baires until I actually joined and realized it was nothing but a dev sweatshop. Don’t recommend it to seasoned developers whatsoever",
                "author": "AlwaysBlue1",
                "score": 2
            },
            {
                "body": "Thanks for the great reply!\n\nI never used Upwork or Fivver, as I sensed they were exactly like you describe. I contact companies/web agencies directly and ask if they have web work they'd like to hire me to do - basicall y if they are overwhelmed and looking to sub work out. It's worked well even when I started in this industry years ago, although i sold my services for MUCH less then :)\n\nI will definitely give CloudDevs a shot. Thanks again for the great post and reply.",
                "author": "NiagaraThistle",
                "score": 2
            },
            {
                "body": "Great perspective, I got the answer i am looking for.",
                "author": "Jolly-Spot-8708",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "Any experience with A.team?",
                "author": "ex-russian",
                "score": 1
            },
            {
                "body": "Good thread here.\nIt could get even more interesting if you guys keep adding more reviews on similar platforms like x-team, gun.io, a-team, etc.",
                "author": "antoine235",
                "score": 1
            },
            {
                "body": "I do work on Fiverr and was messaged by someone who supposedly worked at Toptal offering me a job where I was given a set number of pictures with paragraphs on them and then had to rewrite it all word by word on a word doc for 40$ each the highest being a total of 6000$ for 150 pictures but only after I pay a ‘returnable’ security fee of $50. As professional as all the communication was, I think I’m safe to say this is a scam isn’t it?",
                "author": "yas_siddiki",
                "score": 1
            },
            {
                "body": "I used to get jobs at $70 USD/hour and lately all jobs I apply to show me a warning that my rate is not competitive. It shows what a competitive rate would be and it's usually around 35 USD/hour or less.  \nI have applied to dozens of jobs where I was clearly overqualified and never got anything.  \nFor the past month I started applying with a 42 USD/hour rate... still got selected for exactly zero jobs.  \nI even got contacted on Slack for a tech position and the offered rate was 23 USD/hour.  \nFor every job you apply and isn't selected, they send an automated email about only developers that apply within 3 days are usually selected. My average apply time is 5 hours. It makes no sense.  \nIt seems unless you are happy to race to the bottom, there is zero chance of getting a job on Toptal right now.  \nI don't even think this is related to laid off people impacting the job market. I doubt US developers laid from prestigious FAANG companies are applying under such meme rates.  \nThey don't even let their own clients select. If you are not accepting a really low rate, they will not even send you to the client.  \nToptal says they hire the 3% but forgot to say they pay like the 97%",
                "author": null,
                "score": 1
            },
            {
                "body": "That's kind of wild and has made me wonder if it depends on your area or experience? I've been with Toptal for 5 years and usually pick part time gigs from there anytime I find funds are low. And usually it's EXTREMELY quick for me to land jobs.\n\nOn average, it takes me about 2 weeks to land a job anytime I need one, and my application success rate is about 40-60% (ex: for every 5 applications to roles I like, I land about 2/5 or 3/5). Another example was when I was laid off in October 2023. I was able to get a full-time role in Toptal within a month, and for a pretty big FAANG-level firm.",
                "author": "that_90s_guy",
                "score": 1
            },
            {
                "body": "I actually double checked if that link was a referral URL lol!",
                "author": "NiceTerm",
                "score": 1
            },
            {
                "body": "There's nothing even closely resembling legitimacy with this Cloud Devs platform. What the hell is going on.",
                "author": "imnotgoatman",
                "score": 1
            },
            {
                "body": "You definitely should come back to Cloud man! Don’t even think about Toptal if you want to find continuous work.  \nI got a similar offer from a client too, but I turned it down coz I like having the flexibility of choosing the work that comes your way.  \nJust drop a mail or if you want I can let them know you’re considering it. DM me. I’m sure the team would be hyped to have you back!",
                "author": "AlwaysBlue1",
                "score": 1
            },
            {
                "body": "as a developer they will bombard you with low priced contract offers, most are not even relevant to your skill as well. \n\nseems like they are spamming potential clients and their talents!",
                "author": "AlwaysBlue1",
                "score": 1
            },
            {
                "body": "Make sense man, handling freelancers is a headache.\n\nI'll give this AiDOOS platform a try. it seems promising.",
                "author": "Grand-Neighborhood94",
                "score": 1
            },
            {
                "body": "Overall rates achievable on the platform are indeed down lately, and because of more supply than demand, they will not be as lucrative as used to be, unless you have a specialization that is unique. But this is honestly not much to do with Toptal itself, rather the tech market's overall state in the last year(s). It's not just the laid off \"FAANG boys\" but the overall economy and hiring appetite. I'm saying this because in parallel to applying for jobs on Toptal I am also actively scanning for projects independently and some other platforms as well, and the symptoms are the same everywhere. That being said, the \"competitive rate\" suggestion on Toptal is two fold: on one hand it helps you too to not to apply to something that is clearly out of your rate you'd be comfortable with - since you would not be accepted anyhow if you are over the client's budget. On the other hand it is also true that in general it incentivizes talents to aim lower and compete with each other with their rates - but the mechanics of bidding with your rates and getting accepted hasn't changed, clients back in the more lucrative days would still chose someone that could meet their budget, and from identical candidates they were choosing the one with the lower rates always, regardless whether toptal showed you a suggested competitive rate or not.  \nIf it would be only for the rate suggestion itself, it would be clear it is only toptal pushing rates down while potentially keeping the client facing rate the same and thus increasing their profit. But if you look at the market in overall recently, it is clear that now it is sadly a phase where rates are not that fancy.",
                "author": "thehighdynamic",
                "score": 1
            },
            {
                "body": "You’re most welcome! I just want to help folks out there through my experiences.  \n I’m sure your strategy of individually reaching out to companies work. But it takes a lot of time and effort to do that. I admire what you put in! Like you said it’s probably easier to get them to say yes when you quote lower prices, but the higher you go rate wise, I’m guessing the chances of those that don’t know you turning you down is more.  \n That’s why it’s easier with a platform that does all this for you. I don’t mind letting Cloud charge that 20% commission for doing all the grunt work for me!",
                "author": "AlwaysBlue1",
                "score": 1
            },
            {
                "body": "You won’t regret it! You can try places like upwork and freelancer but it can be difficult to deal with the clients and their demands when you have to coordinate everything on your own. That’s why I prefer platforms that take some of that responsibility off our hands. The above 3 are known to handle all of that, but with Toptal it comes at a steep cost, coz they charge premium rate commissions. Baires commission rate is not so widely known but it too is expected to be higher than CloudDevs which keeps only a 20%. So give it a shot and let me what you think!",
                "author": "AlwaysBlue1",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1755692320.0,
        "title": "Why I stopped hunting software blindly and started questioning the way we choose tools in the first place",
        "author": "Dangerous-Mammoth437",
        "id": "1mvd72i",
        "selftext": "Not sure if anyone else has been through this, but let me share a lesson that completely shifted how i think about software.\n\nBack at my last company, I was the “tool scout.” My job was to find, test, and shortlist software for the team. Project management? CRM? Email marketing? Guess who got stuck on review platforms, forums, and endless spreadsheets comparing features.\n\nThe process was brutal:\n\n* Half the reviews were marketing fluff.\n* Other half were angry rants that didn’t apply to our use case.\n* We’d spend weeks shortlisting and still second-guess every decision.\n\nBasically, it felt like standing in a noisy marketplace where everyone is yelling but no one’s actually answering the question you care about: “Will this tool solve my problem in my context?”\n\nFast forward; I stumbled across and found my current company. And it clicked.\n\nInstead of dumping you into a sea of raw reviews like G2 or TrustRadius, we take all that data, filters out the noise, and contextualizes it. We have built a custom AI model that basically says: “Here is how this tool performs in real-world decision-making contexts. Here is what actually matters, stripped of fluff.”\n\nThat was the aha moment:  \nChoosing a software should not feel like gambling. It should feel like making an informed bet backed by trusted, filtered intelligence.\n\nNow I get why my company positions itself as the next evolution of contextual platforms. It is not about chasing more reviews. It is about clean reviews + contextual insights = better decisions.\n\nAnd honestly? As someone who wasted months wading through messy feedback, i would have killed to have this back then.\n\nI am curious, for those of you picking tools for your team or clients:  \n👉 Do you still rely on raw reviews (G2, Capterra, etc.)? or would you trust something like a “Scores” that filters and contextualizes the noise before you decide?",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1mvd72i/why_i_stopped_hunting_software_blindly_and/",
        "num_comments": 4,
        "comments": [
            {
                "body": ">Choosing a software should not feel like gambling. It should feel like making an informed bet backed by trusted, filtered intelligence.\n\nBetting IS gambling.\n\nSo you've basically said \"It shouldn't feel like gambling, it should feel like gambling! \n\nThis is genuinely one of the funniest things I've ever seen included in what looks like an LLM-generated post. If it's not an LLM, it's even funnier.",
                "author": "FlyLikeHolssi",
                "score": 10
            },
            {
                "body": "Using G2 or Capterra for anything seems like a faulty approach to me. All the reviews on these platforms seems to be paid and only done by \"happy\" customers.",
                "author": "Nisd",
                "score": 1
            },
            {
                "body": "Yes, this is a biased process.",
                "author": "Dangerous-Mammoth437",
                "score": -1
            },
            {
                "body": "Refined my thoughts through AI.",
                "author": "Dangerous-Mammoth437",
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1734451269.0,
        "title": "What is the best strategy for hosting a full stack project?",
        "author": "an4s_911",
        "id": "1hgdsru",
        "selftext": "I am building a full stack web app more specifically it is a SaaS project. Frontend with React, backend with Django, and Database with Postgres. And it also has a lot of image data which would be considered as static files. \n\nI am very new to this. This would be my first large scale project, which I am building as a SaaS with my friend who would do the marketing. So I wanna know what is the best way to host this project. Should I pay for a VPS and host everything in one place using Nginx, or Apache server, or should I separate them, like frontend on netlify, backend on a VPS, database on another managed service, and static files on something like AWS S3. \n\nOr should I do only frontend separate, everything else on the same VPS. I am very confused. \n\nAlso, question to those with more experience, please do recommend to me the best platform for hosting each of these.",
        "score": 9,
        "url": "https://www.reddit.com/r/webdev/comments/1hgdsru/what_is_the_best_strategy_for_hosting_a_full/",
        "num_comments": 33,
        "comments": [
            {
                "body": "I would keep it simple, but there are lots of ways to accomplish the same thing. I wouldn't have the backend and frontend in separate deploys unless you have backend and frontend teams. Just put it all in a single repo (with a good folder structure and build scripts) and use GH actions or similar to deploy to a single container or VM with a reverse proxy in front.   \n  \nKEEP IT SIMPLE. You could literally just use a bunch of bash scripts and GH actions to run the deploys with a single VM that you SCP to. I would probably use something like google AppEngine (I am sure AWS has a similar product) and just push containers to it for deploys, but the idea is the same.   \n  \nIf you really need to scale your frontend and backend separately or you really need caching for your static assets you can start building out an asset pipeline with separate frontend and backend deploys and a CDN with cached s3 buckets, but in all likelihood you aren't going to run into scaling issues for a while.",
                "author": "itijara",
                "score": 5
            },
            {
                "body": "fly.io 😌",
                "author": null,
                "score": 5
            },
            {
                "body": "Yes, exactly. Shiper also offers deployment without a Dockerfile, but only some supported languages and frameworks are available, like Node.js and Next.js.\n\nAs you said, I put the static files in S3-compatible storage, like AWS S3 or Backblaze.\n\nI mostly use Backblaze because it is much cheaper and has never disappointed me.\n\nAnd, regarding Dockerfiles: if your application is Dockerized, you are not dependent on a platform like Shiper. So you could easily switch to a different provider if needed.",
                "author": "Awkward-Plate7826",
                "score": 4
            },
            {
                "body": "I use coolify most of my sideprojects will never be finished so they don't need much performance therefore I put them all on my vps for a whole 3$ a month crazy right?",
                "author": "SleepAffectionate268",
                "score": 3
            },
            {
                "body": "What exactly is a SaaS project. I'm sure you can build something with two people, but it would have to have a very limited scope. It's a good idea for proving people will pay for the service, but if people actually do, you'll need to hire. I have never been that early in a startup, but I did join a 15 person team which is now 120 or so.",
                "author": "itijara",
                "score": 3
            },
            {
                "body": "There's no \"best way\", the best way is the hosting solution that suits your specific needs. \n\nI personally went with DigitalOcean for my cloud provider because I want the flexibility of a linux VM while have the option to scale up and down if I wanted, their pricing is transparent and is also cheaper than AWS EC2\n\nWhether to host frontend / backend separated depends on your project architecture and needs. If you want to have easier maintainability, it is best to keep both projects on the same server. For instance your company is a software house and has a lot of different brands, then the best way for this specific case is to focus on maintainability. But if you are a SaaS provider that uses microservices architecture then keeping it separated may be the ideal way to handle. For instance you can see some websites having \"example.com\" and their api as a subdomain like \"api.example.com\", this is an instance use case of a separated server, as it can help mitigate the workload off.\n\nFor database it also depends, but I personally would go with [https://neon.tech/](https://neon.tech/) because of db branching being one of the most important feature for my specific use case as it allows production db migration easier with very minimal to no downtime at all. You can stick with a simple vps + postgres for the cheapest solution but it is not managed, if you want managed db then DigitalOcean Managed databases or AWS RDS is your best solution",
                "author": "Remicaster1",
                "score": 2
            },
            {
                "body": "So the only thing you are using is Shiper to host a whole full stack application? So you make separate dockerfiles for each part of the stack, frontend, backend and db? And what about the static files, what do you do?",
                "author": "an4s_911",
                "score": 2
            },
            {
                "body": "Hm I just take care that my app is configured correctly for production deploy. Fly has a postgresql helper when setting up the project. The frontend can be deployed within Django directory, or you take care of a second app/project directory. \n\nI use Bitbucket or GitHub for ci/cd tools to and integrate them into my fly.io workflow",
                "author": null,
                "score": 2
            },
            {
                "body": "Not sure what you are trying to do here but usually you would want different domains instead of sub-domains. But bcus i dont know your plan, subdomains can be valid so to answer is it a good idea - not sure, maybe or maybe not\n\nYou can refer to vercel, each projects is under their sub-domain when you host a project, they either have a domain provider api that allows them to dynamically create new subdomains or they have automation tools to do it like Playwright\n\nNo, subdomain is technically not hard to do if you have done basic devops stuff. Can be a bit confusing at first especially on setting SSL but not difficult honestly once you know the process, its fresh-grad level of difficulty",
                "author": "Remicaster1",
                "score": 2
            },
            {
                "body": "On the scale of all existing SaaS projects, the project that I are currently working on would be considered very small. But when I started working on it, I realized it is way more bigger than I initially thought. Especially when it comes to hosting and managing different clients with different subdomains. These things are still in the planning stage, and that is why I asked if it is feasible. I understand that the answer is not that straight forward, but I am asking in general, as someone with intermediate Full stack skill level, can I manage the whole thing myself?",
                "author": "an4s_911",
                "score": 2
            },
            {
                "body": "If you are new to this, learning Linux, bash, make, ftp, ssh and things like that is a great way to getting used to it. \n\nDid you hear of the Odin project? They teach you a lot of web dev and also teach deployment of your projects",
                "author": null,
                "score": 2
            },
            {
                "body": "You could run it as a Docker container on your own server, but I prefer hosted solutions that include backups and everything else. It just feels more solid to me.  Shiper also offers hosted PostgreSQL, but many others exist, such as DigitalOcean or Railway.\n\n[Shiper Databases](https://shiper.app/databases)",
                "author": "Awkward-Plate7826",
                "score": 2
            },
            {
                "body": "I think then you are more than prepared to do such a project and learn your devops part of that project. \n\nIn the end CI/CD is just another tool. CICD checks your repo for changes and essentially is a script that runs automatically, checks your code for errors, builds the software and uploads it automatically to your host/server. Docker sometimes plays a part of that, to build images, linters and prettier run on the repo for example. If one of the checks or tools you use finds an error it stops the deployment to your host, so the users don’t receive broken software. That’s basically all of it\n\nGood luck 🍀",
                "author": null,
                "score": 2
            },
            {
                "body": "Firebase, have about 20 unfinished projects and costs me around 4 cents per month",
                "author": "Tarazena",
                "score": 1
            },
            {
                "body": "In my experience, it's best to have everything in one place. You could host everything on a VPS, but setting up CI/CD will be harder, which is a must for me.\n\nI tend to use solutions like Shiper (https://shiper.app), which handles that and deploys my application to the cloud. I'm actually part of the Shiper team, and I joined because I had the same question a few years ago.\n\nI just have a Dockerfile in each project, and Shiper builds it. I could also use Shiper only to build and manage the image, then deploy to a VPS fully automated.\n\nOf course, there are also other options like Render and Railway; they are a bit more pricey.\n\nWhat option are you most interested in?",
                "author": "Awkward-Plate7826",
                "score": 1
            },
            {
                "body": "Maybe it’s overkill (not for beginners) but a basic Linux vps is all you ever need. There’s some admin setup but with ai it’s much easier. And you’ll never paint yourself into a corner if you need more functionality like databases, docker containers, node or Python apps, installing any packages, etc.",
                "author": "solomania9",
                "score": 1
            },
            {
                "body": "Thanks a lot for your reply. I will consider everything you have mentioned. I am guessing that you have some work experience in these topics, could you tell me if it would be feasible to build a whole SaaS project with a 2 man team, one person for design and the other person (me) for building and mainting the whole thing. Is this possible? I am still very new, so I am trying to figure it out. \n\nOr should I find a few other team members to work with.",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "That sounds amazing. Thanks a lot for your recommendation. But you said $3/month, but on their website I can only find $5/month paid montlhly or $4/month paid annualy.",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "Thanks a lot. I was planning to do like get a domain for the SaaS app, and for each client, make a new subdomain, and set it up separately on a different VPS server. For each client. \n\nIs this a good idea? And if you have any idea on this topic, how would I separate this subdomains to different vps servers, is this an easy thing to do?",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "But firebase doesn’t have VPS right? I mean, I can’t host anything I want? Does it have container based hosting? Django hosting? SQL hosting?",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "Hi, I’m very new to building websites and apps, mostly watching tutorials and building along for now.\n\n ’m making a basic full stack using PostgreSQL, Express, React and Node.\nHow do I got about deploying this on the web?\nPreviously, l’ve made websites using React and I could just connect my GitHub using something like Netlify/Vercel.\n\nI’ve seen people use Railway, but it would be really helpful if someone provides a resource or a tutorial to specifically deploy PERN apps? How to deploy the backend? What are environment variables and how do I configure them?",
                "author": "kabirthegreat",
                "score": 1
            },
            {
                "body": "Are you suggesting that someone who obviously has insufficient skills in server management should setup a publicly available server based on AI responses? That’s a disaster waiting to happen.",
                "author": "terfs_",
                "score": 1
            },
            {
                "body": "Thats great. You said the admin setup is much easier with AI. Could you recommend some setup like that? Or some ai tools used for that purpose?",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "Ahh you are right, doesn’t have that!\nJust for my own curiosity, If you are building a new product, why do you need all of that?",
                "author": "Tarazena",
                "score": 1
            },
            {
                "body": "Shiper and Railway also let you connect your GitHub repository to deploy your apps. I have some links to tutorials I have made for Shiper.\n\n[NodeJS for Express](https://docs.shiper.app/get-started/nodejs) \n\n[PostgreSQL on Shiper](https://docs.shiper.app/databases/postgresql)\n\nThe flow will be pretty much the same as you are used to with Netlify/Vercel.\n\nYou can also join my [discord](https://discord.gg/XDPAUGxd). We have a small community that defenetly has a answer to most questions ;)",
                "author": "Awkward-Plate7826",
                "score": 1
            },
            {
                "body": "That sounds great. I am still new to this, still trying to figure out how to setup the CI/CD, or should I even at this stage?",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "I don’t need all of that. If I get a VPS hosting, that kinda suits my need. Or else it should have Container based hosting, which basically supports anything that can be containerized. \n\nAs mentioned in the post, the stack I am using is Django+React+Postgres, so I need to host the backend and sql. Additionally, the frontend as well, which is the easy part.",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "Yes, docker has that benefit. But what about database? Do you also dockerize that? Sorry, if I am asking too much question. Your comment is the only resopnse I got for this post.",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "I know linux, bash, make, ftp and ssh. I am using only linux as my main OS for more than 3 years now. \n\nAnd yes, I am actually enrolled in the Odinproject, I finished the fundamentals and started the javascript route, but I haven’t touched it in a while. But I know the fundamentals of git, github, gitlab, and also I’ve written bash scripts etc. So im familiar with the linux ecosystem. But I don’t know how that helps with CI/CD?",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "Thank you. Really appreciate it",
                "author": "an4s_911",
                "score": 1
            },
            {
                "body": "Woooooww!! This is great. Thanks a lot. If you don't mind, could you share how you manage your hosting? \n\nDo you put everything in one place (frontend, backend and database), or host them separately? \n\nAlso, do you just use fly.io and nothing else?",
                "author": "an4s_911",
                "score": 0
            },
            {
                "body": "I usually like to have some drinks and apps available.",
                "author": "canadian_webdev",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757352391.0,
        "title": "Seeking Guidance: Multi-Tenant Platform to Digitalize Local Economies (India Focus) - Massive Social & Technical Scope",
        "author": "KaOs1352",
        "id": "1nbu0f7",
        "selftext": "Hey r/webdev \n\nI'm a sophomore engineering student in India with a deep passion for tech and social impact. My small team (a few hackathon-winning peers and I) has been developing an ambitious project, and we're at a stage where we could really use some seasoned guidance and constructive critique on our core idea and potential challenges.\n\n**My Idea: \"Awaaz India\" (Voice of the Country)**\n\nWe envision a platform that aims to **digitally empower and boost the local economies of underserved cities, towns, and villages.** Think of it as creating a dedicated, curated online presence for these specific localities.\n\n**How it works (High-Level):**\n\nOur core platform, let's call it `[mydomain].com`, will have two main interfaces:\n\n1. **\"Create Solutions\":** This is where a client can initiate the digitalization process for a specific locality.\n2. **\"View Solutions\":** Once a locality is \"digitalized,\" it becomes accessible here.\n\n**The Digitalization Process for a Locality (e.g., \"City X\"):**\n\n1. **Client Engagement:** We work with a \"client\" (e.g., local government, business association) to identify a specific city/town/village they want to bring online.\n2. **Coordination & Development:** We assign an internal coordinator to act as a bridge between our central team and the client/local community. Our team then develops a dedicated online presence for that locality.\n3. **Unique Subdomain:** Each digitalized locality gets its own subdomain, e.g., `cityX.[mydomain].com`, `townY.[mydomain].com`.\n\n**What a \"Digitalized\" Locality Site will host:**\n\nThese subdomains will act as a comprehensive digital portal, showcasing:\n\n* **Local Commerce:** Various locally produced and sold items, unique regional crafts, clothing, food products, etc.\n* **Culture & Heritage:** Local stories, art forms, songs, historical facts, and cultural traditions.\n* Essentially, anything regionally special or unique that helps present the authentic identity and economic potential of that place to a wider online audience.\n\n**Technical Approach:**\n\nWe're implementing a **multi-tenant architecture**. This means building a single, scalable core platform that can host and manage multiple independent \"locality sites\" (tenants), each with its own subdomain, content, and local listings, all powered by our backend infrastructure.\n\n**Our Core Challenge & Goal:**\n\nOur aim is to empower these local economies by giving them a powerful, branded online presence and access to markets beyond their immediate vicinity. We believe a unified platform like this could standardize digital inclusion for these regions.\n\n**Where We Need Your Guidance:**\n\nWe're particularly interested in insights on:\n\n1. **Feasibility & Major Hurdles:** Are there any glaring red flags or massive logistical challenges we might be underestimating, especially concerning the \"local commerce\" aspect (logistics, quality control, payments for hyper-local sellers)?\n2. **Monetization Strategies:** Given the social mission, what are viable and sustainable monetization models for a platform like this? (e.g., commission, subscription, client fees, government grants?)\n3. **Technical Scalability:** Any specific advice for designing a robust and secure multi-tenant architecture for hundreds or potentially thousands of such local sites? (e.g., database design, deployment strategies, content management for non-tech users).\n4. **Go-to-Market Strategy (India Specific, but generally applicable):** How would you approach launching and getting initial traction for such a concept in a country like India, which has vast geographical and cultural diversity? Who should our first \"clients\" be?\n5. **Long-Term Vision:** What are the biggest opportunities or risks you see in this type of platform?\n\nWe're a small team with a lot of enthusiasm, learning rapidly, and ready to put in the hard work. Any advice, war stories, technical pointers, or even just general thoughts would be incredibly valuable as we try to build something meaningful.\n\nThanks in advance for your time and wisdom!",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1nbu0f7/seeking_guidance_multitenant_platform_to/",
        "num_comments": 1,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1752632404.0,
        "title": "Where to find experienced part-time freelancers and how to evaluate them?",
        "author": "flyingmada",
        "id": "1m10v9p",
        "selftext": "I have a successful Saas platform - solid revenue, growth, and lots of potential in the market. Most of it has been built with developers hired on Upwork but I cant do it anymore. Time and time again, they waste time, cant complete projects, and overall are just unreliable. I have yet to find a solid, reliable fullstack developer (react/django), and the quality on Upwork seems to just keep getting worse with fake profiles and fake reviews.\n\nI don't have the budget or need to hire someone full-time. Really, it's just a focus on continually improving/maintaining, with occasional sprints for new features. Even better would be a Fractional CTO type that can manage a more junior team and review their code. I'm guessing that the part-time is part of my problem but I would think there's those out there interested in exciting projects or some extra cash.\n\nDo quality part-time freelancers exist? Or legit fractional CTOs that have an appetite to code/review (not just consult). And if so, where do I find them?   \n  \nI've tried posting on /forhire but I'll get 90% spam, 5% that clearly have lied about their qualifications, and maybe 5% that have potential but it's super hard to validate if they are actually skilled enough to take on the project.\n\nAs a web-developer yourself, any tips on how to truly validate they have the skills needed when I'm not technical enough to interview them?\n\nLooking forward to your feedback.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1m10v9p/where_to_find_experienced_parttime_freelancers/",
        "num_comments": 8,
        "comments": [
            {
                "body": "Try Toptal or Turing. The devs there are already vetted, so you know what you're getting. On Upwork, it often turns into a race to the bottom, you usually get what you pay for. No skilled dev is going to settle for peanuts when they can land better-paying gigs elsewhere.",
                "author": null,
                "score": 4
            },
            {
                "body": "We had rly good experience with people from toptal, then we moved to upstack and its far better",
                "author": "Numerous_Elk4155",
                "score": 3
            },
            {
                "body": "Why would any experienced developer work part time?\nPart time jobs are for students and people who want to gain experience. If someone has the skill, then he has a stable, high paying full time job.",
                "author": "Independent-Garden48",
                "score": 2
            },
            {
                "body": "If you're looking for front-end developers, just know that Toptal has a bias towards JavaScript. In other words, if you're looking for someone with good HTML/CSS, Toptal doesn't evaluate for those skills.",
                "author": "ndorfinz",
                "score": 1
            },
            {
                "body": "I came across your post about struggling to find reliable part-time developers and wanted to reach out.\n\nI run EliteJay , a solo-led, infrastructure-grade micro-agency specializing in fullstack and DevOps. I’ve worked with startups scaling SaaS platforms and offer both hands-on coding and Fractional CTO-style leadership — including code reviews, architecture guidance, and team oversight.\n\nIf you're open to a short intro call, I’d love to learn more about your platform and challenges.\n\nBest,\n\nJay\n\n[elitejay.com](http://elitejay.com)",
                "author": "Express_Cod6911",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1739012349.0,
        "title": "Website delivery: Just the code or full deployment?",
        "author": "NowHere8",
        "id": "1ikkv54",
        "selftext": "When delivering a website to a client, do you usually just hand over the source code, or do you also handle the deployment? If you do the deployment, what’s your preferred setup (self-hosted, cloud platforms, managed hosting, etc.)? And how do you typically manage future updates?",
        "score": 8,
        "url": "https://www.reddit.com/r/webdev/comments/1ikkv54/website_delivery_just_the_code_or_full_deployment/",
        "num_comments": 26,
        "comments": [
            {
                "body": "Typically I would deploy and give the source to them if it's a done deal handover. Otherwise if they pay for maintenance I deploy and maintain the website.\n\nTo maintain the website I would use git, GitHub actions for devops. Cloud provider depending on the project specs.",
                "author": "Webbanditten",
                "score": 11
            },
            {
                "body": "Clients almost never distinguish between \"done\", \"delivered\", \"deployed\" etc. To them it all just means \"online and accessible\" if they've not said otherwise.\n\nIt's important to discuss exactly what you will do and draw up a list of deliverables and agree where the job ends. It usually goes: You would ask them how they plan to deploy. They have no idea what you're talking about. You tell them you can handle that for a fee. You include additional line items on your invoice for deployment. (Also discuss payment schedule, approving expenses, revisions/updates etc).\n\nWhen I used to freelance I preferred not to be the host, because I don't want to be on call as support. I'd rather leave that to the support team of a hosting provider. I set everything up for clients on their chosen hosting platform (that I usually recommended). Part of the handover was the credentials to any accounts I had created for them (with prior written approval), including their new GitHub account with their repo containing their source code (copyrights to source code were included in my price, because I didn't care about those personally).\n\nAt this point you can walk away entirely when the project ends. Or you can make yourself available for paid maintenance billed hourly etc.",
                "author": "HashDefTrueFalse",
                "score": 8
            },
            {
                "body": "Deploy and maintain for a subscription fee.  If one ever asks for the code, I'll zip it up and give it to them, they did commission me to make it for them.",
                "author": "CaffeinatedTech",
                "score": 6
            },
            {
                "body": "How i would always deliver:\n\nDeploy, and send a full site backup as a zip file.\n\nAlso tell them that this is good practice. If i keep the site archive and im in charge of hosting, they are chained to me.\n\nThey should ask the same of any website they pay to have created. You never know when a business deal goes south",
                "author": "fredy31",
                "score": 3
            },
            {
                "body": "It depends. For example if the client is not a dev or has a dev on their own, they may require u to deploy the code to a hosting before considering it as delivered. \n\nOn the other hand clients with their own devs may require u to hand the code to them so their team can do QA before deploying it themself. \n\nSo ask ur client what they want. But do be clear that if client takes over the code and face deployment issues later and ask for u to fix it, it will be considered additional chargeable work.",
                "author": "Delicious_Hedgehog54",
                "score": 2
            },
            {
                "body": "Almost always full deploy and often even hosting.",
                "author": "tomhermans",
                "score": 2
            },
            {
                "body": "if they have inhouse -> source code only.",
                "author": "alien3d",
                "score": 2
            },
            {
                "body": "source and deploy makes you reputable",
                "author": "flatfishmonkey",
                "score": 2
            },
            {
                "body": "Typically I would guide them to get their own server/hosting, hand the credentials to me, and I would deploy the site to their server and also give them the archive of the deployed version. Handling the hosting myself is too much work, and clients are usually not technical enough to deploy the code themselves.",
                "author": "hdd113",
                "score": 2
            },
            {
                "body": "Delivery varies, preferred deployment diverse, updates via comm.",
                "author": "Crafty_Impression_37",
                "score": 2
            },
            {
                "body": "Almost always full deployment. We frequently host on one of our VPS boxes, but sometimes we're replacing an existing site on hosting they want to keep, or otherwise insisted on some other hosting. Maybe 2 clients have had a annoying setup where I have to send them the files to deploy, even though they'd never touch the code for fixes. \n\nI typically have ongoing access to field fixes and updates (frankly we never catch everything during QA), and we either charge a maintenance contract or otherwise specify a (rather lengthy) warranty period.",
                "author": "zumoro",
                "score": 2
            },
            {
                "body": "If they want future maintenance: you keep the source code/repository and just deploy, give them admin auth credentials in the app if needed and etc. If it's a one-off commission: you deploy, give them the source code and deploy credentials and now they deal with it, i'd also leave a README showing how to run dev environment, detailing environment variables and relevant configs in case the client ever tries or gets someone to do updates (unless you want to lock the client in and have them come back lol).",
                "author": "Open-Oil-144",
                "score": 2
            },
            {
                "body": "I handle everything. They don’t know anything about computers. They can’t be expected to set it up themselves. I do it for them. They don’t even get the source code. Why would they? They won’t know what to do with it",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "Everyone has done a good job of establishing for you what the general expectations are, but no one has said this yet: Whatever is in the contract.\n\nDid you agree ahead of time on just delivering the code? Did you agree on deployment? Did you agree on maintenance? Then deliver that.\n\nDid you not define that clearly before you began work? Well then that's a problem.",
                "author": "mca62511",
                "score": 2
            },
            {
                "body": "Clients choice, more often than not unless it's a managed service you hand over the full source code \n\nYour pricing should reflect whether it's a managed service delivery ie a CMS or full source code development owned by the client",
                "author": "PaulJMaddison",
                "score": 2
            },
            {
                "body": "Thank you",
                "author": "NowHere8",
                "score": 2
            },
            {
                "body": "They need to own the production environment; you might need to help them set it up. You’ll hem deploy whatever it is on their production environment.",
                "author": "JohnCasey3306",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Thank you so much!",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Right, thank you",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Totally agree",
                "author": "NowHere8",
                "score": 1
            },
            {
                "body": "Thanks!",
                "author": "NowHere8",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1753855526.0,
        "title": "How to Transfer Ownership of a Website Managed by Someone Else?",
        "author": "Inside_Let_1493",
        "id": "1mcyv85",
        "selftext": "Hey everyone,\nI’m in a situation where I need to take full ownership of a website that was previously managed by someone else (a developer or agency). The website is already live and running, but I now need to handle everything—from hosting and domain access to code and content updates.\n\nI’m a bit new to all this, so I’d really appreciate any guidance on the following:\n\n1. What are the key things I need to get from the current owner/manager?\n(Like hosting login, domain registrar, CMS login, etc.)\n\n\n2. How can I make sure everything is securely transferred to me?\n\n\n3. What to check to ensure I have full control over the site (especially if it’s on platforms like GoDaddy, Hostinger, or cPanel)?\n\n\n4. Anything I should be careful of during the handover?\n\n\n\nThe site is hosted (I believe) on GoDaddy, and I have access to cPanel now. I just want to make sure I’m not missing any critical step in this process.\n\nAny help, checklist, or personal experience would be awesome. Thanks in advance!\n",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1mcyv85/how_to_transfer_ownership_of_a_website_managed_by/",
        "num_comments": 5,
        "comments": [
            {
                "body": "Hey! I’ve been through a similar transition before, so happy to help you out here 😊\n\nHere’s a simple checklist to make sure you’ve got full control of everything:\n\n1. Domain Registrar Access\nMake sure you have access to the account where the domain is registered (could be GoDaddy or another provider). This is super important whoever controls the domain controls the site. Change the contact info to yours once you’re in.\n\n2. Hosting + cPanel Access\nSounds like you already have cPanel access, that’s great! Double-check that you’re listed as the account owner, and if not, ask the current owner to transfer ownership (or update contact/billing info). Also, make sure you’re the primary billing contact so you’re not surprised later.\n\n3. Website Files + Database\nInside cPanel, make a full backup of the site (files and database) just in case. Use the File Manager or access via FTP to explore and download files. Also, check for phpMyAdmin access for any database-related stuff.\n\n4. CMS/Admin Access (like WordPress, etc.)\nIf the site uses a CMS, get admin access to the backend. Reset the password and remove any users you don’t recognize or no longer need.\n\n5. Update Passwords + Permissions\nChange all passwords: cPanel, CMS, FTP, database (if applicable), and any third-party integrations. Also, revoke any old developer or agency access from everything.\n\n6. Check DNS Settings\nWithin GoDaddy or wherever the domain is hosted, look at the DNS settings and ensure you understand where it’s pointing (like your hosting or Cloudflare). Keep a screenshot before making changes.\n\n7. Email Setup (if any)\nIf there are any domain-based email addresses (e.g. info@yourdomain.com), make sure you know how they’re set up, either through GoDaddy, cPanel, or another service.\n\n8. Legal Stuff & Ownership Confirmation\nIf this is for a business or you’re taking over from a client or previous owner, try to get a written confirmation (even an email) stating you’re now the full owner just to cover your back.\n\nLastly, don’t stress too much you’re already on the right track by asking these questions! Once everything’s transferred and backed up, you’ll feel much more in control.\n\nLet me know if you get stuck on anything specific, happy to help more! 🫶🏻🫶🏻",
                "author": "itsHadyy",
                "score": 6
            },
            {
                "body": "Thanks sir can you please check your dm",
                "author": "Inside_Let_1493",
                "score": 2
            },
            {
                "body": "Keeping this extremely short...\n\nThe highest level of access/control is the domain name.\nThis will have nameservers which is where the DNS settings are which is where you will change the websites hosting.\n\nThere's lot of small complications and more to this short rundown, I'd advise seeking someone with experience and letting them handle it.",
                "author": "Longjumping_Syrup393",
                "score": 1
            },
            {
                "body": "1. Please ask about your hosting login details and domain registrar login. If you have this login information, it is good and you can manage your website.  \n2. Once you have the login inforamtion, you can change your password and remove other users, except you. Then, you can make backup on your end.  \n3. If you don't have experience, you better ask/hire someone that understand about this field. Sometimes it can be complicated if you don't understand about technical.",
                "author": "OptPrime88",
                "score": 1
            },
            {
                "body": "Thanks",
                "author": "Inside_Let_1493",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1757587613.0,
        "title": "How to answer to instagram comments via API",
        "author": "AppealSame4367",
        "id": "1ne5imn",
        "selftext": "Hi, we got the instagram\\_business\\_manage\\_comments permission for our instagram/facebook app. The documentation is very chaotic, so I'm asking myself: do we still need the instagram\\_manage\\_comments (without \"business\") permission to actually answer comments if logged in via instragram business api?\n\n[https://developers.facebook.com/docs/instagram-platform/instagram-graph-api/reference/ig-comment](https://developers.facebook.com/docs/instagram-platform/instagram-graph-api/reference/ig-comment)\n\n[https://developers.facebook.com/docs/instagram-platform/instagram-graph-api/reference/ig-comment/replies](https://developers.facebook.com/docs/instagram-platform/instagram-graph-api/reference/ig-comment/replies)\n\nFirst doc says you only need instagram\\_business\\_manage\\_comments, the other is for insta accounts logged in via facebook\n\nNext sub page says you need instagram\\_manage\\_comments permission to answer a comment - which was reserved for facebook login in the previous page.\n\nWe tried to get the instagram\\_manage\\_comments permission as an afterthought, but the review was denied because of a formality and now i don't have time to let them approve it again before demoing for an important customer today.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1ne5imn/how_to_answer_to_instagram_comments_via_api/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1659461269.0,
        "title": "How do web devs make static corporate sites effectively?",
        "author": "saito200",
        "id": "wehocn",
        "selftext": "I am a web dev, specialized in dynamic web apps, I am used to do custom apps and dashboards and things like that.\n\nNow, if I want to make a more standard looking website, my hammer is React, but React takes time, and not everything is a nail.\n\nIf I wanted to make a static site with some standard content, my go to now would be NextJS in combination with some content management system like Storyblok.\n\nIs this a cost-effective way of doing things?\n\nOr should I really be using WordPress simply because the amount of time it saves me in building static sites with standard features (self-hosted, not the service offered by WordPress) and because it is \"the standard\"? Or is it not the standard anymore?\n\nShould someone who knows React be using WordPress at all?\n\nHow do freelancers who actually do corporate websites for a living handle this?\n\nPlease advice.\n\n&#x200B;\n\nEDIT: I made a list with your suggestions:\n\n\\- Static site generator like 11ty pair it with a headless cms (Jamstack), [https://github.com/11ty/eleventy-base-blog](https://github.com/11ty/eleventy-base-blog)\n\n\\- Just html and css, copy paste common elements across pages: [https://github.com/Oak-Harbor-Kits/Starter-KitV3](https://github.com/Oak-Harbor-Kits/Starter-KitV3)\n\n\\- [https://gohugo.io/](https://gohugo.io/)\n\n\\- GitHub template repositories and Jekyll [https://jekyllrb.com/](https://jekyllrb.com/)\n\n\\- HTML, CSS, PHP, MySQL\n\n\\- ASP.NET MVC layout templates\n\n\\- WordPress with elementor, extended with react/Vue for customization\n\n\\- NextJS if site has dynamic content + WP as headless CMS, or Astro\n\n\\- Bootstrap Studio to scaffold project UI\n\n\\- Sveltekit\n\n\\- Next + Tailwind\n\n\\- WYSIWYG integrated in marketing platform such as hubspot\n\n\\- [https://webflow.com/](https://webflow.com/)\n\nAnd there's also this: [https://2021.stateofjs.com/en-US/libraries/back-end-frameworks](https://2021.stateofjs.com/en-US/libraries/back-end-frameworks)",
        "score": 137,
        "url": "https://www.reddit.com/r/webdev/comments/wehocn/how_do_web_devs_make_static_corporate_sites/",
        "num_comments": 84,
        "comments": [
            {
                "body": "I just make sites in html and css. I copy and paste other html and css “components I’ve made like navigations, footers, side by side content, etc. when I get my design from my designer and I notice certain sections have the same structure as another section I’ve built I just copy and paste it in and edit the css to make it look like the new design. \n\nHere’s my starter kit I use to start every new site\n\nhttps://github.com/Oak-Harbor-Kits/Starter-KitV3\n\nAnd here’s what it looks like\n\nhttps://buildkit-v3-demo.netlify.app\n\nYou never start from scratch. You reuse as much as you can from what you previously built, and whatever you don’t have, you build. \n\nI’d stay away from Wordpress if you can. Notoriously insecure and a pain to deal with. Static sites are perfect for just html and css. I’ve built my entire business around it.",
                "author": "Citrous_Oyster",
                "score": 75
            },
            {
                "body": "Static site generator like 11ty pair it with a headless cms.",
                "author": "AussieBlender78",
                "score": 37
            },
            {
                "body": "Check the guys post history, he's very open in regards to his range of clients and the fact that his target market is small businesses.\n\nAs a new person to web dev, he gives that alternative view that there are more markets than just big corporate sites or companies.",
                "author": "VenexCon",
                "score": 20
            },
            {
                "body": "Why isn’t this higher? This is the real answer. Build pages from templates, markdown, and data using JavaScript and deliver static html and css pages. 11ty and Hugo are really good choices. Save React for apps",
                "author": "5A704C1N",
                "score": 17
            },
            {
                "body": "No bullshit, 11ty just works, and with zero client JS. Super duper blazing fast. But you need to roll your own build system (I use esbuild, Scss with Postcss and Purgecss, various minifiers, autoprefixer etc.)",
                "author": "anatolhiman",
                "score": 17
            },
            {
                "body": "I respect your work, this is really cool what you're doing.\n\nI really like the design of these sites, simple, clean, readable, functional\n\nI can't but wonder if it wouldn't be better to use a component based framework and statically generate these sites. That way, if you change something, say, in the nav bar, you don't have to go change the same thing in all navbars.\n\nA nitpick. I really like it",
                "author": "saito200",
                "score": 16
            },
            {
                "body": "I sell myself as a service. $150 a month for unlimited edits. Could probably get away with $200-$250 for large enterprise clients. Or you hook it up with a cms for static sites. I one of my Clients is a multi million dollar construction supply company. Static html and css. 20 pages. Easy peasy. They pay me $250 a month.",
                "author": "Citrous_Oyster",
                "score": 12
            },
            {
                "body": "I would use [11ty/Eleventy](https://www.11ty.dev/) which allows you to use includes (so you avoid repeating footer component, header, etc.) I use Nunjucks for the layout and html components, a dynamic templating language for HTML much like Mustache or Handlebars. Eleventy spits out plain html files and is super easy and fast to work with. Parses Markdown 500+% faster than Next.js. Here is every technique you need: https://github.com/11ty/eleventy-base-blog",
                "author": "anatolhiman",
                "score": 9
            },
            {
                "body": "Works as long as you dont need a cms.. Good solution for small businesses i guess. But not more...",
                "author": "Youckfou46",
                "score": 8
            },
            {
                "body": "Don't know about others, but I use GitHub template repositories and Jekyll (with a variety of `_includes/*` and `_layouts/*` and such). I can easily pump out a decent site + PWA + Android app in only a few hours (most of that time stems from how long it takes to get an app on the play store). Could also do similar with 11ty or whatever.\n\nGetting to the point where I have all of that available has taken me a rather long time though. I imagine that it'd be reasonably easy to just create a basic repo in something like NextJS and convert it to a template though.",
                "author": "shgysk8zer0",
                "score": 7
            },
            {
                "body": "I'm not conviced by these site builders. Usually you end up with a million unnecessary nested divs that do nothing more than provide the template for the builder\n\nIn my mind there's no downside in using NextJS with static site generation",
                "author": "saito200",
                "score": 7
            },
            {
                "body": "Can't understand nobody mentioned [Webflow](https://webflow.com/) yet. Honestly a crazy good no-code editor that let's customers get websites (with CMSs) made by designers instead of developers and in 10% of the time it takes to built using React.  \n  \nI have made static React website for clients throw agencies, and it hurts my heart so much that the clients don't know they are paying 20x upfront, waiting 10x as long, for a worse performing site, with larger hourly rates on changes down the road, and the site rotting faster than anything.  \n  \nI think we developers are way too eager to use that hammer of ours, unfortunately my colleagues disagree.",
                "author": "akd_io",
                "score": 6
            },
            {
                "body": "1. Write HTML, CSS and manually update the content changes. Maybe write some basic DOM JS for 'effect',\n2. Do # 1 and add in some PHP and a MySQL database to build out a basic CRUD system. Now you can dynamically change your site content,\n3. Use a CMS like Wordpress and use HTML, CSS, PHP, and JS to customize or build a theme for the iste. Use the CMS to edit content.\n\nIf it truly needs to be static, #1 is my go to.",
                "author": "NiagaraThistle",
                "score": 5
            },
            {
                "body": "So I learned MERN stack initally, but dipped into freelance WordPress to get my first bit of experience, and now I work with Angular/Springboot. I'm not a WP expert by any means, but it really feels like WP is almost an entirely separate ecosystem from web development. Don't get me wrong, there's a lot of overlap, but I kept running into certain particularities with the WordPress ecosystem that really made it feel like it's its own thing.\n\n&#x200B;\n\nI think WordPress is so prevalent in this industry, that it's pretty good to have in your back pocket, but if you really want to have a successful freelance career, you need to specialize (you'll just have too much stuff to worry about if you don't) and have a reasonable customer base that provides you with regular work. Biggest advantage of WP is that it will ease your job of finding work as a freelancer.",
                "author": "SpookyLoop",
                "score": 5
            },
            {
                "body": "Is there any reason to choose 11ty over NextJS for SSG?",
                "author": "saito200",
                "score": 5
            },
            {
                "body": "Thanks! Yeah, you could. But for little 5 pagers where not much really changes it’s just a bit of fat I can trim off my sites that isn’t totally needed.",
                "author": "Citrous_Oyster",
                "score": 5
            },
            {
                "body": "If there's not much need for JavaScript logic I would go with Hugo.",
                "author": "RedMoonSailor",
                "score": 4
            },
            {
                "body": "If it’s just static then why not simple html?\n\nIf you just wanna reuse components I don’t see the harm of using react just for that. Or even go with web components",
                "author": "Emotional-Dust-1367",
                "score": 4
            },
            {
                "body": "Ive done around 130 wp sites, mostly use WordPress with elementor and then we just make VueJS apps/components to extend that for any thing requiring customisation. We service small businesses mostly thay don't have large budgets so elementor really helps cut down the hours. Once you find a core set of plugins you trust WordPress isn't too bad :)",
                "author": "soradbro",
                "score": 4
            },
            {
                "body": "[ASP.NET](https://ASP.NET) MVC layout templates and a few fancy custom codes for blog/news pages.\n\nWorks super well tbh but we're moving to Umbraco which adds a CMS.",
                "author": null,
                "score": 4
            },
            {
                "body": "Because Nextjs has static site generation and once you have a decent component library built up you can use the same components for static and dynamic sites. I personally find the Nextjs API way easier to work with than vanilla HTML/CSS, but that’s because I already know React.",
                "author": "DeepSpaceGalileo",
                "score": 4
            },
            {
                "body": "Look into Jamstack. Static site generators are a part of this.",
                "author": "AussieBlender78",
                "score": 4
            },
            {
                "body": "Which you’re describing like 70% of the Wordpress market of devs haha I’ve yet to see a well built Wordpress site in the wild for a small business. I’ve seen thousands. The actual good Wordpress devs are working on $10k+ projects for large companies or corporations. Majority of the small business Wordpress work is elementor and shit work in my experience. All I’m saying as a dev, just because everyone seems to be using it, doesn’t mean you have to.",
                "author": "Citrous_Oyster",
                "score": 4
            },
            {
                "body": "Next.js 😀",
                "author": "dizzyon",
                "score": 3
            },
            {
                "body": "I've been only working on these sorts of sites for a couple of decades. You're generally, as you guess, looking for a reasonably thin and forgiving stack. At my present position I inherited a site built in Gatsby with Sanity as the CMS and a Shopify piece. I am currently moving off of that into the first one in your list - 11ty.\n\nI guess the one note I have on this is - it's not *that* different from a web app. Don't be fooled into thinking there will be no complexity because the presentation layer is slightly more straightforward. Generally I would focus on a really responsible GTM based setup for their trackers and make sure your SEO game is on point. So - structured data in the header, a reasonably semantically sound layout, etc. That's the stuff those clients will appreciate is my bet.",
                "author": "abeuscher",
                "score": 3
            },
            {
                "body": "Yeah, I think you’re in the right direction with Nextjs if the content has to be dynamic. If the client wants wordpress for editing, you can use wp as a headless cms. \n\nIf you want something simpler, you could use Astro as well. \n\nIf you want to create the page design very quickly and you’re good with bootstrap, you might want to look at Bootstrap Studio. (Export to HTML, then extract to Next/Astro, or even just leave it as is)",
                "author": "thwaw000610",
                "score": 3
            },
            {
                "body": "I use php in 99.99% of my projects so I build components in html/css/php and include them using php. People these days are so used to building things with javascript that they forgets how heavy js can actually be and how time consuming it will become to get every part right.",
                "author": "Error_co-Id10T",
                "score": 3
            },
            {
                "body": "Well... I can't stomach using a CMS instead of my IDE. It makes life depressing and web dev stops being fun. Interacting with the WP CMS makes me sad",
                "author": "saito200",
                "score": 3
            },
            {
                "body": "Becuase static sites on the front end might still need content edits etc. Delivering them as static HTML/CSS/JS doesn't mean they're unchanging.",
                "author": "rickg",
                "score": 3
            },
            {
                "body": "Look at this: https://gohugo.io\n\nI think it’s basically what you’re looking for. Static site but with templating to generate content dynamically.",
                "author": "SeesawMundane5422",
                "score": 3
            },
            {
                "body": "You are asking for PHP.. not the deeper stuff, but the part of php that just makes the job done.   \n\nJust a require(“header.php”); and voilá, you have your shared header.\n\nYou need a copyright with a date? Copyright date(“Y”)\n\nYou need to loop a table? Just add a foreach before the actual html..\n\nWith arrays and a couple of basic methods, you can have an amazing static site, in the cheapest host available",
                "author": null,
                "score": 3
            },
            {
                "body": "This. Then just target clients who need your thing.",
                "author": "NiagaraThistle",
                "score": 3
            },
            {
                "body": "Then you’re just like me. Don’t force yourself to do something that’ll inevitably make your life hell. Just dev it out — the most efficient path isn’t the most time-saving, it’s the path that allows you to stay on track without quitting.",
                "author": "SoysauceAndLove",
                "score": 3
            },
            {
                "body": "Well, Bootstrap studio is not like that. It’s basically a tool to do the same as you would in an html file just faster, and gives you preview, and a drag n drop interface. My BSS exports look almost the same as the ones that I write by hand.\n\nYou can have complete control over the code. \n\nI use it sometimes to scaffold out the project’s UI, then export, and extract it into components. But using react-bootstrap can be just as fast in most cases. It’s up to you :) Just nice to know your options.",
                "author": "thwaw000610",
                "score": 3
            },
            {
                "body": "Well, you export the html, then copy the parts into individual components. Not the best option, but sometimes it helped me a lot. But most of the time, it’s best to just leave it as a static html export (if you don’t need dynapic content)",
                "author": "thwaw000610",
                "score": 3
            },
            {
                "body": "You are probably right but from my experience, the majority of the sites I see built on js is slower than those built using php. Probably because a lot of newbies appreciate js over php and can't use it properly compared to php users who got more experience",
                "author": "Error_co-Id10T",
                "score": 3
            },
            {
                "body": "I run a tech consulting business for small businesses and oftentimes I get clients who just want a static website. Not my favorite project to do but it happens very often, but every time I get a client like this, I realize the time it takes for me to crank out a website from design to launch with Next + Tailwind is less than the time it takes me to learn a no-code CMS like Wordpress to the point of matching my FE dev skills. Sure, once I do learn, it’d be faster in the long-run, but it’s also painfully boring in comparison to coding it up yourself. Do the switch if you’re not confident in your skills or don’t mind the work of using a CMS.",
                "author": "SoysauceAndLove",
                "score": 2
            },
            {
                "body": "Rarely does Wordpress work properly as a headless solution just FYI, as soon as more than one dev commits any changes or introduces a single functional workaround the whole thing usually falls over. \n\nI agree with comments of 11ty/Jamstack and FEF/Storyblok CMS. At my current company we farmed out our corporate site to an agency who built it with React/Storyblok CMS and that works pretty well IMO.",
                "author": null,
                "score": 2
            },
            {
                "body": "Nextjs is a good static site generator, I have deployed it  to aws S3 for cheap hosting. Dynamic content made using rest calls in the client code. You basically lose serversideProps and dynamic routes but you can work around this.",
                "author": "dangerousbrian",
                "score": 2
            },
            {
                "body": "UNPOPULAR OPINION:  TLDR: don't code a website. Use a marketing platform with a WYSIWYG website editor.   These do not include wordpress.\n  \nIf you are building a static site you are probably not serving your client well.   The website is the tip of the iceberg to their marketing tech stack.  Even if it's small business, they need a marketing tech stack.  There are 100's of marketing platforms (i.e. hubspot and hubspot alternatives) that have good tools to build great websites using WYSIWYG editors, and provide so many other services / features that a small business needs for digital marketing.   The digital marketing space is moving fast and things like live chat, a/b testing, integration with ad platforms, etc.. are becoming table stakes.  Do some research and pick a platform:  Wix, Hubspot, Squarepace, and just use their WYSIG tools.  They usually have hooks into their source code for custom code if you really need it.  \n  \nDISCLAIMER:  I do not work for marketing platforms.  I needed a website and started where you started from.  I did some research learned what the state-of-the-union of website building is.   The state of the union is that the WYSIG tools are pretty good and the website should be integrated into the larger marketing tech stack - which plenty of good platforms do for a reasonable price, hosting included.",
                "author": null,
                "score": 2
            },
            {
                "body": "Clean, fast, easy to navigate. Nice.",
                "author": "Eladiun",
                "score": 2
            },
            {
                "body": "Oh hey I was just watching your playlist where you made the Forced Evolution site. Thanks for everything you do!",
                "author": "FeelTheLoveNow",
                "score": 2
            },
            {
                "body": "Wow, the repo just looks so simple and clean. It takes like 2 seconds to know what every file is doing. That’s my biggest peeve with some frameworks/stacks is that it leads to a ton of bloat and is overwhelming.",
                "author": "DasBeasto",
                "score": 2
            },
            {
                "body": "I agree completely that if I want to work as a freelancer I should specialize in one specific thing, and don't try to master everything",
                "author": "saito200",
                "score": 2
            },
            {
                "body": "I don't understand either. Webflow has to be one of the fastest and easiest ways to build a custom website.",
                "author": null,
                "score": 2
            },
            {
                "body": "Site + PWA + Android app in just a few hours? Consider me blown away. Like, how is that even possible? Do you have a live example?",
                "author": "saito200",
                "score": 2
            },
            {
                "body": "&#x200B;\n\nWhat do you mean by 'extract to Next/Astro' I use BSS and now I'm curious\n\nDo you build the components on BSS and use it on Astro?",
                "author": "diucameo",
                "score": 2
            },
            {
                "body": "That's a good idea. Then you customize the design by manually changing the html / css?",
                "author": "saito200",
                "score": 2
            },
            {
                "body": "I thought everyone hates Gatsby, for some reason",
                "author": "saito200",
                "score": 2
            },
            {
                "body": "I no longer have any live examples of anything at that stage, no. Everything I have in production based on those templates has many additional hours of work put into it by now.\n\nBut, after having built a bunch of such sites, I basically figured out how to reduce the initial setup of such things to a few config files (including one for CSS custom properties for theming). I basically create a new repo from the template, link it with Netlify, do a few edits on the config files, deploy, plop the URL into PWABbuilder, and upload to the Play Store console... Could probably automate that last bit through GitHub Actions, but app versions tend to be very different and rarely need to be released.",
                "author": "shgysk8zer0",
                "score": 2
            },
            {
                "body": "PHP gets a lot of hate due to its association with Wordpress et. Al., but it is a fantastic language I use almost daily. Not to say JS frameworks aren’t also fantastic, but PHP doesn’t get as much love as it should.",
                "author": "Steve_OH",
                "score": 2
            },
            {
                "body": "Thanks for sharing, this is really great!",
                "author": "aleph_0ne",
                "score": 2
            },
            {
                "body": "Exactly - wordpress isn't bad - but giving a blowtorch to a drunk toddler is a bad idea. And that's what happens with wordpress.\n\nSome real estate agent or restaurant owner or whatever gets his shiny new wordpress site built - then he wants to start jamming random plugins into it - not wanting to pay for you to maintain it, everything falls out of date - and suddenly there's korean backlink ads for sneakers or ransomeware \n\nHe can't restore his backups because his \"Backup Pro Saver\" plugin hasn't been updated (or ran) since 2006\n\nHe can't restore from his host backup because it's a $9 / month hostgator box\n\nAnd now his blog, leads, (and for some reason, his BILLING platform - how in the fuck?) - is now lost to time",
                "author": "yousirnaime",
                "score": 2
            },
            {
                "body": "That’s why I prefer my html and css. Aint gotta worry about that ever.",
                "author": "Citrous_Oyster",
                "score": 2
            },
            {
                "body": "I'm working on a CMS for exactly this! It lets you build a static site with HTML & CSS that can be easily edited by a non-technical content editor. Would love to hear from you if you check it out: https://github.com/primo-af/primo",
                "author": "mateomorris",
                "score": 1
            },
            {
                "body": "Why would you use nextJs or a CMS to make a static site?\n\nWould you not just use HTML/CSS? Perhaps some js for sprinkles?",
                "author": "BlackHoneyTobacco",
                "score": 1
            },
            {
                "body": "I typically use react for static shit because I usually already have components for whatever I’m doing and can just copy it over and tweak it. Of course I rarely do webdev now so this may not be the best method.",
                "author": "VeterinarianOk5370",
                "score": 1
            },
            {
                "body": "They do it in whatever language or framework they are most comfortable with that also has good seo. Next.js for example has been a pretty good react option from what I have seen.\n\nExtra props if you can build a CMS into it.",
                "author": "WhatWillNeverBe",
                "score": 1
            },
            {
                "body": "I’ve been working on a project that just leans into HTML (SSG) and Web Components (SSG/SSR) and works great with markdown.  Called Greenwood.\nhttps://www.greenwoodjs.io\n\nTries to make using standard web APIs all you need to know to build a site but could also just as easily be used to build a SPA if you need that too.",
                "author": "thescientist13",
                "score": 1
            },
            {
                "body": "There are two things to consider here.\n\nFirst, who's generating the content and what CMS do they want to use/what features do they want\n\nSecond, developer experience.\n\nSince  you know React I'd stick with some Jamstack framework - NextJS, Eleventy, Gatsby - and hook it to a CMS on the backend. If you run into a client who wants to use WordPress you can install the [WPgraphql](https://www.wpgraphql.com) plugin and front it with your framework of choice. Several of the most popular plugins have GraphQL support too.\n\nIf your client doesn't care and you think Storyblok will work for them, use that. Or Contentful, Sanity, Dato, etc.",
                "author": "rickg",
                "score": 1
            },
            {
                "body": "Take a look at my project at https://github.com/PremoWeb/SDK-Foundation-Vue\n\nPHP 8.1.8 backend via nginx, Vue 3 frontend with Vite. Amazing simple development experience and flow. I'm now working on video tutorials and other docs for this.\n\nYou ought to check it out. I'm already building headless WordPress websites where content is managed behind a subdomain but content is served via Vue 3 and proxied API calls to the backend.\n\nI like using Fat Free Framework for PHP backend and Foundation for Sites for the front-end. Switch out to any PHP framework and css framework you want.\n\nI'm still polishing this project but hope to start getting people involved in using it as a base because it incorporates the use of containers, Single Page Application type statically built front-end, easily swappable backend in case you would rather use python, perl, go, etc and and let's you easily swap out front end css frameworks in case you'd rather use tailwind, bootstrap, etc.\n\nIf you delete the github workflow, an npm build command is all you need to build a site ready to copy manually from the backend folder via ftp or scp, etc to your server. The workfow file is provided to seamlessly deploy your site via caprover to a docker swarm.\n\nGive it a try and let me know what you think.",
                "author": null,
                "score": 1
            },
            {
                "body": "I do not do it. I have very automated the process of creating a new site. I use a php framework and when it's a 'static' site I just disable login and backend and add a 'page' controller that loads static html's. This allows me to standardize all my sites and extend the \"static\" site to dynamic when the client requires it.",
                "author": "SrFosc",
                "score": 1
            },
            {
                "body": "I find that most static sites are done by a marketing or sales team. It is more for them than anything else, they don't need or want functionality they just want to drive static content or some kind of use of analytics to even further drive content or discussion with staff. \n\nBecause of the lack of functionality its overkill to use React, Next and so on. And using a 11ty with a CMS can be done by staff. I'd push it to latter mentioned departments",
                "author": "roch_dylan",
                "score": 1
            },
            {
                "body": "I let the marketing and design teams make the corporate website with wordpress. They don't really need a developer for that.",
                "author": "BlueScreenJunky",
                "score": 1
            },
            {
                "body": "Gatsby Netlify CMS. There’s a boiler plate",
                "author": null,
                "score": 1
            },
            {
                "body": "if you are working for a small business website wordpress/shopify works perfect, but for something a little bit more elaborate a SSG is the option. For static site the load speed is a priority",
                "author": "Nah0k",
                "score": 1
            },
            {
                "body": "Wordpress is a perfectly fine platform. This is \"WordPress is insecure\" rhetoric, just comes from either people who don't know how to build websites properly with an over reliance on plugins or rival platforms trying to get people on their system, and half the time its pretty much always referring to an elementor website. Which is there to do the same thing as WiX anyway.",
                "author": null,
                "score": 1
            },
            {
                "body": "That’s really cool-/respect",
                "author": "aleph_0ne",
                "score": 1
            },
            {
                "body": "Just html and css means you'll be duplicating a lot of code, and you'll be mixing html/css layout with your content. Both of those are hindering to developer experience, imo. \n\nUsing a SSG like 11ty is better imo, unless you're building like 3 pages only.",
                "author": "oxamide96",
                "score": 1
            },
            {
                "body": "Interesting. I'm hearing lots of ideas that I wouldn't think about simply because at first glance they would not seem to make sense. But they do, depending on the project",
                "author": "saito200",
                "score": 1
            },
            {
                "body": "it's clearly in alpha, but it seems really straightforward and quick to use",
                "author": "saito200",
                "score": 1
            },
            {
                "body": "Yeah... that makes sense, obviously. I don't know why it didn't occur to me that you don't need to be a developer to use WordPress. That's the entire point",
                "author": "saito200",
                "score": 1
            },
            {
                "body": "Thanks!",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "Thanks! That’s as the goal. When I was learning it seemed repos like this were full of folders I had no idea did what, code that looked jumbled and unfamiliar, it just felt very chaotic. I wanted to build sites that have the cleanest and most organized code so when you look at it, it just makes sense. Looks like mission accomplished!",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "Usually only build like 3-5 pages. Static site generators are over kill for something so simple. I don’t see how it’s hindering at all. I only copy and paste navs and footers. Takes 2 seconds to change the active class on the active nav for that page.",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "I beg your pardon, I meant the nextjs bit, wasn't thinking when I wrote the cms bit...\n\nHowever, this has been answered by another poster about next js below.",
                "author": "BlackHoneyTobacco",
                "score": 1
            },
            {
                "body": "Yes, I create the html for each page using the chosen css framework. Being a dynamic site also allows me to use a common layout for all pages and focus only on the html content of the page in question. Although it is not necessary, I also have in those html title and meta tags that are applied to that layout automatically by the page controller. Something like that: \n\nInput url:\n\nhost/page/something\n\nOutput: \n\nLayout-header\nLayout metas (read from something.phtml)\nLayout menu\n\n>>Content of something.phtml\n\nLayout footer.",
                "author": "SrFosc",
                "score": 1
            },
            {
                "body": "And zero JS is added to your output, so no extra fat here.",
                "author": "anatolhiman",
                "score": 1
            },
            {
                "body": "Yeah its fully respectable, yet i wanted to point this out for OP. Depending on Customer and arrangent it can come back and bite you in the ass, when you basically just work to update and maintain content on one site.",
                "author": "Youckfou46",
                "score": 1
            },
            {
                "body": "Yeah definitely nailed it. I'm a React dev but these types of bare-bones setups are really tempting for me.\n\nI've always considered starting up a little agency targeting SMBs (I consult for large enterprise companies currently) and would love to setup a boilerplate like yours but maybe with [Alpine Js](https://alpinejs.dev) and Tailwind just for a dev quality of life.",
                "author": "DasBeasto",
                "score": 1
            },
            {
                "body": "Sorry, I didn't realize you were building 3-5 at a time. In this case I agree, SSG may be overkill. But I don't think this would apply to most cases in OP's question.",
                "author": "oxamide96",
                "score": 1
            },
            {
                "body": "Is this a quote somehow? Tried to find it, seems it's an original. There's a lot of wisdom in that sentence, which I've experienced myself as well.",
                "author": "freeo",
                "score": 1
            },
            {
                "body": "Care to pm me your email? I’m working on a service for people like you to build websites for small businesses with prebuilt code. I’d like to see what you think of it and let you beta test it.",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "It's a trade though, doing those php includes increases server response time. Experienced front end devs are far likelier to get a performant JavaScript site than serving up a php site that uses includes.\n\nSSG frameworks like Sveltekit easily churn out 100/100 across the board in performance/seo/accessibility scores.",
                "author": "fkthem",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1755538688.0,
        "title": "platform question",
        "author": "audioses",
        "id": "1mtsuj5",
        "selftext": "Hey, I’m new to web development and I’ve got a question — it’d be great if someone knowledgeable could chime in and enlighten me.\nI’m working on an app that has an FFmpeg requirement. I wrote the frontend mostly in JavaScript/TypeScript, and I’m considering doing the backend in a similar stack. However, the backend also requires some Python processing because of FFmpeg.\nI’ve seen some FFmpeg wrappers, but video processing is a heavy task on its own. Anyway, here’s my main question:\nFor the hosting provider, which setup would make the most sense? Firebase, Google Cloud, or Cloudflare? I plan to run the main backend over Cloudflare Workers, but I’m conflicted about where to run the heavy backend tasks. Should those go on Cloudflare Containers or on Google Cloud Run?\nAlso, what about the database management side of things? Should I use something like Supabase, or is there a better alternative?",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1mtsuj5/platform_question/",
        "num_comments": 2,
        "comments": [
            {
                "body": "I've actually built a video processing service that has a similar backend stack to yours. I had an express.js server hosted on a pretty cheap VPS that makes requests to a more expensive cloud rented GPU that is priced by the hour(vast.ai for cheap consumer grade GPU). The video processing was done in python on the GPU end and my express server had SSH to the GPU and directly executed python files. If there was an increased need I could always set up an automatic scaler to rent for more GPUs, but at that point it'd be better to go for a dedicated GPU provider.",
                "author": "imperiltive",
                "score": 1
            },
            {
                "body": "You should check out [https://github.com/pixeltable/pixeltable](https://github.com/pixeltable/pixeltable) it's open source and local first. You can basically do nice things such as video chunking, working with frames, clipping, indexing, and working with videos files as if they were local to the database giving you scale, versioning, and lineage. Same for audio/images etc.\n\nE.g. [https://github.com/pixeltable/pixeltable/blob/main/docs/notebooks/use-cases/object-detection-in-videos.ipynb](https://github.com/pixeltable/pixeltable/blob/main/docs/notebooks/use-cases/object-detection-in-videos.ipynb)\n\nWe wrapped up some FFmpeg functionality as UDF to make it built-in but you can bring any Python UDF that you want.",
                "author": "Norqj",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1725469640.0,
        "title": "Another 'I am tired' post by a junior, entering the field",
        "author": "koevh",
        "id": "1f8yotn",
        "selftext": "Hey all, I've been a frontend freelancer on and off for the past 3 years now, but I still feel like a junior. I couldn't land a job anywhere, so I tried freelancing in the meantime.\n\nI started co-working with one guy who has a company (let's call him S), but is totally tech clueless. No experience in anything IT or web dev. But he has good sale skills and was able to find me (us) clients. Ofc, he moves part of the income to his company. There's no contract or anything between us, it's purely on a trust base (I'm that desperate). It's working pretty much. Until it's not.\n\nWe landed this client who wanted a job platform. Of course I knew it will take a lot, but the scope creep is insane. Being the junior that I am, I don't know how to organize, prepare, even do basic research. The graphic designer (another freelancer who attached to this guy) - also a junior, did a half-assed, but pretty enough design (enough for the company owner to approve it) that was hard to convert to code (inconsistent fonts, margins, paddings, no grid layouts, my blood still boils thinking about it). No mobile version as well. NOTHING about research or data model that I found out immediately that I need.\n\nIn the meantime, I found out about Payload and that's been a godsend. It does a lot of the heavy-lifting backend-wise and has good enough out of the box authentication. I worked day and night (a few times haven't slept more than 30 hours). In the meantime the client pressures us to deliver. We're now 4 months after the promised deadline by S. IT'S ONLY ME and S keeps promising and bullshitting them that we're a team at 'our' company and that 'we' are working on it. I can't handle the meetings when I'm the only one talking really, S has no clue about the project he's trying to sell, and I'm screaming internally when he tries to suck up to the client by promising more features. I ALWAYS discuss it with him later that 'who do you think is going to have to do this?'. But I can't stand for myself really or probably I'm not communicating well enough, because so far I always ended up doing more stuff than what was initially planned. And here's the problem - pretty much nothing was set in stone from the beginning.\n\nNow finally, when the web is somewhat functional, the client decided to start testing it. And of course it breaks on many places, because I didn't have the time to test it. I'm currently working on a payment solution, which would mean that I need to set up some logic with orders/memberships/organizations and jobs, write custom hooks to manage all of that, then improve job creation. I can do it. I already did so much, but I'm tired.\n\nThe kicker? I'm getting 1600 EUR for that. For more than 4 months of my time. I was kind of motivated before to finish it, but now I'm the mood to absolutely say 'fuck this' and just not deliver. Fuck S and \\*slightly\\* fuck off to the client. This is not my first client ofc and I've had worse. And I've had better, but once every few months. This one is quite reasonable all things considered, but I'm just tired.\n\nWould you (rage) quit or you'd finish it? Is this what it's like to work in web dev? I dreamed of being a freelancer, but now I think I prefer 9 to 5...\n\nBtw, if you're curious, here's a beta version: [https://schooljob-beta.coolify.koev.cz/](https://schooljob-beta.coolify.koev.cz/) you can register and check it out (also need to find a way to implement registration confirmation tokens). It's in Czech, I have the English version set up with i18n, but need to find a way how to impement the routing for it. A lot of basic features are still missing, so be kind please. Or not. :D",
        "score": 11,
        "url": "https://www.reddit.com/r/webdev/comments/1f8yotn/another_i_am_tired_post_by_a_junior_entering_the/",
        "num_comments": 41,
        "comments": [
            {
                "body": "Yeah, 1600 € is what I charge for a week's worth of work, definitely too low, in the long run you'll either burn out or you won't be able to cover business expenses. The website looks fine, so definitely charge more.\n\nIf I were based in Czechia, I'd def go / stay freelancer, you have one of the best freelance taxes / social contrib / healthcare contrib scheme of the whole of Europe. \n\nAlso, as somebody who in the past teamed up with a complete debil myself, don't do it, it's not worth your time, be around people who inspire you and improve the quality of your work, not the other way around.",
                "author": "skwyckl",
                "score": 27
            },
            {
                "body": "I'm not gonna lie, brother, this sounds rough. I'm currently considered a senior where I work, and the instant I heard job \"platform\" I instinctively wanted to run.\n\nAt this point, it looks like this S will never stop promising new features. Which also means you will get fucked for many more months to come. And 4 months, for a complete job platform, by yourself? I'd estimate more time even if I had a complete team. \n\nGiving it to you straight. I think this is doomed. If you haven't gotten your money yet, cut your losses I don't think you will EVER see a dime at this point. \n\nWhere are you situated now? What's your experience? After 3 years, I'd say somebody starts to enter medior level and should be able to apply for such jobs.",
                "author": "rm-rf-npr",
                "score": 15
            },
            {
                "body": "Take your code and walk, if you havent been paid. That other guy is on the hook to deliver.\n\nScope creep alone, should have been your \"partners\" whole job to squash that. \n\n1600 is a few dynamic pages, but mostly static web page works on PC and if you have the time mobile (or vice versa). Some form CMS system, and basically auth to log in edit some content, and log out. Thats what 1600 gets a normal person. Not a store front, and not some responsive works on every device known to man kind of web page.",
                "author": "Harrigan_Raen",
                "score": 8
            },
            {
                "body": "Saving this post for the next \"idea guy\" thats, \"looking for an ace developer\". \n\nThey post all the time. This is the outcome, always is.",
                "author": "barrel_of_noodles",
                "score": 6
            },
            {
                "body": "Your partners are fucking idiots, the graphic designer has a easy as fuck job and doesn't even deliver the mobile ver, the salesman is even stupider since he sells tech but knows nothing about it, its like a HR tech firm being tech iliterate\n\n\nAnd I dont blame you, what are the exact detail of the webpage? ",
                "author": null,
                "score": 6
            },
            {
                "body": "It's currently hard everywhere, I have had months in which I worked 200+ hours and multiple months with zero activity, the market is dogshit, mid-sized-to-big companies are sizing down, cutting projects and are less prone to hire you as a contractor.\n\nAlso, it's super difficult to find collaborators, and for larger projects, I FUCKING NEED COLLABORATORS, I can't setup a whole company's digital infrastructure on my own, even though I could sign these kinds of jobs.\n\nLast thing is that most programmers (at least in my area) have close to zero work ethics these days, deliver every thing way too late and in a shoddy condition, undocumented and full of bugs. I have tried joining a programmers' cooperative (\"Genossenschaft\") to make joint front in the face of such problems, but that experience was terrible too.\n\nSorry, I stole your rant thunder, but I completely vibe with your situation, it's just bad in general.",
                "author": "skwyckl",
                "score": 6
            },
            {
                "body": "Holy shit, and they wanted to pay 1.6k 1 time payment for that? God fucking damn",
                "author": null,
                "score": 5
            },
            {
                "body": "To be clear, the lack of quality work is not localized to your area and it's not anything you're doing wrong.\n\n\nThe vast vast majority of developers nowadays are not certified or qualified to be writing programs.\n\n\nI've literally met \"programmers\" that didn't know CPUs required electricity",
                "author": "PureRepresentative9",
                "score": 4
            },
            {
                "body": "DM me, I want to get in touch with some juniors who have talent/ want to bite off more than they can chew. I'll send you my linkedin. This is not a job solicitation.",
                "author": "Gonskimmin",
                "score": 3
            },
            {
                "body": "Thanks. I'm actually from Bulgaria and am thinking to go back there. But I'm afraid I'll regret it. I just feel stuck now, because yeah, indeed CR is quite nice and I'd love to stay here, but it's been pretty hard finding work, at least for someone like me without a lot of experience. Hence why I was pushing to finish this project and get paid.\n\nI will try to network more and meet other people in the field. There's a real possibility there, I think. This is after all how I met this guy, S.",
                "author": "koevh",
                "score": 3
            },
            {
                "body": "Thank you and I appreciate the honestly. I was afraid I'm in that scenario that you described. So probably it's best to cut my losses. I'm currently in the Czech Republic, living on the couch in our shared office. I've been working on this with the hope that I'll get paid, but I underestimated the project and its scope, so I won't be seeing any money any time soon probably.\n\nThe thing is, I haven't been coding for 3 years straight or doing projects full time. I'm lucky if I have a client every few months. The work is non-demanding and it's not making me grow a lot, so that's why my skills are still around the junior level. I had some savings so it was okay to risk it at first, but now I'm completely dependent. Applying to jobs has been demotivating, not one interview scheduled, and there aren't any junior positions in web dev here anymore. Non-junior positions require a crazy amount of skills and many times, quite different tech stacks. I've always been alone and I'm not sure I can be a good fit for a team at a company because of my experience as a solo developer without any industry standard practices.",
                "author": "koevh",
                "score": 3
            },
            {
                "body": "Basically the 'platform' needs to have the following features:\n\n- Organizations can sign up and pay for Memberships, which allows them to post different types of jobs (depending on the memberships). Memberships are of course managed by the admin.\n\n- Candidates can sign up and apply to jobs, people can apply anonymously to jobs as well\n\n- The client wanted an admin panel to manage all of it, so a lot of work has been done on the admin panel in Payload\n\n- There's an admin panel (or profile panel on the frontend) for the registered users (organizations and candidates). With the expected behavior of a job platform - each organization creates and manages jobs, and can manage applications to those jobs by registered candidates or anonymous applicants. The feature for creating a job was my personal hell - integrating Zod + Lexical Editor and React Hook Form. I don't want to do this again. :D\n\n- Email functionality (a lot of events are covered) with email templates that the admin can edit\n\n- Internalization\n\n- Subscription management, paywall and newsletter\n\nAnd really many, many more stuff around those same points. While it should make sense to the final user, the amount of research on HOW the platform should work that I had to do was quite a lot (and took quite a lot of time from my time for development). I had half of that in the design, but I had no provided plan. The client of course didn't know what they wanted as well, unless they 'see it'. Which means that everything now is biting me in the ass, because NOW they're deciding to test it and ask for changes. There were random texts in the footer in the design, just to fill space, random stuff everywhere that lead to nowhere. The mobile responsiveness was done purely in code and just 'whatever looks best' with what I could do.\n\nSomething I'm quite proud of that I got to learn how it's done, is using SSG + ISR. Every job and organization page is a static page and updates on-demand if the organization or admin updates it. This makes the website go brrr.\n\nThere's a lot more stuff to do as well. There's been essentially no testing done, I don't feel confident about emails and authentication. No security checks anywhere. I tried protecting the API routes and set up RBAC as best as I can, but again, it's not battle-tested. I don't even know if I should care at this point.",
                "author": "koevh",
                "score": 3
            },
            {
                "body": "Damn dude, that sucks. Okay, I don't know anything about the Czech Republic myself so I can't judge the job market there. It's especially hard for me to judge the job market for junior/medior developers as here in the Netherlands they're competing for seniors pretty much all the time.\n\nIt's unfortunate that you haven't been coding for 3 years straight in a dedicated team. It is, in my opinion, the best way to learn by far. Even if you say you're a \"loner\" and you're not sure you'd fit inside a team, trust me, it'll help you grow much, much faster. \n\nAll I can give you is information how I select juniors, and that's not on their skills or current knowledge. Not to sound mean, but they usually don't have a lot of things they're good at or they have a single thing they excel at whilst the rest falls behind. For me it's important to show dedication to learn and some sort of progression curve of what you've been through. Like thing you've picked up on. If I see you learn quickly and have done a few projects (be it professionally or personally) where you pick a couple of points like: ran into edge cases that you solved, or, ran into a problem and solved it in a certain way. It's important for me to understand that you hit a wall, then how did you break through it? \n\nWebdev is steep, and I mean steep as fuck, learning curve wise. If I were you, and I don't know you, or your financial situation, I'd try to move to a different country where there were more options. Which is much easier to talk about than actually do, I realize that. But if you're saying there's no opportunities for you in the Czech Republic, then it sounds like there's no future for you there. Sounds like you might have to find a remote job or move elsewhere.\n\nI wish you all the best mate. My wife is Bulgarian, love the country (mostly for the culture & food, not the government hahaha).",
                "author": "rm-rf-npr",
                "score": 3
            },
            {
                "body": "I see you use coolify. Are you sure you’re just a “junior” dev? Give yourself some credit.",
                "author": "Vivid-Sand-3545",
                "score": 2
            },
            {
                "body": "1600€ sounds stupid low, I’m trying to get somebody to code a website for my startup thing that’s way simpler I’d imagine and people are asking for a lot more…\n\nActually, if you’re interested in a project that’s yours and where you won’t have to deal with that and you won’t feel “junior” hit me up and I’ll give you some details, even if it’s not likely that we’ll work together it might be worth a shot, also I know a bit about code so I would like to imagine that I wouldn’t be as insufferable to deal with as certain clients. We are also in Europe, but on the other side.",
                "author": "IamLiam00",
                "score": 2
            },
            {
                "body": "There’s clearly been mistakes on your part but walking away at this stage probably isn’t the best option. I would try to use diplomacy and agree with this S on what’s needed to be paid (minimum on your part) then be clear that moving forward you will estimate and bill for each additional item of work.",
                "author": "philparsons",
                "score": 2
            },
            {
                "body": "By the way, I understand that those questions are meaningless, but just out of pure curiosity to see where I stand with my skills - how much can a project like this cost? If done correctly, can it be sold for 5 figures? That'd be insane if true haha. But I definitely feel like I'm getting way underpaid. Or I just need to be better and 1600 EUR is fair? I was definitely learning a lot during those 4 months and it's not like I produced functional code straight out. A lot of new concepts to learn around Nextjs as well. So maybe a senior would finish something like this in 4x less time.",
                "author": "koevh",
                "score": 2
            },
            {
                "body": "Yeah, you're not the only one suggesting that. I might as well just do that. :)",
                "author": "koevh",
                "score": 2
            },
            {
                "body": "Thank you. Yeah, something that I completely missed to mention is that there weren't any infrastructure or processes set up. I had to research a bit and found out that using Hetzner + Coolify would be our best choice for now. It's really cool and I see myself using it for the foreseeable future. :)",
                "author": "koevh",
                "score": 2
            },
            {
                "body": "Thanks, I'll send you a message :)",
                "author": "koevh",
                "score": 2
            },
            {
                "body": "The first part is me, however I'm confident that I can become a good web developer and I'm already at some point where it'd be a shame if I just stop, you know? Then what, start somewhere else from 0 again? I've been doing that many times. And I might have to do again anyway. I don't know your situation, but in this case for me I quite enjoy doing web dev. Make sure you find and do something that you enjoy. I know it's cliché to say 'do what you love', but I find it to be a good advice.",
                "author": "koevh",
                "score": 2
            },
            {
                "body": "It is a wonderful tool. I would suggest you create tasks using a kanban board of sorts to help with the organization of the project. Get your buddy who doesn’t do shit to handle most of that. Then work in sprints, try not to burn yourself out. Goodluck!!!",
                "author": "Vivid-Sand-3545",
                "score": 2
            },
            {
                "body": "That's actually an interesting idea. As a solo developer, I'd definitely welcome working together with someone (never have, so I'll probably be shit in the beginning) and bounce off ideas. Currently, my yellow duck is ChatGPT, but I started missing the human touch of 'hey, I actually don't know, but let's discuss it together and find out', meanwhile AI blasts me with information. :D",
                "author": "koevh",
                "score": 2
            },
            {
                "body": "Thanks a lot, your encouragement and insight does give me some relief and makes me feel optimistic. \n\nThe silver lining in my situation is that I'm not really bound to any place, I don't have a lot of baggage  or people who rely on me, and all it takes is just go somewhere. I was briefly looking into NL as an option to try there, but from here it looks quite saturated and I'm not sure I'll survive in the beginning (considering the higher costs of living). My only option would be to apply from here, but again, with my skills I don't see this going anywhere and NL probably has way more juniors.\n\nI guess my option is just to don't give up and keep on trying to apply, network and be busy with projects. And I need to be smart about it, which means not having the office as the only place to sleep :D (you can notice my financial situation is quite bad), communicate better with potential clients and being aware of scope creep.\n\nIt's cool that your wife is Bulgarian. I agree with everything you said, and I see you've gotten the mindset already...  Sŭsipakha ya taya dŭrzhava. :D",
                "author": "koevh",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Sounds like a bad situation, but I can't get over the fact you said you've been freelancing for 3 years but you don't know how to do basic research.",
                "author": "budd222",
                "score": 1
            },
            {
                "body": "\"I don't have time to test\" is like saying \"l love to Rollerblade around a woodchipper\". It works until it doesn't and then it's really bad.",
                "author": "Sir_Corn_Field",
                "score": 1
            },
            {
                "body": "Man…Just go to YouTube and search for Traversy’s Laravel video. He made a job board in less than 4 hrs",
                "author": "AmiAmigo",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "I didn't find it necessary at the time I was doing other simpler projects and it worked pretty much, since the clients didn't know what they wanted and for what I offered, they liked. This is one of the projects where that's still true, i.e. the client has a vague idea on what they want, but now it really was up to me (or the graphic designer, or S. - the company guy?) to figure out the plan, logic and data model. We didn't do any of that and I had to come up with the data model anyway when I got the design.\n\nIt's one of those points that I totally overlooked. I'll never make that mistake again, that's for sure.",
                "author": "koevh",
                "score": 1
            },
            {
                "body": "I'm usually suspicious of all of these 'X platform in Y hours', or Twitter, Facebook, Instagram clones. What it is usually, it's a simple CRUD app with some social network's UI. Doesn't have to be the same with Traversy ofc, so thank you for the recommendation. I'll take a look. I was curious about Laravel anyway. :)",
                "author": "koevh",
                "score": 1
            },
            {
                "body": "In webdev? What do you do?",
                "author": "koevh",
                "score": 1
            },
            {
                "body": "You could also use pocketbase for your auth since you mentioned you were having trouble with confirmation tokens. Truth be told you should use it as your entire BAAS but since you already started working with Payload, rewriting the backend might not be the best option right now so just use what you need.",
                "author": "Vivid-Sand-3545",
                "score": 1
            },
            {
                "body": "👍",
                "author": "IamLiam00",
                "score": 1
            },
            {
                "body": "Oh no, don’t get me wrong, I love doing web dev. I’m always coming up with ideas for app that solve x purpose, I love doing that. I think I’m just not in the right mindset rn. Forget my comment.",
                "author": "Longshoez",
                "score": 1
            },
            {
                "body": "I watched the whole video and coded along. It’s a nice project. Basically a job board with some crud functionality. It seems to be you picked a complicated stack",
                "author": "AmiAmigo",
                "score": 1
            },
            {
                "body": "Thank you. Yeah, I came up with that as well, I set up ClickUp and have created quite a lot of tasks. I'm the only one who manages them. And it helped me a lot with getting sane again. :D S. doesn't want to contribute though, as he doesn't really understand any of it. But it will be easy for the next guy or gal who comes and takes the project, because I've already made up my mind that I'm either taking the code with me or insisting on getting paid for the work I've done.",
                "author": "koevh",
                "score": 1
            },
            {
                "body": "It's the burnout talking probably :D I know I'm pretty demotivated this whole week haha. It's okay.",
                "author": "koevh",
                "score": 1
            },
            {
                "body": "The stack doesn't matter to me really, since the code is easy to manage (Nextjs with Payload both written in TypeScript). Authentication included. I just went with what I was familiar with. :) That's the least of what was slowing me down (actually, having to learn Laravel and PHP would slow me more). The issue  is more with converting a half-assed design, building up the data model, logic, relationships between different entities in the database, RBAC, events and other stuff that are part of the product. It's the theory before you start coding or during coding. The coding itself was more or less fine (except for integrating Lexical Editor).",
                "author": "koevh",
                "score": 1
            },
            {
                "body": "Yep, my tests are in production. :D /s but not really, that's why I have a dev production set up publicly with Coolify\n\nI wish I could test, I do basic testing by running the function and checking for stuff, but that's during coding and I think it's not real testing. I don't have a clue about the different types of testing (unit testing, integration, etc?) and how to incorporate that in my codebase/workflow. \n\nAnd while I agree and will definitely do that in the future, I do think that I don't have time for that here, since the deadline has passed by over than 4 months and I'm not experienced enough to put my foot down and make my point across about testing, or come up with a realistic deadline in the first place. It's a lesson being learned the hard way and out of inexperience. I'm just a solo developer, trying to survive on many fronts for now. Now it hurts, yeah.",
                "author": "koevh",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1738437145.0,
        "title": "I built Canine.sh to help you save money hosting apps",
        "author": "czhu12",
        "id": "1ifdsyk",
        "selftext": "I've been building [https://canine.sh](https://canine.sh/) for the past year, based on some learnings I've had in the past building startups where we quickly outgrew the single VPS type deployments, moved onto managed platforms like Heroku and Render, and watched our costs explode, with an annoying amount of vendor lockin.\n\nIt's totally free to use as long as you bring your own infrastructure!\n\nIt basically tries to make Kubernetes (which you can now get fully managed for $12 / month on linode), as easy to use as Heroku. It has a Github integration, SSL auto-provisioning, team accounts, etc. You just have to bring a generic Kubernetes cluster, that almost every infrastructure provider supports very cheaply these days (cheapest I've found is $4 for 2GB of memory on Hetzner)\n\nThis lets you take advantage of a ton of things that Kubernetes does really well, like automatic healthchecks, zero downtime deployments, auto scaling, etc, while also making it easy to use for solo developers or small teams.\n\nThe additional benefit of Kubernetes is that it's also possible to host a bunch of other stuff in your cluster via Helm charts, that you’d normally have to pay for like:\n\n* Sentry\n* Wordpress\n* Metabase\n* Dagster\n* Airflow\n* MongoDB\n* Redis\n* PostgreSQL\n* … And basically every single open source tool under the sun\n\nI've been hacking around on random projects like [Reframe](https://reframe.canine.sh/) and [Whiteboarder](https://whiteboard.canine.sh/) for myself, and deploying it with Canine and been really happy with it so I figured it was worth a shot sharing it.\n\nI’ve had a hard time communicating the value of this relative to other stuff out there like Coolify, Dokku, etc, to others in the past. The main value add I think is the fact that it tries to take advantage of the huge amount of effort that is put into Kubernetes.\n\n  \nWould love feedback, roasts, suggestions!\n\nSource code: [https://github.com/czhu12/canine](https://github.com/czhu12/canine)\n\n[Reframe deployments](https://preview.redd.it/we4gyxnbtkge1.png?width=2375&format=png&auto=webp&s=bb3c5d7ef76e03c33307b7df8d65733d364a145f)\n\nhttps://preview.redd.it/q7kk83oxskge1.jpg?width=1080&format=pjpg&auto=webp&s=50d7d43092910101c45139b3b9f4611c25a17a27\n\n",
        "score": 53,
        "url": "https://www.reddit.com/r/webdev/comments/1ifdsyk/i_built_caninesh_to_help_you_save_money_hosting/",
        "num_comments": 18,
        "comments": [
            {
                "body": "I’ve worked with k8s, swarm, etc as application engineer and dabbled in non production workloads in devops, but I’m not sure what you do.\n\nMaybe a video and some diagrams? ",
                "author": "Passenger_Available",
                "score": 14
            },
            {
                "body": "Hah, good call, I've been procrastinating making a video for a while now because I hate how I sound on camera, but I think you're right that its overdue.",
                "author": "czhu12",
                "score": 9
            },
            {
                "body": "Everyone hates the sound of their own voice on video, just do it man. I promise you'll sound totally normal to everyone else.",
                "author": "bigwad",
                "score": 9
            },
            {
                "body": "How is this different than options like Coolify, Dokploy, or kamal?",
                "author": "zxyzyxz",
                "score": 4
            },
            {
                "body": "Just an FYI there already is a terminal app out there for k8s called k9s, might be a tad conflicting in the name. Looking forward to some intro videos from you though as your offering is not really clear yet",
                "author": "Str00pwafel",
                "score": 3
            },
            {
                "body": "Hey,  \nI wanted to give it a try but I see that the github login still requires read and write permissions on every single project under my github, any plans to fix this permission requirements?",
                "author": "gig4link",
                "score": 2
            },
            {
                "body": "Just pushed it up! Should work now",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "Thanks, I want to host things like Supabase like you mentioned like Coolify does, is there any tutorial on doing so via Canine?",
                "author": "zxyzyxz",
                "score": 2
            },
            {
                "body": "Yup! Yeah so canine supports, out of the box, postgres, redis, metabase, elasticsearch in the add-ons panel. I haven't written docs for it yet, but it works great, one click install, etc\n\n  \nBut then theres a generic helm chart installation so basically: Anything thats in here: [https://artifacthub.io/](https://artifacthub.io/) can be deployed to canine as a one click install as well. I'm happy to help install supabase.",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "Great thanks. I'd say if you can add more of those one-click installs as buttons on the UI, that'd greatly help user experience. Coolify does that and it's very useful.",
                "author": "zxyzyxz",
                "score": 2
            },
            {
                "body": "Great just joined. I recommend you join the other competitors' ones I mentioned as it's a good way to learn customer frustrations, I do that with my apps' competitors too 😈",
                "author": "zxyzyxz",
                "score": 2
            },
            {
                "body": "So the biggest difference is that those platforms assume a single server as a backend. IMO this is really restrictive. Being able to hook into the full feature set of kuberenetes might not be necessary on day 1, but it normally can be helpful over the lifetime of a project.\n\nFor instance, kuberenetes has something like 15000 packages that can deployed to it, there’s tons of auto scaling/ deployment configurations. Every single cloud vendor supports managed kubernetes and has ways to hook into database deployments load balancers, backups, storage volumes, etc.\n\nCanine tries to abstract all this away, but it doesn’t stop you from hooking into kubernetes down the line, if that’s needed.",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "Yeah, sorry, been caught up a little with travel but was planning to get back into this over this next day or over the  weekend!",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "Makes sense, I'll check it out. Seems like Dokploy's compose implementation is actually not OSS, it's under a separate proprietary license. What features are missing from Canine as opposed to Coolify and Dokploy that I should know about before switching?",
                "author": "zxyzyxz",
                "score": 1
            },
            {
                "body": "Honestly it’s pretty new, I think it’s more fully featured than dokploy and less than coolify, but I’m happy to help you get set up with whatever you want to try!\n\nAt the moment, I think for the core loop of push code, deploy app, zero downtime, canine is really solid.\n\nFor extra things like creating a locally hosted supabase instance, it’s a little worse at than coolify.",
                "author": "czhu12",
                "score": 1
            },
            {
                "body": "Can you make a Discord? I am in the ones for Coolify and Dokploy and that'd make it much easier to follow your progress. Also post this on /r/selfhosted if you haven't already.",
                "author": "zxyzyxz",
                "score": 1
            },
            {
                "body": "Good call, just created this discord channel [https://discord.gg/FpVHQDTQ](https://discord.gg/FpVHQDTQ)\n\nStill trying to set up some basic integrations, its a little quiet in there 🥺",
                "author": "czhu12",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745864222.0,
        "title": "Advice needed: Best platform for a modern design-focused blog (WordPress or something else?)",
        "author": "po3ki",
        "id": "1ka2igo",
        "selftext": "Hey everyone,\n\nI’m a graphic designer with a strong passion for everything that stands out — modern typography, innovative UI/UX, bold layouts, and creative use of color.\n\nI’m planning to start a personal project: a blog/curated site showcasing exceptional graphic design, typography, web design, and creative UI/UX work. Think something very minimalistic but bold, highly visual and editorial — similar to the look and feel of [bno.nl](https://bno.nl/).\n\nI’ve built a few WordPress sites before, but for this project, I want it to be extremely clean, fast, scalable, and fully custom.\n\nNow, I’m wondering:\n\n·       Should I stick with WordPress (maybe a headless approach like WordPress + Next.js)?\n\n·       Or are there better alternatives like [Sanity.io](http://Sanity.io) \\+ Next.js, Webflow, or even something else?\n\nI’m open to taking the time to build this myself, since it’s a hobby passion project, and I would love to manage and expand it on my own in the long term.\n\nThat said, I’m also realistic — maybe it’s smarter to involve a developer at some point for a very solid technical foundation.\n\n**Main priorities:**\n\n* Modern, minimalistic custom UI\n* Great performance and scalability\n* Easy content management (frequent articles and showcases)\n* Future-proof (maybe adding newsletter, community features later)\n\nAny advice on tech stacks, CMS choices, or workflow tips would be super appreciated! Thanks a lot in advance!",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1ka2igo/advice_needed_best_platform_for_a_modern/",
        "num_comments": 14,
        "comments": [
            {
                "body": "I would recommend some static generated framework. If you use wordpress or something similar, you have to maintain the site and be up-to-date. Some years ago, some weird thing happened to one of the sites I had to maintain, it was showing in the google results some random text instead of the text in the website. It turned out, somebody, somehow inserted some trash in the database.... Also, a static site is way faster.",
                "author": "DebugDynamoCoder",
                "score": 3
            },
            {
                "body": "Astro has blogs.",
                "author": "rekosin1",
                "score": 2
            },
            {
                "body": "Unless you want the maintenance of the site to be a separate project you also maintain, I would pick anything that is simple and minimizes headaches / maintenance. \n\nMost sites I build anymore are done using a static site generator (Jekyll is what I prefer, but there are well over a hundred other options). Wordpress is fine, too.",
                "author": "armahillo",
                "score": 2
            },
            {
                "body": "Wordpress is getting a lot of bad press recently. Licensing issues between the original creator and WPEngine, security, performance... I see a lot of people moving away from WP because of that. If you're only getting started with this - I would seriously consider alternatives.\n\nIf you're open to work on code - starting with a boilerplate project and connecting it with a headless CMS seems like a good option. It will give you much more control. Next.js or Astro are very popular these days and you'll find a ton of boilerplate repos.   \n  \nIf you prefer a simple builder - go with webstudio. They have a simple interface, free trial and you can also integrate with a CMS if you see a need. With webflow or framer - you're stuck with their built-in CMS, which is not great.",
                "author": "andrzejwp",
                "score": 2
            },
            {
                "body": "deer insurance different whistle straight weather roll shocking languid nail\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",
                "author": "RedditDistributions",
                "score": 1
            },
            {
                "body": "Maybe not exactly what you need but something like [blot.im](http://blot.im) or [bearblog.dev](http://bearblog.dev) allows you to completely customise the CSS and/or the entire template - while offering a very simple managed way to get setup. I think both offer export options so you could always move later if needed.\n\nI'm more familiar with Bear, very solid platform, not sure if you can customise it to your needs though, worth trying! I do recall with Blot you could pretty much build the entire template from scratch.\n\nNever used it myself but also heard good things about [https://getkirby.com/](https://getkirby.com/)",
                "author": null,
                "score": 1
            },
            {
                "body": "Whatever you do is going to boil down to HTML+CSS. Not the way I would have designed the web, but I wasn't consulted.\n\nYou could use WP but for flexibility you might want to consider Drupal. Both let you create custom themes. The Drupal learning curve is steep but you might find its security and flexibility worth it.",
                "author": "TolstoyDotCom",
                "score": 1
            },
            {
                "body": "Have you built websites with React before? If so, Next and Sanity are a great combination, but it's not going to be like hacking a wordpress template. There is a learning curve. Learn a bit about React first and see if you like it.",
                "author": "Lord_Xenu",
                "score": 1
            },
            {
                "body": "Astro",
                "author": "ThaisaGuilford",
                "score": 1
            },
            {
                "body": "you might like framer",
                "author": "lift_spin_d",
                "score": 1
            },
            {
                "body": "The two questions that come to mind are:\n\n\\- How much do you want to code? (now and to maintain it later)\n\n\\- How much do you want to pay for hosting?\n\nThe hosting cost matters because that might help determine whether it makes more sense to go with an all-in-one solution (such as WP), a static website, or a full app with a database. Note, if you want to go with a static website, you'd probably have to use markdown to write, and file uploads would require some tinkering.",
                "author": "Legal-Introduction51",
                "score": 1
            },
            {
                "body": "honestly if you're looking to keep things really visual and simple without diving too much into the technical side, i've been using systeme io for mine. it's not as fancy as something like next js or sanity, but it's way easier to set up and still looks pretty clean. you can add custom pages, blog posts, and even email stuff later if you want. maybe not the flashiest option for devs, but it works and saves you a lot of time and stress.",
                "author": "Ken_Saas",
                "score": 1
            },
            {
                "body": "You’re totally right — I definitely don’t want maintaining the website to become a full-time job. But at the same time, I do want to create a modern, clean-looking blog similar to the one I referenced in the post above.\n\nI’m leaning toward WordPress because it’s familiar and fast to set up, but I’d love some input on what theme or stack you’d recommend to keep things maintainable and visually up to date. Would something like Astra or Kadence be a good fit? Or is there a better theme that works well out of the box for a modern blog?\n\nAppreciate any tips!",
                "author": "po3ki",
                "score": 1
            },
            {
                "body": "Wordpress is probably fine? It really depends on your editing comfort level and how much you want to get \"in the weeds\" with it.\n\nI have several blogs I maintain and they each have slightly different styles, but I always start with this CSS basis: [https://taniarascia.github.io/primitive/](https://taniarascia.github.io/primitive/) and then build up from there. I tend to go pretty minimal (medium dot com style, sorta) and content-first in presentation.\n\nI like writing CSS and HTML, though, so this solution works for me. It's also free, because many hosts will host a static site for no charge. \n\nI've not used Astra nor Kadence, but it's worth giving any of them a try. Try to keep your content portable so you can always pivot if you need to.",
                "author": "armahillo",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1751735926.0,
        "title": "Best (free preferred) tools for client management/recurring billing for a freelancer",
        "author": "nishaddesilva",
        "id": "1lsezvy",
        "selftext": "What are some affordable tools/platforms that I can use as a web freelancer to:\n\n1. Manage customer information (I think Google Sheets are fine for now but an integrated tool would be great).\n2. Get customers to e-sign contracts upon contract/initial invoice sending.\n3. Send automated emails with recurring invoices/renewal reminders annually with custom workflows and custom email content (reminder - 1 month before hosting renewal; reminder - on renewal day; warning - after 2 weeks have passed without payment). No need to have payment gateways.\n4. Send payment-received emails when I confirm receiving funds and have manually stopped the above workflow.\n\nTIA!",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1lsezvy/best_free_preferred_tools_for_client/",
        "num_comments": 5,
        "comments": [
            {
                "body": "You may want to look into Stripe. It is very easy to setup most of these things. Though unsure about e-signing but that should be possible with some integration.",
                "author": "atlasflare_host",
                "score": 2
            },
            {
                "body": "You could take a look at [Invoice Master](https://invoicemaster.org). It handles customer management, recurring invoices, automated reminders, and payment confirmation emails without requiring you to set up any complex integrations. While it doesn’t include e-signature for contracts, you can manage all your billing workflows there quite smoothly. There’s a free tier to try it out, and the paid plans remain quite affordable for freelancers. I’m the maintainer of Invoice Master, so if you have any questions, doubts, or suggestions, feel free to reach out anytime.",
                "author": "enmotent",
                "score": 1
            },
            {
                "body": "I can recommend one for #3 which is zendu.co it supports customization of reminder schedule and template per group of clients; there's a free tier- i think around 15 reminders per month;",
                "author": "Willing_Present1661",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1754833687.0,
        "title": "Open Sourcing “essay-grader-tech” — A Node.js-powered AI Essay Grader for Educators!",
        "author": "Special-Promotion-60",
        "id": "1mmj1co",
        "selftext": "Hi r/webdev community! 👋\n\nI’m excited to share a project I recently open sourced called **essay-grader-tech** — a Node.js backend tool that leverages AI to help educators automatically grade and give feedback on student essays.\n\n**What it does:**\n\n* Takes student essay submissions (handwritten or typed) and extracts text using AI\n* Performs detailed grammar, spelling, and punctuation checks with smart prompts\n* Provides broader writing improvement suggestions tailored for primary and secondary school students\n* Support Questions, Question Images\n* Captures Teacher Unique Grading Style with TeacherStudentInteractions\n\n**Why I built it:**  \nGrading essays is time-consuming and subjective. I wanted to create a reliable, scalable, and open AI-powered tool to assist teachers — speeding up grading while giving consistent, actionable feedback to students.\n\nI was working as an Unpaid Contributor/Intern **for 2 years** and the management does not want to buy my IP Rights so I decided to open source the parts where I contributed\n\n**Tech stack highlights:**\n\n* Node.js with Express for API backend\n* OpenAI’s GPT API for natural language processing and feedback generation\n* MongoDB for storing essays and results\n* Image processing integration for handwritten essay support\n* Redis and BullQueue for Job Management, Distribution and Multi-Processing\n\n**How you can check it out:**  \n🔗 [https://github.com/Brendan8899/essay-grader-tech.git](https://github.com/Brendan8899/essay-grader-tech.git) — Feel free to star, fork, or contribute!  \n📝 I am still working on Documentation, you can ask me for any help setting up\n\n**Looking for:**\n\n* Feedback on the codebase and architecture\n* Suggestions on additional features or improvements\n* Collaborators interested in expanding features or integrating with other EdTech platforms\n\nI’m really excited to hear what this community thinks and welcome all kinds of input!\n\nThanks for reading and happy coding! 🚀",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1mmj1co/open_sourcing_essaygradertech_a_nodejspowered_ai/",
        "num_comments": 1,
        "comments": [
            {
                "body": "This is a fantastic project! For anyone looking to streamline grading even further, I've been using GradeWithAI and it’s been a game changer—automatically grading assignments, generating rubrics, and syncing results directly with LMS. It really saves a ton of time and keeps feedback consistent and actionable.",
                "author": "Dreepxy",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1748902499.0,
        "title": "Is there an online certbot manager/issuer/renewer?",
        "author": "apatheticonion",
        "id": "1l1vec8",
        "selftext": "Hi all, I would like to issue an automatically managed ssl certificate I can use with misc services.\n\nFor anything hosted in AWS I use the aws cert manager which auto-renews based on the presence of a CNAME record (which I assume routes to an HTTP server hosted at AWS) however I cannot export my SSL certificates to use for self-hosted services on top of custom servers (like nginx, apache, stdlib Rust, Go, Nodejs, etc).\n\nI often use certbot for custom services but I tend to mess up the auto-renew logic/scheduling - esspecially given how often I reinstall my server, plus managing certificate renewal is unwanted overhead (especially if I get it wrong and have to ssh into the server to verify it's working via the logs).\n\nAre there any trustworthy \"certificate manager\"-like services that validate domain ownership using DNS records (like AWS cert manager) but allow me to export the public/private keys so I can use them on any platform?",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1l1vec8/is_there_an_online_certbot_managerissuerrenewer/",
        "num_comments": 9,
        "comments": [
            {
                "body": "If you have a server with cmd access I don’t understand why you can’t use certbot. If you reinstall your server set up a script to install everything you need.",
                "author": "Disgruntled__Goat",
                "score": 6
            },
            {
                "body": "How do u mess up the renew logic of certbot?\n\nU only gotta do `certbot renew`\n\nCerrbot is the easiest ssl manager and u have full control",
                "author": "michaelbelgium",
                "score": 6
            },
            {
                "body": "ZeroSSL bought all the free ones. Now all of them are freemium with shitty free tiers.",
                "author": "lakimens",
                "score": 1
            },
            {
                "body": "Certify the Web ( I think, if I'm understanding your question correctly )...try there and see where that rabbit hole goes? \n\nWas one I looked into a couple months ago, when I was in a similar spot...but I just decided to stick with the regular certbot route for now, and bolster my init-script instead, to better handle automatically making sure that it had a cert AND it stayed renewed. Cheaper that way and kept API keys and all that mess outta the equation. \n\nBut if you go down the rabbit hole of GUI's like Certify the web, and pair it with DNS-01 validation (and maybe a Cloudflare API key, too, I believe), you can make it work. \n\nEnds up being a bit overly complicated in my humble opinion, but hey if you're wanting to go that mile, more power to ya and all that.",
                "author": "RePsychological",
                "score": 1
            },
            {
                "body": "you are just trying to move the problem, it will not disappear but things will get more complicated.\n\n\n\nif you go your lambda/private git route, you need to make sure you actually can deploy your new cert, this is on the same level of human error than to make sure certbot is set up correctly.\n\n2 things to consider:\n\n1: why are you reinstalling your server, this is super odd to me \n\n2: if there is a process that needs to be repeated and is in your case error-prone, automate that shit.\n\nalso: if you do dns challange, there is no webserver needed",
                "author": "schorsch3000",
                "score": 1
            },
            {
                "body": "While I agree with the other comments saying this shouldn’t be an issue to begin with, and it’s kinda just moving the problem, you could also just put your services behind Cloudflare. \n\nProbably use tunnels, to avoid traffic between Cloudflare and your server being plain HTTP. (Or I guess using Cloudflares origin certs. They last up to 15 years, but tunnels are a bit simpler to set up)\n\nAnd then you’ll get a small layer of firewall too, which certainly can’t hurt, especially in your situation.",
                "author": "emoyly",
                "score": 1
            },
            {
                "body": "Yeah It's a me problem, I know, It's only running that command on a cronjob, but I also need to host a publically accessible http server and redo that renewal setup every time I reinstall.\n\nIt's not hard but there is human error and I don't like spending the time to do it so I end up skipping it sometimes and that leads me to avoid starting projects because I need to do that first.\n\nPlus if I make a mistake and my cert expires, I have to dig through through the logs to find out what I did wrong.\n\nI suppose I could set up a scheduled lambda function to do the renwal, deploy it with Terraform and manage my domains from a private git repository. That's probably the most durable thing I could do.",
                "author": "apatheticonion",
                "score": 1
            },
            {
                "body": "Use the DNS-based verification. Setup records once, be done with it.",
                "author": "ceejayoz",
                "score": 1
            },
            {
                "body": "Yeah looks like certbot is the go. \n\nI'm toying with setting up an AWS lambda that runs on a schedule to do renewal where the config is defined in a GitHub repo (using actions to deploy/update the lambda). At least then I just need to do it once and, given it's serverless, it should be pretty durable.",
                "author": "apatheticonion",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1747838349.0,
        "title": "How much should I ask to my client for this project ?",
        "author": "Und0miel",
        "id": "1krzhb4",
        "selftext": "Hi everyone,\n\nI'm seeking advices from professionals already in the field regarding pricing and other aspects of a project.\n\nI'm currently attempting to launch a small web development, design, and process digitalization business with a friend, and we may have found our first client. After our initial contact and reviewing the issues with the current site, I created a quick mockup of the homepage on Figma, developed a basic brand identity guideline (used for the mockup), and prepared an initial customer survey for the project's continuation.\n\nThe primary goal was to capture the client's attention and assess her interest in our work. It was successful, and she has requested an appointment to discuss further.\n\nThe challenge is that I lack experience with pricing in this field, and I want to avoid deterring her with the cost (especially since we need this first project to build our portfolio). Please note that this is in France (and in a small remote island at that), where pricing may differ from regions like the USA.\n\nThe project involves a basic website with 6 to 7 pages and limited functionalities—just some forms, a blog like feature, and maybe an interactive appoitment manager. In my initial plan, I estimated around 160 hours of work for :\n\n* The discovery phase\n* The interactive mockups on Figma (descktop and mobile)\n* A complete brand identity guideline\n* Development using Laravel\n* The back office (for the blog, the appointments, and potential future feature expansions)\n* Testing and deployment\n\n(I'm still uncertain about other details, such as database work, hosting, or advanced SEO.)\n\nThe project would, as for now, probably follow a somewhat classic validation process : Discovery → Wireframes → Mockups → Dev → Testing. I also thought about opening a Trello in order for the client to follow the progress of the work in real time.\n\nI calculated the cost at approximately €30/hour, totaling €4,800. I considered offering a package deal at around €4,000–€4,500, but honestly, seeing the prices people charge on platforms like Fiverr has made me somewhat anxious.\n\nDo you think this is a reasonable price for a first project or should I consider lowering it (and do you have some general advices) ?",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1krzhb4/how_much_should_i_ask_to_my_client_for_this/",
        "num_comments": 9,
        "comments": [
            {
                "body": "Few thoughts here:\n\n- How did you calculate the hourly price? Charging 30€ per hour while 2 people working on the project is too low in my eyes. What is both your targeted wage? Does 30€/hour align with what you need to make per hour to generate NET income? When I started freelance, I charged 75€/hour since I knew i wouldn't have a consistent/regular source of income for a while, and needed to account for that times too, as well as taxes.\n- In your calculations also consider what costs occur during development for software, plans, etc.\n- 160 hours in total also feel a little too tight. Consindering a \"normal\" working day of 8 hours, that results in just 20 working days. If you can work in parallel, thats 10 days for each of you - seems unrealistic for the offered services. I would calculate at least 10 days for design alone (equals 80 hours) - that is NOT including any kind of organisation and administration (e. g. meetings and calls with the client, presentations, writing emails, documentation, etc.). For development, after a few years of experience in both freelance and corporate, it always worked out pretty fine for me assuming that development roughly takes three times as much as design (in this case resulting in 240 hours) \n- You could do finer calculation when you know beforehand how many individual components there probably are, creat your \"base expense\" (e. g. 8 hours) and then multiply them by factors of difficulty (e. g.  1x, 1.75x, 3x).\n- Instead of a fixed total price, you could offer a semi-flexible plan: Charge a fixed budget, but explicitly note in the contract, what tasks are included in this budget. For anything else you ADDITIONALLY charge your hourly rate. It is however important though, that in this setting you clearly have to communicate whenever you're charging \"off budget\" and how long you estimate this additional work to take.\n\nEDIT 1: fixed some typos\n\nEDIT 2: I forgot to mention from personal experience:\nMy first freelance gig was a Onepager for a Personal Coach. Designed from scratch for one mobile screen and one desktop screen. Authored content via locally hosted Strapi, which then is build into a statics website.\nThe total working hours eventually added up to 140 hours.",
                "author": "pxlschbsr",
                "score": 5
            },
            {
                "body": "Thanks a lot, mate!\n\nA quick correction though : it's not a static site. Since the client wants to at least post articles (it's a consulting firm), the appointment manager should also be dynamic and reflect what's in the database, and the back office is also there for them to easily post and manage everything.\n\nAs for the hosting, I'm unsure. I'm still unaware of what they're using rn and if they want to change that.\n\nA yearly contract is indeed a great and common practice. I considered following that idea, but I was unsure about how much I should charge. Maybe offering the site for €2,500 and charging €100/month for maintenance and security?",
                "author": "Und0miel",
                "score": 4
            },
            {
                "body": "Please absolutely take your side (or maybe even main) jobs into account, especially when your client asks for a rough time frame when to expect deliveries. Building a business is time consuming and most certainly you'll find yourself torn between conflicting deadlines and obligations of your side jobs, tbat may negatively affect not only the time that you could work on this project but also your motivation. I started freelancing as a side business too and it got me mentally exhausted real quick. I'm not saying go all in or don't even try, I can only advocate to not underestimate to keep two balls in the air.\n\nIncorporating costs comes down to a pretty basic formula:\n- Is an expense client-specific? Are these costs directly and solely related to the project? Fully include it in the invoice\n- Are there expenses for subscriptions or software, that you use for the client, but not exclusively? Dive the costs by 60 and multiply it by the estimated time frame of the project.\n- Are there (repeating) expenses that are necessary to run the business itself (e. g. Internet provider, mail service, stationery, rent, electricity,...)? Sum up all these costs and divide it by 30 to get a \"daily average cost\" and again multiply that by the estimated time frame.\nThis way you can pretty much settle on your target wage too. \"Simply\" sum up all the fixed costs that you have for rent, groceries, leisure and retirement investment. Divide the sum by 30 to get your average and thats your starting ground. From there you add up taxes, health insurance costs, these \"business costs\", factor in times when there's no clients (thus, no revenue) coming in, generate capital, etc.\nAlso, don't undersell your expertise, it may communicate \"we're beginners\" and can undermine your actual skill level. Having too low rates has cost me a few projects where the clients thought I'm not aware or capable of the complexity that THEY thought they have.\n\nFor starters I definitly recommend going into the conversation with more time and be very transparent about it, no matter if the price is directly correlated to the actual hours worked or not. You can settle on less time still, when the client thinks of it as being too much. If you're not financially dependent on the job, you can definitly go with your gut feeling and recap later if you made ends meet or if you lost money from the deal. Those are eventually the best learning experiences, let me tell you that :D\n\nYeah, the difficulty multiplier is actually a neat estimation trick. Once you have a good feeling for the size of a project type (e. g. a simple blog, Onepager, eCommerce, etc.), you have re-occuring components, modules and functuonalities (following an atomic design) and can basically put a count on these (e. g. 10 components, 20 components, 50 components,...).\nFor the difficulty multiplier you then say 50% of these are easy/straightforward , 30% medium and 20% complex/difficult (standard fibonacci sequence) or however you see the distribution fit. In my company where I'm employed at (I quit full time freelancing for that position) we go with that estimation when working on an agency pitch and haven't been provided with exhaustive details.\n\nSound plan! Having revisions on a regular basis is absolutely necessary even more early in your business. You also should think about how you track your working process together with your client (for example with a ticket system, accessible for both of you) and how often you'll sit together just to talk about how it's going. It may seem repetitive and potentially annoying after a while, but I found it to be highly beneficial to have frequent and set dates to address hindrances or disturbances. Everything is fine and can be solved as long as it is openly communicated.\n\nRegarding the contract: I'm no lawyer and what you legally need to put in there is dependant of your country as well as your businesses legal status. If you have some budget to spare, look for a lawyer specializing in freelancers and have her/him help you (I highly recommend booking a session just for taxes and all the legal stuff too) and wether you are contracting a finished product or a service. There's plenty of templates that you can refer to as a start, nonetheless you should invest some money to have a lawyer \"validate\" it from a legal standpoint. I'm not saying (nor wishing) for things to go south, but when they do, it gets ugly so bad so fast - so better safe than sorry.",
                "author": "pxlschbsr",
                "score": 2
            },
            {
                "body": "Sounds good so far, im also working in that field mostly as an freelancer so I pick the jobs that I like and provide guidance along the way even after the job is done. As far as I can tell the pricing is high, especially for a smaller site like this. It looks like it’s an static site, 160 hours is a lot so I see why you aim the price so high. \n\nwhat you should do is lower the initial price, so cut it even down to half the price even, but get an contract for a year maybe, an support contract in that you have to sell the client technical updates legal updates and the security part that is later on important during the life cycle of the website, cause I suppose you’re gonna host them yourself. \n\n4.000€ for an static site is a lot, so that could scare the client away. Cut it down in monthly rates and it sounds way more digestible",
                "author": "wrongwayorso",
                "score": 1
            },
            {
                "body": "Exactly, find an reasonable monthly price that reflects the constant work and checkups you have to do, so 100-150€pmonth is totally reasonable. The one year was just an rough overall way of splitting the price into smaller more digestibale pieces. One thing, check the current law about contracts on your country, it could be that closed contracts for services are not allowed so you have to write an open monthly paid contract that runs until it’s canceled  by the client.",
                "author": "wrongwayorso",
                "score": 1
            },
            {
                "body": "RemindMe! 3 day",
                "author": "fizz_caper",
                "score": 1
            },
            {
                "body": "Looking at what you’ve planned and factoring in the inevitable back-and-forth (which any realistic quote should account for, yet many still ignore) there is no way this gets done in 160 hours.\n\nDon’t let Fiverr rates or Reddit’s optimistic lowballers mislead you. In the end, it’s you who’ll bear the brunt. Build this in WordPress and consider yourself lucky if you come out making more than minimum wage per hour.",
                "author": "Meine-Renditeimmo",
                "score": 1
            },
            {
                "body": "Thanks a lot for the in-depth answer and the insights, I greatly appreciate it !\n\n* From what I've found, the common rate for junior developers is between 30 and 55€/h. Considering that it's our first project, I chose to take the minimum. The idea is to scale up progressively with each project we deliver. As for the targeted wage, it's not really set right now. We both have another job on the side, and the goal for now is mainly to find clients and build a portfolio (to hopefully grow enough that we can both dedicate the majority of our time to development).\n* For now, we don't have expenses in this regard. We don't possess a Figma Pro account, and we still have access to the entirety of the Adobe suite for free from an earlier training we participated in. But, to be honest, I don't really know how to incorporate those costs into our estimates. I've often heard that we should also include the price of our internet connection, hardware expenses, and such, but it still seems kind of nebulous to me.\n* You're entirely right on that. My co-worker also thought that I was considerably underestimating the time we needed to properly deliver, especially because I'm the only one doing programming. Our division of labor is that I'm somewhat a full-stack developer while my co-worker manages the design. I'll strongly consider the 240 hours, but as I stated, I'm really afraid of deterring the client. It's a small consulting firm, and I'm not sure that they're ready to \"gamble\" this kind of money on junior freelance developers.\n* I didn't think about incorporating a difficulty multiplier. It's a rather nice idea ! And yeah, as you said, we still need more info to properly assess everything. But I still wanted to have a rough idea of what I could present to the client on the matter.\n* It's indeed an interesting idea. My plan was to provide a rough estimate and revise the time at each validation phase. As for the price, for the reasons stated above, I'm hesitant to reflect the additional time at a 1:1 ratio. Maybe plan a 50% hourly fee for any additional time spent on the project ?\n* Really good to know about your first experience and the time it took you. I'll keep that in mind !\n\nWould you also happen to have some recommendations for the maintenance contract ?",
                "author": "Und0miel",
                "score": 1
            },
            {
                "body": "I will be messaging you in 3 days on [**2025-05-25 02:59:58 UTC**](http://www.wolframalpha.com/input/?i=2025-05-25%2002:59:58%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/webdev/comments/1krzhb4/how_much_should_i_ask_to_my_client_for_this/mtlbry6/?context=3)\n\n[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fwebdev%2Fcomments%2F1krzhb4%2Fhow_much_should_i_ask_to_my_client_for_this%2Fmtlbry6%2F%5D%0A%0ARemindMe%21%202025-05-25%2002%3A59%3A58%20UTC) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201krzhb4)\n\n*****\n\n|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|\n|-|-|-|-|",
                "author": "RemindMeBot",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1748009770.0,
        "title": "Behance or Contra?",
        "author": "Koussayzayani",
        "id": "1ktkojq",
        "selftext": "I've been designing web and app projects for years, mostly getting clients through word of mouth, so I never needed a public portfolio. Now I want to attract clients online and I'm deciding between two platforms: Contra and Behance.\n\nContra: is a freelance platform where you can showcase your portfolio, manage projects, and get paid directly all in one place. It’s great for freelancers who want an easy, integrated workflow.\n\nBehance: is a popular creative showcase site, well-known in the design industry. It’s great for building your reputation, networking with other creatives, and getting exposure, but it’s less focused on freelance work and payments.\n\nSince I work mainly with Figma and Framer for web and app design, I want a platform that highlights these skills. Contra is better for landing clients and handling payments, while Behance is better for exposure and networking.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1ktkojq/behance_or_contra/",
        "num_comments": 9,
        "comments": [
            {
                "body": "Behance and contra are 2 différent platforms in my opinion.  Behance is more of a portfolio site whereas contra has payment, invoicing, contracts, etc.  I know people who have had a lot of success on contra but they are exclusively people who joined 2+ years ago.  I think there are so many designers on there now that it’s not as lucrative as it was (unless of course you already have reviews on that specific platform).",
                "author": "Key-Cobbler-56",
                "score": 1
            },
            {
                "body": "But you could use both honestly - lots of people do and you don’t necessarily need one or the other just set them both up with your best work.",
                "author": "Key-Cobbler-56",
                "score": 1
            },
            {
                "body": "co what? hidden ad?",
                "author": "Puzzleheaded-Work903",
                "score": 1
            },
            {
                "body": "I never got anything from Contra, I doubt any significant percentage of the people there actually get work.",
                "author": "zxyzyxz",
                "score": 1
            },
            {
                "body": "I trying to choose so I can buy the premium version to get more exposure and more feature",
                "author": "Koussayzayani",
                "score": 1
            },
            {
                "body": "What?",
                "author": "Koussayzayani",
                "score": 1
            },
            {
                "body": "So what's the use of it if no one get anything from it? \nJust writing contracts and keep your earnings to everyone?",
                "author": "Koussayzayani",
                "score": 1
            },
            {
                "body": "You should look at what others say who have purchased premium.  Awhile ago I saw some posts on bluesky and some guy was in the top 3-5% of web designers on contra but was only getting 1 view a day or something.  Not sure about Behance though.",
                "author": "Key-Cobbler-56",
                "score": 1
            },
            {
                "body": "I mean a few people get work from it but the vast majority probably don't.",
                "author": "zxyzyxz",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1754716076.0,
        "title": "A platform (in React, RN, Node, OpenAI, GraphQL) to help freelancers to turn their skills into revenue",
        "author": "phenrys",
        "id": "1mlh8ik",
        "selftext": "Hey WebDev! I’ve been freelancing on and off for years, and while I love the freedom, I’ve always found it frustrating how much time gets eaten by non-billable work — chasing leads, managing projects, handling client communication, invoicing, follow-ups, etc. That's how [Retainr.io](http://Retainr.io) was born.\n\nMy attempt at solving that problem for myself (and hopefully other freelancers).\n\nIt’s a platform that:\n\n* Lets you **package your services into clear offers** clients can book instantly\n* Handles **client onboarding, messaging, and file sharing** in one place\n* Uses **AI to help respond to client requests, generate proposals, and schedule follow-ups**\n* Gives you a **dashboard to track active projects, recurring clients, and monthly revenue**\n\n**Now, the tech stack:**\n\n* **Frontend:** React + React Native\n* **Backend:** Node.js + GraphQL\n* **AI:** OpenAI API 4.1\n* **Database:** Postgres\n* **Hosting:** AWS\n\nRight now, I’m using it for my own freelance work, and it’s already cut my admin time in half. The core goal is to help more freelancers turn their skills into consistent, retainable income, and without burning out on admin!\n\nWould love feedback from this community,  especially on the UI/UX and any features that would make this more useful for devs doing freelance work.\n\n**Demo:** [https://retainr.io](https://retainr.io/)\n\n  \nIf you are freelancing, I would love your feedback.  \nWebsite: [Retainr.io](https://retainr.io/)",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1mlh8ik/a_platform_in_react_rn_node_openai_graphql_to/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1754200542.0,
        "title": "CMS edge bootstrap blog framework with email integration",
        "author": "gnarzilla69",
        "id": "1mgbqt3",
        "selftext": "Hey r/webdev,\n\nI've just released v4 of Deadlight Edge Bootstrap, my Cloudflare Workers-based blog platform, now with email functionality integrated directly into the backend.\n\nDeadlight is a lightweight, edge-deployed blog platform running on Cloudflare Workers. It's designed for developers who want content delivery without the overhead of traditional CMS solutions. The entire application remains under 40KB gzipped.\n\nNew in v4: Email Integration\n\nEmail fetch and display within the platform interface\n\nStore and view emails alongside blog content\n\nReply to emails through the web interface\n\nBackend integration with email providers via external scripts\n\nPrivacy-focused email handling (all data stored in your own database)\n\nTechnical Implementation:\n\nEmails stored in D1 (Cloudflare's edge SQLite database)\n\nExternal fetch script using GNU Mailutils for IMAP access\n\nAPI endpoints for retrieving and managing email content\n\nSeamless UI integration with existing blog components\n\nQueued reply system with external SMTP handling\n\nCore Platform Features:\n\nEdge computing with zero cold starts\n\nMulti-user role-based authentication\n\nFull Markdown content support\n\nDark/Light theme switching\n\nD1 Database integration\n\nEnterprise-grade security (CSRF protection, rate limiting, input validation)\n\nModular architecture with shared libraries\n\nComprehensive logging system\n\nThe platform remains MIT licensed and open source. If you're interested in an edge-native content platform that now handles both publishing and email communication, the code is available to explore.\n\n[Githib](https://github.com/gnarzilla/blog.deadlight.boo.git)\n\nHappy to answer any technical questions about the implementation, particularly the email integration or edge computing approaches used.",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1mgbqt3/cms_edge_bootstrap_blog_framework_with_email/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1750969366.0,
        "title": "Meta for developers will not let me create account",
        "author": "himynamesaustin",
        "id": "1llalrc",
        "selftext": "Just curious if anyone has ran into this issue before. When I attempt to sign up for Meta for Developers (to use Fb login button for my website), the \"continue\" button does absolutely nothing. I tried last week, different browsers, different computers and it provides no error message. I can't even find an email to support someone and it also does not allow you to submit a bug without already being a member.\n\nhttps://preview.redd.it/96wxlg7wyb9f1.png?width=1558&format=png&auto=webp&s=6c67053fd36e19cfcb95ceffed300fc5eaa0307a\n\n  \n",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1llalrc/meta_for_developers_will_not_let_me_create_account/",
        "num_comments": 4,
        "comments": [
            {
                "body": "Where you able to solve this issue? Im also encountering the same problem",
                "author": "Ecstatic_Stranger573",
                "score": 1
            },
            {
                "body": "I'm stuck on the 'verify phone number' screen. It's amazing how much funding they have and how many devs they have and yet they can't fix this issue. I'm so close to goddamn snapping.",
                "author": "AureumSpiritus",
                "score": 1
            },
            {
                "body": "I was not...",
                "author": "himynamesaustin",
                "score": 1
            },
            {
                "body": "I still never found a fix. Google/Apple only.",
                "author": "himynamesaustin",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731390640.0,
        "title": "I’m thinking about making this app - what would you use to make this?",
        "author": "DudeThatsErin",
        "id": "1gpdzxb",
        "selftext": "I’m making this for me and only me. I don’t have the funds to host it for other people.\n\nIt is a task management app that is basically Todoist but free. I plan to sync via Github or Syncthing as I have an iPad and iPhone + Windows PC.\n\nI am recreating it so I can get all of Todoist’s features but free and because I want it to look a bit different. Todoist has been needing a makeover and they won’t do it so I plan to upgrade a tiny bit of features, give it a look overhaul, while also making as many of the features as possible.\n\nI was thinking about using Electron with a MySQL backend simply because I have hosting via Hostinger for my portfolio so I have the space available there for something like this.\n\nAlternatively, I know dart/flutter and I could use Postgres or a JSON file.\n\nI’m not sure how to go about this but there aren’t many Windows + iOS task apps that are free so I plan to make this for me and if it catches on, release it as an open-source alternative to Todoist.\n\nI want to make it work on all platforms as well as the web.\n\nMy ultimate goal would be something like Bitwarden that has Vaultwarden and everything but that is way down the pipeline and may not even come to fruition.\n\nEither way, I’m curious if the languages I am thinking about using will work and how well.\n",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1gpdzxb/im_thinking_about_making_this_app_what_would_you/",
        "num_comments": 29,
        "comments": [
            {
                "body": "Flutter is good for Android/iOS/Windows/Mac OS, but last time I've checked - it wasn't perfect for the Web. Be careful though, as Windows have it's own twist on timezones (and same Flutter libs can work differently). You will still need some meaningful framework at backend for auth and notifications. \n\nIf I were building it now, I'd go with Flutter + Django/Postgres + GraphQL",
                "author": "PGurskis",
                "score": 2
            },
            {
                "body": "Flutter + pocketbase",
                "author": "Benskiss",
                "score": 2
            },
            {
                "body": "That’s not the only reason. I am doing it for the experience.",
                "author": "DudeThatsErin",
                "score": 2
            },
            {
                "body": "Yes nice",
                "author": "Rave4us",
                "score": 1
            },
            {
                "body": "Unemployed between positions and I can’t afford the subscription. Also, when I have a job, I can’t justify it when I could make something similar for myself for free and it is good experience for my resume.",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Like what? I don’t know of any free versions of Todoist.",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "Looked into alternative tools that are free and there are none out there. Nothing that even comes close to Todoist.",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "Good to know. I guess I’ll take some time to look into Django and what it can do versus what I know about React/Angular/etc. all of which I have used (somewhat) in the past.",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "what Todoist features are missing from say Microsoft To Do?",
                "author": "saruptunburlan99",
                "score": 1
            },
            {
                "body": "If I can’t afford todoist, I obv can’t afford vikunja",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "A LOT.\n\nFor starters, reliable notifications. I don’t get them on my desktop.\n\nKanban boards.\n\nCalendar view.\n\nFilters\n\nTag list.\n\nSubtasks - Steps don’t cut it.\n\nWhen it comes out, deadlines.",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "You can self host it for free.",
                "author": "mcfistorino",
                "score": 1
            },
            {
                "body": "Self hosting requires a VPS right? I’ve looked into self-hosting a bitwarden and that requires a VPS.",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "Well yes self hosting requires something to host it on either vps or your own hardware.",
                "author": "mcfistorino",
                "score": 1
            },
            {
                "body": "Again, if I can’t afford todoist, I can’t afford a VPS. I am making this so that it can sync via Syncthing or GitHub or similar.",
                "author": "DudeThatsErin",
                "score": 1
            },
            {
                "body": "Why not just use tool ",
                "author": "Altentofone",
                "score": 0
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "Yah it's good journey but there is free tools just grap one and use it free hosting and also 0 time in building ",
                "author": "Altentofone",
                "score": 0
            },
            {
                "body": "Vikunja",
                "author": "mcfistorino",
                "score": 0
            },
            {
                "body": "Try Google calendar ",
                "author": "Altentofone",
                "score": 0
            },
            {
                "body": "You want to recreate this because you cannot afford a subscription while you're unemployed... however you're considering spending literally hundreds of hours doing design, spec, development, and testing to recreate something that you think just needs a slight facelift. All to save maybe $50 a month (on the expensive side)?\n\nFrankly, I think your time is more important than some app. Write down your to-do stuff on paper while looking for employment instead of relying on an app. Hundreds of hours dedicated to finding work would be much better spent than reinventing a wheel with a slightly different color paint.",
                "author": "proto-rebel",
                "score": -1
            },
            {
                "body": "If I wanted to make my way into backend programming for my next job (unemployed - full stack but professionally I’ve done mostly frontend) would Python work for this? Are there python frameworks?\n\nAlso, why Typescript instead of JS? I have most familiarity with JS been writing bots and stuff with JS for years. TypeScript is fine but I always thought about it as being the anal JS where you have to give everything a type but maybe that is my lack of familiarity with it.",
                "author": "DudeThatsErin",
                "score": -1
            },
            {
                "body": "I think you skipped over the point. Recreating an app of that complexity is a waste of time. You'd be better off doing tutorials, getting small jobs on Upwork, and applying for career jobs.\n\nYou listed some tech requirements, but you're missing a significant factor, which is the UX and component design of an app of that size.\n\nPersonally, I would see this as a humongous waste of time. As somebody that hires developers, if somebody came to me with a hacked together semi-functioning copy of an already existing app, I'd be less impressed than I would with an Upwork profile with a few good reviews, completed online code courses, and a tenacity to find a career. Spending your time to copy an app with zero knowledge of the intricacies of its infrastructure is a waste and doesn't look good. Instead it shows stubbornness and lack of direction. No agency wants to pay their developers to copy something when they could just pay a very low $X fee for a subscription, and that's the reality of this industry.\n\nBest of luck on your projects and job search.",
                "author": "proto-rebel",
                "score": -3
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1738428596.0,
        "title": "I made a social media management software",
        "author": "Zachhandley",
        "id": "1ifahbe",
        "selftext": "After 7 months of grinding, late nights, and way too much caffeine, I finally launched [Socialaize](https://socialaize.com) – a social media automation platform built to make posting across multiple platforms way less painful.\n\nI got tired of constantly copy-pasting, tweaking posts for different platforms, and juggling a million different scheduling tools. So I built Socialaize to:\n\n* **Repost & transform content** across Instagram, Threads, YouTube, TikTok, Facebook, and more (without everything breaking).\n* **Automate scheduling & engagement** so you don’t have to manually post at the \"perfect time.\"\n* **Simplify workflows** to make handling multiple platforms actually manageable.\n\nI know social media automation isn’t a new concept, but I wanted something that actually *worked* smoothly without overcomplicating things. It’s been a long journey getting this live, and I’d love to hear your thoughts!\n\nHave you ever struggled with managing multiple accounts? What’s your biggest frustration when it comes to social media automation?\n\nIf you’re curious, you can check it out here: [Socialaize.com](https://socialaize.com). Would love some honest feedback from fellow builders, marketers, and creators!",
        "score": 8,
        "url": "https://www.reddit.com/r/webdev/comments/1ifahbe/i_made_a_social_media_management_software/",
        "num_comments": 19,
        "comments": [
            {
                "body": "Fast feedback: the light/dark theme switch does not work (I'm on Android).",
                "author": null,
                "score": 2
            },
            {
                "body": "Feeling your pain, I've definitely struggled with managing multiple accounts and the constant quest for efficiency. I had a phase where Hootsuite and Buffer were my go-to, but I always felt like I was juggling more than I should. The biggest frustration for me was scheduling tweets in advance without them losing relevance due to delays in getting creative. That's where something like XBeast, which auto-generates tweets using AI, can be a game-changer—especially if you're focusing heavily on Twitter. Your tool, Socialaize, sounds like a lifesaver, offering solutions to multiple platform management. What's been the biggest surprise for you during your development journey?",
                "author": "jello_house",
                "score": 2
            },
            {
                "body": "Anything that starts with an \"AI\" I'm skeptical about. Please help me 🥲",
                "author": "pettgree",
                "score": 2
            },
            {
                "body": "Honestly that’s a good mindset to have. 9/10 times that’s gonna be a good assumption. I have the emphasis on AI here, but it’s all good ole fashioned code talking to API’s",
                "author": "Zachhandley",
                "score": 2
            },
            {
                "body": "How does this work? I mean the tech",
                "author": "SpiffySyntax",
                "score": 1
            },
            {
                "body": "Perhaps another cup of coffee. The titles of inputs on forms are out of place",
                "author": "Prize_Passion3103",
                "score": 1
            },
            {
                "body": "How do you do analytics tracking? Is it historical? How does the AI social posting function?",
                "author": "Fatdog88",
                "score": 1
            },
            {
                "body": "Great progress",
                "author": "ultramusicapiretor",
                "score": 1
            },
            {
                "body": "Thanks :) I’m gonna bug fix that today, not sure why it broke, all I added was pointer-cursor\n\nOmg it was because I upgraded tailwind to v4 and forgot to add the class strategy for the dark mode!\n\nEdit: Fixed!",
                "author": "Zachhandley",
                "score": 1
            },
            {
                "body": "My bad man, I totally missed this! Such a well thought out comment! Hmm, I would say that the biggest surprise during this was how much work I’d have to do just to create trigger-based workflows haha\n\nIt was super annoying to create the workflows because I THOUGHT that each social network would have webhooks to tell me when someone posts, but they do not. I ended up having to make it myself, it was exhausting haha",
                "author": "Zachhandley",
                "score": 1
            },
            {
                "body": "I use https://appwrite.io for a majority of the backend — though I use SSR with Astro so I have flexibility in what I choose to use Appwrite for. The frontend is powered by https://astro.build & good ole Vue Tailwind\n\nI have a LOT of systems in place in the backend, and a function per API. So for Instagram, and the rest it’s constantly running in the background in order to trigger workflows or other stuff :)",
                "author": "Zachhandley",
                "score": 1
            },
            {
                "body": "Wdym? Can you send a screenshot? They’re absolutely positioned, maybe a screen size that I didn’t test",
                "author": "Zachhandley",
                "score": 1
            },
            {
                "body": "A few different ways, we can track what posts we repost for you, I do historical tracking once you connect your accounts, and I have a few other things I’m doing via different API’s insights/stats endpoints. At the moment, the AI’s main functionality is to help facilitate rewriting or reposting content to differentiate between them. By having it connected, it allows me to allow you to use your data to enhance your posts, choose what to post, etc.\n\nI’ve been adding blue sky and linked in, after those are done (next few days with testing) I’ll be adding in the public analytics view as well as more AI functionality",
                "author": "Zachhandley",
                "score": 1
            },
            {
                "body": "Thanks!! I appreciate it",
                "author": "Zachhandley",
                "score": 1
            },
            {
                "body": "Gotcha, thanks. Good job!",
                "author": "SpiffySyntax",
                "score": 1
            },
            {
                "body": "https://imgur.com/a/MFXprEL\niphone XS",
                "author": "Prize_Passion3103",
                "score": 1
            },
            {
                "body": "Thanks!!",
                "author": "Zachhandley",
                "score": 1
            },
            {
                "body": "Oh okay, I’ll fix that, just needs a pixel or two, thanks!",
                "author": "Zachhandley",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731613648.0,
        "title": "Are there any really good code snippet managers people are using? (Opensource preferred)",
        "author": "Am094",
        "id": "1grdfzt",
        "selftext": "Hi everyone,\n\nRecently been finding myself having to write a shit ton of snippets. From various json api schemas, bash scripts, self contained utility functions across a few different languages, etc. \n\nUsually I just throw them on github, issue trackers, code docs, etc. But honestly, I'm trying to reduce complexity for me, I don't want to look through half a dozen repos, or sign into one of many different project management platforms. Self hosted / self contained is ideal for me. Should run on windows.\n\nI've recently been giving mass code a try, it's open source and works well enough. However it feels a bit sluggish after I added 50 snippets over the past week, I can't collapse the sidebar, no search, limited styling, it's almost perfect but lacks a lot of quality of life. It does use markdown which i like, allows tagging, and language selection.\n\nI also use [Obsidian.md](http://Obsidian.md) a lot for a wide range of things, but I'd have to extend it quite a bit to really be perfect for what I need.\n\nJust wondering if anyone here has any recommendations?",
        "score": 15,
        "url": "https://www.reddit.com/r/webdev/comments/1grdfzt/are_there_any_really_good_code_snippet_managers/",
        "num_comments": 26,
        "comments": [
            {
                "body": "A mkdocs site published via GitHub pages.\n\nPaste the code between code blocks so that it is syntax highlighted, describe it in plain text with some keywords that you might search for later. Mkdocs has excellent search functionality built-in so it's easy to find what you're looking for. You can also easily include the \"click here to copy the code\" buttons in the top right of the code using mkdocs plugins.\n\nUse different pages for different types of snippets.\n\nAdded benefit is that you now have a website that you can share with your fellow developers.",
                "author": "andy4015",
                "score": 12
            },
            {
                "body": "A lot of code editors allow you to set up custom code snippets. For example, with VSC you can make your own or install snippet sets from the marketplace. If want to get fancy, you could export/import those settings as json and store it in GitHub to share and flex, but shouldn’t be necessary.\n\nhttps://code.visualstudio.com/docs/editor/userdefinedsnippets",
                "author": "Decent_Perception676",
                "score": 9
            },
            {
                "body": "I use a combination of GitHub Gists, [Codepen.io](http://Codepen.io), and [codesandbox.io](http://codesandbox.io), depending what the code is and how I want to use the snippet. Probably not the solution you were looking for but, I haven't felt the need for anything more robust.",
                "author": "AndyMagill",
                "score": 6
            },
            {
                "body": "Lepton [https://hackjutsu.com/Lepton/](https://hackjutsu.com/Lepton/)",
                "author": "570n3d",
                "score": 5
            },
            {
                "body": "I know it’s outdated, but I keep a txt file full of code and scripts to reuse over and over again that I reference while building sites.",
                "author": "Citrous_Oyster",
                "score": 4
            },
            {
                "body": "Wow this looks like the clear winner here. Thank you!",
                "author": "Am094",
                "score": 3
            },
            {
                "body": "We were looking for something much better",
                "author": "Immediate-Hearing194",
                "score": 3
            },
            {
                "body": "Try the data view (?) plugin for obsidian. It can do things like automatically keep an updated and linked table/list for all files in a given folder. \n\nMake a new file for your snippet in folder with an appropriate name, and it's auto added you your list. Can also add some tags or additional front matter to the files to be shown in table of preferred.\n\n*Can also easily be filtered to search/create sub-lists, etc.",
                "author": "AnxiousPackage",
                "score": 2
            },
            {
                "body": "An entirely shameless plug of my side project that is centered around code snippets: https://codecatch.net. Feedback is appreciated if you do end up trying it :). Currently working on implementing a live edit feature for code snippets.",
                "author": "JoeCamRoberon",
                "score": 2
            },
            {
                "body": "I use massCode as it's open source and has a nice UI with syntax highlighting and stores the code in a json file locally which is neat. I store this file in my One Drive folder to get access to my snippets from everywhere.\n\n[https://masscode.io/](https://masscode.io/)",
                "author": "Main-Informal",
                "score": 2
            },
            {
                "body": "Not free or open source but if you are on mac try snippetslab. I have used some snippets managers such as masscode, lepton, gisto and some note apps, imho snippetslab is the best.",
                "author": "ivshaw",
                "score": 2
            },
            {
                "body": "From my original post lol\n\n>I've recently been giving **mass code** a try, it's open source and works well enough. However it feels a bit sluggish after I added 50 snippets over the past week, I can't collapse the sidebar, no search, limited styling, it's almost perfect but lacks a lot of quality of life. It does use markdown which i like, allows tagging, and language selection.",
                "author": "Am094",
                "score": 2
            },
            {
                "body": "I can't imagine any way to store code snippets that wouldn't require at least a few steps. \n\nI find it quite straight forward.\n\n1. Copy the code snippet.\n2. Open my snippets mkdocs project.\n3. Paste the code in a suitable markdown file.\n4. Write a brief description.\n5. Save.\n6. Run `mkdocs gh-deploy`\n\nDone in <60 seconds.",
                "author": "andy4015",
                "score": 2
            },
            {
                "body": "I've thought about making my snippets available as a dev dependency that coPilot can reference, then provide me my snippet, maybe tailored to my specific use case",
                "author": "qpazza",
                "score": 1
            },
            {
                "body": "My brain.",
                "author": "thekwoka",
                "score": 1
            },
            {
                "body": "Currently, I am building a Code snippet manager, it's cloud-based, and the focus is on sharing the code and using it from others. I plan to add a VS Code extension and maybe a Desktop application\n\nIf anyone is interested, you can join the waitlist on [https://clipit.at](https://clipit.at) so I can see if enough ppl are interested.\n\nFeel free to give feedback and suggestions to make it better!",
                "author": "derphoenix01",
                "score": 1
            },
            {
                "body": "Good idea conceptually but how do you actually incorporate that in your daily workflow without it becoming disruptive and a multi step chore? (Especially the adding/saving of snippets.)",
                "author": "loptr",
                "score": 1
            },
            {
                "body": "Buggy. Poor UX/UI",
                "author": null,
                "score": 1
            },
            {
                "body": "Thanks for the recommendation. Sorry dude, I clearly hate myself so I develop on windows (regrettably).",
                "author": "Am094",
                "score": 1
            },
            {
                "body": "Horrible UI/UX.  \"new row violates row-level security policy for table \"users\"  This software is not production ready.",
                "author": null,
                "score": 1
            },
            {
                "body": "This looks like a great one, thank you!",
                "author": "SororBudWiser",
                "score": 1
            },
            {
                "body": "If you like masscode after the recent updates (some of your complaints have been remedied IMO), then you can use my personal tool [snipman](https://github.com/pa-0/snipman/releases) to fill in any gaps.  Its open-source, runs on Windows, has a global hotkey, incremental search, it can load snippets directly from your masscode snippet JSON file, has full-text preview on hover, and gives you control over where the caret is positioned after the snippet is inserted.",
                "author": "xp0a",
                "score": 1
            },
            {
                "body": "To me that's where the manager part comes in, it's another text editor/text repository but something that integrates with your workflow, clipboard and editor experience and provides shortcuts, sorting/categorization or language detection, quick searches etc without leaving the context and initiating a different task/just having a wiki type solution where you need to do all the manual work. \n\nI.e. actual applications meant for snippet management/usage rather than just manual text archives. (Which have their upsides, don't get me wrong, it's just not what I associate with snippet managers but that's on me.)\n\nBut based on OPs description it sounds like that's not really what they were after",
                "author": "loptr",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1730783770.0,
        "title": "Am I getting overcharged?",
        "author": "31ephantintheroom",
        "id": "1gjze9a",
        "selftext": "I have a platform I built for music artists where we integrate our Google Adsense account on their custom profiles to generate income for them. Manually creating the profiles and payouts has been the biggest issue to scale so I reached out for quotes on developing the website. At it's simplest form it's a sign up page, a custom profile with 5-10 pieces of info and a dashboard for the artists to see their page views and withdraw earnings. So far HubSpot and their recommended developer quoted me at $18k. Google Cloud and their developer quoted me at $12k+$600/mo for servers+$650/mo for maintenance. Although I don't know much about developing, the project seems very simple to me. Am I getting overcharged? Is there a better place for me to go?\n\nEdit: Here are the scope of services I received  \n  \n**Scope of Services** Developer will provide the following services. The project will include the following features:\n\n* **Artist Profile Management:**\n   * Artists can sign up and create profiles.  \n   * Artists can upload images, links to social media, and other promotional materials.  \n   * Artists can withdraw their earnings.  \n* **Google AdSense Integration:**\n   * Integrate Google AdSense into artist profiles to generate revenue.  \n   * Automatically calculate and distribute earnings between Music HQ and the artist.  \n* **Payment Gateway Integration:**\n   * Integrate with Stripe or a similar payment gateway for secure transactions.  ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1gjze9a/am_i_getting_overcharged/",
        "num_comments": 29,
        "comments": [
            {
                "body": "It's pretty hard to say with the vague description you have given.  That doesn't seem like a lot of money for a fully custom app.  There's a lot of work just to get a simple app up and running, and these days you're probably looking at rates over $200 per hour, could be closer to $300 if the company is in the US and has a good reputation.  So it could only mean 30-40 hours to build a simple app plus a few hours a month to maintain it. \n\nAlso you said you're not familiar with software projects which means you need more hand holding and the scope of the project is more likely to get out of control.  So it's also possible they are actually off shoring at $50/hr but quadrupling the estimate due to these risk factors.",
                "author": "dobesv",
                "score": 16
            },
            {
                "body": "Obviously need more info, but that price is reasonable.",
                "author": "osborndesignworks",
                "score": 7
            },
            {
                "body": "Go fund me for this doesn’t make sense. It’s essentially trying to get free investment for a digital service.",
                "author": "Silver-Vermicelli-15",
                "score": 6
            },
            {
                "body": "Those hourly rates look right to me.  As for how many of hours of each they’re quoting is another matter.",
                "author": "fueled_by_caffeine",
                "score": 5
            },
            {
                "body": "Is the developer building out the payout feature? If so you are getting a steal of a deal. If not than it's reasonable.",
                "author": "Disastrous-Hearing72",
                "score": 2
            },
            {
                "body": "I mean if you want it done cheap you could hire upwork freelancers and host it on hetzner.",
                "author": "Financial_Extent888",
                "score": 2
            },
            {
                "body": "Yes, integrating it with our Stripe account. Thank you for your feedback!",
                "author": "31ephantintheroom",
                "score": 2
            },
            {
                "body": "Without knowing the true scope of the project, it's really hard to tell. ( Why would you need two Cloud Architects but only one developer ?)\n \nI would not be surprised if some of these roles are done by the same individual.\n\nThat being said, I would look at a couple more options and see what they offer. If the price is somewhat similar, you know what the project is worth and have various places to choose from.\n\nDon't go for cheap either. None of that upwork nonsense, it would come bite you in the long run",
                "author": "FitQuality7765",
                "score": 2
            },
            {
                "body": "Server costs if you do it right for something like this is almost free. We are talking under 20$ a month and that's probably an exaggeration.\n\nIt's the development that's going to take a bit of time here. What existing infrastructure do you have?\n\nIm intrigued. I can mix something up for you.\n\nHosting it on a vps (no serverless), Stripe, NextJS, some prisma and a database should do the trick here.",
                "author": "Human-Tooth4522",
                "score": 1
            },
            {
                "body": "Did they give you a time estimate ?\nHow far along will they bring the project ?",
                "author": "FitQuality7765",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Thank you for your feedback!",
                "author": "31ephantintheroom",
                "score": 1
            },
            {
                "body": "I'm not opposed to the pricing, just looking to see if it's reasonable. Are there any concerns I should consider with that route?",
                "author": "31ephantintheroom",
                "score": 1
            },
            {
                "body": "I'm not the first nor will I be the last platform to pay music artists. Have a blast!",
                "author": "31ephantintheroom",
                "score": 1
            },
            {
                "body": "The timeframe was determined by them. They didn't detail what the maintenance would entail.",
                "author": "31ephantintheroom",
                "score": 1
            },
            {
                "body": "Thank you!! Since my second quote was 30% cheaper than the first, it made me wonder. I appreciate your feedback. \n\n**Scope of Services** Developer will provide the following services. The project will include the following features:\n\n* **Artist Profile Management:**\n   * Artists can sign up and create profiles.  \n   * Artists can upload images, links to social media, and other promotional materials.  \n   * Artists can withdraw their earnings.  \n* **Google AdSense Integration:**\n   * Integrate Google AdSense into artist profiles to generate revenue.  \n   * Automatically calculate and distribute earnings between Music HQ and the artist.  \n* **Payment Gateway Integration:**\n   * Integrate with Stripe or a similar payment gateway for secure transactions.  ",
                "author": "31ephantintheroom",
                "score": 1
            },
            {
                "body": "So reading the other comments and searching around i would say the second option is not a bad offer in terms of development, maybe a bit rushed, i would expect more around 4-6 weeks.   \n  \nThe maintenance in terms of servers still seems a bit high to me, but again it all depends.\n\nTo finish the discussion, i would not leave out the option of looking for offshore solutions your self, if you are willing to work with them remotely and don't mind timezone differences, you could save a pretty penny.\n\nGoodluck !",
                "author": "FitQuality7765",
                "score": 1
            },
            {
                "body": "It sure looks that way. However it’s less than a year before it’s cost you over $18k despite only costing $12k to build. \n\nThe build prices seem reasonable, that server/maintenance seems excessive.",
                "author": "Silver-Vermicelli-15",
                "score": 1
            },
            {
                "body": "Thank you for your feedback!",
                "author": "31ephantintheroom",
                "score": 1
            },
            {
                "body": "Thank you! I requested further details on the server and maintenance costs from them.",
                "author": "31ephantintheroom",
                "score": 1
            },
            {
                "body": "The ongoing fees and server costs seem to be unnecessarily high. My firm bills me at $170/hr, so for that I'd be doing 3.82 hours of maintenance a month.  I have clients with complex websites that need monthly platform and package updates and it's generally about an hour a month unless there is a major breaking change.\n\n\nAs far as servers go, my firm owns servers in a data center and we host the majority of our clients, and our dedicated server is $200/month.  The only downside is that you don't get redundancy for that cost - if the server goes down then it's down until it's back up. For some clients any downtime is unacceptable and so they have a backup server which then doubles the cost. For most clients a minor outage is fine. In fact, the majority of our clients are on a shared server and they pay I think $20 a month.\n\n\n\nAs far as the development costs, it's hard to say without more information and actually looking at designs, but that doesn't necessarily seem outlandish. I'd actually hesitate to trust anyone who tells you you're paying too much or too little just based on the info you've provided, because as in everything else, in software engineering the devil is in the details. \n\n\nBut just *prima facie*, we're talking a few pages, a payment processor integration, and an AdSense integration, and so 12k-18k is not crazy by any stretch. \n\n\nAt my billing rate, that's about 105 hours on the high end. Let's subtract 15% for project management, 10% for deployments and QA, 30 hours for the front facing pages, and that leaves us 40ish hours for the integrations.\n\n\nAgain, totally detail dependant but that's not nuts. \n\n\nFeel free to shoot me a PM if you'd like to set up a more thorough discussion and get another quote. My firm has been in business for 20+ years and our clients run the gammut from the local humane society to nationally known food brands (Tito's Vodka, Kettle Chips, General Mills), to government agencies (NASA), and we even have some exposure in the music space, having developed a special event ticketing system for an American Express venture.",
                "author": "Mentalpopcorn",
                "score": 0
            },
            {
                "body": "These are the rates that were provided. \n\n||\n||\n|**Role**|**Location**|**Hourly Rate**|\n|Solution Architect (Project Director)|Onshore|$250|\n|Cloud Architect|Onshore|$200|\n|Project Manager |Onshore|$150|\n|Senior Data Scientist (Expert)|Offshore|$150|\n|Cloud Architect|Offshore|$90|\n|Cloud Engineer / Application Arch / Project Mgr|Offshore|$60|\n|Development Engineer|Offshore|$60|\n|UI Engineer|Offshore|$60|\n|QA|Offshore|$50|",
                "author": "31ephantintheroom",
                "score": 0
            },
            {
                "body": "Hubspot was going to take 3 months based on a pay schedule. Google's developers can have it done within a couple of weeks and would keep up the maintenance after the launch.",
                "author": "31ephantintheroom",
                "score": 0
            },
            {
                "body": "I messaged you! Thank you!!",
                "author": "31ephantintheroom",
                "score": 0
            },
            {
                "body": "IMO is a bit high on the price, both the development and the maintenance. Did you ask them for urgency ?\n\nYou can tell them to give you a break down on where the money and time will be spent. \n\nI say the dev seems high to me because most likely they  outsource the work to overseas companies with way lower hourly rates, letting them keep a big chunk of the money with little to no work. (For example in my country the average salary for a web developer is around $600 monthly )\n\nThe maintenance seems waaaay over priced; by maintenance do they mean having a developer actively testing and fixing bugs or is it only for services and servers ? Again ask for a break down of the expenses",
                "author": "FitQuality7765",
                "score": 0
            },
            {
                "body": "These were the rates they provided:\n\n||\n||\n|**Role**|**Location**|**Hourly Rate**|\n|Solution Architect (Project Director)|Onshore|$250|\n|Cloud Architect|Onshore|$200|\n|Project Manager |Onshore|$150|\n|Senior Data Scientist (Expert)|Offshore|$150|\n|Cloud Architect|Offshore|$90|\n|Cloud Engineer / Application Arch / Project Mgr|Offshore|$60|\n|Development Engineer|Offshore|$60|\n|UI Engineer|Offshore|$60|\n|QA|Offshore|$50|",
                "author": "31ephantintheroom",
                "score": 0
            },
            {
                "body": "Currently using Bandzoogle and creating the pages manually. We already have a proof of concept for years and have been generating revenue from it. We also have a Stripe account which was going to be integrated. I was about to launch a GoFundMe for it, you can view the full details at [https://www.gofundme.com/f/support-musichq-fair-pay-for-artists](https://www.gofundme.com/f/support-musichq-fair-pay-for-artists) (Not asking for donations)",
                "author": "31ephantintheroom",
                "score": -4
            },
            {
                "body": "I considered it because of the large database I have that would be affected positively by it.",
                "author": "31ephantintheroom",
                "score": -4
            },
            {
                "body": "We've already had meetings about the scope of work and we've had a proof of concept for years that hasn't changed. Also, no mention of an app, just developing the website.",
                "author": "31ephantintheroom",
                "score": -7
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1750557597.0,
        "title": "I'm building Canine.sh - An open source, free Heroku alternative",
        "author": "czhu12",
        "id": "1lhcpz9",
        "selftext": "Tldr: [Canine](https://canine.sh) is a Heroku alternative that's free to use if you bring your own infrastructure.\n\nI've been building [https://canine.sh](https://canine.sh/) for the past year, based on some learnings I've had in the past building startups where we quickly outgrew the single VPS type deployments, moved onto managed platforms like Heroku and Render, and watched our costs explode, with an annoying amount of vendor lockin.\n\nWe moved onto Kubernetes to cut back on costs. Pros was that it was a super stable, mature hosting platform, really easy to scale up and down, with resiliency, but it just became a huge PITA to try to train the entire team on it, and we had to install a ton of additional features to make it work well.\n\nEnded up taking all the learnings and ended up building our own service.\n\nIt basically tries to make Kubernetes (which you can now get fully managed for $12 / month on linode), as easy to use as Heroku. It has a Github integration, SSL auto-provisioning, team accounts, etc. You just have to bring a generic Kubernetes cluster, that almost every infrastructure provider supports very cheaply these days (cheapest I've found is $4 for 2GB of memory on Hetzner).\n\nThis lets you take advantage of a ton of things that Kubernetes does really well, like automatic healthchecks, zero downtime deployments, auto scaling, etc, while also making it easy to use for solo developers or small teams.\n\nThe additional benefit of Kubernetes is that it's also possible to host a bunch of other stuff in your cluster via Helm charts, that you’d normally have to pay for like:\n\n* Sentry\n* Wordpress\n* Metabase\n* Dagster\n* Airflow\n* MongoDB\n* Redis\n* PostgreSQL\n* … And basically every single open source tool under the sun\n\nIt also pre-installs a few things like nginx + certificate manager, telepresence for a quick VPN setup, and metric collection for better observability.\n\nRecently just added support for Gitlab (in addition to Github).\n\n[Deployment page](https://preview.redd.it/sengi49uxd8f1.png?width=1185&format=png&auto=webp&s=15229598b495e052bd23f68d225c387ad9f6e61c)\n\n[Metrics page](https://preview.redd.it/2onhklpvxd8f1.png?width=1234&format=png&auto=webp&s=577e618a5fa2d9130339fcf25c5b66a5e25b8a5e)\n\n[Third party add ons](https://preview.redd.it/dagn2o5yxd8f1.png?width=1234&format=png&auto=webp&s=2229669eb181bd1ebe99a1d76fc51690dcb22f5a)\n\n\n\nWould love feedback, roasts, suggestions!\n\n",
        "score": 8,
        "url": "https://www.reddit.com/r/webdev/comments/1lhcpz9/im_building_caninesh_an_open_source_free_heroku/",
        "num_comments": 3,
        "comments": [
            {
                "body": "It's hard to judge in its current state since a lot of stuff is missing from the documentation. Personally I find describing things as \"a Heroku Alternative\" a little confusing because I don't think Heroku is very popular anymore, and the whole buildpack concept seems kind of outdated now that container tooling is so common and easy.\n\n\nGenerally my impression is that Kubernetes is pretty complex to maintain and requires a lot of specialist knowledge, and it doesn't seem like this project can (or even tries to?) solve that, so it seems like something of a sharp-edged tool. I'm curious if you have any experience with Nomad and if you have thoughts on when it would make sense to choose that vs this.\n\n\nThe pricing calculator seems a little suspect to me since you aren't including any overhead (as far as I can tell?). A VPS with 4GB of RAM can't run a k8s cluster and still give all 4GB to an app, right? One notable omission from your comparison is something like Fargate, which is more expensive than a VPS but certainly cheaper than the Heroku numbers (and a lot easier for a small team to manage I would think).",
                "author": "electricity_is_life",
                "score": 3
            },
            {
                "body": "Thanks for the feedback! Yeah so in terms of a VPS with 4GB, I have measured it -- it takes about 150MB to run a K3s daemon. I think if it the node became much smaller (512MB or 256MB) then there would be quite a bit more memory pressure.\n\n  \nI only mention heroku because its basically the one that people seem to still remember fondly, but a lot of the work in Canine was inspired by Render.",
                "author": "czhu12",
                "score": 2
            },
            {
                "body": "Competes with Dokku then?",
                "author": "mattindustries",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1719784791.0,
        "title": "How is a project built in a professional setting",
        "author": "Zelda_06",
        "id": "1dscro3",
        "selftext": "I’m a second-year college student trying to understand how a simple project is efficiently built in a company setting. Let’s say a simple project with a team of 10 members.\n\nSome questions I have \n\n1. **Team Composition**: \n   - What types of developers and roles are necessary for this project?\n   - How many of each type (e.g., designers, frontend developers, backend developers) are recommended?\n\n2. **Project Workflow**:\n   - The approach of the project from start to finish?\n   - Should the team begin with the frontend after the design phase, or is there a better sequence to follow?\n   \n3. **Communication and Collaboration**:\n   - What are the best practices for communication and collaboration within the team?\n   - What tools and platforms are typically used for project management and version control?\n\n4. **Testing**:\n   - How is testing integrated into the workflow?\n   - What types of testing (unit, integration, end-to-end) should be prioritized and who is usually responsible for them?\n\n5. **Deployment and DevOps**:\n   - How are deployment and continuous integration/continuous deployment (CI/CD) handled?\n   - What are the best practices for setting up development and production environments?\n\n6. **Common Challenges and Solutions**:\n   - What are some common challenges teams face and how are they overcome?\n\nThanks! ",
        "score": 43,
        "url": "https://www.reddit.com/r/webdev/comments/1dscro3/how_is_a_project_built_in_a_professional_setting/",
        "num_comments": 33,
        "comments": [
            {
                "body": "I had to immediately google \"programming sucks still drinking\"\n\nIt's a little NSFW (not much) and it has a cynical view of the process BUT:\n\nhttps://www.stilldrinking.org/programming-sucks\n\nvery worth reading to understand how things really work.",
                "author": "andrewfromx",
                "score": 106
            },
            {
                "body": "You have 10 members (dev, designers) working on a MERN project, there is a good chance it is NOT a simple project.",
                "author": "Outrageous_Permit154",
                "score": 28
            },
            {
                "body": "> Let’s say a simple MERN project with a team of 10 members. \n\nI have to address a couple issues first. I'm not sure how, or why, MERN has taken over as the stack of choice for web dev courses, but my tinfoil hat tells me the organization behind MongoDB has a lot to do with it, and Node/Express were chosen to keep the scope of classes narrowed down to \"JavaScript\". The problem is, it doesn't reflect the real world.  \n\nI suppose it would be a little rhetorical to say Mongo doesn't exist in the professional world, because it does, but it's probably among the least common database choices out in the wild. The only people reaching for Mongo, it seems, are the ones who were trained on it, and don't have much experience in anything else. \n\nLarge corporations tend to lean on _every other kind of database_ for their solutions. The \"why\" is probably outside the scope of this comment, but it boils down to licensing, managed services and the fact that MongoDBs performance and support doesn't warrant the compromises you have to make.\n\nThe reason picking apart the stack for this question is because the scenario really doesn't exist. A project that requires 10 people isn't simple, and by extension your \"stack\" wouldn't be as simple as MERN. \n\nWith that, for everything else you're asking the right questions, but the answers vary wildly depending on the company. \n\n> Team Composition\n\nThis is usually for an engineering director to decide. It takes experience to understand how to match objectives with personnel. A director would decide \"who,\" not just in title, but in detail in regard to skill set, and the ability to hire the right people for those roles. \n\n> The approach of the project from start to finish? \n\nDepends heavily on the current state of the project (and the company). Is this a greenfield (new) project for a startup, or a brownfield (mature) project for a large tech company? In the former its not uncommon to spend a couple months in an exploration and planning phase before a single line of code is written. \n\nIn the latter, to simplify for the sake of a comment, a product manager will usually outline the high level requirements acquired from customer feedback, a business analyst will handle the translation of requirements into plan of action, an engineering manager will handle the nitty gritty of specific technical details and standards, and a project manager will handle the day-to-day operations of making sure the \"paperwork\" is kept in tact. \n\nOf course, again, this varies wildly by company and its resources. Many companies, especially smaller or less tech focused companies will often combine these roles and blur the lines between each role. \n\n> Communication and Collaboration: \n\nSlack or some variation. Project management software which is often Jira, but some competitors are making headway. And don't forget Zoom/Google Meet or some variation for \"face to face\".\n\n> Testing\n\nThis is a rabbit hole topic that even experienced, mature teams are constantly refining. In a very oversimplified nutshell, you have tests that run locally before pushing to PR (pull request), sometimes commit hooks are used to enforce this. More tests that are run on the PR itself before its allowed to be merged, then tests run again after the PR is merged before its deployed anywhere. \n\nGenerally, the engineers are responsible for automated testing. There is a lot of debate and varying philosophies when it comes to dedicated QA (Quality Assurance) people, ranging from \"it's the engineer's job and we don't have a QA team because the engineers need to test their fookin' code,\" to \"our QA team is as big as our engineering team because one time a mistake was pushed to production and now we need to constantly run 1,000 manual checks every time a new commit is made.\"\n\nIt's worth noting that, as much as you see the \"importance of unit/integration/e2e\" testing parroted in the industry, very few companies actually have a truly thorough and robust testing foundation. Most companies are focused on feature delivery, not testing, so when it comes time to cut corners to deliver on a timeline, the tests are the first thing to be cut; they're the least visible. \n\n> Deployment and DevOps.\n\nProbably even a bigger rabbit hole than testing. Again, for the sake of a reddit comment, it's largely broken down into two strategies: the more generic \"Branch Strategy,\" and \"Trunk Based Development\" \n\nBranch Strategy largely consists of long running branches: dev, stage and prod. About once a sprint (about two weeks), new features will be released by merging everything in dev into stage, then into prod, which gets checked at each stage and pushed to production if it passes QA.\n\nThis process is popualar because it can be implemented on any codebase and doesn't require any additional team discipline. But its not ideal. It creates \"merge hell\" scenarios.\n\nTrunk Based Development is constantly committing and pushing code to your main branch, or pulling code cosntantly from PRs. This is ideal because it avoid merge hell, along with an assortment of other issues, but requires ancillary support in the form diligent and robust automated testing and proper usage of feature flags. \n\nHowever, this is tougher to implement and generally requires strong leadership to implement properly. It's not a perfect system, no system is, and it's always tempting to resort back to Branch Strategy the first time a problem in produciton is experienced. \n\n> Common Challenges and Solutions\n\nThat's quite broad. If you had to narrow it down, the biggest challenges often fall under \"tech debt.\" All rojects inevitably acquire a \"known issues\" backlog that doesn't begin to capture the known problems \"under the hood.\" Unoptimized code, legacy experiments that were shut down and now only exist to confuse new comers to the code, and lack of documentation. \n\nIt's usually the result of the endless pursuit of new features, which must be completed before an arbitrary deadline centered around some kind of stakeholder event; which can be as mundane as \"quarterly goals.\"\n\nThe solution is usually to convince management that taking a break from feature sprints to address the issues would increase velocity, but its usually a tough sell. Companies that understand the importance of a well-oiled code base and workflow don't often have the need to present this kind of thing to management in the first place.",
                "author": "TheBigLewinski",
                "score": 23
            },
            {
                "body": "I regret that I have but 1 upvote to give for this link.",
                "author": "BehindTheMath",
                "score": 12
            },
            {
                "body": "I work in .NET, Angular, MSSQL but the stack doesn't really matter, however this is how it'd go for my company: \n\n1. Team composition will be 1 team lead, 1 product owner 1 dedicated QA and 5 full stack devs, we also have a dedicated UI person for the project, but to hit 10 people we would say 2 teams are working on this project. Both teams have other projects they're working on at the same time so while the lead + PO  + QAwould be working on every project, the fullstack devs may bounce in and out on a sprint to sprint basis.\n2. We use agile, and would have an epic fully refined, and the stories in order of priority + blocking\n   1. Each sprint we know how many story points we're allocating to this epic to hit our release date, so we'd grab that many story points out of the epic. The team lead will coordinate with the other team lead to make sure any dependencies from their epic will be handled to not block us and vice versa\n   2. The UI mocks are all completed by the UI team before refining is finished, however changes do happen all the time, and can happen even while the item is being worked on. Usually the dev will make some tweaks based on feedback or change some design decisions if something like a date picker component doesn't behave how the mock has it, and we missed that during refinement\n3. For communication + collaboration we are 100% remote so everything happens via Zoom, Slack, Jira and github\n4. We do code review, test, and product review, along with unit tests. Some products have integration testing, but not all. Testing has to be completed within the sprint\n5. We have Azure Pipelines setup so we get our release approved by the ELT and then we just have a single button deploy, however some other products require manual intervention. I think every dev environment is fully CI/CD though, it's just our industry we can't move fast and break things without getting fined :)\n6. No issues outside the ordinary, but some common ones we have:\n   1. System we're integrating with is missing a feature we need\n   2. security tools false positives being treated like actual vulnerabilities by bad management\n   3. I forgot the term for it, but it's when an executive decides they need to rubber stamp certain things to justify their job, we have a few on the ELT that do this",
                "author": "TheCountEdmond",
                "score": 10
            },
            {
                "body": "To put it bluntly: That's like asking why everyone doesn't navigate the high seas using only a sextant and the stars. Sure, it’s a romantic notion and undeniably effective in the right hands, but most people prefer GPS and autopilot to avoid shipwrecks and actually get where they're going without a maritime disaster.",
                "author": "notkasperrr",
                "score": 6
            },
            {
                "body": "Here's a video I watched a short while ago which touches on a bunch of these things:\n\n[https://www.youtube.com/watch?v=Dl-BdxNRUqs](https://www.youtube.com/watch?v=Dl-BdxNRUqs)",
                "author": "intheburrows",
                "score": 4
            },
            {
                "body": "now I've got \"c does everything\" in my head: https://youtu.be/IcO2qWARE_E",
                "author": "andrewfromx",
                "score": 3
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "Just chiming in to say that designers of any kind aren’t going to be typical for any small company or product (unless it’s part of a contracting agency/vendor that already has them on staff for projects).\n\nIn my experience (so take it with a grain of salt) is that designers are typically brought on once the initial product has already launched & the team is now in the “maintain & grow” phase.\n\nBig tech & Fortune 500s are an exception as they already have tons of resources. DevOps is another one. Depending on the company, this is probably going to be handled by one of the existing engineers & not a DevOps-focused role until much later.\n\nI’d love to know if others experience is similar.",
                "author": "nauhausco",
                "score": 2
            },
            {
                "body": "To be honest, it depends a lot on the company in question. Sometimes you'll see a couple of designers working alongside say, 10 developers, sometimes you'll see a bunch of management folks included there, like a project manager or team lead, and sometimes the devs also have to design the product too.\n\nBased on my personal experience, a 10 person team would usually have:\n\n* 1 or 2 designers\n* 1 or 2 QAs (in large companies)\n* 4-5 developers\n* 1 team lead\n\nAnd maybe a stakeholder said lead would report to.\n\nAs for the types of devs... it depends on the company and project. Sometimes everyone will be full stack and work on everything, sometimes you'll have frontend and backend devs working on different parts of the system, and sometimes one or the other gets outsourced to an agency or replaced by a third party system/product.\n\nProject workflow depends on how the company wants to manage things, ranging from the chaotic (no plan at all) to very traditional (waterfall setup where each stage goes in a strict order) to agile workflows based on sprints and tickets (more common nowadays).\n\nHonestly, project management is a whole field in of itself, and one which is often questionable in its implementation, so it's hard to go into much detail there.\n\nGit is used for version control in like 80% of projects now, likely more. Occasionally some more old fashioned ones will use Subversion or SourceSafe or Fossil or something else, but I've not seen that for years.\n\nProject management often involves something like Jira, and communication something like Slack or (unfortunately) Teams.\n\nHow testing is integrated depends on the way the project is managed. For agile workflows it's usually part of each ticket, where the dev implements automated tests first, goes through a PR process second, and (maybe) humans test it third. For old fashioned waterfall ones, you had a testing phase on its own.\n\nDeployment and DevOps are again, very company/team dependent. Some have a proper build process and pipeline, some just stick the finished product up via SSH or FTP. If the company's process is \"we work directly on PROD\", consider a new job.\n\nCommon challenges vary as much as the teams do. Sadly, a fairly common one (for less well managed companies) is \"the client/stakeholders have no idea what they want and keep changing their mind\".",
                "author": "cheat-master30",
                "score": 2
            },
            {
                "body": "I have this theory - people are chaos, the more people you invite into a system, the more chaos.\n\nThere is no avoiding some degree of chaos in code, unless you live in a programming team of one. No matter what you do, that perfectly abstracted function will become not-so-perfect as soon as requirements change and another dev needs to touch it, our opinions and reasoning about code differ person to person, we cannot all code perfectly the same (no matter how many linting standards you add, or coding protocols you document).\n\nHence, coding, like driving cars, will one day end - AI will do it for us, and we can give up on the management of \"trying to control the chaos of the people\" and all live in a lovely star trek-styled holiday future (or be snuffed out of existence at the hands of AI ha-ha).",
                "author": "No_Influence_4968",
                "score": 2
            },
            {
                "body": "Well as someone looking to begin coding, this is disappointing to read. I'd be exchanging the shit show of the current industry im in, for a shit show in another industry hahaha. At least I know the truth of it now 🤦‍♂️\n\nTo help me understand a little more, I've read that C does everything, so why not just stick to C? Because it's hard for programmers due to being low level? Reinventing the wheel? It's slow to produce the finished goods?",
                "author": "money-in-the-wind",
                "score": 2
            },
            {
                "body": "I just wanted to use the MERN project as an example project. To know how things work in a professional setting",
                "author": "Zelda_06",
                "score": 2
            },
            {
                "body": "yup. I love the expression \"politics is what happens when the number of people in a group is > 1\"",
                "author": "andrewfromx",
                "score": 2
            },
            {
                "body": "I had the same thought but I really, really, really despise that song and TMBG. So massively overrated. Okay, rant over. Thanks",
                "author": "Fabulous-Farmer7474",
                "score": 2
            },
            {
                "body": "I know how hard it is to find an opportunity now days. I wish you the best. And take your time digesting whay you learn! Good luck",
                "author": "Outrageous_Permit154",
                "score": 2
            },
            {
                "body": "Have you considered asking your lecturer for... you know... a lecture.",
                "author": "WookieConditioner",
                "score": 1
            },
            {
                "body": "Commenting so I can save this for later.",
                "author": "Dink-Floyd",
                "score": 1
            },
            {
                "body": "Thanks. This helped a lot",
                "author": "Zelda_06",
                "score": 1
            },
            {
                "body": "Right. Got it!",
                "author": "Zelda_06",
                "score": 1
            },
            {
                "body": "No. Didn’t think of that",
                "author": "Zelda_06",
                "score": 1
            },
            {
                "body": "Thanks for the insight. I always wondered how it things went on. How much load do junior devs carry on the job? If not much, what are some things they do?",
                "author": "Zelda_06",
                "score": 1
            },
            {
                "body": "replying so I can remember to follow up with u",
                "author": "andrewfromx",
                "score": 1
            },
            {
                "body": "I would suggest gaining some experience in actual professional settings. I’ve worked as a web developer, held positions at a few firms, and even occupied a senior role. However, I never had to focus extensively on task management or DevOps. The furthest I went was using GitHub Actions for error checking and deployment. It’s crucial to have excellent communication skills to collaborate effectively with various departments. If you’re asking these questions, you might not yet be at the level of a project manager, for whom these concerns are more relevant.",
                "author": "Outrageous_Permit154",
                "score": 1
            },
            {
                "body": "Typically, Junior Devs (if handled properly) identify technical issues behind many kinds of reported bugs and write a lot of the code in close collaboration with senior devs (in pair programming). Junior eevs can handle loads close to those of senior devs (maybe less as they need to learn, or more as they have less meetings) if they stick to the simpler tasks within whatever project.",
                "author": "Beep-Boop-Bloop",
                "score": 1
            },
            {
                "body": "Thanks for the advice. I’ve been seeking internship for the past few weeks. Sent a couple of emails to some firms and I’m yet to hear from them.",
                "author": "Zelda_06",
                "score": 1
            },
            {
                "body": "Mind if ask, how are they supposed to identify technical issues/handle fixing bugs in a large codebase if they're still \\*\\*learning\\*\\*",
                "author": "Zelda_06",
                "score": 1
            },
            {
                "body": "did you know there's a vowel in every word?",
                "author": "andrewfromx",
                "score": 1
            },
            {
                "body": "Users report the bugs, which can be based on issues anywhere in the code. They learn by exploring the code and seeing how it works (or doesn't) as they track down the causes of the bugs.",
                "author": "Beep-Boop-Bloop",
                "score": 1
            },
            {
                "body": "Thanks, and good luck to you too",
                "author": "Zelda_06",
                "score": 1
            },
            {
                "body": "That makes sense. There's numerous ways to achieve your goal in my current industry and tool selection to do the job involves a lot of user preference, for certain aspects, as long as the intended outcome meets certain requirements.\n\nI guess this is the same. Although it can be done using method A, method B or C might be more beneficial to get the job done more efficiently.\n\nSo if you had a solid grasp of the certain requirements that must be met, you could potentially use a number of tools (languages) to get the job done if you had free control?",
                "author": "money-in-the-wind",
                "score": 0
            },
            {
                "body": "Well thats a bizarre video but certainly seems to be weirdly relatable on face value haha",
                "author": "money-in-the-wind",
                "score": 0
            },
            {
                "body": "1. You typically have 1 Product Owner (PO), 1 Project Manager (PM, but often the same person as the PO), Backend devs (BEs), Front-end devs (FEs), QA testers (QA), Designers (Design), and Ops or Sales teams depending on whether the project is fir internal or external use. Depending on the project, you may need a DevOps to keep it from crashing your whole platform.\n\nThe numbers of each kind of dev depend on the extent of the BE and FE work. and the deadline. You will normally have 1 or 2 QA handling the project, and 1 or 2 (if it's really big) Design. Ops / Sales numbers depend on the extent of usage of the output, and maybe 1 DevOps / SysAdmin / Platform Ops.\n\n2. You start with PO gathering functional requirements from stakeholders. Then those get broken into tasks by the devs (or just a Tech Lead, maybe with a Staff Engineer for big ones). Once you have the business logic (BE), then you go to Design and finally FE. I worked at one place where they signed a contract for a specific FE. There was no way to get the resources CRUD complete and the company was tied to the contract. It was a nightmare, and I left after 2 days. Always start with BE.\n\n3. Communication and Collaboration are a BIG issue. I have a 10-part series on LinkedIn about it, five more articles planned, and then might really finish scratching the surface.\n\n4. Testing: You start with TDD or BDD development, building unit tests with the code. Then, deploy to a staging server where QA runs its functional end-to-end and UX tests. Then get approval from PO to ensure requirements were implemented correctly, maybe run load tests, and deploy to production.\n\nI can do the other 2 tomorrow",
                "author": "Beep-Boop-Bloop",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1645733974.0,
        "title": "A rant of a guy giving up on webdev and programming",
        "author": "FancyWarm_Leopard",
        "id": "t0kcwy",
        "selftext": "\nTL;DR junior dev had a vision of him jumping off a building to end it all because of stress from a relatively small project. Decided to give up on career instead.\n\n\nI gave up on programming after 1 year of getting a developer job. This is a long pure  rant, on how I gave up on myself after I had visions of me trying to self-harm for the first time in my life. \n\nI just freshly graduated in 2017. My final university project was a VR game made with unity. The project landed me a job at a company, and I was put to work on an unity app the company was contracted to do. This was a fringe project, nothing near their main projects, and most of it could be done in no more than 3-5 weeks but I spent 6 months on it because…well I had presented myself as a unity dev to my boss, and they had no other unity project, so I was just stuck there in limbo, maintaining and adding small features here and there for the client. Part of me was naive in waiting for one of my boss to come guide me, as I was still very new, but that part of me slowly understood. \n\nAfter 6 months, I felt extremely lost, lonely, deserted and felt like I have not learn anything coming to this company. My friend that had entered the company with me had moved on to another project. Before she moved on, she had done a back-office web for one of the company’s main project. Finally knowing that no senior is coming, I took the initiative to become the sole maintainer of this back-office after her to expand my skillsets and show that I am capable of learning and doing webdev. At this point, I have about 4 months of completely self taught frontend development from my previous internship in angularjs. I added features and maintained the back-office aimlessly for 2 months.\n\nAfter 2 months of maintaining the back office, I took the initiative again, and this time I was given an important job on the main project. At this point, I was super happy, the project however created so much stress for me that it would become my last. \n\nThe task was simple, there is already a main mobile app to this project, which is a chat-story / short story sharing platform. All of it is user generated content, and while the readers were having a great time reading it on their phone, the writers wanted a way to write their stories on their computers. So they tasked me with creating an text-editor on the web. All the apis were already all written, I just had to do the frontend, it sounded challenging but quite manageable.\n\nAt this point I had 4 months of front end experience + 2 months of nodejs / react from maintaining the back-office. The website was already up and running using .net core, with all the api already written, and some webpages using HTML engine. I figured the best thing to do is just  learn a bit of .net core, HTML rendering engine and get working on the frontend. \n\nI had initially projected to complete the project in 5-6 weeks, but I was deep 12 weeks into it and I was only 70-80% done. I don’t remember the details but I had spent a huge amount of time doing json parsing and trying to match the editor output from the web with the phone. I was completely stressed out, and remembered that one time the CTO came to me asking for my progress to speed things up and we had a small argument as I told him I couldn’t figure out one particular issue I was facing. He was basically asking why are you taking so long with this project. \n\nThe pressure keeps piling up as I am super late based on my earlier estimate. Then one day, 12 weeks after I have started, the company brought in 4 web developers and I knew right away one of their first job is to finish this web editor. \n\nI was stressed, writing about this is giving me migraine, and I had reached a breaking point. It was the first time I experienced migraines while programming / staring at the screen as I was trying so hard to get things done and learn the project. I was under high stress for more than 10 weeks without realizing, and I didn’t know I was pushing my limit. One day, I wanted to finish the project so bad I pushed myself to think of what is left and try to plan it out before I go to sleep. That night, the feeling of being a failure, the stress and migraine all came crashing and I had a dream of trying to jump of a building so that it would all go away. \n\nI knew at that moment that was the end of this journey for me. The next morning, I gave my boss a 2 weeks notice, not having a job lined up, and not telling anyone except my girlfriend.\n\n I picked up coding again 1 month after that, writing a website with contentful and gatsby but I couldn’t finish. \n\nThen again trying to do react native app… about 1 month after that but not finished. \n\nAll in all I have about 4 months a angular, 2 months of node/react, 3 months of vanilla js, 1 months of gatsby, and 2 weeks of react native.\n\nTo a total of almost 1 year of frontend development. And I barely remember any of it… and I have absolutely almost zero knowledge of any other stuff about webdev. Looking back, I never got project from start to finish and this is one of the worst things to repeat.\n\nAlways finish what you started, but also take care of your stress. Work is not stress. Work can be fun, exciting and full of meaning. Learning is also important. Fundamentals is also very important. A Very expensive lesson.",
        "score": 202,
        "url": "https://www.reddit.com/r/webdev/comments/t0kcwy/a_rant_of_a_guy_giving_up_on_webdev_and/",
        "num_comments": 61,
        "comments": [
            {
                "body": "\\> Fundamentals is also very important   \n\n\nLook, it sounds like you've been dealt a rather crappy hand here.   \n\n\nYou've not learned anything because you've not been nurtured in a professional way - it's no good being told to jump on a web project with no mentorship. Then being heckled about deadlines when trying to understand concepts such as parsing etc.  \n\n\nYou've been hopping around frameworks, probably with eyes glued to stack overflow - that doesn't teach someone how to program, only how to copy and paste.   \n\n\nMy honest advice here is to do a hard reset. Find a boring job with enough money to support yourself - and find your passion again. Start from the ground up by completing guided courses and complete some projects. Your experience in the industry is common, but not at all standard.   \n\n\nLook for junior roles when the time is right, find one with a solid support structure in. You've not done anything wrong here - you've just been pushed off a cliff without knowing how to fly. Don't be so harsh on yourself.  \n\n\nDon't let your bad run ruin what many of us find to be an amazing career. I've worked for jobs that made me cry I was so stressed - but you pick yourself up, move on, and code some kick ass stuff.",
                "author": null,
                "score": 310
            },
            {
                "body": "It has been almost 4 years since I quit. Back then it really did feel like being push off a cliff. I would have honestly stuck with dev if it wasn’t for that vision. \n\nLooking back at it now, I definitely think about what could have been. The reason why I wrote the rant is because I sometimes reminisce about being a dev, and sometimes I wondered if it was hard for others as well. I wonder if my experience was normal, and if anybody could relate to me. \n\nI have picked up a new career, now I work closely with a CEO of a small business as management, and on the side I work on selling my own furniture.\n\nYou have no idea how much this comment means to me, and while I love my new job because of the free time it provides, I do miss programming.\n\n I am very unlikely to get back into programming career but the thought of programming for myself sounds like a lot of fun.",
                "author": "FancyWarm_Leopard",
                "score": 73
            },
            {
                "body": "Hello, i can tell from your story that you have had a fairly typical first yr as a dev with one caveat. You should have had a senior engineer as a buffer and guiding you to failure. Yes i say failure because your first year is usually going to be met with 99% failure. Its okay, it happens because of the exact problems you described which are underestimating and over reaching. It is a skill that takes time as a developer to hone. Even after you become good as time estimation and balancing work you will still miss deadlines every now and then. \n\nYou will learn manay languages, frameworks, paradigms and designs throughout your career. They amount to basically norhing bc you will not retain them all. There is a usual 15-30% time estimation added when taking on a new project written in a different language or hardware for re-learning.\n\nWhat you are suppose to actual learn as a jr. Dev is stress/time management, time estimation, and foundational habits like commenting and documenting. \n\nThe company could have been a bad fit but learning your boundaries and capabilities are what you need to focus on. This is all takes time and is the point of having a sr. Dev to act as a buffer. A sr. Dev knows how to keep tasks on track and how to not get stressed in front of management or team members. \n\nYou are going to fail all the time as a developer. What makes a good developer is someone who wont get bothered by failure and sees it as a learning experience.\n\nBest marvel line ever was to loki in infinity war after being told he failed at capturing earth \n\n\"I call experience experience\"\n\nFailure is better experience than success.\n\nIf you like development dont be discouraged, try to take a breath and realize that you are still learning.",
                "author": "AngryRobot42",
                "score": 53
            },
            {
                "body": "It sounds like you were tasked with building a Rich Text Editor (RTE) no?\n\nDude, that is possibly one of the hardest things to build. I have over 7+ YOE and I would not take on an RTE, just too many edge cases.\n\nGood luck OP.",
                "author": "gimmeslack12",
                "score": 44
            },
            {
                "body": "> the thought of programming for myself sounds like a lot of fun\n\nThat may be the path back into it.\n\nIf you do get back into it, interview the companies as hard as they interview you.  As about *training and mentorship*.  You should receive both.  If they don't have a solid onboarding and training program, don't work there.",
                "author": "jseego",
                "score": 35
            },
            {
                "body": "No, “insanely stressed” is **not “perfectly normal”.** There is a reason why doctors recommend avoiding unnecessary stress as much as one reasonably can – stress is terrible for your mental and physical health, as you probably well know. I think it might be important not to normalize such a thing.\n\nThe good news is stress comes down to mind over matter – if you don't mind, it doesn't matter and you won't stress out. However, everyone has limits, and if it's too difficult to avoid stress or just not reasonably possible, remove yourself from the source of stress when/if possible. Healthy future you will appreciate this.",
                "author": "disule",
                "score": 23
            },
            {
                "body": ">He was basically asking why are you taking so long with this project.\n\nThat's messed up because I think this about myself and worry others do as well but never got into an argument over something like that, the way this guy handled that was unprofessional\n\nWhat did you switch to from web dev, back to game dev or something else?",
                "author": null,
                "score": 20
            },
            {
                "body": "i have a somewhat similar story to yours, though not 100%. its a long story but to summarize: i've been working as a junior dev for a year. worked for four companies so far. in two, i had similar experiences to yours: no one to guide me, having to learn it all on my own, etc. to make matters worse, both companies went weeks and weeks without telling me what to do, which made my anxiety skyrocket. i was terrified of being fired for not working when they were the ones not giving me work. one of them also used a tech stack i had never used in my life and after a token \"here's how you do a crud app\" in the beginning, they let go completely of me and left me to fend for myself. it was horrible, but it was what made me realize a few things: \n\n1. the interviews are also for you to ask questions. this is obvious but not something i did until after these two bad experiences. i was, again, desperate for a job, but after all this time wasted in these two companies i know that not every job is worth it. and communication became something i'm *very* interested in when interviewing. how is the day to day life in the company? how often do we communicate (i've always worked remote)? who will i report to? can i bother them at any time? etc etc etc. if the company seems like it doesn't have a good schedule/structure for its devs, i'm out. i'm not going through this hellish limbo again. it all could have been avoided if i had been more assertive in their interviews and/or if i knew what to ask. the good news is that now i know! and i'm hopefully never letting myself make these mistakes again. \n2. learning and using something you enjoy is key. working with new-to-me tech stack made my days miserable, mostly because i hated it. that doesn't mean i'm not open to learning a company's tech stack, but i have my preferences and my limits. i'm a react/node developer, but if the company needs me to learn python, ruby or php i'm down. but if its c# or java? nah. i'm not investing my time on stuff i'd hate to work with on a daly basis. and since i'm so new (and had so much of time wasted in my first year as a dev) i don't think its a good idea to jump from language to language, from framework to framework. i'm focusing on react now. maybe in the future i'll try something else.\n\nif you are done with programming, that's fine. mental health is more important than any career. but if you still want to give it a try, i think it's a good idea to pick something you like and practice it on the side as a hobby, without this pressure to make it work or even to finish it, at least in the beginning. the other two experiences i had helped me realize this is a career that can be extremely fun and rewarding. you just have to find the right place which, of course, is easier said than done. but bad working environments exist everywhere, not just in programming.",
                "author": "nyphren",
                "score": 15
            },
            {
                "body": "I can't believe anyone let you estimate 5-6 weeks for an entire web editor frontend.",
                "author": "SwiftSpear",
                "score": 15
            },
            {
                "body": "After I quit, I had a bit saved up and my brother allowed me to stay in his old condo. I took up translation gigs through a fiverr kind of site in my country and translated/write for a bunch of companies. Then one of my clients, who is an owner of a small business, asked me to come help him because I guess he liked my writing? \n\nThen after that I just work closely with him, the pay is ok, and I have the free time to start selling furniture. \n\nI don’t do dev anymore but I might pick it up for some personal project because I do sort of miss it.",
                "author": "FancyWarm_Leopard",
                "score": 12
            },
            {
                "body": "the problem isn't you.  \nit's them, the company you were working for",
                "author": "sharkbot777",
                "score": 10
            },
            {
                "body": "Feel better. It’s perfectly normal to get insanely stressed over projects, dev walls, and deadlines. You’ll be ok.",
                "author": "dneboi",
                "score": 10
            },
            {
                "body": "Anyone get out to a different industry? I’ve been doing web dev since I was 15 and I think of self harm a lot because I feel so stuck in a career I guess I hate. I’m 33 now and my wife wants a house and a kid and I don’t know how I can do anything else but I’m sitting here in a bathroom floor at 2am because I couldn’t finish a project before our demo tomorrow and I’d rather just walk into a hole.",
                "author": null,
                "score": 9
            },
            {
                "body": "> while I love my new job because of the free time it provides, I do miss programming.\n\nUse that free time to make a project for yourself.  No deadlines, no requirements, just have fun with it.  No need to make a career out of it, think of it more as an artistic hobby like playing drawing or painting-- something to do in your free time. If you feel like taking a break, do it, it's not like you have a boss breathing down your neck this time.  It could reignite something, or not, but at least you'll have your answer!",
                "author": "Emfx",
                "score": 9
            },
            {
                "body": "100% this. From the sounds of it OP was a junior working alone on stuff with no mentoring whatsoever. This is not how things are supposed to be.\n\nThe fault of all this falls squarely on the shoulders of OPs stingy bosses who wanted to be so smart by trying to get senior level work and pay peanuts for it by hiring someone straight out of college.\n\nSeriously, fuck this.\n\nThey literally managed to destroy someone's passion with their stinginess.",
                "author": "BowlingSashimi",
                "score": 7
            },
            {
                "body": "Right? Even the popular ones that get deployed in production are full of bugs.",
                "author": "n1c0_ds",
                "score": 7
            },
            {
                "body": "> the thought of programming for myself sounds like a lot of fun.\n\nTry to see if you can perhaps create custom tooling to support you in your current job. You'll have fun creating the thing. And it will improve your current job. Maybe it makes it easier, more manageable, removes some current (minor) frustrations, maybe even automates parts. And maaaaybe, it will grow and end up being usefull for other silimar companies and you can license it to them one day. \n\nThat's where I started 10 years ago and how I've grown into development. Whatever the outcome, it's a lot of fun to create tools that you use yourself.",
                "author": "smeijer87",
                "score": 7
            },
            {
                "body": "\"All in all I have about 4 months a angular, 2 months of node/react, 3 months of vanilla js, 1 months of gatsby, and 2 weeks of react native.\" This is the cause of most problems I see with many juniors. It should read, - I have 6 to 8+ months with JavaScrits. For future webdev hopefuls, don't even look at Angular, React or Vue until you have a full understanding of JavaScript and HTML5.",
                "author": null,
                "score": 6
            },
            {
                "body": "Once I have gotten the time to reflect back, this is 100% one of my first thought. One of the best developers friends I had told me “Work with vanilla JS until you see a reoccurring problem in using it. Only then you will understand why frameworks are created.” \n\nThere were many advices I have received over the years, but this one now rings louder than any of the others. I was definitely using tech based on what was popular in my environment and didn’t understand the fundamentals.",
                "author": "FancyWarm_Leopard",
                "score": 6
            },
            {
                "body": ">Looking back, I never got project from start to finish and this is one of the worst things to repeat.\n\n>Always finish what you started\n\n\nThis is the wrong outlook, realistically when you work for companies you very rarely ever finish a project. You may finish a part of the project or even be the person to design a particular project but its never really \"complete\". People always want new features, optimizations, integrations, etc \n\nI think its important to realize that, rather than have an outlook of \"oh I never finished a project to completion\". Your experience is the journey along the way, and although it sounds like you had a pretty rough junior dev experience,  you can still tap into those skills and utilize that experience while you were working on the project even if you didn't finish it.\n\n\nI hope you get back out there and give development another chance. Breakdown the tasks and technologies you worked with and are confident about on your resume. Don't put anything you don't feel you barely know (this can be a common mistake people do on their resumes sometimes) and you should find another company that is a better fit for you. Just because your first job was bad doesn't mean the next one will be, but you won't know if you don't apply yourself",
                "author": "FVCEGANG",
                "score": 5
            },
            {
                "body": "You can't always do things for other people. It is very very important to think about yourself, what you want, what you need. That's not egoistic that's self care.\n\nReally try to think about it: Will that job make you happy, will a different job in the field might be better (part time, lower paid, lower stress).\n\nWhat else do you want to do if you had time? I enjoyed doing things that I always thought are just not me. Like a yoga course.\n\nAnd lastly try to figure out why your wife can decide that she wants a house and a kid and you have to earn the money for that. Talk to her about your feelings and see how she reacts? Surely she will understand you and show compassion. \n\nYou don't have to always stick to what society (house, children) and other people say is a correct life. I dropped out of it because I couldn't bare it all anymore.",
                "author": null,
                "score": 5
            },
            {
                "body": "Is there any reason you didn't use a polished pre-built open source web based text editor like summernote instead of rolling your own?   That could produce output to send to the APIs and you're done in an afternoon.  \n\n25+ year senior dev here... I had to build my own text editors in the IE days, so I know the struggle.   Even Microsoft Word can't get it right... try embedding an image next to a bulleted list and move the image around.   WYSIWYG editors are hard, but getting properly formatted HTML+CSS to render the same on multiple devices is fairly easy.",
                "author": "hashtagframework",
                "score": 4
            },
            {
                "body": "I think the problem is that you worked for some kind of contracting agency. To survive in this kind of organization you need to be a skilled and flexible programmer and have a good grasp on the softer side of engineering. Things like gathering requirements, managing commitments and compromising quality. It's not unusual for these organizations to assign one person to something a commercial software organization would use a whole team of people for.\n\nDevelopers who thrive in this type of work have years or even decades of commercial staff engineer experience and kinda see themselves as a gun for hire to the highest bidder. It's a skillset and also a mindset. They know they are going to be dealing with outsourced projects no one else wanted to do and ruthless expectations to hit difficult timelines and budgetary requirements. They also have the experience to push back effectively and manage the situation and the customer to some reasonable outcome. It's not where you want to be as a fresh junior dev and frankly you were setup to fail by whoever hired you.\n\nTry getting a job at a company that makes a commercial software product. Something they put their own brand name on and support. Ideally a company that's been around the block a bit. Avoid \"startups\" - they might make sense later, but right now you want to join a proven team. These companies have real incentives to hire qualified engineers and grow people into better devs and eventually managers if that is what they want. You will find the culture a lot better. You may also find the hiring standard a little higher.",
                "author": "Lendari",
                "score": 4
            },
            {
                "body": "Did you even ask for help?",
                "author": "Snubl",
                "score": 4
            },
            {
                "body": "Man, same here. I've been in this company for six months and I feel super depressed. I've worked my way through university, doing all kinds of shit jobs, so I've learned to not give a crap about things being perfect and handle the stress of that. It's a skill I developed over time, not something I was born with. But feeling like I have no sense of direction, no mentorship is kind of taking a toll on me. I'm very close to getting my degree, so I accepted the low pay check because I wanted to learn and have something on my resume that matters. The whole thing is depressing though because I'm literally broke as hell, trying to manage school load as well as a 9-5. And I'm not even learning anything from these people and my boss doesn't even give me work. I honestly feel like I'm gonna get fired any time now but no one seems upset with me just sitting around doing nothing to the point where it's driving me nuts because I can't wrap my head around it. Who pays someone for weeks to literally work 8 hours weekly? I can feel my brain cells dying with the pass of time",
                "author": "insane-greek-grl",
                "score": 4
            },
            {
                "body": ">the interviews are also for you to ask questions  \n>  \n>if the company seems like it doesn't have a good schedule/structure for its devs, i'm out\n\nThis is crucial because NOT every company has a clear structure of commands, professional attitude, be efficient at management...etc. And I speak from my own experience.\n\nIf they can't answer such questions, then the real working environment would be 10x times nightmarish.",
                "author": "sadsackle",
                "score": 4
            },
            {
                "body": "that is not how a fresh junior developer should be treated according to what you described.\n\nyou definitely have to communicate your skillset transparent, it helps the hiring company to set proper expectations. \n\nit takes a lot of time to master a skillset, you had to jump frome one stack to an other, that IMO hinders mastering one. \n\nif you have the desire for it, do some structured courses, side projects that you have desire for, and if you ever decide to go back to web dev, do it only if you get a mentor, and the proper expextations. \n\nweb dev can be a lot of fun, and rewarding if you ease into it the proper way.\n\nthe end of the day, do what makes you happy.",
                "author": "peterkollerlv",
                "score": 3
            },
            {
                "body": "I'm glad you listened to what your brain was telling you. Hope you found peace.",
                "author": null,
                "score": 3
            },
            {
                "body": "Nah, fuck that. You've got drive, initiative, a desire to learn. You did everything you could.\n\nThe real problem is:\n\n>no senior is coming\n\nThis is entirely on the company, you should have had a more-senior dev helping you out, someone to bounce ideas off of, and someone to give you a direction and help with managing your time.\n\nI'm the senior in my office and half my job these days is spent keeping my juniors focused. Web projects are massively complex and while you can probably code well enough, it takes *years* for you to learn to handle time management, scope creep, planning.\n\nHalf your stress probably comes from not knowing which direction to go and worrying about wasting a bunch of time going down a route that could fail. A good senior would be able to tell you a direction; a really good senior would work with you to help you discover which direction is best.",
                "author": "Mike312",
                "score": 3
            },
            {
                "body": "Seems to me like you just had a bad experience not that you wouldn't be able to become a decent developer if you do it the right way. Also, the managers in the company you worked in are either incompetent or just plain assholes who wanted to exploit you. Junior devs are never given complex tasks from the get go let alone give them ownership of an entire project. Usually, as junior Dec you start with simple tasks for which you receive feedback from senior devs, and as you learn from that feedback and your skills start to improve you start getting more complex tasks. It seems to me like your company needed a senior devs but hired you instead because it was much cheaper for them",
                "author": "c0d3junky",
                "score": 3
            },
            {
                "body": "I notice this common thread around this is fancy JS framework frontends. Meanwhile i'm over here in good old fashioned server rendered HTML land living my best life.",
                "author": null,
                "score": 3
            },
            {
                "body": "same here,\nI just re-use some commin components on React MUI ( material UI) for many years.",
                "author": "Creepy_Cell8141",
                "score": 3
            },
            {
                "body": "I don’t remember the details of why I was stuck for so long but I did use an open source editor. I think it was quilljs. But because it was a chat-story, I was creating a lot of custom modules. I remember one of the wackier module to be adding a chat bubble that mimics a Facebook and Instagram post. \n\nAnd the short story is another separate quilljs editor with its own modules as well. \n\nBtw I also thought I was going to finish much faster than 1 month even with a bunch of custom modules. Somewhere in there I got stuck on something, and honestly I don’t remember the detail anymore.",
                "author": "FancyWarm_Leopard",
                "score": 3
            },
            {
                "body": "Not everything has to be a career. If you're still interested in it, you should try coding for yourself and just keep it as a hobby! Personally I've never enjoyed any type of coding as much as when I was building my own projects.",
                "author": "Bash4195",
                "score": 3
            },
            {
                "body": "That's not what he said at all though. It's a scientific fact that stress over a longer time is really bad for you. And OP even wrote about bad mental health problems. That should not be a normal working environment. Times change, people have other lives and other stressors.\n\nOPs story didn't seem normal to me.",
                "author": null,
                "score": 3
            },
            {
                "body": "I think you have shown incredible skills.  Having a senior developer would have been great, but it sounds like you needed more help in general whether senior or junior or whatever else.  Coding fatigue can happen, and it is devastating.  That is why I stress a great work and life balance.  I'm just coming out of my own coding fatigue 10 years later.",
                "author": "Escape8296",
                "score": 2
            },
            {
                "body": "Eh.. this is across multiple different frameworks. So I wouldn't be too hard on yourself.",
                "author": "Mundosaysyourfired",
                "score": 2
            },
            {
                "body": "I hope you find what you really enjoy doing eventually. Perhaps web dev wasn't a right fit for you but games programming might be right up your alley (you did well working on Unity-based project right?). In any case, all the best to you!",
                "author": "ravelysid",
                "score": 2
            },
            {
                "body": "My studies feel exactly like this since when corona started.",
                "author": null,
                "score": 2
            },
            {
                "body": "I wouldn't give up on the profession I would give up on the client.",
                "author": null,
                "score": 2
            },
            {
                "body": "Ggs",
                "author": "bloodarator",
                "score": 2
            },
            {
                "body": "From what I've read it seems like you don't like programming at all. This just feels like one of those cases where people waste their time taking programming degrees just to get eaten alive on their first job because they actually don't have the expertise required to do it because they didn't actually spend enough time programming for themselves to see if they actually like it first.\n\nSo yes I'd say if you don't enjoy it in whatever circumstance it is then it's just not for you.",
                "author": "viruxe",
                "score": 2
            },
            {
                "body": "What I mean by “finish what you started,” I was talking about personal projects outside of work, in this case I was directing it at my trial projects with Gastby and React Native that I didn’t see through. I was basically telling myself I should see these projects through.\n\nBtw even if I only had 1 year of experience, how is “fundamental is important, learning is important, work doesn’t have to be stressful” bad advice? \n\nThese advice all came after I reflected a lot on how I failed, because I jumped around frameworks a lot based on my job. What I should have done better was learn the fundamental of js instead of becoming a stackoverflow heavy user. \n\nI didn’t pull these advices out of my ass, and it wasn’t an advice for your career. It was a direct advice I had for myself regarding my last project that had me mentally spiraled out of control. \n\nI don’t mind giving me second opinion, don’t even have to agree with me but why are you so petty when I am trying to genuinely leave a positive note based on my own reflection of what I should and could have done better?",
                "author": "FancyWarm_Leopard",
                "score": 2
            },
            {
                "body": "I mean, we have everyone do estimates for practice, but if someone's estimate makes no sense we don't just giggle and let them try to work themselves to death to get it done.",
                "author": "SwiftSpear",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "Great advice, definitely saving this!",
                "author": null,
                "score": 2
            },
            {
                "body": "I agree to a certain degree. Sometimes managers see something and think well he/she can just get started now when in fact the dev wants to better digest something. Sometimes the manager has an idealized view of how coding works. Maybe it's not the case with you.",
                "author": "dphizler",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Hi dont give up.\n\nI spent my first year as a dev with a startup.. That went under.\n\nThe second year i spent with a company whefe the boss was a psycho.. Extremely short tempered ass and the code base was legacy so you cant even Google anything.. I felt like you did ending felt useless etc. But i started applying for jobs elsewhere.\n\nI landed another job where I had a good manager and it worked out i got a lot more confident and did a great job.\n\nI got offered another gig been doing great over here as well..\n\nThere are lots of toxic work places if you feel like your abandoned and no one can help you when your stuck.. Specially when your starting out you need a mentor who can guide you.. Find another gig fast..",
                "author": "porcupine_in_tree",
                "score": 1
            },
            {
                "body": "After another shitty day at work I have only one thing in my mind - to quit. \n\nI'm a dev now for a year and I cant do it anymore. Every day is a struggle with project logic, with so many informations, with my memory. I also have a feeling I didnt learned anything in this time...Dont know. \n\nI dont want to throw away my dev career so easily but on the other hand my health an inner peace should have priority.",
                "author": null,
                "score": 1
            },
            {
                "body": "I hear OP's story regularly from junior devs, and honestly, I could not hack starting out now. I have noticed a different attitude in the front-end space, I can't put my finger on it but it's somehow... I dunno... nastier. Maybe look at picking up some back-end work ( learn .Net core or PHP / Laravel ) or switch into app dev ( learn Swift or Objective C ), if you're keen to stay in the game.",
                "author": "dug99",
                "score": 1
            },
            {
                "body": "I’m sorry this happened to you as well. At that time I was honestly just happy to land a job as my experience has been in mostly Unity. Looking back now, I guess I was believing that by just getting into a company, it will naturally propel development.",
                "author": "FancyWarm_Leopard",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Sorry to hear that my dude. I don't know what your exact life situation is, but mine has been pretty fucked since...2018, so I feel ya. I was getting ready to walk out of my job not even a month ago until I found out we landed a contact on my pet project that I do actually give a fuck about. If you wanna commiserate, hit me up.\n\nThat being said, I know for a fact if I decided Monday morning to pack it in and change careers, I'd either go for teaching or auto detailing.\n\nI currently teach 2 nights/week and it's a great stress reliever and a nice little side income to boot. I get to go be the most-definitely-smartest person in the room for a couple hours a week and I've got a good rapport with my students. It's probably what has kept me sane over the last couple years. If you can communicate complex ideas to absolute beginners on a topic, you'll do fine. If you can make it fun and interesting, you'll do amazing.\n\nWhile I was in college myself, I detailed cars. I like to think it's the exact opposite of web development. It's entirely physical, you see results immediately, the longest a 'project' could conceivably take is 6 hours, at the end of the day you're done and you'll never see that car again (or, maybe not for 6 months), and you'll never receive a call at 3am that a clients detail is down.\n\nYou won't get rich off either, but if you've got some money set aside you could take a year off from development and use it to supplement your savings and take some time to figure things out.",
                "author": "Mike312",
                "score": 1
            },
            {
                "body": "I did ask for permission. I needed permission to access all projects except the first one from my boss otherwise I cannot get it from version control. \n\nI understand tough love but your assumption is  just plain cynical.",
                "author": "FancyWarm_Leopard",
                "score": 1
            },
            {
                "body": "If you never coded in your life, I can see why you say what you say about devs. Sometimes things aren't that simple. Planning everything beforehand sometimes is impossible and you need to change the plan slightly.",
                "author": "dphizler",
                "score": 1
            },
            {
                "body": "I was specifically talking about “finish what you started”\n\n“fundamental is important, learning is important, work doesn’t have to be stressful”\nIf work isn't stressful sometimes, you are probably not challenging yourself. Work can be fun sometimes, it can be stressful other times. The problem is that if work is only stressful, then it can be a problem.\n\nI really wish you would also focus on my actual advice:\n\"Some companies aren't a fit, I don't think you should just quit, just find another job.\"\n\nYou can find another company that better fits you.",
                "author": "dphizler",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "This is what I'm currently trying to do.\n\nI manage a website for a not for profit music festival, and it's currently Wordpress with some plugins and themes. It's good enough for what we need, but creating a better, all singing all dancing site sounds like a fun challenge, especially if I can make it a web app too.\n\nI have no idea what I'm doing half the time, but there's no pressure at all, and those moments when something clicks and I get it are great :)",
                "author": "Thetippon",
                "score": 1
            },
            {
                "body": "Even though I love what I do now, and I get to experience much more outside of developing, I wish I came out of the field having 1-2 good working experiences under my belt.\n\nI wish to follow that advice but it’s highly unlikely now I will go back, maybe personal programming projects here and there for my life, but thanks for the advice.",
                "author": "FancyWarm_Leopard",
                "score": 1
            },
            {
                "body": "You need to calm down, it’s just a comment.",
                "author": "FancyWarm_Leopard",
                "score": 1
            },
            {
                "body": "Could always get a job somewhere like intel where you have the option for tuition reimbursement, and other perks, while you find your passion.",
                "author": "zeimusCS",
                "score": 0
            },
            {
                "body": "I don't have to read all of your rant\n\nSome companies aren't a fit, I don't think you should just quit, just find another job.\n\nEdit:\nAt the end of your post, you are giving advice...\n\nDon't give advice about how to have a career as a developer when you only have 1 year of professional experince (a bad one). I have 15 years of professional experience. Some of my jobs started off great and then slowly degenerated, others were awesome from start to finish. Some are a rollercoaster, good/bad/good/bad. You need to find the right company. \n\nAlso, practice! Why not take the free time you have now to learn, there are tools available to learn.\n\nEdit 2: What rubbed me the wrong way is that you said \"Always finish what you started\". Yeah, when you get a task, do it and hopefully you can finish it. But oftentimes your manager will reassign you because there is other shit to do.",
                "author": "dphizler",
                "score": -2
            },
            {
                "body": "I was just offering OP a little assurance so they can calm down, and accomplish what they need to accomplish. And candidly I am really, really tired of what I would call “mental health crusaders” who swoop in anytime someone offers old school advice… ie that *feeling stressed is normal, but you are stronger than you think, so you’ll be ok with a bit of guts and determination*. I def would not expect you to see it that way, I take you for a Simone Biles rather than a Kerri Strug after that rant and that’s fine if that’s your thing. Just realize not everyone is as narcissistic as that, and most people are perfectly fine with putting their bullshit aside a few hours, so they can go to work and help society run. Obviously if your health is deteriorating take care of yourself. But god damnit you have to get in the friggin game at one point! Everyone feels stressed it just depends on what you do with it.",
                "author": "dneboi",
                "score": -3
            },
            {
                "body": "Lolz wait till you give a place a decade and they shit can 180 of your coworkers and you get to clean up the mess. Between two corporate bankruptcies. Bang your gf and get out there and kick some ass.  You haven't even been alive as long as some of the code that is in production.",
                "author": null,
                "score": -8
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1749987026.0,
        "title": "I was applying for internships heavily, and not getting any responses, need feedback on my resume",
        "author": "vishwas_babar",
        "id": "1lby5sx",
        "selftext": "https://preview.redd.it/9oz61jrst27f1.png?width=1275&format=png&auto=webp&s=527897e2b6f20112692c9f9b91d6ee90fbf69bfa\n\nhere's my resume  \n",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1lby5sx/i_was_applying_for_internships_heavily_and_not/",
        "num_comments": 4,
        "comments": [
            {
                "body": "My first impression:\n\n1. No one cares about lines of code. E. G. You could have two programmers who build the same feature. One uses 100loc and one 50. Which is better?\n2. Maybe you could describe what your projects do? I only read the same technologies over and over without context\n3. Maybe you Could highlight your impact more. E. G. In my internship I did this and achieved this outcome....",
                "author": "Remarkable-Pea-4922",
                "score": 2
            },
            {
                "body": "You started in march and are already looking for something else? That screams you are getting fired. Also in three months you did all that?",
                "author": "sfc1971",
                "score": 1
            },
            {
                "body": "thanks for the feedback",
                "author": "vishwas_babar",
                "score": 1
            },
            {
                "body": "In last 3 month I did more than that, in this startup I was building their mvp from scratch, the pay was also to low, for last 3 months It was ₹2.5k, now they increased it to 4.5k. The whole product is relying on two tech interns.\n\nThey are making platform like linkedin, but I don't think their idea will work and even get the funding with core team of two interns.",
                "author": "vishwas_babar",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1749877473.0,
        "title": "Agencies managing WordPress + Shopify + Other sites: Security Monitoring?",
        "author": "Agile_Paramedic233",
        "id": "1lb0msi",
        "selftext": "Quick question for agency folks managing mixed client portfolios\n\nSo I've been talking to some agencies lately and noticed a lot of you are juggling WordPress sites, Shopify stores, maybe some Webflow builds, custom apps, etc.\n\nHow the hell do you keep track of security across all these different platforms?\n\nLike, are you using ManageWP for WordPress, then just... crossing your fingers on the Shopify stuff? Or do you have some magic solution that actually covers everything?\n\nI'm genuinely curious because it seems like most security tools are super WordPress-focused, but plenty of agencies work across platforms. Is this actually a pain point or do most of you just stick to one platform anyway?\n\nWould love to hear how you're handling this (or if you're just winging it like the rest of us).",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1lb0msi/agencies_managing_wordpress_shopify_other_sites/",
        "num_comments": 3,
        "comments": [
            {
                "body": "Seriously, most don't and it is appalling actually.\n\nAsk them this... \"How do you store your mysql/maria.db credentials and password  for your Wordpress site?\"\n\n99.99% will say they put it in wp-config.php  \n  \nThat tells me everything I need to know. Modern best practice is to use secret injection with something like  a FIPS-140-2 vault or key server.",
                "author": "originalchronoguy",
                "score": 1
            },
            {
                "body": "I've been asking the same question for years, but encountered a project at my last company called Mataara (https://gitlab.com/mataara/Mataara-Server) which did exactly as you describe, but was exclusive to Drupal projects. I thought that odd, becuase it was so useful for those Drupal projects and the company used a wide range of tech. So I built something (Metaport / https://getmetaport.com) which is stack/tech agnostic and allows teams a birds-eye view into the security standing (vulnerabilities, legacy dependencies and EOL components) of all their apps and sites, portfolio-wide.\n\nIf you've ever encountered DependencyTrack (https://dependencytrack.org) before, Metaport can integrate with that as your team's security backend, but the default is to use the vulnerability tooling from your project's package manager.\n\nIt's MVP at the moment, but it's FOSS so downloadable as an installable PHP codebase, or as a containerised app setup with e.g. nginx in front of it. Have a look at the whitepaper and try the Demo app too, both linked from the website above.",
                "author": "russtafarri",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1749110453.0,
        "title": "Deploying Dockerized Web App (React/Node/PostgreSQL/Redis) to Production",
        "author": "boredFanatic",
        "id": "1l3tm06",
        "selftext": "I’m preparing to deploy a full-stack web application to production for the first time, and I’d greatly appreciate your guidance on the deployment workflow. The tech stack includes:\n• Frontend: React\n• Backend: Node.js\n• Database: PostgreSQL\n• Caching: Redis\n• Containerization: Docker\n• Static Assets: Hosted on Cloudflare R2\n• Email Service: Gmail SMTP (currently used in dev)\n• Version Control: Git\nCould you please outline the steps required to move the application from a local Docker-based development environment to a live production environment with a domain?\nHere are a few specific areas where I need clarification:\n• Infrastructure Architecture:\nShould all services (frontend, backend, database, Redis) be deployed on a single VPS/cloud instance, or is it best practice to split them across multiple managed services (e.g., managed PostgreSQL, Redis-as-a-Service, etc.)?\n• Environment Configuration:\nWhen moving to production, should I maintain the development setup and create separate Docker environments for production, or should I replace the development configuration (e.g., .env files, build flags, service settings) with production-specific instances?\nIf there are standard tools or platforms you'd recommend (e.g., Docker Compose for production, reverse proxy setup with Nginx or Traefik, SSL configuration, CI/CD pipelines, etc.), I’d love your input on those as well.\nFeel free to ask for any additional details you might need. Thanks in advance for your help!",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1l3tm06/deploying_dockerized_web_app/",
        "num_comments": 4,
        "comments": [
            {
                "body": "In the future, use double spaces or empty lines to break up your post.  \n\n> Email Service: Gmail SMTP (currently used in dev)  \n\nYou're going to need to change this sooner than later with an actual email sending service like Sendgrid.  Gmail limits outgoing messages.\n\n> Should all services (frontend, backend, database, Redis) be deployed on a single VPS/cloud instance, or is it best practice to split them across multiple managed services (e.g., managed PostgreSQL, Redis-as-a-Service, etc.)?  \n\nDepends on what it is for and expected usage.  If it's a portfolio website without any expected income or need to stay active I would just put it all on one.  \n\nIf it's an ecommerce site, forum or something that needs to stay up/have good performance I would split it.  React, Node on one VPS, Redis on a second, Postgres on a third.  You could go managed but it's much more expensive and I wouldn't do that unless it was for business purposes.\n\n> Environment Configuration: When moving to production, should I maintain the development setup and create separate Docker environments for production, or should I replace the development configuration (e.g., .env files, build flags, service settings) with production-specific instances?  \n\nDev and production should ideally be as close to eachother as possible, but for dev you will obviously need extra tooling.  You probably want separate containers for production.  \n\n> if there are standard tools or platforms you'd recommend (e.g., Docker Compose for production, reverse proxy setup with Nginx or Traefik, SSL configuration, CI/CD pipelines, etc.), I’d love your input on those as well.  \n\nUse Cloudflare for an initial reverse proxy.  They have a lot of nice services.  For further reverse proxying inside your own network I would say Caddy is the easiest to use at the cost of throughput.  \n\nGitlab has CICD built-in so if you're able to switch it may be helpful.  \n\nDocker-compse is fine for prod on a small scale like yours seems to be.  No need to complicate it.",
                "author": "Irythros",
                "score": 1
            },
            {
                "body": "For a first deployment a single VPS is fine. You could use Docker Compose Nginx and maybe something like Easypanel to manage it all.",
                "author": "Real-Succotash-105",
                "score": 1
            },
            {
                "body": "Thank you very much. Appreciate you response!\n\nA follow up question: this app is going to be more e-commerce style (classified ads website). The plan is to first test the market with it. So I want to see first if it is going to gain traction, etc. With that in mind, i don't want to blow my expenses at the beginning with hosting and other stuff. I had an idea that i would host all of the components (fe, be, db,..) on a single VPS/cloud service like Render, which offers a free plan. If the site would succeed and it would need more resources, i would just upgrade to a paid plan. Why am i keen on hosting on single service? Because i want ease-of-use. I could manage it just from one place.\nBut your input is strong - this kind of site has to stay up and have good performance. So idk if hosting it all under one roof is ok?",
                "author": "boredFanatic",
                "score": 1
            },
            {
                "body": "> Render, which offers a free plan.  \n\nIf its free then its performance is shit.  Atleast pay for a Digitalocean/Vultr setup with 1g of memory.  That'll run you about $10/month.  \n\nYou can run it all in a single VPS without an issue.  That is how I would do it, and have done it.  Just make sure to figure out how much memory you can allocate to each service so you don't get out-of-memory errors and the OS killing processes.",
                "author": "Irythros",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1748801721.0,
        "title": "Suggestions for building travel agency management system",
        "author": "Manux126",
        "id": "1l0vrxm",
        "selftext": "Hi everyone,\n\nComing to you to ask for suggestions on implementing a management system for a small travel and tour booking company. The main requirements are: client booking management, invoice issuance and tracking, pending payment control, and basic performance statistics for the employees using the system.\n\nI've got web dev knowledge, so I could totally build this from scratch using any of the popular stacks. But honestly, that would eat up a ton of time and cost, making the project unfeasible right now.\n\nI've been doing some research, and my current options are:\n\n* **Strapi** for the backend, then building the frontend from scratch.\n* **WordPress** with some plugins + customization.\n* **Odoo** (I don't quite grasp what it does, so I'm unsure about this option).\n\nMy big question is, does anyone know of a platform that covers most of these needs natively, or are there robust options out there that allow for good customization and extension with custom modules? I'm really looking for something that can grow with the company.\n\nAny recommendations based on your experience? All input is super appreciated!",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1l0vrxm/suggestions_for_building_travel_agency_management/",
        "num_comments": 4,
        "comments": [
            {
                "body": "Before you dive in, it's important to brainstorm what kind of tech stack and features you want. What languages and frameworks do you already know, and how comfortable are you with them? Are you building a full-stack project or just focusing on the frontend? (I'm guessing it's full-stack.)\n\nIf you're looking for a simpler route, you could go with WordPress — it supports plugins for things like calendars, email services, and more. You don’t necessarily need to write PHP, but it’s helpful if you want more control. Plus obviously it offers hosting \n\nIf you're considering using another technology that would need a CMS like Strapi or a similar headless CMS, the setup is a bit different. For example, with Strapi, the content is typically managed by developers, whereas WordPress allows non-developers to edit content more easily. Also, keep in mind that Strapi doesn’t include hosting — it’s just the CMS backend.\n\nIf you’re looking for something that handles both the CMS and hosting, **Payload CMS** is a solid alternative. It’s full-featured, React-friendly, and offers a hosted option.",
                "author": "udbasil",
                "score": 2
            },
            {
                "body": "I primarily use rails, so i would build it in rails, which could build something like this pretty quickly. But Ive also been working with rails specifically for about 15 years.\n\nYou should use whatever youre most comfortable with.",
                "author": "armahillo",
                "score": 2
            },
            {
                "body": "Oof. Just use an off the shelf CRM for that.",
                "author": "JalapenoLemon",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1752161688.0,
        "title": "Best practice for handling user claims from ALB/Cognito in Fargate-deployed apps?",
        "author": "AyZay",
        "id": "1lwfssi",
        "selftext": "Hi all,\n\nI'm working on a platform where multiple apps are deployed on AWS Fargate behind an Application Load Balancer (ALB). The ALB handles authentication using Cognito and forwards OIDC headers (such as x-amzn-oidc-data) to the app, which contain user and group information.\n\nAccess to each app is determined by the user's group membership.\n\nI'm unsure of the best practice for handling these claims once they reach the app. I see two main options:\n\nOption 1: Use a reverse proxy in front of each app to validate the claims and either allow or block access based on group membership. I’m not keen on this approach at the moment, as it adds complexity and requires managing additional infrastructure.\n\nOption 2: Have each app validate the JWT and enforce access control based on the user's groups. This keeps things self-contained but raises questions for me around where and how best to handle this logic inside the app (e.g. middleware? decorators? external auth module?).\n\nI’d really appreciate any advice on which approach is more common or secure, and how others have integrated this pattern into their apps. \n\nThanks in advance!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1lwfssi/best_practice_for_handling_user_claims_from/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1744110922.0,
        "title": "Looking for Ideas: What Should I Build Next?",
        "author": "Dushy12",
        "id": "1jub178",
        "selftext": "Hey Reddit!\n\nI’ve been working on some personal projects over the past few months, and I’ve built:\n\n* A **task management app** to help people stay organized.\n* A **social media platform** focused on community-driven content.\n* An **e-commerce website** designed for small businesses to sell their products online.\n\nNow, I’m itching to start something new, but I’m kind of stuck on what to build next. I’d love to hear your ideas or pain points that you think could be solved with a cool app, platform, or tool.\n\nHere are a few things I’m considering:\n\n* Something related to **AI tools** (chatbots, automation, etc.).\n* A niche **productivity tool** for specific industries or workflows.\n* Or maybe something completely out-of-the-box is missing in the tech world!\n\nWhat do YOU wish existed? What problems do you face daily that need solving? Any feedback, suggestions, or wild ideas would be super appreciated!\n\nThanks in advance for your input!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1jub178/looking_for_ideas_what_should_i_build_next/",
        "num_comments": 9,
        "comments": [
            {
                "body": "A game, built on web tech!\n\nNo business problems to solve, just entertainment to be had.\n\n/r/PBBG",
                "author": "WaveHack",
                "score": 3
            },
            {
                "body": "For long running games, making the game world feel alive, and allowing offline progression in your absence. Web stack tech neatly accomodates to this with eg cronjobs.\n\nIt's a common trait in these games, unlike traditional older flash games which are played with one shot sessions, are more built like a traditional video game with a main update-render loop (vs a http request-response flow).",
                "author": "WaveHack",
                "score": 3
            },
            {
                "body": "I've tried building similar projects but often found myself stuck in the details more than I'd like. If you're interested in AI tools, developing a platform for content creators to manage AI-generated scripts could be a hit. Many creators I know struggle with balancing creativity and editing, so an assistant that offers efficient editing suggestions could be a game-changer. Also, check out tools like Plexie and Notion; they've tapped into niche productivity needs, which might spark some inspiration. AI Vibes Newsletter explores AI's potential, offering ideas on how AI tools can inspire new project developments, which might be worth exploring.",
                "author": "Key-Boat-7519",
                "score": 1
            },
            {
                "body": "What's with this influx of people asking for ideas? Are they all vibe coders that are just farming out app ideas? That's what this reads like to me... you built 3 apps in a month, including a social media platform? Even the text of this post sounds AI-written. This industry is a hellscape right now.",
                "author": "bbeng89",
                "score": 1
            },
            {
                "body": "I have a great app I need but will.make tons of money",
                "author": "Fluid_Cost_6457",
                "score": 1
            },
            {
                "body": "why persistent?",
                "author": "Icy-Boat-7460",
                "score": 1
            },
            {
                "body": "First of all I've never said I've done 3 apps in a month. I've been coding for about 5 months now. I developed 3 apps in 5 months.",
                "author": "Dushy12",
                "score": 1
            },
            {
                "body": "sounds expensive, cant you just use time spent offline to calculate the game state?",
                "author": "Icy-Boat-7460",
                "score": 1
            },
            {
                "body": "It is. And a lot of games do, yeah. When they don't need that extra bit of dynamic interactivity through websockets, or have offline notifications.\n\nPersistent also means you have (async) multiplayer, like market trading and invasions.",
                "author": "WaveHack",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1710461179.0,
        "title": "Advice Needed: Choosing a Deployment Platform for a Fullstack App",
        "author": "Deveosys",
        "id": "1bf0amg",
        "selftext": "Hello r/webdev,\n\nI'm at a crossroads with my full-stack web application (Strapi backend, Remix frontend, PostgreSQL database) and need advice on choosing a deployment platform. My main criteria are:\n\nPricing: Preference for a fixed pricing model due to unpredictable traffic, but open to usage-based pricing if there's an option to set a cost ceiling.\n\nUnified Platform: Looking to deploy both frontend and backend on the same platform for simplicity.\n\nMonitoring: Would be nice to have built-in monitoring tools to track app performance and health.\n\nVersion Management: Need the ability to manage preview and production environments easily, similar to Vercel's workflow.\n\nContainerization is not a limitation. \n\nConsidering these requirements, I'm seeking recommendations from those who've faced similar decisions. If you have insights or experiences with platforms that meet these criteria, I'd greatly appreciate your input. Challenges, limitations, or any advice on managing deployment complexities would also be very helpful.\n\nThanks! ",
        "score": 25,
        "url": "https://www.reddit.com/r/webdev/comments/1bf0amg/advice_needed_choosing_a_deployment_platform_for/",
        "num_comments": 43,
        "comments": [
            {
                "body": "VPS + Docker. If you want to get fancy throw in Portainer & Traefik.",
                "author": "brock0124",
                "score": 7
            },
            {
                "body": "Big thumbs up for Render. I had an application consisting of a docker image (Python API in my case), a Vue frontend and it needed a Postgres database. Codebase on Github. All pretty standard, so you would think this would be extremely easy to deploy. Wrong. Everywhere I tried gave me headaches. I tried different AWS services directly, Heroku, Railway and looked into a few more. I mean I’m sure I could get it up and running, but for a stack so basic/prevalent I don’t want to spend any time on configuration or reading through docs/learning their concepts, CLIs etc. \n\nWhen I found Render.com I got all of it up and running within minutes. That’s the db, frontend, backend, a custom domain name, SSL. Haven’t needed a single page of their documentation, just pointed it at my repo on GitHub basically. \n\nThe closest thing to it was Railway actually. I think I had some issues with the fact that I had a monorepo (not sure if this was railway or another platform) and they didn’t provide SSH access into running containers, which I knew I would really miss. \n\nI know this comment sounds like a fake testimonial or something but I just really enjoyed Render.com! Big compliments to them. \n\nI can’t comment on availability though, since this application didn’t go in production in the end, but the developer experience is awesome.",
                "author": "mglsofa",
                "score": 7
            },
            {
                "body": "Just throw it all on a vps and do it yourself like cavemen with portainer",
                "author": "sasmariozeld",
                "score": 6
            },
            {
                "body": "I’m full on Cloudflare these days\n\n- Hosting: Cloudflare pages/workers\n- Database: Cloudflare D1 (SQLite)\n- KV\n\nIf you’re building a SAAS. You can pretty much run your apps for free!",
                "author": "42newuser",
                "score": 5
            },
            {
                "body": "You would probably have to host your database elsewhere, but that aside I would suggest Cloudflare Pages if you haven't considered it already. It suits your requirements.",
                "author": "aurelienrichard",
                "score": 5
            },
            {
                "body": "Guess I can provide my experience with this… I have Portainer on a VPS, build my Docker images in GitLab, and then use the Portainer API to deploy my updated compose file to Portainer which pulls down the updated images and spins up the new containers. \n\nI built a custom docker image to use during the build process that makes pulling in my secrets and connecting to the Portainer API easier.",
                "author": "brock0124",
                "score": 5
            },
            {
                "body": "Render ([render.com](https://render.com)) can handle these for you, whether containerized or not. We run Node natively, have native PostgreSQL (even have high-availability support if you need that), native Redis caching, service workers, cron jobs, etc..\n\nWe have base pricing plus overage pricing. I'm checking with the team if we have a price \"cap\" and will follow up when I get a response. (follow-up: we don't have a price cap, but we're talking as a team on how to handle this scenario). We do offer quite a lot of bandwith and have a fixed price for blocks of bandwidth. Inbound traffic is free.  \nDo you know how much bandwidth you currently get with these bursts?\n\nWe can deploy on merged branches, also have \"preview environments\" if you want to deploy a staging branch etc. We do infrastructure as code as well using a YAML \"blueprint\" file that you can deploy from as well that can set up all of your services, workers, environment variables, etc., and we have an API you can utilize to automate things if you really want to have some fun.\n\nWe have monitoring and log streams, and an integration partnership with DataDog.",
                "author": "iandouglas",
                "score": 4
            },
            {
                "body": "lol that’s three new frameworks/DBs\n\nMy app (BlueWaffle, FUPA, and Creampie-DB) is currently hosted on SpaceDocker",
                "author": "Chags1",
                "score": 3
            },
            {
                "body": "Hosting database elsewhere sounds reasonably acceptable if I can insure good transaction speed between it and backend. I tried with supabase but connection was pretty slow. (could come from configuration, didn't investigate too much) \nI've never tried cloudflare, I'll take a closer look, thanks ;)",
                "author": "Deveosys",
                "score": 3
            },
            {
                "body": "Sure! If you just need managed Postgres and not things like Auth, Realtime etc then Supabase is overkill. Maybe have a look at [Neon](https://neon.tech/)?",
                "author": "aurelienrichard",
                "score": 3
            },
            {
                "body": "I use it for both. I like the quick access GUI to check on things and I also use it deploy my containers. I originally just used the webhook to trigger pulling the latest version of my container, but then I started using their API to send an updated compose file and/or environment variables to update the whole stack at once. I do that in my build pipeline.",
                "author": "brock0124",
                "score": 3
            },
            {
                "body": "Yeah. They give you a certain amount of resources depending on the plan and charge the monthly fee based on that.",
                "author": "ClamPaste",
                "score": 3
            },
            {
                "body": "https://aws.amazon.com/elasticbeanstalk/",
                "author": "sc0utyw0uty",
                "score": 2
            },
            {
                "body": "I would advice you to avoid AWS unless you go full on managed services like App Runner or BeanStalk  with RDS, also this may cost more and other solution \n\nGo for managed solution like Railway, Netlify, it will be way simpler to manage",
                "author": "gBusato",
                "score": 2
            },
            {
                "body": "Fly.io got everything on your list except preview environments out of the box (you just have to set it up by yourself)",
                "author": "Smartare",
                "score": 2
            },
            {
                "body": "Hetzner is a great host with the best bang for your buck I could find.",
                "author": "Melatonin_Freak",
                "score": 2
            },
            {
                "body": "If you don't mind managing stuff on your own, get yourself a VPS and start deploying with docker compose. I have a similar setup with strapi + postgres + NextJS. Strapi code is pushed to self hosted Gitlab which builds and deploys the image in server. Frontend is handled by a separate repo in my case as it's deployed directly in vercel for free. You can also self host NextJs with docker if required though. ",
                "author": "RedVelocity_",
                "score": 2
            },
            {
                "body": "hey was in a similar situation and I went with self-hosting as wasn't happy with the PaaS out there either - ended up building our platform all customized to our needs (was a pain but I think I can make it easier for others through my learnings). Interested to know what solutions you pick yourself or have investigated already, down to have a chat via dm?",
                "author": "learningdevops",
                "score": 2
            },
            {
                "body": "I've been liking Railway. It's very easy to use and they have hard usage/cost caps",
                "author": "caddywompus46",
                "score": 2
            },
            {
                "body": "Fly.io",
                "author": "Lumethys",
                "score": 2
            },
            {
                "body": "You're not the first one to point at Cloudflare, I'll definitly have a serious look a it. ;)",
                "author": "Deveosys",
                "score": 2
            },
            {
                "body": "Thank you for your message, I definitly have an eye on Render :)  \nI stay stuned in case price cap become a thing, let me know ! :D",
                "author": "Deveosys",
                "score": 2
            },
            {
                "body": "I have a VPS where I host my web apps with caprover and I love it... But service continuity is not a critical issue for these apps.",
                "author": "Deveosys",
                "score": 2
            },
            {
                "body": "I no longer want to live in fear of a server failure :P",
                "author": "Deveosys",
                "score": 2
            },
            {
                "body": "Yes, that's what it seemed to me. The reason I'm looking for a deployment (hosting) platform is because I want to lighten my load, so if it becomes a new load... :P",
                "author": "Deveosys",
                "score": 2
            },
            {
                "body": "Thanks for the project ideas!! 😝",
                "author": "astodev",
                "score": 2
            },
            {
                "body": "Self hosted Strapi needs a database. It's very common to use a backend with Remix/Next etc.. for example: so you don't have to build your own CMS",
                "author": "no-one_ever",
                "score": 2
            },
            {
                "body": "I see, seems to be a good work flow! I really like handling thing on my own as well, but the main reason I don't want to self host it is responsability on continuity of service.",
                "author": "Deveosys",
                "score": 2
            },
            {
                "body": "Really? I just got my server through them like 3 months ago and I couldn’t find really anything negative when I was looking. Much cheaper than digital ocean and other vps hosts.",
                "author": "Melatonin_Freak",
                "score": 2
            },
            {
                "body": "vercel is crazy expensive, don't do that!",
                "author": "learningdevops",
                "score": 2
            },
            {
                "body": "I am adding Portainer to my notes to investigate.  Thanks for the tip!",
                "author": "KublaiKhanNum1",
                "score": 2
            },
            {
                "body": "Render, Kuberns and Railway are solid options since they let you host backend, frontend, and Postgres together. [Fly.io](http://Fly.io) is also worth a look if regional performance matters, though setup can be a bit more complex.\n\nKuberns fits your criteria well. It runs on AWS-backed infra with simpler pricing that usually ends up around 40 percent cheaper than raw AWS. You deploy frontend and backend from GitHub, get Postgres included, and have built-in monitoring plus preview and production environments. It is a good balance if you want unified hosting without the AWS complexity.",
                "author": "New-Vacation-6717",
                "score": 1
            },
            {
                "body": "This doesn't make sense. I didn't know Strapi so I checked it out. They seem to provide a database of their own. Why do you need Postgres? \n\nAlso, Remix is a full stack framework on its own. You could call Strapi from its API, but it's not the most efficient way at all, unless they are hosting Remix as well. \n\nIf you're all in on Remix (great framework imo), you don't really need Strapi. You could just put it on a VPS like many people suggested. You could then host your own Postgres if you want. \n\nIf you need managed Postgres, you could use Neon. \n\nAlso, shameless promotion, consider my platform WebDigital[WebDigital ](https://webdigital.com) It is capable of building a full stack app with Postgres. Here's a demo: \n\nhttps://youtu.be/ys37I_eZrrU\n\nIt's free.",
                "author": "cagdas_ucar",
                "score": 1
            },
            {
                "body": "Is portainer used just to make things easier or is it actually part of the deployment?",
                "author": "MyButtholeIsTight",
                "score": 1
            },
            {
                "body": "They seem to have pretty bad reviews lately..?",
                "author": "Deveosys",
                "score": 1
            },
            {
                "body": "I host similar projects, but not critical ones. I want to unload myself of the \"weekend / 3am\" errors on my servers etc :P",
                "author": "Deveosys",
                "score": 1
            },
            {
                "body": "I'm not sure yet. Plus Strapi got on my nerves so I make tests with Payload now :P  \nThis could bring me to use Vercel even if it can become very expensive apparently...\n\nWhen I self host something, I use CapRover, and I love it ;)",
                "author": "Deveosys",
                "score": 1
            },
            {
                "body": "And np for dm ;)",
                "author": "Deveosys",
                "score": 1
            },
            {
                "body": "How does it work? Once you've subscribed to a plan, you can deploy as many applications as you like? The more you have, the faster you use up your plan, but that's the idea?",
                "author": "Deveosys",
                "score": 1
            },
            {
                "body": "If you’re looking for zero downtime deployments you’ll have to look into swarm or Kubernetes. I can’t really think of a better alternative for deploying multiple related apps.\n\nIf you’re looking for more of a deployment mechanism over hosting, you could try Ansible. Haven’t done it myself, but have certainly considered it.",
                "author": "brock0124",
                "score": 1
            },
            {
                "body": "Tbh nothing should go wrong as the code is built into docker images.. Unless you're doing some updates/patching/tinkering over the Linux system ",
                "author": "RedVelocity_",
                "score": 1
            },
            {
                "body": "Neon seems to be really cool thank you !",
                "author": "Deveosys",
                "score": 1
            },
            {
                "body": "Apparently bad things come when you want to leave. But I only red some review, nothing personal.",
                "author": "Deveosys",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731356418.0,
        "title": "Am I over-engineering my project?",
        "author": "Master-Mango-7387",
        "id": "1gp21mx",
        "selftext": "*The language in this post is intentionally vague in an attempt to protect my site idea - apologies in advance.*\n\n  \n**Project Summary:**   \n  \nI want to build a website where users can pay a recurring monthly fee to add a piece of content to the site. I do not want to have user profiles unless absolutely necessary. I simply want users to click a button to add content, be directed to check out, and then on successful payment be able to add a single piece of structured content to the site.   \n  \n**Planned Stack:**   \n \\-  NextJS or the frontend and api  \n \\-  Supabase for the database  \n \\-  Stripe for payments  \n  \nI've chosen these because I have experience with NextJS and Supabase, and because Stripe is an industry standard which is robust enough to handle all of the heavy lifting with payments and subscription management. The hosting would also be extremely cheap to scale if this project grows and I need to expand.  \n  \nWould it be crucial to have user profiles so that they can edit the content they are adding to the site? I don't mind updating things manually through support emails in the case that something needs to be updated as I don't expect that to happen much with the specific content I am going to build the site around.  \n  \nCan I save customer or subscription id along with the piece of content so that if the subscription is cancelled I can remove it from the database?   \n  \nIs there a better stack or all-in-one platform that would make this project easier to use/maintain?   \n  \nI'm really looking for idea *validation*. Is this a feasible approach? Has anyone done anything similar and can share their experience?",
        "score": 8,
        "url": "https://www.reddit.com/r/webdev/comments/1gp21mx/am_i_overengineering_my_project/",
        "num_comments": 21,
        "comments": [
            {
                "body": "Can't really \"validate\" the idea since you aren't giving much.  \nIf you want to delete the content where the sub is over, use the subscription id\\email inside the content data, so you'll be able to know which content to delete.  \nAs for the auth part, if you're not looking to have a user log in etc., I'd still recommend generating a unique key that will allow editing that specific content. And that key will be sent via email to the user after creating the content.  \nThat way, you don't need a user profile, but could have an an icon for editing the content, where users need to enter that key in order to edit.",
                "author": "Ugiwa",
                "score": 7
            },
            {
                "body": "Yes.. over engineering.\n\nThe reoccurring aspect gets to be a bit more of a challenge.  But if you rely on your payment provider to handle that, they can take care of cancelation and user PII.\n\nSo, what are you selling?  (I don’t mean specifically). You are selling a “post-id”. \n\nIf someone wants to make a post, sure, accept it and have a moderation flag like “pending payment” maybe even a “payment Due” field so you can expire content (without necessarily deleting it.\n\nYou pass a reference id (like Invoice number) to your payment provider.  This is the id for the Post.  \n\nWhen someone pays for the post, the stripe approval notification can trigger a workflow to update the paid status and next payment date.\n\nYou can send the user an email with a link to their payment id and some other auth code so they can click their link and edit content.  The link is theirs to have, share, loose, whatever.\n\nYou are pay walling the visibility of the posts.\n\nMonthly the user may be charged several times, one for each post.  You need not consolidate the payments, each was a seperate transaction.\n\nIf you want to validate your idea, build it and put it in the market.  With customer feedback, when consolidation becomes a requirement, create users and have a table of user/posts generate known user payments prior to standard reoccurring- only issue is to remove the strip reoccurrence when they go into consolidation mode.  Future problem.\n\nBuild it as simple as possible.  Use payment reference id to map to the post ids.\n\n— disclaimer: this is a generic pattern, not exactly meant as a step by step guide.  You will need to adopt this thought pattern for your application.",
                "author": "cloudnavig8r",
                "score": 3
            },
            {
                "body": "Hard to say if you need accounts are not, really depends on the nature of your site, which you’re not telling\n\nWouldn’t delete content immediately when someone unsubscribes though, what if they unsubscribe right after adding the content? Surely it should be left up for a month (or however long is left on the subscription)\n\nAlso what if someone doesn’t unsubscribe but the payment fails? Card expired, insufficient funds, network error, etc. do you delete all their content? What if they resubscribe later? What if their next payment is with different card details? Can you correlate the accounts? Do you need to?",
                "author": null,
                "score": 2
            },
            {
                "body": "Build it out and give it a try. You’ll probably figure it out quick enough and this seems simple to build in a day. Is this the billboard idea?",
                "author": "Haunting_Welder",
                "score": 2
            },
            {
                "body": "Yes! This is pretty much my idea for the MVP. Basically a userless site where each new \"post\" is its own transaction with a subscription linked to each post. You pay a subscription to keep your post on the website month by month.\n\nI do worry about users losing the email that has to link to manage their subscription but I guess i can handle that as part of support until the implementation of profiles. But as you said, I should build the MVP and get it in front of some real users and let them tell me what is most important to them.",
                "author": "Master-Mango-7387",
                "score": 2
            },
            {
                "body": "Good questions! I’m not sure how to handle the deletion of content only after the month of which the subscription was cancelled is over, im guessing stripe can handle this somehow but this is on my list of things to research. \n\n“Delete” may be too harsh of a term, the default behavior may be to set a db field for hidden or expired content due to subscription status other than active. \n\nI guess I could handle subscription by saving a table of email addresses used at checkout to reinstate content tied to that email that had previously expired.\n\nI’m still in the “spitballing” stage so these are all things I need to workout. The longer i sit and think through it, it may be more simple to just add user accounts. \n\nIf it helps, you can imagine a maybe real estate website. You have to have an active subscription to list a property on the site but anyone can search for properties. Except i expect users to only ever want to list one property.",
                "author": "Master-Mango-7387",
                "score": 2
            },
            {
                "body": "I don't remember if you have to generate it urself or they give you one, but either way, yeah",
                "author": "Ugiwa",
                "score": 2
            },
            {
                "body": "http://www.milliondollarhomepage.com/",
                "author": "Haunting_Welder",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Until you have users and data, just use what you know. Don't spend time planning for users that may never show up.",
                "author": "NiteShdw",
                "score": 1
            },
            {
                "body": "You can show a preview of their post right before the checkout and make them click on \"looks good\" to proceed to payment. I'd do this and wouldn't give revisions after. Though you need to state this clearly in your ToS page and optionally as a warning before or during the payment process.",
                "author": "mekmookbro",
                "score": 1
            },
            {
                "body": "Definitely planning on doing subscriptions, the way i understand it though, stripe has the ability to link out to their own \"subscription dashboard\" where you can make changes to your subscription... although the user will need a way to get there... like from a manage subscription button.. on their profile... \n\nI think user accounts are going to have to be implemented for a good user experience.",
                "author": "Master-Mango-7387",
                "score": 1
            },
            {
                "body": "This is a good idea",
                "author": "Master-Mango-7387",
                "score": 1
            },
            {
                "body": "A customer ID is automatically generated",
                "author": "skrteli",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Okay, So then I can use that unique id in the webhook for cancelling a subscription to then remove the content from the database. Thanks",
                "author": "Master-Mango-7387",
                "score": 1
            },
            {
                "body": "Haha, no this isn't quite the same idea that i have. But i love it.",
                "author": "Master-Mango-7387",
                "score": 1
            },
            {
                "body": "Yeah I'm definitely not counting on that. I'll probably just need to implement a user profile that gives them access to update/cancel their subscription as well as update or delete their content.",
                "author": "Master-Mango-7387",
                "score": 1
            },
            {
                "body": "By not generating it yourself, you're locking yourself into your payment processor.\n\nSince it's crucial to have user profiles, I'd recommend tackling the auth issue, even if you outsource it to something like Auth0, and handle generation of a local (to your app) unique identifier so that you can always have it available.",
                "author": "nubbins4lyfe",
                "score": 1
            },
            {
                "body": "I'll be using supabase's authentication more than likely - but i'll still need to keep track of the identifier to link a customer to their stripe subscription either way. A db field of subscription id or whatever, but then i can change the value if i migrate  to a different payment processor in the future.",
                "author": "Master-Mango-7387",
                "score": 1
            },
            {
                "body": "I’m not familiar with stripe, does it generate a unique customer or subscription id at checkout that i can store along side the content entry?",
                "author": "Master-Mango-7387",
                "score": 0
            },
            {
                "body": "That depends, what is the billboard idea?",
                "author": "Master-Mango-7387",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1751584958.0,
        "title": "Blaze-install: A faster, more reliable alternative to npm v1.10.10",
        "author": "Apart_Competition_56",
        "id": "1lr3y6e",
        "selftext": "**Blaze-install: A faster, more reliable alternative to npm**\n\nhttps://preview.redd.it/ben7nq88tqaf1.png?width=1024&format=png&auto=webp&s=4614590a6951e6b1ad3f080bd65a467ce3de9278\n\nHey r/javascript! I’m back with an update on my package manager project, **blaze-install**.  \n*(This is my second post—my old GitHub account was closed for no reason, so I had to set up a new one. Sorry for any confusion!)*\n\n# Key features\n\n* Fast installs with parallel downloads and global caching\n* Consistent lockfiles across all platforms\n* Monorepo/workspace support with proper dependency resolution\n* Built-in security auditing and auto-fix for vulnerabilities\n* Self-healing diagnostics (`blaze doctor --fix`) to auto-repair common issues\n* Plugin system for extensibility (hooks for all major commands)\n* Works with React Native, Playwright, and other complex setups\n* Offline mode and prefetching for fully local installs\n* Interactive CLI with progress bars and colored output\n* Dependency graph visualization (`blaze graph`)\n* Full lifecycle script support\n* Peer dependency handling with auto-install prompts\n* `.blazerc` and `.npmrc` config support\n\n# Latest release highlights\n\n* Plugin system: Easily extend blaze-install with before/after hooks for all major commands. Example plugins included!\n* Offline mode (`--offline`) for cache-only installs\n* `blaze prefetch` to cache all dependencies for offline use\n* Improved self-healing and diagnostics with `blaze doctor --fix`\n* Enhanced peer dependency handling with clear warnings and auto-install prompts\n* Visual dependency graphs with `blaze graph`\n* Interactive upgrades for outdated dependencies\n* Even faster installs with parallelized network requests and metadata caching\n\n# Why I built this\n\nAfter running into platform-specific lockfile issues and spending too much time debugging workspace problems, I wanted a package manager that just works and is easy to extend.\n\n# Current status\n\n* Core functionality working\n* Test suite passing (14/14 tests)\n* Plugin system operational with example plugins included\n* Ready for community feedback\n\nI’m not here to make anyone mad or stir up negativity—I genuinely want to hear your honest feedback and learn what real developers need from a package manager. If you have constructive criticism, suggestions, or edge cases you want me to test, I’m all ears!\n\nWhat pain points do you face with current package managers?\n\n**GitHub:** [Blaze-Install](https://github.com/Nom-nom-hub/blaze-cli)",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1lr3y6e/blazeinstall_a_faster_more_reliable_alternative/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1747400479.0,
        "title": "Costs for 4 Sites - Deep Custom PHP/Azure/GSAP Involved!",
        "author": "_temple_",
        "id": "1ko09u7",
        "selftext": "Hi all,\n\nWe are exploring options and trying to gather preliminary budget information for a potential project involving the rebuild of four school websites for a UK-based educational client. These sites are currently built on WordPress and Elementor but feature extensive, specific custom-coded PHP functionalities that would need to be faithfully replicated. We'd appreciate insights from UK web developers, freelancers, and agencies on typical costs for the services described below.\n\nFor context on the complexity, here's a summary of the existing websites and their current key custom functionalities that need to be replicated:\n\n * 4 School Websites: Current platform is WordPress & Elementor, with custom PHP child themes and numerous bespoke functionalities.\n * Federation-Wide Custom Tools (Currently in Place):\n   * Custom PHP Page Editing Tool: This is a block-based editor allowing non-technical staff to create, delete, and rename pages. It features various custom widgets (e.g., styled accordions, tables, image galleries, text blocks, embedded documents). Blocks are added, removed, and reordered within a page using SortableJS drag-and-drop functionality. Global CSS changes (e.g., font, font size, colour) are managed via injected JavaScript, and all blocks created with this editor are styleable using this same JavaScript injection method.\n   * Custom PHP Document Uploader Tool: This is integrated with the page editor, allowing users to upload, manage, and link documents within website pages.\n   * Admin Quick Toggles: Existing functionality for admin staff to easily enable/disable a snow day popup and a lockdown popup message across the sites.\n * Data Automation & Integrations (Currently in Place):\n   * Staff list data is pulled from Azure file storage (which is managed via Salamander, in turn pulling data from Capita SIMS).\n   * House points data is collected and managed using a similar data automation process via Azure file storage and Salamander/Capita SIMS.\n   * These processes are currently managed in part via WordPress cron jobs and custom JavaScript.\n * Site-Specific Custom Features (Currently in Place):\n   * Custom Navigation Bars: Some sites have bespoke navigation bars built using custom PHP, CSS, and JavaScript; others specifically utilise GSAP technology for advanced animations.\n   * Custom Staff Portal: This includes secure login with Office 365 SSO Integration. It features interactive, sortable dashboard tiles. User tile configurations are currently saved via a JSON backend, managed with custom PHP and JavaScript. The portal includes a custom PHP-built admin management interface that allows for management of available tiles and other portal settings.\n * Ongoing Services Required Post-Rebuild:\n   * Secure, reliable hosting for all four websites.\n   * Comprehensive technical maintenance: Security patching (WordPress core, plugins, themes, server-side elements like PHP/databases), software updates, performance monitoring, bug fixing for WordPress and all replicated custom PHP/CSS/JS code.\n   * Ongoing technical support for client staff.\n   * Management of data automation scripts and scheduled tasks.\n   * Daily automated backups and a clear restoration process.\n\nQuestions for the Community:\n\n * Upfront Rebuild Cost: If a client approached you to undertake a full rebuild of these four websites, faithfully replicating all the described existing custom functionalities and integrations, what ballpark upfront development cost would you estimate for the entire project?\n * Custom Tools Development Cost: More granularly, if you were to scope the development of just the core custom PHP tools as they currently exist (e.g., the Page Editing Tool with SortableJS and JS-injected CSS styling; the Staff Portals with O365 SSO, JSON backend, and PHP admin interface; the Azure/SIMS data automation scripts), what might be the estimated upfront development cost for these specific components if they were to be rebuilt?\n * Annual Ongoing Costs: What would you typically charge per annum for a comprehensive package covering:\n   * Secure Hosting (suitable for 4 such sites with this level of custom code)?\n   * Full Technical Maintenance (including all replicated custom code and its specific functionalities)?\n   * Ongoing Technical Support for the client?\n\nWe are trying to understand typical market rates in the UK as of May 2025 to help with initial planning for this potential rebuild. Any insights into how you'd approach quoting such a project, factors that would heavily influence your pricing (e.g., decisions on whether to rebuild custom elements within WordPress or using a different PHP framework), or general advice would be greatly appreciated.\n\nThanks for sharing your expertise!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1ko09u7/costs_for_4_sites_deep_custom_phpazuregsap/",
        "num_comments": 5,
        "comments": [
            {
                "body": "This seems very doable in Wordpress in combination with ACF. I would resort to a multisite construction. If a new design is also included, you’re looking at 150-200 hours, times the hourly rate, assuming you guys are going to fill the content yourself. \n\nHosting will set you back 80-130 a month if you choose for managed hosting on an own server.\n\nSo I’d say about 20-30k. Make sure the company you choose makes use of the new Gutenberg editor.",
                "author": "That_Conversation_91",
                "score": 1
            },
            {
                "body": "For context, I've been doing large-scale enterprise WP sites with custom themes, plugins, and 3rd-party integrations for more than a decade. \n\nWhat you have here (some elementor, some not) is kind of the worst situation.  It would be difficult to quote accurate costs without a discovery, but shooting from the hip, I'd say something along the lines of:\n\n* Upfront Rebuild Cost: 100-120k USD\n* Custom Tools Development Cost: 40-60k USD\n* Annual Ongoing Costs:\n   * Secure Hosting: depends on your traffic. Probably in the $30 - $120/mo USD range\n   * Full Technical Maintenance: Billed hourly at $150/h USD\n   * Ongoing Technical Support for the client?: Billed hourly at $150/h USD",
                "author": "_listless",
                "score": 1
            },
            {
                "body": "Thanks very much for your input on this, one of the sites is 108 pages, one 60 and two of them are 10 page sites, so I need to work out the cost particularly for the large one as it will take a while and has the majority of the custom functionality, the others sort of piggy back off of the same custom CMS in variations. Appreciate your input!",
                "author": "_temple_",
                "score": 1
            },
            {
                "body": "Thanks very much for this, all 4 sites together are around 200 pages, majority built with the custom CMS tool that would need replicating. Does this change the upfront cost estimate at all?",
                "author": "_temple_",
                "score": 1
            },
            {
                "body": "Part of the discovery would be analyzing which of those pages is necessary.  We'd analyze traffic over the last n years with client to determine which pages are worth rebuilding. A page that gets 2 hits per year might cost the same to build as a page that gets 200 hits a day.  If that low-traffic page is a one-off custom page, it's 36,500x more expensive (from a per-visit standpoint) - it's up to the client to judge whether that increased relative cost is worth it - it's up to us to surface the information.  For low-traffic pages, there are several strategies that can spend time where it matters and improve UX: redesign, consolidation, templating, elimination.\n\nFor the custom business logic functions, we'd do an audit with the people actually using the tools on the daily to determine:  \n\\- what are the actual business/user goals  \n\\- are you finding success with the current tools? what is working what is not?  \n\\- if we were building a tool to facilitate those goals, would we choose to replicate the current system, or would we build something different?",
                "author": "_listless",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1751475056.0,
        "title": "JULY 2025 UPDATE: OneUptime – Open Source Observability Meets Interoperability",
        "author": "OuPeaNut",
        "id": "1lq0xzk",
        "selftext": "**ABOUT ONEUPTIME**\n\nOneUptime ([https://github.com/oneuptime/oneuptime](https://github.com/oneuptime/oneuptime)) is the open-source alternative to Datadog, [StatusPage.io](http://StatusPage.io), UptimeRobot, Loggly and PagerDuty—all in one unified, self-hostable platform. It offers uptime monitoring, log management, status pages, tracing, on-call scheduling, incident management and more, under Apache 2 and always free.\n\n**WHAT’S NEW**\n\n* **Terraform Provider for OneUptime** Automate your OneUptime setup and management via Terraform. Provision monitors, alerts, status pages and on-call schedules as code. Read more →[https://oneuptime.com/blog/post/2025-07-01-introducing-terraform-provider-for-oneuptime/view](https://oneuptime.com/blog/post/2025-07-01-introducing-terraform-provider-for-oneuptime/view)\n* **OpenAPI Specification & Open Standards** OneUptime now publishes a full OpenAPI spec so you can build integrations with any language or tool that understands the standard. Learn more →[https://oneuptime.com/blog/post/2025-07-01-oneuptime-openapi-specification-open-standards/view](https://oneuptime.com/blog/post/2025-07-01-oneuptime-openapi-specification-open-standards/view)\n* **MCP Server: AI-Powered Observability** Our new MCP server uses AI to enrich traces, correlate logs and suggest postmortems by just speaking to an LLM agent →[https://oneuptime.com/blog/post/2025-07-01-oneuptime-mcp-server-ai-observability/view](https://oneuptime.com/blog/post/2025-07-01-oneuptime-mcp-server-ai-observability/view)\n\n**OPEN SOURCE COMMITMENT**\n\nOneUptime remains 100% open source under the Apache 2 license. You can audit, fork or extend every component—no hidden clouds, no usage caps, no vendor lock-in.\n\n**REQUEST FOR FEEDBACK & CONTRIBUTIONS**\n\nYour insights shape the roadmap. If you run into issues, dream up features or want to help build adapters for your favorite tools, drop a comment below, open an issue on GitHub or send us a PR. Together we’ll keep OneUptime the most interoperable, community-driven observability platform around.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1lq0xzk/july_2025_update_oneuptime_open_source/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1712848337.0,
        "title": "Finally Understand Responsive Design!",
        "author": "coderjared",
        "id": "1c1hjw9",
        "selftext": "# Intro\n\nIn the realm of web development, the concept of responsive design often presents a steep learning curve for beginners. Even after moving on to more advanced topics, many still struggle to fully grasp the essence of responsive design, a shortfall that becomes evident in their projects.\n\nResponsive design is an elusive goal for many engineers, primarily because the crunch of deadlines often shifts their focus to functionality and how the project looks on their personal device. This narrow focus can lead to oversight of how a website or app performs across different devices.\n\nEven established websites can falter in responsiveness. Personally, I find that the proverbial [amazon.com](http://amazon.com) loses its aesthetic appeal when I shrink the browser on my laptop.\n\n[Amazon’s subpar responsiveness \\(in my opinion\\)](https://preview.redd.it/ai18j28r5vtc1.jpg?width=3008&format=pjpg&auto=webp&s=6822b709aa0cda1b4a4e0ec57bf29d8e4fc8783d)\n\nThat said, I don’t believe it’s too difficult nowadays to achieve a decent level of proficiency with responsive design. I just think there has been a lack of educational focus on the topic, and in presenting it in a clear comprehensive way. That is what I intend to do in this article / video.\n\nI’ve identified seven CSS properties/concepts that one must know in order to achieve almost any responsive design. While there may be additional techniques to enhance responsiveness, these seven are comprehensive enough to tackle most scenarios. Unless you’re making your app ultra-complex, you should be able to understand and apply these concepts in a reasonable amount of time.\n\nOf course, to truly understand these concepts, practice is essential. That's why I've put together a video tutorial to complement this guide, offering a practical demonstration of the principles discussed. I will put the link in a comment for those who would like to see it. Remember, with each practice session, these concepts will become more intuitive.\n\nHere are the main topics I’ve identified as crucial:\n\n* Size units\n   *  Relative to screen - `vw`, `vh`\n   *  Relative to other elements - `%`\n* The `max-width` and `min-width` properties\n* Flexbox\n* CSS grid\n* Media queries\n* Responsive images properties\n* JavaScript for more complex responsive behaviors\n\n\n\n# Size units\n\nMost beginners focus on creating a design that fits their screen nicely. Therefore, they don’t realize the downsides of specifying elements’ size, padding, margin, etc in exact terms, usually with pixels (px). The problem is that those elements will never change size as the screen size changes. Transitioning to using less absolute units like percentages and viewport units (`vw`/`vh`) is key for a flexible design.\n\n***Percentages***\n\nBeginners must be careful with percentages. It takes time to understand the concept of parent-child relationships and that when a percentage is given to a child, it is a percentage of the size of its parent/container (interchangeable terms), not the whole screen.\n\nAnother point here is that all the outside elements that seemingly “don’t have a parent” actually do - the `<body>` element. And the body’s size is as follows:\n\n* Width - the width of the screen\n* Height - the height of the content inside of it (0 if nothing is in the body)\n\n***Viewport width/height (vw/vh)***\n\nWhen you want an element to be sized relative to the *screen*, thus having no relation to the size of its *direct container*, you want to use `vw` and `vh`.\n\nOne example is the following. Let’s say your website is meant to have a <header> then a <main> section, and you want to specifically size the height of the header and have the main section take up the rest of the screen’s height.\n\nOne way to accomplish this is the following:\n\n    header {\n        height: 300px;\n    }\n    \n    main {\n        height: calc(100vh - 300px);\n    }\n\nOne `vh` unit is basically 1% of the viewport height (the height of the screen). Therefore, `100vh` means 100% of the height of the screen, and thus `calc(100vh - 300px)` means “100% of the screen height minus 300px.”\n\nThis ensures the main section will take up the remainder of the height of the screen after the header. \n\nYou could also achieve this result with flex, but I’ll talk about that later. In this specific case, I think either is fine. Maybe one method will prove better as the project grows in complexity.\n\n***When to use px***\n\nHaving these other options and the ones I will detail below definitely do not mean that the `px` unit has no place in CSS nowadays. There are still many situations in which you want something to have a specific size that doesn’t change along with the screen.\n\nMany elements in a UI design may prefer a specific size that will never change. Often buttons are sized this way, for example.\n\n\n\n# The max-width and min-width properties\n\nThese properties become useful when you want an element to grow or shrink in size, but only to a certain point.\n\nOne common scenario for this is with search bars at the top of the UI. The search bar will likely take up the majority of the screen width on mobile devices. And though the search bar will be bigger for a laptop than a mobile phone, once the devices get larger, you won’t want the search bar to remain almost the full screen width.\n\nTake a look at how Airbnb’s input bar changes (just the width of it, I mean) as the screen grows.\n\n**Mobile:**\n\n[On mobile screens, input bar has a small width](https://preview.redd.it/kkiqf04l7vtc1.png?width=822&format=png&auto=webp&s=4b9b30cef660f33f409989df8515f7cf78cd4dc7)\n\n**Tablet:**\n\n[As the screen grows in size, input bar increases in width](https://preview.redd.it/vh69oy3l7vtc1.png?width=1910&format=png&auto=webp&s=daca25df5488063ba3bfdbc8cbe2922e1e204c06)\n\n**Big tablet / small laptop:**\n\n[As the screen grows in size, input bar increases in width](https://preview.redd.it/gd548z3l7vtc1.png?width=1654&format=png&auto=webp&s=65484617fe0b2bca52ebbddf6d9423c826a1ae2d)\n\n**Laptop:**\n\n[After a certain screen width, the input bar stops increasing in width](https://preview.redd.it/l4okov3l7vtc1.png?width=3024&format=png&auto=webp&s=0ac1972748bf082f15ffe58c584c235c483958e8)\n\nIt's a little hard to tell with these images, but on mobile, the search bar takes up most of the width of the screen, but is still small in terms of `px`). Then it grows for tablets and small laptops. But at a certain point, it stops growing more as the screen further increases in size.\n\n\n\n# Flexbox\n\nI count myself very lucky to have not had to learn CSS before flexbox was invented. “Flex,” for short, is an amazing method of relating elements to each other in terms of position and size.\n\nWith flex, you write `display: flex;` on the parent element, then it becomes a “flex container,” and all of its direct children become “flex items.” There are several intuitive flex-related properties you can set on the flex container to describe how the flex items should behave. There are also properties you can set on the flex items themselves to distinguish their styling from the rest of the flex items.\n\nIt is common that beginners don’t understanding that the flex relationship is strictly between parent and child. Not parent and grandchild, and so on. You can have flex items that are also flex containers themselves. All that means is one element has `display: flex;` and one of its children also has `display: flex;`.\n\nHere are two of the most common scenarios in which flex becomes handy:\n\n* Flex allows you to create positional/spacial relationships between elements that are all next to or on top of each other. So if, for example, you have a few items in a row, you can space them evenly from each other in that row with just one or two simple CSS properties.\n* With flex, you can easily change the direction in which sibling elements are positioned. By direction, I mean from horizontal (row) to vertical (column), or vice versa. For example, think links in a nav at the top of the screen that become organized vertically under a hamburger menu for mobile.\n\n\n\n# CSS grid\n\nThere is one shortcoming of flex, and that is when you are trying to control elements in two directions (x-axis AND y-axis) at the same time. Flex is all about defining properties for elements that are aligned along the same one axis (x-axis OR y-axis). The most common scenario for wanting to do this is when making a grid of items.\n\nYou may run into trouble when trying to ensure they’re all the same size. See the below image for an example of this.\n\n[It is difficult with flex to ensure all items in the grid are the same height.](https://preview.redd.it/as3lekjj8vtc1.png?width=2612&format=png&auto=webp&s=ff3ae0a29e381c876723ed8d2ead3d95c48ff841)\n\nWith grid, you can just apply one or two easy CSS properties, and bam, problem solved. See below.\n\n    #card-container {\n        padding: 20px;\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n        gap: 20px;\n        justify-content: center;\n    }\n\nNote - Some people actually choose to use grid for the entire layout of their website. To be honest, I have never spent enough time to explore this option because I learned flex first (grid came out later), and flex is good for 95+% of my needs. I really have only needed grid for actual grid layouts, which are typically a subsection of my websites, if I need them at all.\n\nThere is nothing wrong with using flex and grid in different parts of your UI!\n\n\n\n# Media queries\n\nIn almost any design, you will need things to change more drastically when the screen hits a certain size. Small screens favor vertical scrolling. With larger computer screens, you can fit more elements horizontally.\n\nWith media queries, you can define what are called “breakpoints” - points at which some styles are to be overridden to accommodate the tweaked designs for other devices.\n\nYou have a choice to either create the mobile or desktop UI first, then create a breakpoint at which you define new styles to override the existing ones for the platforms that you didn’t initially design for.\n\nLet’s use the example where for mobile devices, certain elements should be organized in a column, but on larger devices, they should be organized in a row. \n\nLet’s assume that we have chosen “mobile first design,” which means designing the mobile UI first, then figuring out the responsiveness to achieve the larger devices’ designs. This choice, rather than designing for laptop/desktop first, is considered better today since the populus spends more time on phones than larger computers, and a company will prefer to make more users happy.\n\nWell, the way to tell your app to change its appearance at tablet width and larger is to basically - with a media query breakpoint - say, “at this pixel width and higher, change the organization of these items to be a row now.”\n\nThis change may mean just changing a flex container’s flex-direction property from column to row, as shown below:\n\n    #flex-container {\n        display: flex;\n        flex-direction: column;\n    }\n    \n     screen and (min-width: 768px) {\n        #flex-container {\n            flex-direction: row;\n        }\n    }\n\nThis snippet means that the element with ID “flex-container” will have `flex-direction: column;` for screens less than 768px in width, but for screens with width 768px and above, the element will have `flex-direction: row;`.\n\nSide note - There are relatively standard pixel widths for each device, so you can look up the pixel width at which to set a breakpoint to indicate a transition from mobile to tablet, tablet to laptop, and so on.\n\n\n\n# Responsive images properties\n\nOften a combination of the above properties will be used to dictate the size of images in your website, and no further CSS will be needed.\n\nHowever, there are times when the image is not scaling property with the screen. I wanted to provide a couple properties you could explore when this happens.\n\nOne property is `aspect-ratio`. This property allows you to define a preferred aspect ratio for images so that it always maintains the same height-to-width ratio across different screen sizes.\n\nAnother property is `object-fit`, which can take values such as `fill`, `contain`, `cover`, `none`, and `scale-down`, allowing for flexible control over how images adapt to different screen sizes.\n\n\n\n# JavaScript for more complex responsive behaviors\n\nFinally, JS plays a crucial role in responsive design for more dynamic and complex adjustments that CSS alone cannot handle, allowing for custom behaviors based on user interactions or device specifications. \n\nWith JS, you can react to more event types than just screen size changes, such as button clicks, scrolling, dragging and dropping, and more. \n\nWith JS, you can write logic to dynamically adjust the sizes of elements based on whatever conditions you want. For example, you can adapt content based on the user's device, behavior, preferences, and/or location.\n\nJS will be the bulk of the code for your UI, so if something is not easily attainable with HTML and CSS, often the solution will require JS.\n\n\n\n# Conclusion\n\nAchieving responsive design is a balancing act, requiring a blend of CSS finesse and strategic JavaScript. By understanding and applying the seven key concepts outlined above, developers can create websites that are not only visually appealing but also adaptable across all the necessary devices.\n\nThe journey to mastering responsive design is one of continuous learning and practice. To see these concepts in action, don't forget to check out the accompanying video tutorial.\n\nRemember that responsive design is within reach, and with each project, the process becomes more intuitive.\n\nHopefully I have managed to make responsive design a less foggy and daunting concept for you with this article and video.\n\nI wish you the best of luck with your future projects, and I thank you for reading.\n\nUntil next time,\n\nJared",
        "score": 41,
        "url": "https://www.reddit.com/r/webdev/comments/1c1hjw9/finally_understand_responsive_design/",
        "num_comments": 36,
        "comments": [
            {
                "body": "Here’s the video link for those interested - [https://www.youtube.com/watch?v=qrl0h-gbafA](https://www.youtube.com/watch?v=qrl0h-gbafA)",
                "author": "coderjared",
                "score": 8
            },
            {
                "body": "Nice write up! You could include container queries and responsive text. Those were massive wins for me recently. \n\nI went into the last project saying I’m not much of a front end expert, but did so much that I came out a mini guru. \n\nWhen there’s no time pressure, or I’m ignoring deadlines, tuning the layout and styles to perfection feels really good.",
                "author": "iBN3qk",
                "score": 7
            },
            {
                "body": "Too sleepy to read all but saving this post for tomorrow",
                "author": "SuchALoserYeah",
                "score": 5
            },
            {
                "body": "Great Post!",
                "author": "jojo944",
                "score": 3
            },
            {
                "body": "> Note - Some people actually choose to **use grid for the entire layout** of their website.\n\n&nbsp;\n\nThat's me. I've been using 100% grid since 2018 and never looked back. It's just too good to not use it (the *fr* unit is awesome).\n\nThere is just **one exception**: when I need to showcase a list of elements that need to wrap to new lines and they all have different widths, in which case a grid solution wouldn't work.",
                "author": null,
                "score": 3
            },
            {
                "body": "read full post, understood bits but I still don't know how to do responsive design... saving it for later",
                "author": "Chemical-Will3700",
                "score": 2
            },
            {
                "body": "Quickly skimmed it, a noble attempt, but a lot of things that are either not really right, wrong or have better solutions.\nUse (r)em instead of px (there are exceptions, a border should use of)\nA screen and a viewport are not the same.\nResponsive design and development is a lot more than just \"tablet or mobile\", it's an important part of a11y.\n\nPersonal opinion: use classes instead of ids",
                "author": "Unusual-Two-3713",
                "score": 2
            },
            {
                "body": "Very useful sharing, thanks",
                "author": "Dushusir",
                "score": 2
            },
            {
                "body": "cqw ftw",
                "author": "eballeste",
                "score": 2
            },
            {
                "body": "I wrote lots of tips in here for people who have some familiarity already, but you’ll find that my video explains things more thoroughly with coding along",
                "author": "coderjared",
                "score": 2
            },
            {
                "body": "Would AI ever write that Amazon has bad responsiveness? Haha",
                "author": "coderjared",
                "score": 2
            },
            {
                "body": "I don't know, it does not feel/sound too robotic for me.",
                "author": "SuchALoserYeah",
                "score": 2
            },
            {
                "body": "Does not mean it's robotic though. I could see myself using realm. Personally, I use words like cumbersome, gargantuan, erratic, perusal etc.",
                "author": "SuchALoserYeah",
                "score": 2
            },
            {
                "body": "sure thing. will go thru your video too. Thank you for the effort.",
                "author": "Chemical-Will3700",
                "score": 2
            },
            {
                "body": "And feel free to suggest more topics for me to cover",
                "author": "coderjared",
                "score": 2
            },
            {
                "body": "It's not bad advice and it's probably useful for anyone trying to understand how to do responsive, but there's so much fluff and it takes way too long to say \"watch my video\" and refer to the concepts it's about. Post would be far better if it just got to the point quickly so I didn't have to read a chapter of a book before I knew if it was useful/relevant or not.",
                "author": "shgysk8zer0",
                "score": 1
            },
            {
                "body": "Thanks for the comment! That sounds like great experience. I haven’t found that I’ve needed container queries or responsive text methods much, but that could be because I haven’t explored them in depth. Thanks for the suggestions!",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "Thanks for thinking it’ll be useful!",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "Thank you!",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "That’s awesome! I keep telling myself I’m going to go deeper with grid, but I keep ending up putting it off. :p\n\nAnd that exception makes sense. Thanks for sharing!",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "Fair points, thanks.",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "You’re welcome!",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "Thanks, that’s fair. I will keep conciseness in mind next time",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "I wrote that, thank you :)",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "Here's a situation. I had a grid of items on the homepage with images and text. The size of the boxes was dependent on the number of columns at that breakpoint, not the size of the screen. If I set up a flexible grid with auto fill, or the content has ways of taking up different sizes, I can't really do a regular media query without it being overly specific and fragile. If I don't adjust the text size, it looks too small or too large. If the text knows the size of the box it's in, and is set up to scale with clamp(), it's quick and easy to make it nice.",
                "author": "iBN3qk",
                "score": 1
            },
            {
                "body": ">I keep telling myself I’m going to go deeper with grid, but I keep ending up putting it off\n\n\nThat was me in 2018 but I could see its power already, even if it wasn't 100% supported everywhere at that time (*and IE was still alive*).\n\nI'd strongly suggest to go deeper now, you will love it.",
                "author": null,
                "score": 1
            },
            {
                "body": "When was the last time you used the word 'realm' in conversation?",
                "author": null,
                "score": 1
            },
            {
                "body": "Hm sounds interesting, thanks! I was gonna ask if you had an example. It would be even better if I could see images. Sounds like you needed a specific amount of columns at specific breakpoints? Am I understanding that correctly?",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "I’ll strongly consider it, thanks!",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "Awesome! Happy to help",
                "author": "coderjared",
                "score": 1
            },
            {
                "body": "Yep, nothing of value here. :p",
                "author": "coderjared",
                "score": 0
            },
            {
                "body": "100% this is AI. Patterns all over it.",
                "author": null,
                "score": 0
            },
            {
                "body": "Not much",
                "author": null,
                "score": 0
            },
            {
                "body": "\"the proverbial amazon.com\"?\n\nThis is AI generated bullshit. I guarantee it.",
                "author": "_Vince_Noir_",
                "score": -1
            },
            {
                "body": "The third word is 'realm', that's when I stop reading AI spew.",
                "author": null,
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1736009815.0,
        "title": "Not a developer. I am confused. I want a static site for my(small) business. There are so many options. All I want is few pages, blog and an ability to generate landing pages.",
        "author": "PM_me_ur_pain",
        "id": "1htiowa",
        "selftext": "**WordPress** is the most popular option out there, but I’ve read many posts about it needing constant management and fixes. I don’t want to be tied to a developer for trivial stuff (probably not the best thing to say in a webdev sub). Even if I decide to go with WordPress, there are so many themes to choose from, and most seem to offer similar features. Another concern is finding a developer who can optimize the site well.\n\nTwo years ago, I built my website on **Framer** because I couldn’t find a developer who could promise a good page speed ranking. Now, as I plan to focus more on the website, Framer is turning out to be an unattractive option as it locks users down. I don’t want to rebuild the site five years later if Framer starts charging me $1000/month for a simple website.\n\nI’m also considering **Webflow**, but it seems to be overkill for my needs.\n\nI’m not looking to build the website on my own and am confused about which technology to choose. I’m leaning towards WordPress due to its large community, but the potential maintenance overhead is holding me back.\n\nWhat platform/technology would you recommend? ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1htiowa/not_a_developer_i_am_confused_i_want_a_static/",
        "num_comments": 18,
        "comments": [
            {
                "body": "Your needs is not a static, since you want a blog and an ability to generate landing pages, this is a dynamic website. have you tried codecanyon? there are tons of premade scripts and templates for good prices, but read the description before purchasing to be sure it is not a wordpress (if you decided to not use it).",
                "author": "TarikAJA",
                "score": 19
            },
            {
                "body": "Why you think the best approach is to define the tech stack yourself if you stated you’re not a dev in the first place?",
                "author": "MrGreenyz",
                "score": 14
            },
            {
                "body": "FYI a blog is not really a static site. “Static” means fully rendered HTML pages that are sent to the browser without any processing. They are either written by hand ahead of time or generated by a build process. \n\nA blog can be made static, but it requires having a way to compile the blog entries into static page, plus recompile all the other pages that might show the entry as a link (homepage, category pages, etc) so there’s usually some hands-on tech work every time.\n\nBlogs are usually dynamic sites. That means the design of the sites lives in templates on the server, and the blog entries are in a database of some kind, and the pages are generated on the fly by the server whenever they are called. There’s usually a management portion of the site, behind a login, that works the other way, to allow the author to edit the blog entries.\n\nWordpress and tools like it give an out-of-box solution for building this kind of site, but you still have to do some techie setup, particularly if you want your own domain.",
                "author": "pokealex",
                "score": 7
            },
            {
                "body": "I would suggest contacting some developers and asking for these requirements and let them pick the technology instead and see what they suggest which might be more effective than finding a WordPress developer (even if that would be fairly popular).",
                "author": "mrswats",
                "score": 7
            },
            {
                "body": "Yeah so as some others have mentioned you have static elements, but the blog is not so static. In this case Wordpress is likely your best option. Realistically if you don’t need to many plugins or other stuff, you can set up a theme template and customise the site yourself and it won’t cost you much at all or take to much upkeep.",
                "author": null,
                "score": 3
            },
            {
                "body": "As a developer, WordPress is my fav for websites that allow my clients to have the functionality they want and allow them to maintain them.  I set up my websites with automatic updates, a security and backup plugin and documentation on how to update content including posts, pages, images menus and more.  My clients will call on my once every other year for small questions.  I think documentation is key- I also use a page builder that is easy for them to use.",
                "author": "thewibdc",
                "score": 1
            },
            {
                "body": "Go with WordPress they have a very large community and there are alot of good extensions.",
                "author": "Deconomix",
                "score": 1
            },
            {
                "body": "If you’re looking to free solutions WordPress could be the right one. You would need only one hosting provider and a domain name to buy, then you can have WordPress set up already on it ready to use. You could buy a WordPress theme ready to use (on themeforest.net there are a bunch of options) where no coding knowledge is required. Finally, you would have to keep WordPress with its theme and plugins updated constantly. WordPress is used in this way also from professional agencies, so it’s very popular as option.",
                "author": "Master_899",
                "score": 1
            },
            {
                "body": "Use Wordpress but find good theme from trusted dev with more than 5 years history. Install security plugin and disable updates",
                "author": "lookmetrix",
                "score": 1
            },
            {
                "body": "Just use Wix",
                "author": "Ok-ChildHooOd",
                "score": 1
            },
            {
                "body": "It depends what your site is for. There is a number of good options, but each has pros and cons. \n\nWordpress is great if you want more of a blog style site, but some people will use it more generally.\n\nWix or squarespace are also pretty competitive options allowing you a no code option.",
                "author": null,
                "score": 1
            },
            {
                "body": "Thank you for helping me out.  \n  \nI want a standard business presentation (Homepage, about, contact, blog) and ability to create fast & responsive landing pages. There will be no user log on or store functionality.\n\n  \nThe goal of the website is to market the business.",
                "author": "PM_me_ur_pain",
                "score": 1
            },
            {
                "body": "Look into ghost.org",
                "author": "EducationalWill5465",
                "score": 0
            },
            {
                "body": "Have a look at Astro. Yes you can build a blog with it and yes, it can still be static.",
                "author": "pragmasoft",
                "score": 0
            },
            {
                "body": "TBH, I will hire someone to make the website. I have designed/\"developed\" two websites and both suck. It's also a time thing. I would rather pay someone to build it and build it well.\n\nI will go ahead with Wordpress. One last question: If I decide to move away from Wordpress in the future, will my blog face any huge SEO penalties due to change in hosting/technology?\n\n\n\nThank you so much kind stranger",
                "author": "PM_me_ur_pain",
                "score": 0
            },
            {
                "body": "I am going to hire a developer for the techie stuff. The issue is that I will first have to decide the technology to be used. \n\nThanks to you and u/Tawa-online . I think wordpress will suit my needs.",
                "author": "PM_me_ur_pain",
                "score": -1
            },
            {
                "body": "Here's something I've been knocking around in my head for a few weeks -- and your post has inspired me to pull the trigger on it:\n\nI'll build you a standard 4-page website for you for $97... fast, responsive, conversion optimized -- including copywriting -- with the ability to build as many landing pages and blogs as you like, and even some back-end automations. $97 to start, $97/mo as long as you want to keep the site. \n\nI'm a freelance web designer and I've built over 100 WordPress and HighLevel sites in the past few years. I've charged as much as $8800 for a website, and I've been building sites, web graphics, and automation since the mid-90's -- (just so you know I'm not some fly-by-night startup)\n\nLet me know if you're interested to chat!",
                "author": "SimonPage",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745022702.0,
        "title": "How should I start about creating a travel booking website?",
        "author": "Nic727",
        "id": "1k2jxqh",
        "selftext": "Hi,\n\nI would love to create a small business where people could book niche accommodation, but I don't know where to start.\n\nI only know that hosts should be able to login to add their accommodation options, so people could find that on the website and book by date. Or if not with a userbase, maybe just a form so they could contact me and I, myself add the information on the website.\n\nI know I can do almost anything with WordPress, but my problem is about API. I have no knowledge about that or which one is needed. It's to get the booking synced across all the internet to avoid double-booking for the host.\n\nThere are platforms like Sharetribe where I could hire someone to do the website and work on the API, but at the end, I need to pay Sharetribe a massive amount every month to just get my website running.\n\nPreferably, I would love to own the content since I believe in full transparency of things and manage the money how I want.\n\nAny recommendations would be welcome.\n\nThank you very much!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1k2jxqh/how_should_i_start_about_creating_a_travel/",
        "num_comments": 7,
        "comments": [
            {
                "body": "Wordpress +booking [plugins](https://wordpress.com/plugins/browse/booking)\n\nWix -- literally has a page for hotel [management ](https://www.wix.com/hotels/website)\n\nif you want to code it your self there are tons of paid options but here is a [reddit ](https://www.reddit.com/r/opensource/comments/194z2ak/comment/lbc83yo/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button)post.\n\nI got this in 5 min of google search...\n\nread this [https://online.hbs.edu/blog/post/how-to-do-market-research-for-a-startup](https://online.hbs.edu/blog/post/how-to-do-market-research-for-a-startup)\n\nFYI all business there is always a cost to start.",
                "author": "rekosin1",
                "score": 4
            },
            {
                "body": "Starting a travel booking website is a great idea, especially for niche accommodations. It’s completely understandable to feel overwhelmed at first. Things like APIs, bookings, and user management can seem complicated if you’re just getting started.\n\nHere’s a helpful breakdown to guide your next steps, especially if you want a flexible, scalable solution without relying on expensive third-party platforms:\n\n# Why Building Custom with an Agency Makes More Sense\n\n* **Full Ownership of Your Platform** When you build your site from scratch with a development agency, you own everything: your data, user base, content, and payments. There are no monthly fees like with Sharetribe or similar platforms.  \n* **Custom Features Made Simple** Whether you want hosts to add listings or handle that yourself, a professional agency can build those custom flows exactly how you need. That includes login portals, calendar-based booking, admin panels, and even contact forms.  \n* **API Integration Handled for You** You don’t need to worry about the technical side of syncing calendars or avoiding double bookings. A skilled team will integrate tools like iCal, Google Calendar, or third-party booking APIs to handle it seamlessly.  \n* **Better Long-Term Investment** With custom development, you make an upfront investment, but it pays off by eliminating ongoing platform fees and giving you full control. You also get a site that’s built to grow with your business.  \n* **No Learning Curve** Instead of spending months trying to learn WordPress plugins, APIs, and booking logic, you can partner with experts and focus on running your business.  \n\nIf you’re serious about launching your booking site the right way, working with the[ **best website development company in Ahmedabad**](https://www.21twelveinteractive.com/website-development-company-in-ahmedabad/) can give you peace of mind and a professional end product without the tech stress. It’s all about building something that works *for you, not* the other way around.",
                "author": "Reasonable_Piece5105",
                "score": 1
            },
            {
                "body": "Thank you",
                "author": "Nic727",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1736703365.0,
        "title": "What is a reasonable salary for a Senior Web Developer in NC with 15 years experience?",
        "author": "Prestigious-Spot-378",
        "id": "1hzrzhn",
        "selftext": "So, I have been on and off about leaving my current company, but with my boss passing and a new owner buying the company he's going in a direction that is going to stifle me as a web developer, so I've been making/refreshing my resume.\n\nThis makes me wonder what a reasonable salary would be? I know I'm majorly underpaid now, I only stayed for the work environment and I liked my previous boss.\n\nI'm a proficient/expert in Joomla, WordPress, PHP, SQL, JavaScript, jQuery ,Bootstrap all versions, LESS, SASS, Analytics, Looker Studio, Tag Manager, email marketing various platforms, Linux server management, DNS, Search Engine Optimization, etc.\n\nI'm capable of basically learning any programming language/technology/adapting to what I need to.\n\n",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1hzrzhn/what_is_a_reasonable_salary_for_a_senior_web/",
        "num_comments": 16,
        "comments": [
            {
                "body": "With your stack and the region probably more like 100-150k. Nothing in your stack is particularly high paying or differentiated, it's all website mill / WordPress slop adjacent. It doesn't sound like you know any of the modern JS frameworks, Typescript, React/Next/Remix, Node, AWS, all of which are where the high paying web dev jobs are right now",
                "author": "_Pho_",
                "score": 6
            },
            {
                "body": "those all sound a little antiquated for \"modern\" web dev, but it's all good stuff, I'd say anything above $100k is decent, it's clear most of your experience is in a marketing environment, so if you spend some time and expand into more product focused, you can easily charge more, like $200k+. Check out [https://jobsforwebdevs.com/](https://jobsforwebdevs.com/) for a list of tech you might want to catch up on, I made that list a year or two ago. If you don't want to click, here's a short list: React, .NET or Spring Boot, AWS, and shore up on some JavaScript LeetCode if you haven't done DS&A in a while",
                "author": "Haunting_Welder",
                "score": 3
            },
            {
                "body": "I worry about anyone who posts that they are proficient in bootstrap like that’s any sort of achievement. It really tells me what level you are at when you feel that’s worth noting.",
                "author": "ShawnyMcKnight",
                "score": 3
            },
            {
                "body": "I feel you dude. At my last 3 jobs spanning the last 12 years of my life we didn’t use any JS frameworks. So I made a portfolio site with react and I embellish a little but when it comes to the point where they want to quiz me I am screwed. It’s basically stopped me from getting higher paying jobs.",
                "author": "ShawnyMcKnight",
                "score": 3
            },
            {
                "body": "I’m a Senior Salesforce Developer with 4 years experience and I make $120k base + profit sharing = ~145k total comp. If you are experienced in JavaScript becoming a developer and specializing in something called Lightning Web-Components (similar to ReactJS), can be a real career path. Salesforce does have a steep learning curve, but self study for a couple months and take the Dev 1 certification and you are good to start job hunting.",
                "author": "Odd_Membership_4087",
                "score": 2
            },
            {
                "body": "Agreed, PHP can be in demand, especially if they do use a PHP based CMS, but not often. When they say they are proficient in JavaScript but didn’t mention any JavaScript frameworks I wonder if they understand how deep JavaScript goes. 10 years ago I learned JavaScript as far as dom manipulation and thought I was the JavaScript master. Then someone asked me a question about their code because I said I was proficient and I got humbled REAL quick.",
                "author": "ShawnyMcKnight",
                "score": 2
            },
            {
                "body": "I do appreciate all the advice, but I do agree with this. Every company I have looked at posting jobs tends to say JQuery is required, so I see no reason why I wouldn't list this.",
                "author": "Prestigious-Spot-378",
                "score": 2
            },
            {
                "body": "I’ll absolutely put bootstrap on my resume as it is a keyword search, but when informally telling people what I know it’s assumed that I do know it and in don’t I can pick it up in half a day max.",
                "author": "ShawnyMcKnight",
                "score": 2
            },
            {
                "body": "Considering you last statement, there's a bit of learning to do before you decide to depart. I think there are contract gigs that agencies have for legacy stacks, those tend to need someone to fill in. While you're still at the current gig, start planning your journey and canvasing for contracts that fit w/ your current skills.\n\nAt the very least, that may provide a means to make $$$ while expanding your skills. \n\nThere's also a high chance you'll be at the mercy of the job market, the applicant process is far more harsh. You will be judged per bullet points, as majority of job seekers spray and pray their resumes.\n\nAt minimum, you'd need to pick up NodeJS & Typescript, and if you prefer staying within your stack, a BE framework like Laravel is a good to have. If you have solid, nuanced SQL experience, that's also a niche to dive deeper into. [mondo.com](http://mondo.com) has a few decent remote gigs, not sure if that's of interest. [This](https://www.dice.com/job-detail/276e3fe0-ad5b-4a6e-a8be-4762544523a6?searchlink=search%2F%3Fq%3DPHP%26location%3DCharlotte%2C%2520NC%2C%2520USA%26latitude%3D35.2270869%26longitude%3D-80.8431267%26countryCode%3DUS%26locationPrecision%3DCity%26radius%3D26%26radiusUnit%3Dmi%26page%3D1%26pageSize%3D20%26language%3Den&searchId=3c95f809-800c-46c6-b447-bdadba64696c) looks decent enough to see where you may fare. Best of luck, it's a mess out here",
                "author": "6Bee",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Thanks, that's good to know. I know about ReactJS, but currently have not used it. I haven't heard of lightning web components.",
                "author": "Prestigious-Spot-378",
                "score": 1
            },
            {
                "body": "I can make complete templates, components, modules and plugins for both Joomla and WordPress , so I know there are markets for that but it's much smaller. I am somewhat familiar with node.js and AWS but definitely not an expert. I am familiar with all the frameworks mentioned, I just generalized but not an expert at them currently. I haven't been in the job market for a while. So I agree I need to freshen up on things.\n\n\n\n\nI am basically asked to do anything and everything at my company that's the unfortunate thing of working at a marketing agency. You do a million things but don't become a master at anything.\n\n\n\n\nMy SEO/SEM knowledge is extremely high though. I could honestly do that as another Job. I build, maintain and do all SEO for all of our clients.\n\n\nI've integrated a lot of googles apis into WordPress and Joomla. I've done quite a few e-commerce sites as well on a larger scale that had 300 stores.  \n\n\nI want to learn more that's really why I want to leave honestly.",
                "author": "Prestigious-Spot-378",
                "score": 1
            },
            {
                "body": "I see what you're saying, however there's a niche market of businesses still locked into stuff we view as outdated. Folks like OP strive in those environments, and unless the company is somewhat tech forward, this stack is kinda expected.",
                "author": "6Bee",
                "score": 1
            },
            {
                "body": "Right,  I may do this as well. I would bring this type of stuff up with my previous boss that we need to be learning these frameworks before he passed and he was at least open to me doing these things. He actually wanted me to grow as a developer, but obviously from a business standpoint some things just don't make sense in a marketing agency.\n\nThe current owner is younger than I am but he is a \"sales type person\". He's only concerned about churning out \"decent\" websites as fast as possible so we can make more money.\n\nAt least with the previous owner we developed our own customized/optimized templates, extensions, etc that were made with SEO and Google Pagespeed and tracking in mind. They were proprietary to us and me along with another developer spent months making these and optimizing them. Then the new owner comes in and just totally changes directions.\n\nI'm literally cringing inside with what he is having us do right now. He is wanting us to use pagebuilders like yootheme, avada. That isnt development at all. That is just huge bloat and sloppy code and there is zero development to it.\n\nThat's why i have to leave this company.\n\nHonestly I really enjoy developing plugins/extensions, and templates for wordpress and Joomla, but there isn't a big enough market it for it. I had read a statistic that 43% of all sites on the web use wordpress. You'd think there would be tons of job openings for things like this, but I honestly dont see openings to often for them.\n\nId really like to work for a company that does custom joomla and wordpress development like https://corephp.com/. I know several of the developers over there and they good guys and extremely intelligent\n\nFotis Evangelou for example developed K2 (CKK) for Joomla one of the most popular extensions for Joomla at one point.",
                "author": "Prestigious-Spot-378",
                "score": 1
            },
            {
                "body": "Agreed, also seems OP is willing to put time into expanding their skill set. Keep in mind, I offered an approach for them to get the skills they want, while clocking a check. I do believe they need to move past their stated stack, but that realistically takes time, since there's a lot to catch up on",
                "author": "6Bee",
                "score": 1
            },
            {
                "body": "Just my 2 cents, but I'd still list jQuery in a resume, since you never know what kind of software a company might be using.  Also, not for nothing, but jQuery is used by 1/5th of all developers (according to SO survey), and is the 3rd most popular web framework.  W3Techs found (in 2023) that about **\\*\\*77%\\*\\*** of **all** web sites use jQuery.",
                "author": "swampopus",
                "score": 0
            },
            {
                "body": "185k",
                "author": "Zachincool",
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1744410560.0,
        "title": "Get your app up and running in seconds! Auth, db, subscriptions, AI chat, much more.",
        "author": "Tim-Sylvester",
        "id": "1jx2hcp",
        "selftext": "AI enabled coding with is a huge speedup. I can crank out a cool new feature demo in minutes. But I'd end up burning loads of tokens on [bolt.new](http://bolt.new/) or [lovablel.dev](http://lovablel.dev/) just to get a basic user context working reliably, when what I *really* wanted was to demo a new feature.\n\nTesting, flattening, cleaning out spaghetti, code duplication, race conditions, unnecessary complication, fixing tight coupling between components? That eats up the clock like crazy. And burns tokens like you wouldn't believe.\n\nI started building myself an app framework that I could reuse. I figure this is a typical problem, why not share my work with others? Here's what I've got:\n\nPrebuilt auth, database, subscriptions, AI chat\n\n* Supabase auth\n* Supabase db\n* Stripe subscriptions\n* ChatGPT components\n\nAI Chat\n\n* ChatGPT implemented\n* Designed in abstract to support multiple providers\n   * We'll set up Gemini, Claude, Perplexity, Deepseek, etc too\n* Saves user history\n* Users can continue conversations\n\nLayered API structure\n\n* Supabase edge functions backend\n* Zustand store state management\n* Stateless RESTful API client\n* Decoupled front end\n\nMonorepo for multi platform - one backend, one store, one API\n\n* Web app: React, HTML, Tailwind web app\n* Windows desktop: Tauri / Rust installer w/ web app frontend\n* Android: react-native (not ready yet)\n* iOS: react-native (not ready yet)\n* pnpm\n\nUser management & analytics (Fresh today, NOT FULLY TESTED YET!)\n\n* Google G4\n* Chatwoot\n* User signup email lists (Still needs a hook built)\n   * Abstract method\n   * Designed to support most existing email automation platforms\n   * Implemented with Kit (formerly ConvertKit)\n\nTesting & Integration\n\n* Essentially all features & functions unit and integration tested\n* Deno tests on backend\n* Vitest for API and web frontend\n\nDatabase and Deploy\n\n* Supabase edge functions good to go\n* Supabase config file should set your hooks & functions automatically\n* Supabase migration files ready to run\n* Ready to deploy on Netlify\n* Netlify config file set up\n\nThis was all pretty much built with Bolt, Lovable, and Cursor.\n\nRight now it's not running in bolt or lovable (they use npm) but we're working on fixing that. We might have to drop the monorepo and npm to do that. :/\n\nA few cool things - Stripe products update automatically. We see new products in Stripe, populate your database, and the frontend generates a card to display to users. If you remove or archive a product, it'll do the same in reverse.\n\nI'm getting that set up for AI providers now so their model updates happens automatically too. And new users should add to Kit automatically.\n\nMost everything is set up with .env so you can just modify one file to customize the deployment for your own accounts. Get your Stripe keys & webhooks, your OpenAI keys, etc., plop them into your .env, and there ya go. Put in Google Analytics, Chatwoot, Mixpanel, and Kit and you should be rolling.\n\nYou can throw it right into Cursor and have most everything you need working, reliable, and tested.\n\nWhen you're ready, hop over to Netlify, connect to your Github, connect to your Supabase, slap a domain on it, and watch your app slide out live in prod fully ready for use!\n\nThis thing will save you around 25 million tokens getting a basic user environment in place, ignoring what it takes to build and pass unit and integration tests and handle all the edge function and webhook sync.\n\nI think we're at probably around $100 value in saved tokens - and a lot more in saved time and stress - but I'll give away copies to the first people who sign up and start giving me feedback.\n\nSee it running at [paynless.app](http://paynless.app/), fork it at [Github](https://github.com/tsylvester/paynless-framework). I'd love to get your feedback!\n\n**NOTE: Provided AS-IS, no warrantees or guarantees explicit or implied. We made it work, but some things aren't done yet, might have been missed, or only work \"for us\". We have no idea what you're going to do with it.**",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1jx2hcp/get_your_app_up_and_running_in_seconds_auth_db/",
        "num_comments": 7,
        "comments": [
            {
                "body": "I... wouldn't touch any of that wearing a radioactive suite behind 10 miles of lining 20 miles underground.\n\nYou spent money to build a base framework that wouldn't take too long to build out using existing tutorials and documentation that would realistically be about 5-10x more secure than whatever AI spat out.",
                "author": "rjhancock",
                "score": 4
            },
            {
                "body": "eww",
                "author": "nickcash",
                "score": 2
            },
            {
                "body": "Seems a bit pointless tbh",
                "author": "Fickle-Decision3954",
                "score": 2
            },
            {
                "body": "The part you're missing as I remember building websites when the web was first born is that AI doesn't even have the skills to be an entry level coder and you're here saying it's done wonders for you.\n\nEither this entire post is a troll post, or you don't know what it actually built and just think it's great.\n\nSeriously, AI does NOT have the skills to do the boilerplate well and securely.",
                "author": "rjhancock",
                "score": 2
            },
            {
                "body": "> Is your objection informed, or is it dogmatic? Because what I'm hearing is that you're getting old and you're scared that you don't understand modern tools.\n\nIt's more informed than yours. I've used the tools, I've seen what they can produce. What they produce is shit. So if that is what you're considering to be a decent starting point then... You can't be anything better than a junior developer at best. Seriously.\n\nAI, in it's current state, is just glorified code completion. If your team of juniors takes a week to deploy all of the above, they can't be anything higher than entry level at best.\n\nI choose to monitor the tools and adapt when they are mature enough to be of benefit. You choose to adapt tools to be a lazy shit.\n\n> You can preach abstinence and rage into the void, or you can shrug and tell people to at least use a condom.\n\nWhat the fuck kind of childish bullshit are you spouting now? Did you use AI to write this as well child?",
                "author": "rjhancock",
                "score": 1
            },
            {
                "body": "Yeah man I remember pure HTML + CSS. My first language was ASM. Shit man I remember when we used to use Archie and usenet before Netscape launched! I literally had a phone book style directory for gopher. And then nobody would trust using their credit card online. And then every website had their own shopping cart.\n\nAnd Pizza Hut used to be dine-in and they stopped making good music in '95!\n\nAnd, and, and ... and the world goes on! \n\nIs it perfect? Nope! Is it better than what 90% of people who're vibe coding will gin up? Yup! So do you want them to use something perfect (which they can't and won't) or is it good enough to just use something *better*?\n\nIn literally seconds AI will spit out code that would take a four person team of junior devs a week to figure out. Yeah it's sloppy and half fucked but so's the code from the junior team. The difference is you get it now for $0, not in a week for thousands in labor. \n\nWhat I've seen this week, vs last month, vs last year, is literally exponential. \n\nIs your objection informed, or is it dogmatic? Because what I'm hearing is that you're getting old and you're scared that you don't understand modern tools.   \n  \nWhich - from a 43 year old to an (I'm guessing... ) 55 year old, buddy, it happens to all of us. We can either turn away, or open up. \n\nYou can preach abstinence and rage into the void, or you can shrug and tell people to at least use a condom. \n\nPersonally, I choose to embrace the new, and continue to be delighted by what's now possible. \n\nHow about you?",
                "author": "Tim-Sylvester",
                "score": -4
            },
            {
                "body": "I remember when I first learned to code, we didn't even have backspace! If we screwed up a single character, we had to start the entire file over! But the world moved on, and now we have things that I couldn't even dream of, wondering how Pacman worked. What only kind of works now, will be standard before long.\n\nThanks for your criticism, though, seriously, no sarcasm intended.",
                "author": "Tim-Sylvester",
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746815371.0,
        "title": "Small restaurant Point of sale / Online Menu / Ordering suggestions",
        "author": "xo0O0ox_xo0O0ox",
        "id": "1kipo4m",
        "selftext": "Hi! I’m working on a Client project. The client purchased and is rebranding an existing restaurant. I’m tasked with managing their online visual rebrand / website dev - I’m planning to use Wordpress for this project along with mass customizations :)\n\nClient inherited the online ordering/point of sale system from the previous restaurant owner on the Toast platform. (doesn’t appear to have any Wordpress integrations)\n\nI suspect my client may have inherited something that’s simply not great.\n\nClient’s restaurant is smaller and local, offering only online ordering for pick-up / not delivery, and in-person dining.\n\nWhile i can integrate the current Toast system through a simple link/button/cta on the site for now, my question is, what other online/point of sale systems or other options suited for small-scale restaurants are worth checking out? \n\ni don't want to recommend investing in Toast integrations if there's a better long-term solution.  The client does want to be hands-on with managing the menu/pricing/etc & i'd like to include the menu dynamically in the site at some point.\n\nTIA! xx\n\n",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1kipo4m/small_restaurant_point_of_sale_online_menu/",
        "num_comments": 4,
        "comments": [
            {
                "body": "Then they don't really care about their users. That's the best solution today (until they bump prices.) Best of luck!",
                "author": "dbpcut",
                "score": 2
            },
            {
                "body": "Toast is pretty much the leading provider. No one wants your custom work, they want it to work like every other online ordering experience with Toast.",
                "author": "dbpcut",
                "score": 1
            },
            {
                "body": "Yeah, except that's exactly opposite of what this particular client wants...",
                "author": "xo0O0ox_xo0O0ox",
                "score": 1
            },
            {
                "body": "i'm thinking bc they're the new owner they're not fully understanding \\~ ugh. ty",
                "author": "xo0O0ox_xo0O0ox",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1750180996.0,
        "title": "Free 2-Day Virtual Event: Learn How Top Agencies Are Using AI + WordPress to Automate, Scale, and Grow (June 24–25)",
        "author": "FluidStorage3416",
        "id": "1ldt5er",
        "selftext": "**If you run a digital agency, freelance as a developer or consultant, or manage client sites regularly — this free 2-day Cloudways event is for you.**\n\n**Agency Advantage** **(June 24–25, 2025) is a live, virtual summit** **designed to teach you how to build smarter, more profitable workflows using** **AI, automation tools, and WordPress**. **You’ll learn directly from agency veterans, AI experts, WordPress core contributors, and growth leaders. Some of those that will be speaking include Felix Arntz and Pascal Brichler, senior developers from Google.**\n\n# [Sign up for the free 2 day event here](https://www.cloudways.com/en/agency-advantage.php?id=1720384&data1=agencyadvutm_source=codeslearning&utm_medium=youtube&utm_campaign=agencyadvantage)\n\n# Highlights of What You'll Learn:\n\n* How agencies are replacing outsourcing with AI-powered workflows.\n* The future of WordPress site creation and automation.\n* Practical use cases for AI agents, chatbots, and strategic content.\n* Hands-on prompt engineering and workflow design sessions.\n* How to build scalable SOPs using AI to eliminate repeat work.\n\n# Featured Sessions Include:\n\n* *AI Roadmaps for Agencies* – Khushbu Doshi\n* *The Future of WordPress with AI* – James LePage, Pascal Birchler, Jeffrey Paul, Felix Arntz\n* *Scaling Without Hiring: Strategic Growth and Automation* – Tim Kilroy\n* *Building SOPs with AI Agents* – Robert Patin and Karl Sakas\n* *Prompt Engineering Lab* – Brent Weaver\n* *How AI Is Ending Traditional Outsourcing* – Tom Wardman\n* And many more live, tactical sessions\n\n# Additional Benefits:\n\n* Attend live or watch replays.\n* Earn **exclusive rewards and bonuses** for participating.\n* Compete on interactive leaderboards during sessions.\n* Network with over 2,000 digital professionals.\n* Get early insights into the **Cloudways AI Co-Pilot** currently in testing.\n\n# About Cloudways (in case you’re new):\n\nCloudways is a managed hosting platform that helps agencies and freelancers simplify client site management.\n\n**Features include:**\n\n* One-click staging and cloning.\n* Automated backups and free malware protection.\n* Streamlined billing for clients.\n* Built-in team collaboration tools.\n* Optimized hosting for high-speed WordPress performance.\n\n# [More on Cloudways](https://www.reddit.com/r/DealsExchange/comments/1l0z9k4/cloudways_is_a_standout_for_developers_saas/)\n\nDon't miss this **hands-on event** designed to give you real, deployable systems and automation tools to run your agency more efficiently.\n\nIf you’re serious about reducing manual tasks and scaling without hiring a large team, this is well worth attending.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1ldt5er/free_2day_virtual_event_learn_how_top_agencies/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1743907377.0,
        "title": "Looking for website proposal templates & advice for pitching a full redesign + custom back office",
        "author": "Aymsep",
        "id": "1jsk8rt",
        "selftext": "Hey everyone 👋\n\nI’m working on a presentation for a client who is a leading company specializing in professional training, certification, and international recruitment.\n\nThey want to:\n\n* Redesign their existing website (modern, clean, and responsive)\n* Add a fully dynamic back office to manage everything (job offers, training sessions, blog posts, staff profiles, etc.)\n\nI’m currently preparing a presentation to pitch the whole project — focusing mainly on:\n\n* Explaining the features of the future website\n* Showing visuals (even if I don’t have the exact final design yet)\n* Including real screenshots of a pre-made dashboard I’ve already built\n\nI’m looking for:\n\n1. **Examples or templates** for similar web project proposals or pitch decks (PowerPoint, PDF, Canva, Figma... whatever works)\n2. **Advice** on how best to communicate the value and structure of the platform, especially when I don’t have the final UI yet\n3. **Tips** on showing “inspiration visuals” without misleading the client or making it look like the design is already made\n\nIf you've worked on similar client presentations or have resources you'd recommend, I'd love to hear your thoughts 🙏  \nAlso open to any feedback or insights on structure, visuals, or what to include.\n\nThanks in advance!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1jsk8rt/looking_for_website_proposal_templates_advice_for/",
        "num_comments": 7,
        "comments": [
            {
                "body": "So you want to copy and paste someone else's work to present to your client?  Are you going to pay for this or should someone do this for you for free out of the goodness of their heart? \n\nMay as well just vibe it and ask ChatGPT.",
                "author": "Specialist-Coast9787",
                "score": 3
            },
            {
                "body": "You're welcome!  Looks like I'm the only one that responded to your post in the 4 subs you asked in. That should tell you something.",
                "author": "Specialist-Coast9787",
                "score": 3
            },
            {
                "body": "Figma",
                "author": "Gold_Gap",
                "score": 1
            },
            {
                "body": "thank you",
                "author": "Salt-Requirement-540",
                "score": 1
            },
            {
                "body": "There is always that guy , thank for your time.",
                "author": "Aymsep",
                "score": 0
            },
            {
                "body": "You’re right , but i got some interesting ideas and templates in my DM, have a good day",
                "author": "Aymsep",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746445080.0,
        "title": "F1 Fantasy tool kind of idea… is this even possible without zero coding knowledge?",
        "author": "Acrobatic_River_1890",
        "id": "1kf9fjc",
        "selftext": "\nHey everyone!\n\nBig F1 fan here, and I get really into F1 Fantasy. I spend a lot of time trying to figure out the best team, looking at stats, guessing who's gonna be good at which track...\n\nI had this idea for a website/tool that could help make those decisions a bit easier\n\nImagine a place where you could see:\n\nHow drivers actually perform on different types of tracks\n\nSome cool historical stats presented nicely.\n\n Maybe even some basic insights into potential points or price changes? (Not sure how feasible this part is!)\n \nMostly to view de performance of a team or a driver on a track.\n\n Quick look at the weather for the race weekend.\n\nBasically, a dashboard.\n\nI have basically zero coding knowledge. Like, nada. I wouldn't know where to start writing actual code\n\nBUT... I've been doing some digging!\n\n I actually found this cool API called HypRace on RapidAPI that seems to have tons of historical F1 data (results, drivers, tracks, standings - back to the dinosaurs, almost!). So getting the raw F1 data might be possible without scraping tons of tables myself. \n\n\nThis got me thinking about No-Code / Low-Code tools. I've heard names like Bubble, Softr, etc. Could these actually let someone like me build something like this visually?\n\nMy Big Questions :\n\n Is this idea even doable with No-Code tools?\n\nThe API has race results, but not the actual prices from the official F1 Fantasy game. How could I possibly get those updated prices onto my site without coding/scraping (which sounds super hard)? Has anyone managed something like this?\n\nHow would No-Code handle things like calculating potential points or suggesting optimized teams? Can you even build that kind of logic visually, or does it get crazy complicated?\n\nAny tool recommendations? If you've used No-Code for data-heavy sites or API stuff, which platforms felt intuitive for a beginner but were still powerful?\n\nJust looking for a reality check, any advice, tips, or maybe just to hear if anyone else has going down a similar path!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1kf9fjc/f1_fantasy_tool_kind_of_idea_is_this_even/",
        "num_comments": 3,
        "comments": [
            {
                "body": "It'll be tough, really tough. But if you're motivated enough by this project then it could be worthwhile.  \nBut if you're gonna spend a load of time learning these no-code tools anyway, you might be better off just learning to code. It's not as scary as it looks, but obviously it takes time.",
                "author": "Lewissunn",
                "score": 11
            },
            {
                "body": "Between learning the no-code platform and fighting the limitations that no-code creates you're probably better off just learning to code. It's really not that hard and tons of people are self taught.",
                "author": "PatchesMaps",
                "score": 8
            },
            {
                "body": "F1 fan here, as others have mentioned in the long run you’re better off learning to code than to work around the limitations of no-code and make compromises. If you do end up going down the code path, feel free to shoot me a dm and I’ll be more than happy to give you a few pointers as you progress through your project!",
                "author": "dotnet_ninja",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745287987.0,
        "title": "My Browser Zoo",
        "author": "IntegrityError",
        "id": "1k4v9hs",
        "selftext": "Hello, you may be in the same situation. You are working on several projects for different platforms and/or customers. You have a stack of resources, api documentation, maybe ms teams/jitsi platforms to collaborate on. So how do you differentiate all this as a developer?\n\nI've started to adopt a new browser for each task. Of course it would be possible to put them all in different Firefox profiles. But Firefox is my home browser, with all my private data. And even though, unfortunately, everything is Chrome these days, I think it's valuable to have Chrome, Edge, Vivaldi and others available to try out websites.\n\nHow do you manage different work setups, a slack here, a notion there? Do you use profiles in your favourite browser, different users in your OS or something else?\n\nCheers",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1k4v9hs/my_browser_zoo/",
        "num_comments": 4,
        "comments": [
            {
                "body": "In my Chromium I have 3 profiles: for work, for personal usage, for extensions and games.",
                "author": "isumix_",
                "score": 3
            },
            {
                "body": "Create different VMs or run different Operational systems per job",
                "author": "nil_pointer49x00",
                "score": 3
            },
            {
                "body": "I had been experimenting with Workspaces of Zen (and also Arc), it's kind of convenient.\n\nI had some tabs pinned to essentials (shared across workspace).\n\nAnd the other workspaces have pinned tabs that fits the scenario. Pinned tabs will reset to the pinned url everytime you restart the browser, or you can manually reset it.\n\nSo Project 1 will has all the relevant pinned tab like Notion (multiple pins like todos, docs, notes, etc.), relevant Slack, relevant docs page, github, etc.\n\nOne thing I like about Zen/Arc is also the split tabs with docs and notion or two different notion page.",
                "author": "CorruptedKnight0",
                "score": 2
            },
            {
                "body": "One laptop per remote job. ",
                "author": "iBN3qk",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746692481.0,
        "title": "Social login: age verification and children privacy",
        "author": "Good-Conference-2937",
        "id": "1khky7d",
        "selftext": "Hello, I am working on a piano learing platform (EU). My intent is to not target children at this point. When learning about privacy for my project I investigated how one education platform deals with children privacy. They have an age gate when creating an account then consent requirements and privacy tighten. But when you login to their site using social (Google) there is no age gate. Does social login create a loophole like this and this education platform is not compliant with their privacy policy? My main question: How to address age verification with social logins? I read that age is not shared with third parties typically. Should I have an age question before I initiate social login, after, or in between? Thank you.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1khky7d/social_login_age_verification_and_children_privacy/",
        "num_comments": 3,
        "comments": [
            {
                "body": "You can assume that everyone logging in using a Google account it 13+. This would be enough for due diligence in my mind.\n\nhttps://support.google.com/accounts/answer/1350409?hl=en#zippy=%2Ceurope",
                "author": "meisangry2",
                "score": 6
            },
            {
                "body": "To expand on this though. There is nothing wrong with having some onboarding form to get information irrespective of account origin.\n\nIf you need age/location/teacher preferences/favourite chocolate bar, etc. You can add that too, it’s probably not a bad idea if you need more info in general.",
                "author": "meisangry2",
                "score": 3
            },
            {
                "body": "Thanks.",
                "author": "Good-Conference-2937",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1748870576.0,
        "title": "Garlic-Hub: Open-Source, Self-Hosted Digital Signage CMS. Feedback Welcome!",
        "author": "sagiadinos",
        "id": "1l1hx25",
        "selftext": "I'm currently building Garlic-Hub in public and open-source, aiming to tackle some long-standing issues within the digital signage industry. It's an area that often lacks transparency, dominated by proprietary cloud services or outdated open-source solutions.\n\n**What is Garlic-Hub?**\n\nGarlic-Hub is a self-hosted, open-source digital signage content management system (CMS). A complete digital signage setup typically involves two main components:\n\n* **Garlic-Hub (the CMS):** This is a modern CMS built with a contemporary tech stack for ease of use and deployment. Here's a quick look at its core:\n   * **PHP 8.3** with the **Slim 4 framework**\n   * **Docker** for simple, portable deployment\n   * **SMIL** (Synchronized Multimedia Integration Language) as an open standard for playlists\n   * Modern **vanilla JavaScript and HTML5** on the frontend to keep dependencies minimal\n* **Player:** I've already developed a dedicated media player called **Garlic-Player**, which is designed to run on a variety of platforms including Linux, Windows, macOS (Intel + Arm), and Android.\n\nI'm really keen to get the webdev community's input on this.\n\n# Ways to Contribute / Feedback Welcome On:\n\n* What key features would you expect to see in a robust digital signage CMS?\n* Would you be interested in testing or using Garlic-Hub in your projects?\n\nI’d be really happy if you could star the repo to show your support:  \n[https://github.com/sagiadinos/garlic-hub](https://github.com/sagiadinos/garlic-hub)  \nLooking forward to hearing your thoughts and feedback!\n\n**Docker images** available (x86 + ARM64):  \n[https://hub.docker.com/r/sagiadinos/garlic-hub](https://hub.docker.com/r/sagiadinos/garlic-hub)",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1l1hx25/garlichub_opensource_selfhosted_digital_signage/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1747534794.0,
        "title": "We've built TideCloak - Provable, Keyless Security for Your Next App - Looking for Feedback",
        "author": "tidefoundation",
        "id": "1kp9gtx",
        "selftext": "We're a small team of researchers/devs who's been exploring new ways to tackle user identity, privacy and ownership on the web. After years of research and academic validations, we ended up coding a new approach that eliminates having any single 'master key'- effectively removing the greatest hacker target.\n\nWe've made this because:\n\n* We've seen too many breaches by no fault of the web tech (rogue admins, supply chain attacks, etc)\n* Traditional IAM systems sit at the center of all security with catastrophic outcomes when breached\n* We were after an approach where even when breached, there's nothing to steal\n* Certification and SLA are great - but ability to **verify** in realtime should be the only guarantee\n\nBasically, what it does:\n\n* It's a small extension of the open-source [Keycloak](https://keycloak.org) IAM that plugs into our decentralized \"cybersecurity fabric\". We call it TideCloak.\n* Users' identities are generated and operated as keys across the decentralized fabric, with no single node having access to any key.\n* The result: no one, not the users, an attacker, an admin or or even us can ever get the keys.\n\nWho this helps?\n\n* Admins never need to manage or rotate complex keys, or worry about the ID loss of a breach.\n* Users get \"self-sovereignty\" over their identity. No one can impersonate them.\n* When building a multi-tenant SaaS platform, you (the dev) don't need to worry about a breach of user credentials because not even you have access to it.\n\nGive it a shot:\n\n* The [GitHub repo](https://github.com/tide-foundation/tidecloak-client-nextJS) with a README that explain all you need to **get it up and running in minutes**.\n* A short Next.js example will demo how to integrate it to any sign-in/sign-up flow.\n* For the curious inquisitors, [here's](https://tide.org/blog/rethinking-cybersecurity-for-developers) a link to a series of posts describing the why and how in great detail. If you're really keen, our publications are available too.\n\nFeel free to poke around and ask questions. We're genuinely interested in hearing from you. For those interested in more than passively trying on their own, we've opened up a closed (free) alpha program and will be happy to engage on your project directly.",
        "score": 5,
        "url": "https://www.reddit.com/r/webdev/comments/1kp9gtx/weve_built_tidecloak_provable_keyless_security/",
        "num_comments": 1,
        "comments": [
            {
                "body": "This looks very cool. Will study your GitHub this weekend (and looking forward to doing it)",
                "author": "omniumoptimus",
                "score": 2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1729961756.0,
        "title": "QR Code mishap",
        "author": "folarinolabinri",
        "id": "1gcpivd",
        "selftext": "Hi, this is close to impossible, but like the title suggests, we printed the wrong qr code (static) for a site, although it goes to our site, it goes to the wrong page, so we get a customised 404 error, is there anyway we can do a redirect, that when users scan the qr code it takes them to the error page but redirects them to the page we intended for.",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1gcpivd/qr_code_mishap/",
        "num_comments": 20,
        "comments": [
            {
                "body": "Sure you can. The \"how\" will depend on your platform",
                "author": "PGurskis",
                "score": 32
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 12
            },
            {
                "body": "What do you use to manage your site?",
                "author": "UnacceptableUse",
                "score": 5
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 4
            },
            {
                "body": "Should be fairly straightforward! What'd be best would be to do it on the domain level, so you set up a redirect rule with whichever domain registrar you've got. If you can't do that for some reason though, put a page at that location which uses a bit of JavaScript to set the page location to the desired URL.",
                "author": "ic_nay",
                "score": 3
            },
            {
                "body": "Ahh so the qr code is already out and it opens up a broken link. You instead want this link to redirect to another link which isn’t broken. Got it. Yeah if you have access to the hosting of the broken link it can be redirected pretty easily. Using either htaccess or hard coding in the page itself",
                "author": "Shivansh_strange",
                "score": 3
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 2
            },
            {
                "body": "no, Godaddy, we use render as the server for the promo page",
                "author": "folarinolabinri",
                "score": 2
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 2
            },
            {
                "body": "[indomie.ng/flavors](http://indomie.ng/flavors) is the intended page but the qr code is for [indomie.ng/flavors.com](http://indomie.ng/flavors.com) we are yet to update the content for the former but that is were we want customers to go to",
                "author": "folarinolabinri",
                "score": 2
            },
            {
                "body": "so effectively you've now got a campaign lander!",
                "author": "dotnet_ninja",
                "score": 1
            },
            {
                "body": "the qr code is for a promo were customers can redeem their codes and this has gone out in communications. I have access to the hosting",
                "author": "folarinolabinri",
                "score": 1
            },
            {
                "body": "Yeah, the url in question is a valid url on the domain you own. It that sense it would be \"trivial\" to intercept that url. The intended landing spot /flavors is presumably allready coded up so why don't you just change the route handler to /flavors.com ?",
                "author": "Nearby_Statement_496",
                "score": 1
            },
            {
                "body": "Put the site behind cloudflare on a free account and then use page rules to direct the request to the right place.",
                "author": "TechnicalAd896",
                "score": 0
            },
            {
                "body": "you mean the host platform?",
                "author": "folarinolabinri",
                "score": 0
            },
            {
                "body": "This is the way!\n\nAdded benefit of cloudflare security also",
                "author": null,
                "score": 0
            },
            {
                "body": "The QR code is pointing to a page that doesn't exist, and that's throwing the 404, which is where OP needs the help creating a redirect\n\nEither the redirect needs to happen on the generic 404 page, like I said , or they need to create a page on the incorrect URLwhich negates the need for a redirect.\n\nAm I missing something?",
                "author": "d-signet",
                "score": 0
            },
            {
                "body": "Can’t you change the QR on the site? You don’t have access to the hosting?",
                "author": "Shivansh_strange",
                "score": -1
            },
            {
                "body": "An on-pqge redirect would have to go in your custom 404 page, which means every 404 error from now on will redirect to your new page. This might not be what you want.",
                "author": "d-signet",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1728407419.0,
        "title": "What framework would you pick for a robust platform, and why?",
        "author": "iamkharri",
        "id": "1fz509u",
        "selftext": "I am planning on building a robust platform like [this hr platform](https://github.com/frappe/hrms) and a product management like click up; platforms with lots of moving parts. I am a junior dev mostly confined to the react ecosystem and have had fun building with next js lately. I had a conversation with a senior dev recently and they said, providing no context, they would go with vue for such platforms.\n\n\n\nI would like to acknowledge a good developer would make anything work no matter the tool. Hats off to the vscode team, heard the entire software is built with html, css and js. With that I also understand various tools have their shortcomings and would like to understand them if I am to pick the right tool for the job.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1fz509u/what_framework_would_you_pick_for_a_robust/",
        "num_comments": 22,
        "comments": [
            {
                "body": "I would use Laravel. It's pretty to learn and its DX (Developer Experience) is un paralleled.",
                "author": "Laying-Pipe-69420",
                "score": 7
            },
            {
                "body": "This is purely preference. All of the front end frameworks can do this. All of the back end frameworks can do this. \n\nI'd say Vue for the front because I'm fastest with Vue. A react person would say React, a Svelte person would say Svelte, and Angular person would say Angular, etc.\n\nThe back end is the same deal. One person will say Express or Koa or Fastify or whatever node/bun/deno api framework they like, another will say .NetCore, another will say Go, etc.\n\nThis is pretty much just CRUD with a pretty face.",
                "author": "ScubaAlek",
                "score": 4
            },
            {
                "body": "I would use nuxt with CakePHP or Nitro",
                "author": "_rrd_108",
                "score": 2
            },
            {
                "body": "I neglected Laravel for so long, but just started using it at work and I’m quite impressed. I certainly understand the “right tool for the right job” and wouldn’t use it for every project, but it’s sped up dev time immensely. And it’s mostly a pleasure to work with. Plus, it has vast support online.",
                "author": "brock0124",
                "score": 2
            },
            {
                "body": "I hear good things about it all the time, my only experience with it though has been some legacy applications that were less than fun to work with.",
                "author": null,
                "score": 2
            },
            {
                "body": "Your comment makes no sense at all.",
                "author": "matshoo",
                "score": 2
            },
            {
                "body": "If it's my own projects I choose what I am most comfortable in and that is Svelte.",
                "author": "tripreality00",
                "score": 1
            },
            {
                "body": "There is no mention of what language you would select for the backend. Certainly JavaScript and Typescript are good choices. \n\nIf the backend is Python I would go with a lite weight framework like FastAPI.\n\nPHP I would use Symfony.",
                "author": "apextoolset",
                "score": 1
            },
            {
                "body": "React vs Vue is entirely subjective. They both work. \n\nI like Angular and Svelte for different reasons",
                "author": "halfanothersdozen",
                "score": 1
            },
            {
                "body": "I don’t know if there’s a right answer here. My last project was entirely native web components and TypeScript (no framework). That was the right decision for that particular application",
                "author": "PixelMaim",
                "score": 1
            },
            {
                "body": "Svelte for front, golang for back,you got \"optimized\" defaults ready to go",
                "author": "MichalZard",
                "score": 1
            },
            {
                "body": "I would use Nuxt on NuxtHub / Cloudflare.\n\nThe DX is great and many of the Cloudflare features (e.g. LLMs, DB, blob storage) are easily accessible and work out of the box.\n\nIn contrast to Vercel, the costs on Cloudflare are very reasonable.",
                "author": "tspwd",
                "score": 1
            },
            {
                "body": "T3 stack: \n\nNextJS, TRPC, Prisma. You can do front-end and back-end all in one place, and keep server and client separated nicely. The API is strongly typed so you don't need to do a bunch of work there. It uses react query so client components will access data easily.",
                "author": "No-Transportation843",
                "score": 1
            },
            {
                "body": "I would stick to the basics, a framework will always end biting you in the ass at some point. \n\n  \nie: don't use a framework. Use a simple router like Hono and a component library.",
                "author": "treedor",
                "score": 1
            },
            {
                "body": "Get ambitious. Step out of the box. Local first. [newspeaklanguage.org](http://newspeaklanguage.org)",
                "author": null,
                "score": 1
            },
            {
                "body": "Can use a lot of frameworks. I would use Svelte but I just love Svelte.\n\nThe main thing to do is use a package like neverthrow for robustness.",
                "author": "Graineon",
                "score": 1
            },
            {
                "body": "Nuxt ✋ Best DX, in my opinion, but maybe a bit too much for heavy projects?",
                "author": null,
                "score": 1
            },
            {
                "body": "Sure, but it's never a bad idea to think one or two steps ahead and figure out if the stack will be able to support future changes, whatever they may be.",
                "author": null,
                "score": 1
            },
            {
                "body": "I’m just happy I started with more complex/difficult frameworks (Zend/Laminas, Symfony), so I can appreciate how simple many things are in Laravel. I still love working with Symfony, but I’ll probably never reach for Laminas for a new project again. The framework was alright, but there was virtually 0 support for it online. Made it super difficult to work with.",
                "author": "brock0124",
                "score": 1
            },
            {
                "body": "Ah sorry i was thinking CRUD was being used in reference to a rest API. you'd still obviously do crud but it wouldn't be through http get.",
                "author": "No-Transportation843",
                "score": 1
            },
            {
                "body": "I would use Swift/Vapor for backend with Bootstrap frontend with otherwise vanilla JS for progressive enhancement.\n\nDockerize it.",
                "author": "rjhancock",
                "score": 0
            },
            {
                "body": "It can be achieved without CRUD using TRPC.",
                "author": "No-Transportation843",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746638242.0,
        "title": "[Product Survey] Help us understand your auth/DB platform choices (Supabase, Firebase, Auth0, Clerk, and more)",
        "author": "ViniForReal",
        "id": "1kh2x0u",
        "selftext": "Hi everyone! 👋\n\nI’m a Product Manager working with a developer friend on a new backend-as-a-service solution, and we’d love your feedback. Whether you’ve used Supabase, Firebase, Auth0, Clerk, Authn or something else, your insights will help us build something truly valuable for developers like you.\n\n**What we’re looking for:**  \nWe want to understand what drives your choice of auth/DB platform:\n\n* **Key features** you can’t live without\n* Pricing models you find fair (or unfair!)\n* Triggers that would make you switch away or cancel\n* Any must-have integrations or workflow needs\n\nIt’ll take just 3–5 minutes to answer the questions below—thank you so much for helping shape our product! 🙏\n\n# 1. What platform(s) are you currently using for authentication/database?\n\n# 2. Why did you choose it?\n\n• Top 1–2 reasons (ease of use, pricing, integrations, performance, etc.)\n\n# 3. What pricing model do you prefer?\n\n• Pay-as-you-go vs. flat subscription vs. tiered plans  \n• What price point feels “just right” for:\n\n* Hobby projects or prototypes\n* Small teams / startups\n* Growing businesses\n\n# 4. What features are absolutely essential for you?\n\n(e.g., social login, multi-tenant support, realtime, role-based access control, auditing, offline-first, etc.)\n\n# 5. What have you found frustrating or missing?\n\n• Any deal-breakers you’ve encountered?  \n• What would cause you to abandon the platform?\n\n# 6. If you could add one thing, what would it be?\n\n(Open-ended wish list!)\n\n# 7. Anything else you’d like to share?\n\nGeneral thoughts, wild ideas, or war stories welcome!\n\n**Bonus:** If you’d like to be part of more in-depth beta testing later, drop a “DM” in your reply or send me a direct message—I’ll follow up with an invite.",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1kh2x0u/product_survey_help_us_understand_your_authdb/",
        "num_comments": 2,
        "comments": [
            {
                "body": "I find inorganic dbaas survey spammers to be the most annoying part of dbaas",
                "author": "pampuliopampam",
                "score": 2
            },
            {
                "body": "My requirements are simple: open-source, free, and on-premise. Everything else is just a scam.",
                "author": "saschaleib",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745616972.0,
        "title": "Built the frontend for an AI art generator (Next.js + Tailwind) — dynamic image rendering in 3 aspect ratios. AMA!",
        "author": "Egotisticburhan",
        "id": "1k7wlme",
        "selftext": "Hey devs!\n\nI recently worked on a super interesting frontend project for an AI art generation platform. Users can generate unique artwork in portrait, landscape, or square format and order them as real framed prints.\n\nI built the entire frontend using **Next.js + Tailwind**, and the biggest challenge was rendering and maintaining clean UX across the 3 dynamic aspect ratios while integrating multiple APIs for generation, checkout, and order processing.\n\nHappy to break down how I handled the image layout logic, state management, or any performance tweaks if you're curious!\n\n\\[Fiverr gig link in comments — happy to help with similar builds\\]",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1k7wlme/built_the_frontend_for_an_ai_art_generator_nextjs/",
        "num_comments": 3,
        "comments": [
            {
                "body": "AI \"art\" 🤮",
                "author": "pambolisal",
                "score": 1
            },
            {
                "body": "Client requirements 🤷‍♂️",
                "author": "Egotisticburhan",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1746201325.0,
        "title": "Advice Wanted: Best Stack/Architecture for a Modular MERN Tool Suite (Solo Dev)",
        "author": "mutebeast2",
        "id": "1kd4glq",
        "selftext": "I'm a solo developer working on a long-term MERN project — a **web platform that hosts multiple tools**, starting with a small game. More tools will be added over time, and each may need its own logic, UI, and even its own database.\n\n# Project Vision\n\n* A single **landing page** (e.g., `/`) showcasing all tools.\n* Each tool loads at its own route (e.g., `/first-tool`) and might be maintained independently.\n* MERN stack (MongoDB, Express, React, Node.js).\n* Client-side routing via **React Router**.\n* Each tool could live in its **own GitHub repo**.\n* I want the setup to be **modular, maintainable**, and scalable as more tools are added.\n\n# Where I Need Help\n\n* Should the landing page and tools live in the **same repo or be split** (monorepo vs multi-repo)?\n* Is **Webpack Module Federation** a good fit for loading tools as micro frontends?\n* Can I **safely combine React Router with Module Federation**?\n* Should I **deploy each tool separately** (e.g., hosted on its own domain/subdomain and loaded remotely)?\n* Is managing **custom Webpack configs with Module Federation risky** for a solo dev?\n* Should I stick to Webpack or consider **Vite/Remix**, and are they compatible with Module Federation?\n* What’s the most **sane long-term approach** for a solo developer building a modular MERN-based tool suite?\n\nIf you've tried anything like this — or made mistakes I can learn from — I’d deeply appreciate your insights. Even partial feedback helps!\n\nThanks in advance 🙏",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1kd4glq/advice_wanted_best_stackarchitecture_for_a/",
        "num_comments": 2,
        "comments": [
            {
                "body": "my brother in christ you are way overthinking this.\n\nI'd start out with an nginx server put an index.html at the root, put each project in a subdir, call it a day.  Need a new db? Drop a  myCoolProject.sqlite3 file above the web root.\n\n\\^ This will outlive whatever trendy rats nest of node\\_modules the js edgelords claim as the perfect stack.\n\nWhen you hit an actual limit with the above approach, you'll have all the answers you need to choose a different tool to overcome the limit.",
                "author": "_listless",
                "score": 2
            },
            {
                "body": "My first question is -- what, if any, code/infrastructure do you think will be *common* to each tool. If there is something, what is it and to what degree is it common.\n\nThe answer is the difference between a portal with links to the tools; or an integrated experience across the tools.",
                "author": "adsyuk1991",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1741205178.0,
        "title": "A non-developer seeking help :)",
        "author": "e_piteto",
        "id": "1j4chpm",
        "selftext": "I’m developing a cultural project aimed at writers. One of the goals is to create a platform in which subscribed writers can publish serialized stories divided into chapters, similar to Wattpad, Royal Road, or AO3—but with a much cleaner, simpler design.\n\nThe catch? I’m a philologist by training, not a web developer. I currently own a [WordPress.org](http://WordPress.org) site with unlimited hosting space, so I’m wondering: Could my idea be achieved with existing plugins? For example, a plugin to manage user submissions, chapter organization, and a minimalist reading interface.\n\nI've already tried using PublishPress Series, which is, as far as my knowledge goes, the closest thing there is to the plugin I'm looking for. However, everything happens in the backend, and doesn't really seem intuitive for new subscribers. \n\nShould I reconsider PublishPress Series? Are there other plugins? Should I go for a completely different route? \n\nThanks in advance! :)",
        "score": 5,
        "url": "https://www.reddit.com/r/webdev/comments/1j4chpm/a_nondeveloper_seeking_help/",
        "num_comments": 7,
        "comments": [
            {
                "body": "Honestly your requirements sound too custom for wordpress, I mean you COULD do it in wordpress if you really wanted to but you'd either have to purchase some pro plugins or rely heavily on the use of custom php code, in that case a php framework could serve you better",
                "author": "Byte_Theory_202",
                "score": 3
            },
            {
                "body": "As a non-developer just stick to wordpress, even then you might need some professional help with it. The upside of using pro plugins is that most of them come with tech support, so at the least they will point you in the right direction for implementing stuff.\n\nIf there's really no budget for it, you could perform some of the tasks \"off-site\", for example let's say you want to let your users upload files to your site via a form, usually that's a paid feature which you could get around by setting up an email where users send their files instead, it's just more \"manual labor\", as in you'll have to download the file the re-upload it to your wordpress site, hope that makes sense",
                "author": "Byte_Theory_202",
                "score": 2
            },
            {
                "body": "Web developer here. I doubt such a site can be built using WordPress. It’s mostly used for static site generation, whereas yours is a fully dynamic site. The other user did mention some workarounds, which is a great idea, but I really don’t think users would put in so much effort every time they need to publish a new post. Even at a smaller scale, like 50 posts per day, it would take hours of manual work to download and upload data.\n\nSince you mentioned your budget is tight, I’d suggest halting this project for now. WordPress will limit your idea, you need something custom. The best approach would be to save up a significant amount and later invest in building the project properly. Also, don’t invest in it if it’s your only savings; it creates unnecessary pressure. I’ve personally seen clients who wanted to invest everything they had into projects like this, but I turned them down because I understood the stress they’d face while the project was in development.\n\nIf you understand that tech projects are risky and may not have the growth you expect, you will be stress-free. Understand that it’s a long-term game, and every effort you put in today will contribute to future growth.\n\nAt last, I’ll repeat again, don’t work on such projects if the investment is your only savings. You need some financial backup, as tech projects are risky and may take significant time to grow.",
                "author": "Used-Duty-4900",
                "score": 1
            },
            {
                "body": "Thank you! What kind of alternatives do I have, in your opinion? As a non-developer, do I really need to hire a pro, or is there something else I can do?   \nI'm asking as my project is 100% cultural and self-made, created without any budget outside of my everyday job.",
                "author": "e_piteto",
                "score": 1
            },
            {
                "body": "Thank you for the valuable advice. One of the reasons while I don't want to invest too much money on this project for now is the risk related to it. The whole project wouldn't be my new job, or not even my side job, as the scopes are purely cultural. I don't want to make money out of it, but I know I'll probably have to put in some money myself, at some point.",
                "author": "e_piteto",
                "score": 1
            },
            {
                "body": "Your website is basically like a social media platform specifically for your niche. The development cost will be a fixed upfront expense, but you'll also have recurring payments for servers and other infrastructure. Since it's purely cultural, make sure to discuss the financial aspects with your community, you’ll likely need to collect donations periodically or set aside some funds to keep it running.\n\nIf your community is strong, you should receive enough support to sustain it. However, ensure everything is clear from the beginning. I once had a client who started a similar project but had to stop midway due to internal conflicts and funding issues. So, it's crucial to have a solid plan before you begin.",
                "author": "Used-Duty-4900",
                "score": 1
            },
            {
                "body": "It does! Thank you :)",
                "author": "e_piteto",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1739865586.0,
        "title": "Do I need to anonymize stored cookie consent and can I display it?",
        "author": "JegSmaekker",
        "id": "1is7nui",
        "selftext": "As the title alludes to, I've gotten myself into implementing a cookie consent set up, in order to use Google Tag Manager applications, and still be GDPR compliant as we serve European users.   \nLooking through various sources online, it seems I would need a cookie consent log to prove that consent was given. \n\nMy question is, should i anonymize their IP addresses in the log? It seems counterintuitive if the purpose is to prove consent.\n\nAlso, would it be possible to display the different cookie consent choices on a per-user basis in the administration? So administrators what users have selected for their cookie consent preferences? \n\nThank you very much!",
        "score": 13,
        "url": "https://www.reddit.com/r/webdev/comments/1is7nui/do_i_need_to_anonymize_stored_cookie_consent_and/",
        "num_comments": 6,
        "comments": [
            {
                "body": "You could store a simple cookie like \"consent: false\". Functional cookies are not prohibited.",
                "author": "fivetide",
                "score": 24
            },
            {
                "body": "> My question is, should i anonymize their IP addresses in the log?\n\nStoring IP addressess would mean you need to store a users IPv6 and IPv4 address, since they might use either to connect to Google Tag Manager. Tracking this connection between the IPv4 address and the IPv6 address of a user would be considered personal identifyable information.\n\nAnother issue is that a users IP address can change as they are interacting with your website. What if they open your website while on a public hotspot, then move to mobile data as they lost connection. You now have an IP address inside your Google Tag Manager that is not found in your cookie consent logs.\n\nThis shows that IP addresses are not great identifiers for this\n\nYou need a token that identifies the user in both Google Tag Manager and your consent logs, while still preserving privacy",
                "author": "ferrybig",
                "score": 7
            },
            {
                "body": "Also, what is someone else is connected to the website through the same internet connection? They didn't consent.",
                "author": "EtheaaryXD",
                "score": 4
            },
            {
                "body": "Use a cookie to keep track of cookie consent. Problem solved.",
                "author": "DM_ME_UR_OPINIONS",
                "score": 2
            },
            {
                "body": "There is never really a need to roll your own consent process. You have Enzuzo, CookieBot, OneTrust, CookieYes and probably a dozen more that can be implemented on site easily without having to worry about all the mechanics of how to handle all the edge cases.",
                "author": "DigitalStefan",
                "score": 1
            },
            {
                "body": "Terms of service: the action of connecting and interacting with this website and is the same action used to provide your unconditional acceptance of our privacy and cookie policies, if you want to withdraw your consent you may do so at any time by emailing… \n\nEmail = blacklist",
                "author": "roadwaywarrior",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1732669090.0,
        "title": "Asking for a webdev role sanity check",
        "author": "HippoLaxitive",
        "id": "1h0s00m",
        "selftext": "I was hoping I could get some thoughts and observations about my current position and role. It doesn't make sense to me that my company is run this way, but here I am.\n\nWe are an e-Commerce company (with a couple physical retail locations) that does about $15m a year through our Shopify website. We also do almost that much through Amazon. We have maybe 110 employees, most of which are in product development and fulfillment.\n\nI am the sole developer in the company. We have 1 IT guy, who helps run Netsuite as well as all IT functions. We have a Director of Technology who just started and is the 3rd one we've had in a year, who will mostly own Netsuite. I seldom speak with these people as our roles don't overlap.\n\nI do *everything* regarding the website. I am a Front End Dev by training with 18 years experience (both in agencies and ecommerce). So, obviously I manage the functionality and look/feel of our site. I also build & launch all of our products in Shopify (800+ SKUs), as well as maintain all of their information/images. I build all of the themes to swap for different site changes, promos or product launches. I build all of the discounts and promotions and upsells.  I own probably 25 of the 3rd party apps we have installed in our store to add functionality, meaning I am the point of contact if any of them have an issue. Search, cart, bundles, reviews, subscriptions, Klaviyo, etc.\n\nOur Shopify store was built by an agency 2 years ago, yet somehow I was not involved in that process. I was tasked with keeping our previous store running. The agency customized a ton of code because the our people involved *had* to have this or that functionality (most of which are no longer with the company anyway). There are no code comments or documentation of what they did or changed. This is my first Shopify experience, and I am trying to pick up Liquid as I go.\n\nSpeaking of customized solutions... we are also running both a B2B and D2C solution off of the same platform that was NOT designed to do that natively. We have custom scripts running to calculate prices and shipping rules that don't play nice with other things we try to accomplish.\n\nI am also the point of contact for all of our employees for any issue with Shopify via Slack. I am 2nd layer support for any of our customers who have store issues our CS team cannot solve.\n\nI report to the marketing manager. She is not very technical. I make just over 90k. I work remote from home. Luckily, I don't touch anything order related, nor Amazon or Netsuite.\n\nI have to ask... This isn't normal, right?\n\nI am barely keeping my head above water. I don't have any actual QA. I don't have any technical support (beyond Shopify support). I don't have any back up. I work on a non-technical marketing team. We are in the depths of holiday, and as you can imagine, it is unbelievably crazy.\n\nDo other $30m a year companies run like this?\n\nI often get approached from our VP of marketing with some idea that GAP or Sephora are doing on their website. Sure, that's a cool feature. I'm going to assume those places don't have a single developer who spends half his day context-switching.\n\nI've been here 6 years. When I started, we had 3 back end devs and myself. Slowly, they left and were never replaced. Which was why we went to Shopify. I guess this has been a 'slowly boil the frog' situation.\n\nI know I should probably find another job, but I live in a place that doesn't have a ton of jobs, and every remote job listing I see has 100+ applicants before I've even read it. I'm burnt out, looking for a sanity check.\n\nThanks in advance.",
        "score": 16,
        "url": "https://www.reddit.com/r/webdev/comments/1h0s00m/asking_for_a_webdev_role_sanity_check/",
        "num_comments": 14,
        "comments": [
            {
                "body": "Sometimes yes this is normal. Sometimes a business hinges on 1 person. You are being significantly underpaid for what you do though. I would start building up information of how much value exactly you add to the business. As in how much your work contributes to their financial success. Management generally only speaks in dollars and graphs oh they love them some fancy graphs. Once done have a talk with management to see about getting a raise.\n\nThey've basically put themselves into a situation if you just decided to rage quit their entire business would crumble in a matter of months. You're the only person that knows their undocumented stack, lol. Wild.\n\nAs for quitting the general rule of thumb is don't jump ship until you've another job lined up. So if you do want to quit apply elsewhere and once you've gotten a job offer put in your notice.",
                "author": "krileon",
                "score": 15
            },
            {
                "body": "My opinion-champignon is that you are in a mad house, in one of those all pillow rooms, and once a year a burly guy dressed in greenish uniform comes in to inject _90k-sedative_ into your arm.       \nThis is crazy, the whole company will fall apart if you get sick for a couple days.                \nI would not stick around, however I don't have a job to lose so.. #notfinancialadvise",
                "author": "Ronin-s_Spirit",
                "score": 13
            },
            {
                "body": "OP is the hit by the bus problem personified",
                "author": "susmines",
                "score": 7
            },
            {
                "body": "Thanks for the feedback.\n\nI am getting a new marketing manager next week, and our President (who throws random crap from ChatGPT he thinks I can implement in a day because \"the code is all done!\") is leaving early next year. Maybe new management will be amenable to a raise.\n\nI was able to implement cart replacement app, which has brought in an extra $40k in the past 2 months alone. Of course, it was 2 weeks of testing because 3/4 of the features they offer literally break our custom code for our Wholesale customers, and it was such a strange corner case that I didn't catch until post launch. That was a fun day.",
                "author": "HippoLaxitive",
                "score": 5
            },
            {
                "body": "I'm in a similar boat, inherited 2 Shopify stores and a Wordpress corporate site. Though thankfully we have yet to come close to $1m in Shopify DTC/B2B sales and the company's bread and butter is selling wholesale directly to major retailers. You're making more than me, so I guess take comfort in knowing you could be paid less elsewhere.\n\nWrite bash scripts for your image editing and Webp conversions and stop spending time in Preview/Photoshop. Manage your content through imported mapped spreadsheets rather than through the CMS directly. Go headless and rewrite the front-end as you see fit if you have time. Try your hand at developing a theme using Dawn as a starting point to get a sane idea of how Liquid works.",
                "author": null,
                "score": 3
            },
            {
                "body": "Please save yourself, my friend.",
                "author": "dipeshparu",
                "score": 3
            },
            {
                "body": "I took a full week vacation in October. I killed myself for 2 weeks leading up and a week after.\n\nProbably wasn't worth it.",
                "author": "HippoLaxitive",
                "score": 3
            },
            {
                "body": "At least we have a team of 4 designers doing all of the images and web design stuff. I just have to implement and update. \n\nAs far as everything else, I basically have enough time in my day to get my shit done. I can look about 2 days in advance in Asana. Anything farther out I don't have time for. Let alone re-writing anything.\n\nWe are based off of Dawn and I use the default as a reference point as to what it was vs. what the abomination the code has become.",
                "author": "HippoLaxitive",
                "score": 3
            },
            {
                "body": "Copy and paste this post and attach it to your resignation letter. \n\n>  I am a Front End Dev by training with 18 years experience...  I make just over 90k. \n\nIf you are in the US maybe you should apply for some state government work, you can be responsible for less but allowed to grow, have a pension and get great PTO for similar pay.  It is pretty inexcusable for the private sector to be paying this amount of money for someone with 18 years of exp to be doing all of this.",
                "author": "Salamok",
                "score": 2
            },
            {
                "body": "Sure feels like it.",
                "author": "HippoLaxitive",
                "score": 2
            },
            {
                "body": "No, this is not normal. It sounds like you are in a very stressful situation as the sole developer for a company doing $30 million a year in ecommerce. Here are some key points from the post:\n * You are the only developer for a company doing $15 million a year through Shopify and almost that much through Amazon.\n * You have limited to no support from IT, QA, or other developers.\n * You manage the entire website functionality, product listings, and integrations with 3rd party apps.\n * The codebase is undocumented and heavily customized, making it difficult to maintain.\n * You are underpaid for your experience and the scope of your work.\nHere are some suggestions from the comments:\n * Start documenting your work: This will help you keep track of the changes you make and make it easier for someone else to take over in the future.\n * Look for a new job: The job market for web developers is strong, and you should be able to find a position that is a better fit for your skills and experience.\n * Negotiate a raise: If you decide to stay with your current company, you can try to negotiate a raise based on the value you bring to the business.\nOverall, it sounds like you are in a situation that is not sustainable in the long term. It is important to take care of yourself and start looking for a new job that will provide you with a better work-life balance and compensation.",
                "author": "Lumpy_Part_1767",
                "score": 1
            },
            {
                "body": "Thanks for the feedback. Nice to know I'm not crazy... Except for maybe staying here.",
                "author": "HippoLaxitive",
                "score": 1
            },
            {
                "body": "This is helpful. Thank you very much",
                "author": "HippoLaxitive",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745679111.0,
        "title": "Web first for task management app?",
        "author": "DelPrive235",
        "id": "1k8eqaz",
        "selftext": "I'm a solo dev embarking on building a task management app with some AI functionality. Can anyone recommend which platform should I be focusing on building first, both for functionality and adoption? \nI think the product would be more suited to desktop applications initially so I was thinking React for web (utilising shadcn components). Though I'm aware there will likely be more adoption on mobile (I'm an iOS user). \nWas initially considering using Flutter but after some testing and recommendations I don't think it's going to be performant enough for a task management app with drag & drop, long lists, etc. \nCan anyone help point me in the right direction. Are there any examples/data from other productivity startups and the approach they took? Thanks ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1k8eqaz/web_first_for_task_management_app/",
        "num_comments": 2,
        "comments": [
            {
                "body": "You can make a mobile-first web app to target multiple platforms, if it takes off, then go native on mobile (IMO).",
                "author": "skwyckl",
                "score": 1
            },
            {
                "body": "Thanks. Im not sure whether the full utility the app can be harnessed with a mobile web app though (user would have limited workspace with the mobile browser bars etc). I was thinking would maybe release the mobile web app 2nd, or a wrapper app for iOS.",
                "author": "DelPrive235",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1732509477.0,
        "title": "Trying to figure out how to better avoid this client situation",
        "author": "davelipus",
        "id": "1gzasf2",
        "selftext": "**TL;DR: When to know when to cut your losses on a new ricocheting client?**\n\nSomeone I knew tangentially from a business transaction was struggling to make ends meet with her new business, so I offered to help with my skills and interests, some of which I was learning.\n\nThings were progressing nicely, though she struggled understanding some necessary things with marketing and management. I can't call myself a pro with those things but I knew enough tangentially to make things work. I offered the services free to a certain point because I wanted the project on my portfolio and we got along well.\n\nHowever, when it came down to images, I mentioned that I'm not a designer. She didn't like that answer, and said the previous team (which she said she couldn't afford) did that. I offered to do the free parts and they could send me the images. She didn't want separate entities working on the project. I later learned they also wrote all of the content, and a lot of it looked AI-generated. I generally don't write content, though AI makes things easier, which she at least understood.\n\nMaybe this is the point where I should have cut ties: she said she has no money to spend, but insisted on a professional designer. Since I saw her just pay for something necessary for business management (not a big expense), I couldn't tell if she was being hyperbolic or not. I said, look, I don't know everything, but I'm offering you free marketing recommended by the hosting platform that the pros you paid didn't try. She kept going back and forth, eventually left on a \"let me talk to the other team\" note, and I figured why not see if I could just make the free marketing work.\n\nShe texted me some time later, saying she really needed bookings (she didn't have a scheduler set up, oddly), and I tried what I could, but after suggesting some shortcuts, she removed my access to the marketing page and ignored my texts.\n\nSo, while I learned some things about the tech/marketing stack, ultimately I couldn't even try what looked like would work quickly and cheaply for her situation.\n\n**Anyway, is it better to be more skeptical than this with new clients?** I'm sort of new at consulting in the wild world myself, and I don't want to insult anyone or lose good leads, but the ping-ponging and apparent mixed messaging surprised me near the end. Thanks for being patient and helpful.",
        "score": 12,
        "url": "https://www.reddit.com/r/webdev/comments/1gzasf2/trying_to_figure_out_how_to_better_avoid_this/",
        "num_comments": 14,
        "comments": [
            {
                "body": "[deleted]",
                "author": null,
                "score": 39
            },
            {
                "body": "Go read the book \"If you give a mouse a cookie\" and then ghost this woman.",
                "author": "halfanothersdozen",
                "score": 12
            },
            {
                "body": "I'm not really sure what the problem is. You offered help, in the end they rejected it. You haven't lost anything you weren't already willing to give up and they took a decision on what to do with their company. \n\nLooks to me like things worked out fine?",
                "author": "loptr",
                "score": 11
            },
            {
                "body": "Any project that starts by creating user-facing assets without having a defined feature set to be developed has set itself up for failure.\n\nShe had images, site copy, and other marketing materials in the pipeline, but no way for her clients to make bookings.",
                "author": "Caraes_Naur",
                "score": 6
            },
            {
                "body": "the funny thing is that after you treated you badly (at least according to you) - \\*she\\* ghosted you. Dude. That's enough helping this woman. Just get on with your life. You wanted to get some experience and you got it. Next time get paid.",
                "author": "vaaal88",
                "score": 5
            },
            {
                "body": "Sounds like she was a waste of time. Cut your losses and look for better clients.",
                "author": "MidasMoneyMoves",
                "score": 3
            },
            {
                "body": "Just don't do free work.\n\nAnd don't compete on price.\n\nLike \"yeah the other expensive team would do that? Then hire them.\"",
                "author": "thekwoka",
                "score": 3
            },
            {
                "body": "I've gotten rewarded from free work, like in education or networking, so it's not all about money.\n\nI did learn a lot from the project, as short as it was (maybe 4 hours cumulatively of discussion, research, and config), and had a plan to ramp it up to something profitable (as I'd seen someone close do the same before), but I know my limits.\n\nMy only concern here is recognizing an earlier sign of when to pull out. Is there anything you see in there, or is it only ever about the money?\n\nNote that I've been paid for projects that I realized later I should have pulled out earlier (I didn't get screwed, just the person in charged screwed the project). This one's a bit unique for me, and really isn't about the money anyway, but just about wondering where exactly to put the red flag on this one (again, when it's not about the money).\n\nI'm thinking maybe when she balked at my lack of design skills, but that seems too early; maybe when she didn't lighten up at me saying I could learn the simple styles they did or hire someone cheap, but I prefer being charitable to small-timers learning the ropes; maybe I need to be completely uncompassionate from the get-go and say \"here's my rate, sign the contract or be on your way\".",
                "author": "davelipus",
                "score": 3
            },
            {
                "body": "The thing about working with entrepreneurs is that most of them are egotistical. Most of them started businesses because they like being in control and making all the decisions themselves plus their egos can't handle being told what to do and how to do it. Most of them don't realize the decisions they're making aren't always good and they have to relinquish some power and control and trust to others in that regard. \n\nYou gotta tread carefully. You overstepped a boundary in taking matters into your own hands and seeing if you could make the free marketing work on her behalf. She probably saw you as overbearing and trying to take control over something she started. Hostile takeovers are a fairly common thing in business and something people have to protect themselves from. Plus if she wanted to be bossed around and manipulated and have zero control she could've gone out and applied for any job with any employer. 👌",
                "author": "HugsyMalone",
                "score": 2
            },
            {
                "body": "The less the client pays, the more of a pain in the ass they will be.",
                "author": "theChaparral",
                "score": 1
            },
            {
                "body": "If you give an \"entrepreneur\" a handout...",
                "author": "MrWewert",
                "score": 1
            },
            {
                "body": "The mouse created something great then wanted to repeat the cycle.\n\nThe child providing the supplies wasn't overburdened.\n\nThat's a poor example but I understand what you're saying.",
                "author": "davelipus",
                "score": 1
            },
            {
                "body": "We lost hours spent doing what she specified because she drastically changed it before we realized she didn't actually know what she wanted except after seeing it implemented or on a daily basis.\n\nI was OK with us spending free hours learning how to do things, but not continuing to do free busywork especially that got deleted or modified repetitively.\n\nWhen I stated she needed to write down the specs first, and that we'd only continue doing free work when we had to learn how to do something, she got mad.\n\nUltimately we abandoned her because she was still showing signs of being wishy-washy and not wanting to spend much. She just wasn't learning How to Be a Good Customer 101.",
                "author": "davelipus",
                "score": 1
            },
            {
                "body": "She did provide definition of what she wanted, and we worked with her to whittle that down to something realistic (minimum viable product or MVP), though we had to fill in a lot of details as she didn't really communicate very well. She understood that she had to have an MVP released first.\n\nThe problem was she kept changing things, and while at times it caused us to learn things (which we were fine with providing for free), when most of the major work we did just got deleted per her request, I made an ultimatum.\n\nWe had a way for her clients to make bookings, that wasn't the issue.",
                "author": "davelipus",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1720468759.0,
        "title": "Full Stack Devs, ever use low code to accelerate boring CRUD UI for large internal apps? Eg. Appsmith, Tooljet, Budibase, Retool, Superblocks.",
        "author": "gtderEvan",
        "id": "1dyig9t",
        "selftext": "I've built several small-to-medium full stack internal apps for departments within large enterprise using a Django/Postgres backend and React/React Native frontend. \n\nNow I'm building a large CRM/Inventory/Field Service management app for a small but growing company. The number of standard forms is huge, and it makes development so much slower than it needs to be. I built 80% of what's needed in Airtable in an afternoon, the likes of which would probably take me a month to do with custom code when you factor in data types, form validation, error handling, etc.\n\nBut then Airtable doesn't have the flexibility that I need for that last 20%, nor does it have the database constraints that I need. So I started looking for something that allows me to auto generate UI based on my data model, but also allows me to build custom UI where needed, and have a single cohesive system to use for the end user.\n\nIn my search, I've determined that the airtable-like systems (Baserow, Rowy, Smartsuite, Grist) are too inflexible, which lead me to the likes of Appsmith, Tooljet, Budibase, Retool, Superblocks. \n\n**For those of you who normally write all your own code, have you found yourself in a similar situation, and what tools have you used to solve the standard CRUD form creation problem?** \n\n**Any success or horror stories from using the platforms I mentioned?**\n\n[View Poll](https://www.reddit.com/poll/1dyig9t)",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1dyig9t/full_stack_devs_ever_use_low_code_to_accelerate/",
        "num_comments": 27,
        "comments": [
            {
                "body": "A month for 80 forms? With GUI, validation, data storage, and reporting? That’s amazing. I don’t think you need any other tools to speed that up.",
                "author": null,
                "score": 5
            },
            {
                "body": "Retool was great for my company initially, but as our dashboard grew and features became more complex it became a huge pain in the ass to work on.",
                "author": "avid-shrug",
                "score": 3
            },
            {
                "body": "You forgot UI Bakery (I'm not affiliated), which is my favorite; I manage prod apps in both it and Retool.\n\nYes, there is a reason that Retool is valued at $4 billion: using tools like it save companies a huge amount of time and money. There is a reason Open AI, Amazon, Snowflake, Plaid, Doordash, Pinterest, Unity, etc. etc. talk more and more about using these tools to build their admin apps.\n\nI've posted in these forums before how much time (read: money) companies save using these tools for internal apps, and got downvoted into oblivion...their loss. Using these tools, I can build a page -- using best practices like RBAC -- that has a paginated table, CRUD, etc. in about 1/5th the time as opposed to building it like we build our user facing apps.\n\nIf I have decision making ability, I won't ever build an admin app from scratch again, it costs *way* more and is *way* slower and requires *way* more upkeep.\n\nEdit: same as always folks, rather than just downvoting \"low code is for losers!?!\"....reply with a comment so we can see *why* you disagree. Especially if you're a senior full stack engineer working on large projects, would love to hear your thoughts.",
                "author": "PM_ME_SCIENCEY_STUFF",
                "score": 3
            },
            {
                "body": "I have used online form services from a variety of providers. They speed things up because they already take care of data storage and reporting, and offer a simple-enough GUI to create forms. For many a straightforward contact form, as well as for a sales funnel form and a multi-path survey, those suffice. If I want special validations that pertain to a particular client, some of those providers even let me set up some custom code. \n\nBut don’t expect to be in control of the data, and do expect to pay a lot to the provider for serving the forms and hosting your data. Don’t expect it to integrate with your client’s data and reporting systems either.",
                "author": null,
                "score": 3
            },
            {
                "body": "I've used retool, it's pretty astonishing what you can do quickly as a thin layer over a proper database. It's what MS Access should have been.\n\nIt's mostly used by backend engineers as internal tools in our org.",
                "author": "roodammy44",
                "score": 3
            },
            {
                "body": "This forum seems to mostly be very young, inexperienced devs that have somehow come to the conclusion that if you build an admin app using low code, you \"aren't a real developer\". They're missing the big picture: I and my development teams get to spend 95% of our time building features for our user-facing apps (and we use top end tools like Hasura, Relay, globally distributed serverless, etc.) and only have to spend 5% of our time on our admin apps. I highly doubt many of the downvoters are experienced full stack devs in leadership roles. I recently spoke to a senior engineer at a large enterprise SaaS that said they're rebuilding their admin apps entirely in low code, because the savings is so high.\n\nYou want a profitable business, you gotta focus on customers, not how pretty your admin app tables are.\n\nUI Bakery isn't as feature rich as Retool, although they are moving at a crazy pace. I like it better mainly out of preference, but you should compare them, Retool, and others based on what features are most important to you. E.g. UI Bakery just very recently added cursor based pagination; it has been a bit of extra work up to now without it, Retool had them beat on that.",
                "author": "PM_ME_SCIENCEY_STUFF",
                "score": 3
            },
            {
                "body": "I didn't say they'd be done well. ![gif](emote|free_emotes_pack|grimacing)\n\nIn all seriousness, I don't have a great frame of reference for what's a typical speed vs. other devs having worked solo for nearly everything. My frame of reference is comparing to what I was able to do in Airtable in an afternoon, which had me thinking \"there's got to be a better way.\"",
                "author": "gtderEvan",
                "score": 2
            },
            {
                "body": "What made it such a pain?",
                "author": "gtderEvan",
                "score": 2
            },
            {
                "body": "I've seen that to be true with things like Airtable. I hoped that the services I listed may fit in a niche that allows those default forms, while allowing me to keep control of data (whether with my typical Django+Postgres or Supabase, etc).",
                "author": "gtderEvan",
                "score": 2
            },
            {
                "body": "Interesting insight, ty for sharing",
                "author": "white_trinket",
                "score": 2
            },
            {
                "body": "You're thinking about it in terms of pages, when you should be thinking about it in terms of schemas and types.",
                "author": "WookieConditioner",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Are you sure you want to manually build each form? Maybe you want to dynamically generate them?\n\nIf you're an unemployed junior designer/developer it's very important to learn how forms work and standard coding practices including validation and sanitization.. good forms will get you hired... 99% of apps are crud apps..\n\nThere is platforms like [ASP.NET](http://ASP.NET) that will \"scaffold\" full crud for you based on your model.",
                "author": "Fickle-Perception723",
                "score": 1
            },
            {
                "body": "This is quite close to what you are asking but not sure if i will keep it going for much longer\n\nhttps://subzero.cloud",
                "author": "ruslantalpa",
                "score": 1
            },
            {
                "body": "I'm one of the founders of Creo ([https://trycreo.com](https://trycreo.com/)), and I believe our platform could be exactly what you're looking for. We offer a code-first approach, complemented by a VS Code extension that leverages AI to assist in writing the code for you.",
                "author": "TheSaifurRahman",
                "score": 1
            },
            {
                "body": "Hey, I have been using, #Dronahq. \nIt's a low code platform with  good flexibility, in term of app building, UI, Automations and data connectivity.  Also, it has pricing plans to suit different requirements.\nCheck it out. www.dronahq.com",
                "author": "algoware",
                "score": 1
            },
            {
                "body": "Have you considered trying out Reify instead?",
                "author": "tobifash",
                "score": 1
            },
            {
                "body": "DronaHQ has launched a dedicated data visualisation builder - for advance analytics. Its super dope- you should try it out.",
                "author": "Such_Advisor_7280",
                "score": 1
            },
            {
                "body": "Ui bakery in self-hosting or hosted on a VPS, the maximum limit is 5 users, correct? That is to say, if I want to create a spreadsheet-style software (horizontal aritrable-style form) as a database for multiple users in an OpenSource, only a maximum of 5 people (user) will be able to fill their database, right?",
                "author": "Narrow-Location-7268",
                "score": 1
            },
            {
                "body": "I have those defined already, so my focus was on the UI layer. Or are you saying that you think of form creation in terms of schemas and types?",
                "author": "gtderEvan",
                "score": 1
            },
            {
                "body": "What is a dynamic list",
                "author": "white_trinket",
                "score": 1
            },
            {
                "body": "DronaHQ is also a good option when it comes to building CRUD apps, also I have met few Retool users who are switching to DronaHQ as Retool lacks engineering support and becomes too costly when end user grows.",
                "author": "Think-Tax-1150",
                "score": 1
            },
            {
                "body": "That. You'll have a finite amount of from field types, with mostly finite validation methods, the schema can handle the types and validation. And from that point on its merely defining the relations for a given form, on a given page.\n\n\nIf i had a month\n\n\n\nI would build one master form with all the fields, get the types and validation working like a clock, then just feed a render function a object that defines the field order.\n\n\njson in\n\n--- validate ---\njson out",
                "author": "WookieConditioner",
                "score": 1
            },
            {
                "body": ">the schema can handle the types and validation\n\nOnly in very idealized scenarios is this true. I've rarely ever seen it in practice for more than basic forms and fields.\n\nE.g. a form allowing a customer service rep to update their daily availability. You're gonna need backend code, type/schema validation isn't going to be able to handle that complexity. Sure the start of my availability on Mondays needs to be a datetime, but there's a lot more than that, usually.",
                "author": "PM_ME_SCIENCEY_STUFF",
                "score": 1
            },
            {
                "body": "This seems right to me - and yeah, it looks like I'm getting downvoted into oblivion too, sadly - but I really appreciate your reply. \n\nWhat is your take on Retool vs UI Bakery - why do you prefer the latter?",
                "author": "gtderEvan",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1745919233.0,
        "title": "Help with IG Conversations API (OAuth2.0 issue)",
        "author": "AxelrodWins",
        "id": "1kajumh",
        "selftext": "Hello, I need some help with the Instagram API, specifically the Conversations API and getting message IDs via conversation IDs with my IG professional account user. The app is set to live but it has not undergone a review. I own the professional user account and am not requesting anyone's data. I am wondering if this is the issue for fetching the messages though?\n\nI have subscribed to the following Instagram (IG) API with Business Login webhook subscriptions for the following fields: comments, live\\_comments, message\\_reactions, messages, messaging\\_handover, messaging\\_optins, messaging\\_postbacks, messaging\\_referral, messaging\\_seen, standby (ie. all of them).\n\nI've signed into my app with the following permissions (and confirmed with the Access Token Debugger:\n\n`instagram_business_basic, instagram_business_manage_messages, instagram_business_content_publish, instagram_business_manage_insights, instagram_business_manage_comments`\n\nThen I exchange the short-lived token for a long-lived one for my user.\n\nMessaging API: [https://developers.facebook.com/docs/instagram-platform/instagram-api-with-instagram-login/messaging-api](https://developers.facebook.com/docs/instagram-platform/instagram-api-with-instagram-login/messaging-api)\n\nI can get the webhook data and reply to messages sent to my IG professional user account using this endpoint:\n\n`curl -X POST \"https://graph.instagram.com/v22.0/<IG_ID>/messages\"`  \n`-H \"Authorization: Bearer <IG_USER_ACCESS_TOKEN>\"`  \n`-H \"Content-Type: application/json\"`  \n`-d '{\"recipient\":{\"id\":\"<IGSID>\"}, \"message:{\"text\":\"<TEXT_OR_LINK>\"}}'`\n\nConversations API: [https://developers.facebook.com/docs/instagram-platform/instagram-api-with-instagram-login/conversations-api](https://developers.facebook.com/docs/instagram-platform/instagram-api-with-instagram-login/conversations-api)\n\nI can also get the conversation IDs sent to my user:\n\n`curl -i -X GET \\`  \n`\"https://graph.instagram.com/v22.0/me/conversations?platform=instagram&access_token= <IG_USER_ACCESS_TOKEN>\"`\n\nBut I can't get the list of messages (message IDs and timestamps) in the conversation:\n\n`curl -i -X GET \\`  \n`\"https://graph.instagram.com/v22.0/<CONVERSATION_ID>&fields=messages&access_token=<IG_USER_ACCESS_TOKEN>\"`\n\nI can't then use this to get the actual message content in the conversation.\n\nI am getting this error stack:\n\n{\"error\":{\"message\":\"Invalid OAuth 2.0 Access Token\",\"type\":\"IGApiException\",\"code\":190,\"error\\_data\":{},\"fbtrace\\_id\":\"REDACTED\"}}\n\nI get the same error when I try to find a conversation with a specific person:\n\n`curl -i -X GET \\ \"https://graph.instagram.com/v22.0/<CONVERSATION_ID>&fields=messages&access_token=<IG_USER_ACCESS_TOKEN>\"`\n\nThe access token is not expired and is the same long-lived one from the above flow.  \nI even used the conversation ID for a test user I made (who has accepted the invite).\n\n**How do I fix this?**\n\nThe LLM responses I am getting keep referring to the old Facebook Login way and that I need to use the [graph.facebook.com](http://graph.facebook.com)  endpoints but the Meta Developer docs I have been following (and working successfully except for this one) use the [graph.instagram.com](http://graph.instagram.com) endpoints.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1kajumh/help_with_ig_conversations_api_oauth20_issue/",
        "num_comments": 1,
        "comments": [
            {
                "body": "Fixed it.   \n  \n`curl -i -X GET \"https://graph.instagram.com/v22.0/<CONVERSATION_ID>&fields=messages&access_token=<IG_USER_ACCESS_TOKEN>\"`\n\nshould be:\n\n`curl -i -X GET \"https://graph.instagram.com/v22.0/<CONVERSATION_ID>?fields=messages&access_token=<IG_USER_ACCESS_TOKEN>\"`\n\nie. replace the first & with a ?\n\nOriginal call was copied straight from Meta docs 💀💀💀 here: [https://developers.facebook.com/docs/instagram-platform/instagram-api-with-instagram-login/conversations-api](https://developers.facebook.com/docs/instagram-platform/instagram-api-with-instagram-login/conversations-api)  \n  \nThe error is really not helpful...: {\"error\":{\"message\":\"Invalid OAuth 2.0 Access Token\",\"type\":\"IGApiException\",\"code\":190,\"error\\_data\":{},\"fbtrace\\_id\":\"REDACTED\"}}",
                "author": "AxelrodWins",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1730565616.0,
        "title": "1000 + apps no interviews ",
        "author": "Titoswap",
        "id": "1gi0k1n",
        "selftext": "Can someone give me some constructive advice ?\n\nhttps://preview.redd.it/s9gg6uj2oiyd1.png?width=652&format=png&auto=webp&s=a6e15972b17075c68de5c8b60d06eb70a9c330b9\n\n",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1gi0k1n/1000_apps_no_interviews/",
        "num_comments": 17,
        "comments": [
            {
                "body": "Everyone who looks at that resume will see that you’ve only been at first “big” job for 7 months and are already job hunting. It’ll be a major red flag. To be frank, you need at least a year (or even 1.5y) to have been there long enough that people looking at your resume won’t have questions.\n\n1k applications also means you aren’t manually applying to jobs you’re interested in, you’re using some kind of service to mass submit. People who receive those kinds of resumes will likely also be using automated tools to filter out resumes that don’t match criteria they set.\n\nThe things you’re describing that you did at your current job in only seven months are really impressive! So much so that, the way you’ve described them, it’s hard to believe that you did them on your own. Kudos if you did! But it looks like you’re pumping up your experience or not talking about the role that others may have played in it.",
                "author": "mq2thez",
                "score": 16
            },
            {
                "body": "You've been at Allstate since March. And already wanting to jump ship?\n\nMaybe that's what has other companies interested.",
                "author": "BruceBrave",
                "score": 14
            },
            {
                "body": "The numbers mean nothing. You're a software engineer, you do what you're tasked. \"Contributed to generating $150,000\" should be on the CV of the product manager or whatever. It adds zero value to your CV. As a main rule, for a software engineer, there should be no numbers present in the job descriptions. You may use terms such as \"Significantly improved...\" rather than \"Improved by 50%\".",
                "author": "Swedish-Potato-93",
                "score": 12
            },
            {
                "body": "Put education last. It's largely irrelevant in this field.\n\nI try to avoid stuff like \"increase sales by $$$\", \"improve efficiency by %%\", etc.. as they've no real frame of reference here and they've no means of even confirming that. I generally see it as BS when people put that on their resumes.\n\nSaying \"you enabled efficient lead management pipelines and follow-up processes through the CRM\" doesn't really tell me anything either. How? In what way? What was changed/improved? There's a lot of that throughout your resume and I guess could be buzz worthy for a recruiter that doesn't know the job, but if anyone technical reviews this they'd probably just pass as it feels like a bunch of buzz words.\n\nI however am no resume expert and is just my 2 cents.",
                "author": "krileon",
                "score": 9
            },
            {
                "body": "I'm going to give you the harsh truth after being on the other side looking at candidates for a role. Stop using software to automatically apply to jobs.\n\nStop looking for a new job. Stay at your current position and instead build ACTUAL projects.\n\nNo one cares about a \"Online music sharing platform\" if it's just some random not-polished app anyone can copy from a tutorial hosted for free on a [vercel.app](http://vercel.app) domain. Build a *real product* on a *real domain* that *real people* on the internet can use and get value from. THAT is impressive to employers. Then, you can link them in your resume, talk about them in your cover letter, and then talk about them in your interview.\n\nThese companies are legitimately getting 2,000+ applicants for their remote software dev roles.",
                "author": "bdlowery2",
                "score": 5
            },
            {
                "body": "You only have 7 months of experience they care about.",
                "author": "Interigo",
                "score": 5
            },
            {
                "body": "The first thing that pops out to me is random numbers and percentages that all sound made up. Unless your work involved working closely with accounting and have access to live financial information, there's no way you would know all that.",
                "author": "lousybyte",
                "score": 2
            },
            {
                "body": "When I was searching, one recruiter told me to list the tech stacks used under each job. Now I’m working, but not through that recruiter.\n\nI would put “Software Engineer, Allstate Insurance, Miami, FL … March 2024 - present” on one line, with the dates on the right and everything else on the left, but that’s a formatting thing. Search the web for “ATS resume” and see if they have a simpler format. Is there a reason that Experience has a different indentation that Education?\n\nYour descriptions all use passive voiced verbs. Change them to action words, and when applying, use words in what they are looking for in your descriptions.",
                "author": "SaltineAmerican_1970",
                "score": 1
            },
            {
                "body": "I thought resumes should include metrics like \"Contributed to generating $150,000\" because it shows quantifiable impact.",
                "author": "MoneyEqualsWin",
                "score": 1
            },
            {
                "body": "I’ve been asked about education 1 time in my professional life and similarly never asked any applicant.  \n  \nBootcamps have always been straight to the shredder red flags. Education in general is only relevant to someone’s very first position in an industry. The knowledge acquired in education is useless, but speaks to the ability to show up on time and complete tasks. Not getting fired for 3 months at a relevant job speaks to the same thing.  \n  \nIf you have even 2 previous positions vaguely related to the field you are applying for education shouldn’t even be on a resume.",
                "author": "nuttertools",
                "score": 1
            },
            {
                "body": "Nope, I am self taught and was able to find a job. In fact education mattered more in the past than it does now.",
                "author": "PsychoPflanze",
                "score": 1
            },
            {
                "body": "Sure :)",
                "author": "cpgibson",
                "score": 1
            },
            {
                "body": "Whenever you put something like \"contributed\", \"enabled\", \"facilitated, etc. in there, the question you should be answering is \"how\". Did you develop something that did this? \"Enabled\" and \"facilitated\" in particular are words that could mean absolutely anything.\n\nI think the examples like \"saved x dollars\" are good, but they could be improved by being more specific. Were you the one who proposed doing the changes that led to these savings?\n\nFrankly, if you really did 1000+ applications with no interviews with this resume, the problem is somewhere else. I don't think the resume is that bad.",
                "author": "jhartikainen",
                "score": 0
            },
            {
                "body": "Ditch the fluff and make 4/5 versions more specific to the role. We all know HTML/CSS so unless you're going for a frontend job and boasting specifics like Tailwind, bootstrap, Daisy etc it's just bloat.\n\nAlso Java, C, C++, NodeJS is quite a bunch and rarely mixed together at the level you are at, no entry level dev is gonna be thrown into a legacy stack unmarked and expect to be proficient in 4 full languages, go deeper and explain the intricacies of what YOU do with NodeJS -- same with the DBMS, once you know SQL you can pick up postgres or mysql in a day... It's not needed on a CV.\n\nFind a company, research their stack and target that. Your skills are good but we just don't care -- we want you onboard fast and upto speed with our companies specific services and infrastructure. Even within just a typical MERN stack app there's a thousand different little details that can derail how good a fit you are, have you worked with monoliths? Experience with deploying micro services with docker? These are much more important than a surface level knowledge of a dozen languages we may or may not need and that any reputable dev could pick up pretty rapidly if needed. \n\nAlso your experience is too vague, YOU built a full CRM in a role you started in march? Nope, so let's run into more detail about what you did and why we want you on our team because of that. What did you learn? What did you bring? \n\nThere's millions of fresh grads now with C language syntax experience and list the top 10 as proficient but tech is so fast changing and opinionated sometimes being more tunnel visioned is better. You know JS? Cool, react or angular? We use deno... Sure the experience in JS helps but it's much more impactful when you say oh yeah I use that specific tool daily.\n\nJust my thoughts as a technical founder who deals with a LOT of the same kind of CV and why I disregard a lot of them. As usual, mileage will vary but if your having no luck now, no harm in trying something new.",
                "author": "cpgibson",
                "score": 0
            },
            {
                "body": "Can I message you privately ?I have a few different versions I would like you to critique",
                "author": "Titoswap",
                "score": 0
            },
            {
                "body": "Not saying all companies, just saying mine in the past year or so. We have so many applicants and so few positions, we can not only be choosy, we need a way to quickly filter them because we can’t review that many",
                "author": "erishun",
                "score": -1
            },
            {
                "body": "> *Put education last. It’s largely irrelevant in this field.*\n\nNot anymore… maybe back when we were all living high on the hog and anybody with a pulse and a “bootcamp” certificate could get a job.\n\nTruth is, we don’t hire self-taught/bootcamp devs for entry level positions anymore. They often don’t work out for us. Honestly, it seems like they know just enough to fake an interview. \n\nWhen it comes time to actually do the work, it seems like they don’t actually enjoy being there… it’s just a “*easy way to make six figures with no degree!*” And they get cut pretty fast.\n\nNow that we get 100+ applicants for every opening, it’s easy to filter by “Bachelor’s Degree or higher”. We still have more people than we can even interview and the quality and good ol’ fashioned “give-a-shit” is way higher.\n\nNow if OP had lots of experience and was looking for a senior role, then yeah, you can cut education entirely, we don’t care you went to college 10 years ago. But for new grads, that education section is probably the only way we will even see this application. Without it, the app is just  getting filtered out.",
                "author": "erishun",
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1707055429.0,
        "title": "6 years as a paid Netlify user - My account was abruptly shut down",
        "author": "the_earl_man",
        "id": "1aiol65",
        "selftext": "edit 2/5/2024:\n\nMy sites are back online, so all is good now. My guess is that somebody at Netlify found this thread.\n\nA couple things to clarify: Netlify had every right to take down my sites after my bill went unpaid. That's not the issue. Telling me that I have to find a new service due to a phishing scam that I had no knowledge of, without allowing me to take any steps to fix it—that's the issue. (idk why I'm even saying this... the commentors who half-read my post aren't gonna bother reading this anyway)\n\nThat phishing domain, btw, was nowhere to be found on my account once I had access again.\n\nIf I had a client that paid me regularly for 12 months and paid late on the 13th month, I would undoubtedly give them some leeway. Most humans are like this.\n\n**Here's my best guess as to what happened:** \n\nThere were 3 issues 1) there was an unrelated api error since I had changed my email on Github, linked to my account 2) there was the unpaid bill 3) the domains had broke (still not sure why). \n\nMy guess is that the support team member was overwhelmed with all the issues and did the expedient thing, which was telling me to find a new service (not unreasonable imo), and hoped the issue would go away.\n\nI didn't go away, so she brought my ticket it to a supervisor or something. He couldn't figure out the issue, so he gave me a false reason for why my account was disabled. It's fixed now, though. Thanks Hrishikesh!\n\n  \n\\---  \nI've been using  Netlify for client sites for the last 6 years.  I had about 20 sites  published on there, 8 were for clients.\n\nA  few weeks ago I received notice that I hadn't paid for my subscription  (my life was a bit hectic with moving homes and holiday season, so I  didn't notice that one of my bank accounts had gone into the red).  Because of that, Netlify had taken down some of my sites.\n\nAfter  a few weeks, I took care of the unpaid bill (definitely too long, I  know). I waited about 12 hours and contacted support to check up on it.  Several hours later they told me the sites were up.\n\nOne site was back up, but the rest weren't.\n\nhttps://preview.redd.it/qk1kpo13skgc1.png?width=1006&format=png&auto=webp&s=9ffe1f66b1c051f17bbba70fcb4bcd77e2664d6e\n\nOn top of that, there was another issue - I couldn't log in.\n\n&#x200B;\n\nhttps://preview.redd.it/ffdi8eh4skgc1.png?width=842&format=png&auto=webp&s=180a11e056257464d303c2ecafb68839890f1ecf\n\n24 hours later, support sent me this:\n\n&#x200B;\n\nhttps://preview.redd.it/hqgeloi5skgc1.png?width=1238&format=png&auto=webp&s=1442c3fb55f8c74515fed22a1d903024424c9536\n\nI've been an independent web  developer for 4 years now, and with how saturated the market is, clients  are quick to find other options for getting their website built.  Thankfully, I'm not currently dependent on this income, but the trust  I've with my current clients has definitely been damaged.\n\nI asked for further information and received:\n\n&#x200B;\n\nhttps://preview.redd.it/7p3nu6t6skgc1.png?width=1516&format=png&auto=webp&s=e8d1bda14e3166f4a9922c60b12d7413ca10041c\n\nI'm entirely unfamiliar with the  website under question. I didn't receive any notice of the complaint  until after they disabled my account, and it's super frustrating that  rather than letting me do something about it, Netlify kicked me off the  platform entirely. like *I didn't even know*\n\nI  suspect that the account got hacked, or I unwisely signed up for some  AI site generator that was compromised and published a site without my  knowledge/consent, but it's so annoying that a service I've vouched for  for 4 years dropped me without warning\n\nI'm  going to look for another service now, obviously. Hopefully, it's not  too much of a headache to get my domains transferred. I just wanted to  get the story out so that people are aware. If y'all have any  suggestions for an alternative web host, lmk. Cloudflare Pages looks  pretty interesting right now.",
        "score": 87,
        "url": "https://www.reddit.com/r/webdev/comments/1aiol65/6_years_as_a_paid_netlify_user_my_account_was/",
        "num_comments": 24,
        "comments": [
            {
                "body": "Is domain in the screenshot yours (or client's) or not? It definitely have phishing vibe, bank of Columbia.",
                "author": "Modulius",
                "score": 81
            },
            {
                "body": "They handled the situation well and responded to you quickly. \n\nYou did not:\n1. Pay the bill\n2. Attend to the matter quickly\n\nIf you want a better web hosting experience, look inward.",
                "author": "OriginalPlayerHater",
                "score": 70
            },
            {
                "body": "\n  > I  suspect that the account got hacked, or I unwisely signed up for some  AI site generator that was compromised and published a site without my  knowledge/consent\n\nThose are two very different things to suspect. If you suspect the AI site generator caused this, there are a few questions.\n\nWhy aren’t your business accounts separate from personal? That’s a big red flag and poor move on your part for someone with 4 years of experience. If my personal information gets compromised, my clients shouldn’t be as well.\n\nIf you were using the AI generator on your business accounts which lead to compromise, were you trying to generate your clients sites with AI? Why play with fly by night AI generators on a business account? Poor form, those AI site generators are not that great and could be putting malicious code into your site.\n\nYour trust has been damaged and it’s not on netlify.",
                "author": "Dababolical",
                "score": 56
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 56
            },
            {
                "body": "\n  > I  suspect that the account got hacked, or I unwisely signed up for some  AI site generator that was compromised and published a site without my  knowledge/consent\n\nWhat does this even mean? How can you _not know_ if you \"signed up for some AI site generator\"?",
                "author": "marquoth_",
                "score": 37
            },
            {
                "body": ">I’m not currently dependent on this income\n\nIf your bank account is in the red then you really are. I get you had other bills to pay but getting your clients who pay you their site back should be the top priority.\n\nStrange about the phishing thing. Hopefully you get more info on which domain it was so you can cleanse it.",
                "author": "ShawnyMcKnight",
                "score": 35
            },
            {
                "body": "I’ve never seen it before. I’m not sure how it got associated with my account, and from what I remember it wasn’t in the list of my domains",
                "author": "the_earl_man",
                "score": 34
            },
            {
                "body": "To be fair to Netlify, my own negligence has led me to be banned from numerous services similar to this. Aws, digital ocean etc have shut down my accounts due to fraudulent or malicious activity due to me leaking env keys or other vulnerabilities. \n\nTLDR; your fault here. Reroll it, good luck",
                "author": "spamfridge",
                "score": 32
            },
            {
                "body": "Abruptly means sudden and unexpected.\n\nYour story is what would be expected. No payment, hence no service.",
                "author": "s13ecre13t",
                "score": 28
            },
            {
                "body": "Dude is a troll, check the username.\n\nIts completely reasonable to not pay a bill and then service gets disconnected, its also reasonable to then take care of that late bill and the service get reinstated to the condition it was previously.",
                "author": "The_Shryk",
                "score": 26
            },
            {
                "body": "The way that shame hits after your first compromise.",
                "author": "Dababolical",
                "score": 17
            },
            {
                "body": "Kind of sounds like the account to pay client bills was in the red not his personal one. Maybe shifts money from another account when he’s paid to prevent commingling, but you’d thing client funds would auto deposit into it.",
                "author": "CntrldChaos",
                "score": 16
            },
            {
                "body": "You're asking OP who forgot to check up on his bank account and then waited weeks to sort it out with the hosting. Imo op took a lil too much on his plate than he could handle. Tone it down and start having a checklist would be my advice for anyone who cares",
                "author": "Lucid_skyes",
                "score": 15
            },
            {
                "body": "what",
                "author": "Kippenvoer",
                "score": 8
            },
            {
                "body": "If he had the funds he shouldn’t have waited weeks to do it. If he is hosting his domains through them he better be thankful they didn’t give those up.",
                "author": "ShawnyMcKnight",
                "score": 7
            },
            {
                "body": "The odd thing to me is the timestamps.\n\nThe malicious activity was reported to have occurred from 1:40pm UTC on January 27th. That translates to 8:40 am ET.\n\n&#x200B;\n\nHowever, your initial response from support was at 6:40pm on January 27th. \n\n&#x200B;\n\nSo if your service actually stopped on all sites, then your account may not have been serving that content.\n\n&#x200B;\n\nHave you gone through all your code to confirm that nothing abnormal was present?",
                "author": "ApricotPenguin",
                "score": 3
            },
            {
                "body": "I feel like half of the responses here are not even reading your full post/question. I’ve been in the situation before where a bill gets overlooked and the account gets suspended. In my case it was a couple of weeks. I paid it and it was reinstated. That has nothing to do with the phishing thing. If I were to guess, it’s either super unlucky timing or it was something that had infiltrated your account previously but maybe wasn’t noticed. Maybe the process of reinstating the account triggered something that showed up on an internal scan. I highly doubt the company is lying just to get rid of you. I do find it weird that they didn’t give you a chance to fix the issue before booting you off though. It’s definitely weird all around. Do you by any chance host adult content?",
                "author": "chongoshaun",
                "score": 3
            },
            {
                "body": "There’s one in every thread",
                "author": "Rainbowlemon",
                "score": 3
            },
            {
                "body": "They don't have auto unsuspend for paid account? its pretty surprising to have such slow billing team. If you are in hosting industry 24x7 customer support is must, as most of the online business is mission critical business.",
                "author": "webhostuk",
                "score": 1
            },
            {
                "body": "The fuck is this title, You didn’t pay the bill ffs and wanna make it sound like Netlify’s fault? Suck it up, own your mistakes, fix it and move the fuck on.",
                "author": "DataScientist69",
                "score": 1
            },
            {
                "body": "\"I thought those were just warnings.\"\n \"They were warnings.\"\n\"Well, no one warned me.\"",
                "author": "Seer434",
                "score": 1
            },
            {
                "body": "It's easy to judge. We don't know the full details of what's going on in their life.",
                "author": "SaltAssault",
                "score": 1
            },
            {
                "body": "I totally get that, my initial comment was that they said they were not dependent on this income but considering they said they were in the red and unable to pay any of their bill... I would say they were.\n\nSince this effects their clients' business and therefore THEIR livelihood it's probably best they don't take hosting fees from them (if they do) and let them pay for their own hosting.",
                "author": "ShawnyMcKnight",
                "score": 1
            },
            {
                "body": "I'm confused, so do you think that they banned my account because of the unpaid bill and just made up the notice about the phishing site so I'd leave the service?",
                "author": "the_earl_man",
                "score": -17
            },
            {
                "body": "Found the corporate bootlicker with nothing better to do",
                "author": "FullMe7alJacke7",
                "score": -34
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": -77
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1717881733.0,
        "title": "I'm getting an insane amount of spam on my bookmark manager, and it's forcing me to change how I do things.",
        "author": "TheThingCreator",
        "id": "1dbd5ur",
        "selftext": "People/companies have set up bots to create fake accounts on my bookmark manager platform and add thousands of bookmarks to scam websites, logout and repeat. No one will ever see these bookmarks yet they continue to grow, and it's been going on for years. It's now starting to add pressure for me to do something about it. I can only imagine how bad this would get if my tool had no login page. The way I see it, the only options I have left are to add a captcha or and add email verification as mitigation tactics. Goal is to hopefully reduce the spam. What other option is there?",
        "score": 19,
        "url": "https://www.reddit.com/r/webdev/comments/1dbd5ur/im_getting_an_insane_amount_of_spam_on_my/",
        "num_comments": 25,
        "comments": [
            {
                "body": "You... don't have email confirmation for your login? Or a way to filter out known bad domains?",
                "author": "rjhancock",
                "score": 39
            },
            {
                "body": "If people actually use the service please don't do the bottom one or at least set it to a few years, that's a terrible idea\n\nPeople could reasonably not use a service for a couple months, especially something like a bookmark manager\n\nEdit: If anyone is considering doing this go and look through your password manager at the some of the accounts you rarely use. How would you feel if one decided to delete all your data without warning after a couple months?\n\nMaybe 3-5 years might be a reasonable time *however* you'd also have to give plenty of warning, send tonnes of emails reminding the user that on X date if they don't login then their account will be closed. After this retain the inaccessible account for another Y amount of time before finally deleting and purging the data",
                "author": "ward2k",
                "score": 19
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 18
            },
            {
                "body": "Add captcha.\n\nAdd email verification.\n\nFilter out any “disposable” or temporary email addresses\n\nForce users to login every X months or you will automatically purge their data",
                "author": "erishun",
                "score": 14
            },
            {
                "body": "47% of security attacks target small businesses.\n\nAlways add email verification, even if it is a demo page.",
                "author": "Lumethys",
                "score": 11
            },
            {
                "body": "Which OAuth provider?\n\nGoogle, where you NEED a gmail on google's side?\n\nFacebook, where you create an account using email?\n\nGithub, where an Email is REQUIRED in registration AND  2FA?\n\nOAuth integration just means user email is registered in someone else's service instead of yours.\n\nAlso depend on the type of project user's data must be manage by your service and not by third party.\n\nSo i suggest do a little research before you criticise others",
                "author": "Lumethys",
                "score": 8
            },
            {
                "body": "Agreed",
                "author": "TheThingCreator",
                "score": 5
            },
            {
                "body": "Ya there's been a few people trying to convince us to take the registration off and it was getting upvotes here",
                "author": "TheThingCreator",
                "score": 4
            },
            {
                "body": "Its part of the product journey, fren.\n\nAdapt. Change. Embrace the fluid mindset. This wont be the last problem. Just a bump in the road.",
                "author": "waldito",
                "score": 2
            },
            {
                "body": "A few other ideas:\n\nYou could add a cool down period. Only allow them to add 20 per hour, then make them await 20 minutes if they max it out.\n\nHave a maximum number of free bookmarks per user. What's a reasonable amount? 200? 300? After that, offer a $2 (or whatever) lifetime subscription. That's cheap enough that a legit user wouldn't mind. Expensive enough that bots will be deterred.\n\nReactor your DB so that you don't duplicate URLs. Have a table for base URLs, where each get stored once. Another to store unique paths. Another that creates the 1:M relationships between users and URLs, and a hash of the paths that they have stored for that URL.\n\nCloudFlare has free plans. I'm not sure if it includes bot mitigation, but it would be worth looking into.",
                "author": "jaunonymous",
                "score": 2
            },
            {
                "body": "Find out the frequency to which your actual users add a bookmark vs the bots. Set a cooldown timer for each user accordingly. I think that should solve your problem.",
                "author": "sur_yeahhh",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": 1
            },
            {
                "body": "This is kinda wild to me, because I actually started using this service (WebCull) like 3 years ago 😅. I eventually switched over to a FireFox extension called TabStash, but it's still interesting to see this post here.\n\nWhat I'd recommend is that you allow a certain number of bookmarks, let's say 50, before a user  *at minimum* needs to confirm their email. That way you still get the benefit of easy onboarding, but you prevent spammers from consuming too much resources.",
                "author": "TheGuy564",
                "score": 1
            },
            {
                "body": "This is definitely food for thought. we use cloudflare",
                "author": "TheThingCreator",
                "score": 1
            },
            {
                "body": "hmm, at best i think this would just slow down the bots down a bit. There's already an asynchronous network handler in place so speed is kinda throttled already. Not sure more effort in that area, would be worth it. Each bot is adding only about 10 to 300 bookmarks but they are doing it many many times per day.",
                "author": "TheThingCreator",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "1. There is absolutely no benefit, they probably think there's some kind of stats page someone will see, but there isn't, its just waste of energy \n2. I don't think you understood the scale. Its probably about 1000 daily and been going on for years. This mentality is what I've been going with so far, but I'm thinking its time to deal with it\n3. Ya I'm wanting some sort of self hosted solution, I don't want to add a service to the login page\n4. Not willing to spend money on something like that",
                "author": "TheThingCreator",
                "score": 1
            },
            {
                "body": "Cool, thanks for the reply. Always great to connect with a past member.\n\nThat's a good idea except it rewards creating more new accounts which is something I'd like to slow down. Already a lot of the spam comes in small groups but a lot of different fake accounts.\n\nAnyway thanks for getting in touch. I'm curious what made you switch away from webcull. Btw we have also launched new browser extensions and launched end-to-end encryption.",
                "author": "TheThingCreator",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "You've literally agreed with what i have said in the way you have worded your statement.\n\nIf a user requests you delete their data or you give them a copy of all of their data, under GDPR a company must comply within 30 days.\n\nLegally some data cannot be deleted for a period of time, but the longer you hold someones PII the more risk you have that if a data breach was to occur (and usernames CAN be considered PII) GDPR laws will catch up to you.\n\nYou can disagree with me all you want, i consult businesses on this with their legal teams. Ive been involved in a number of data breaches, i know the process and what the Information Commissioners Office will ask for. Indie devs are not exempt from protecting peoples data within the EU at least - easier to deal with corporations as they tend to trade as a legal entity within an EU country.",
                "author": null,
                "score": 1
            },
            {
                "body": "I actually think it's good. Data retention isn't free (if you think from a business perspective) also less GDPR risk holding data for only the length of time necessary.\n\nIve received many emails about accounts being purged for inactivity, i delete the record from 1Pass and let them delete my data because I'll make a new account if i need it. Equally logging in to retain the account isn't a big deal.\n\nA lot of people care about how much data you store about them and for how long in today's world.",
                "author": null,
                "score": 0
            },
            {
                "body": "If this is a bookmark manager this is definitely data people care about though, this isn't some API key being revoked this is potentially hundreds of important bookmarks people need to remember\n\nImagine going on extended leave for Illness, paternity/maternity leave, a gap year from university, extended traveling or various other things that could potentially stop you from being able to access a service for a couple months.\n\nNo one outside of pretty small startups would consider purging all data for an account after only a couple months, that's an incredibly short amount of time. If people are serious about this they need to be thinking about years\n\n> also less GDPR risk holding data for only the length of time necessary\n\nFor this context there is no GDPR risk. GDPR is context specific, for bookmarks there would be an expectation for a much longer period of time, it's user submitted data for storage, the user expects this data to be retained in storage for future use, there would be no GDPR expectation to delete this at least for a few years of inactivity.",
                "author": "ward2k",
                "score": 0
            },
            {
                "body": "I completely disagree, for context I'm very informed around GDPR given I will consult key business stakeholders on risk from a technical point of view.\n\nAlso, I never said purge all data after a couple of months, 6-12 months of no access activity should result in a 30 day notice, then automated destruction of data. \"Simply login and the process resets in 12mo from that point\"\n\nIn todays world data is king, as consumers we should care about:\n\n- What information we give to whom, and\n- For what purpose, and\n- Who has access to the data, and\n- For how long is the data stored.\n\nLuckily GDPR covers exactly this. so the ignorant people still have protections. So what are the risks?\n\n- There is a feature that enables a user to authenticate, this would require some level of information to identify an individual.\n- Publishing bookmarks would link a user to specific websites.\n- Some of those websites could be very personal to the individual or maybe not, it sounds like the bookmarks are only accessible by the user.\n\n> No one outside of pretty small startups would consider purging all data for an account after only a couple months\n\nThis is misinformed, under GDPR data is categorised into classifications, under which certain types of data needs to be controlled very differently and very separately. A user who gives up that data has many rights to know what data you have on them, for how long you will keep it, what you use that data for, who has access to this data for what purpose and in many cases request you delete it.\n\nWhat might seem quite trivial, can actually become a GDPR headache - easiest solution is only store what you need, for as long as absolutely necessary.\n\nThe OP has already outlined a number of risks which they didn't think they needed to solve right away, which makes my point quite important - Look at https://haveibeenpwned.com/ to see how just an email address is problematic and generally considered PII.",
                "author": null,
                "score": 0
            },
            {
                "body": "Nothing lol. At first it wasn't a big deal but ya its becoming problematic now",
                "author": "TheThingCreator",
                "score": -14
            },
            {
                "body": "More like a google account comes with a gmail address. That’s irrelevant.\n\nFacebook does not require email.",
                "author": "geon",
                "score": -20
            },
            {
                "body": "Why would there be an email address tied to the account? A lot of people don’t have email now. Younger teens don’t even know what email is.\n\nEmail just isn’t THE online identity anymore.\n\nDo proper oauth integration instead.",
                "author": "geon",
                "score": -31
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1742451290.0,
        "title": "As a senior full stack web developer, I want to switch career and learn game development",
        "author": "Myphhz",
        "id": "1jfigtt",
        "selftext": "As a senior full stack web developer, I am heavily considering switching to game development industry and wanted to share my thoughts. \n\nI don't want to sound full of myself, but I'd consider myself a damn good programmer. I got into computer science when I was 14, self-taught, and I explored many different programming areas and languages, like Python, C, Rust. I've always been passionate about programming ever since I was a kid. I used to really love working with it and creating programs.\n\nIn the past \\~4 years, I've worked as a full stack web developer and learned all the quirks of JavaScript, TypeScript, front-end frameworks, Nodejs, ecc, but I feel like I've hit a ceiling to my skills. I just don't really find it exciting. \n\nWhat I like about programming is the math-like aspect, finding solution to problems, creating complex systems, stressing out over bugs - all of which are limited in front-end development. Front-end surely has a lot of logic when integrating with backend or creating complex UIs (I call that \"the backend of the frontend\") which I like doing, but I feel like that's just \\~10% of my work. The remaining 90% is always the same: pick a framework, start designing components, write CSS or Tailwind... It's very mechanical and doesn't really involve a lot of logic. I never liked writing HTML or CSS - it involves little logic, it's just the presentation layer.\n\nI got into web development because it was so versatile and perfectly suited for my personal projects. The web is the most accessible platform for software on Earth, and the vast majority of real-world problems that can be solved with software are suited for the web, involving presenting data in a neat way. This versatility allowed me to create so many different projects which I loved doing, and this is how I learnt. But I think there's a ceiling to the things you can learn about programming in webdev, and it's way less about proper computer science and involves more \"mechanical\" kind of work. \n\nIn game development, you get to work with lower level languages and really handle all of the logic of the game. You get to create everything, need to handle all of the logic. It sounds like a much more complex and intriguing task than just creating a website or a backend service, something much more involved with \"proper\" computer science concepts. I think I would also really like working with lower level languages as you have much more control over what's actually happening and need to manage all the details by yourself - this sound so much more exciting than writing React components. \n\nFurthermore, I think web developers are probably the most common kind of developer, and there is a stigma around web developers which I think is partly true. I've met many full stack devs that lacked understanding of basic computer science concepts, but could get on just fine thanks to the modern tools we have. I think the gate to access web development is much lower, it's much more accessible (which definitely isn't a bad thing!), but also not very fulfilling if you are really passionate about programming. It often attracts people that are not really passionate about development, they're just in for the money (nothing wrong with that!), it's probably the easiest branch of programming to get into professionally, as it doesn't involve complex logic (most of the time). Hopefully, this happens less often for gamedev?  \n  \nI also feel like there's a lot of bullshit going on in webdev from a tech point of view. JavaScript is objectively a mess. TypeScript is a patch that fixes many issues, but some underlining one still remain. Many front-end frameworks are so convoluted and over-engineered (looking at you, React and Nextjs), and for the ones that it's actually pleasurable to work with (Vue, Svelte) - there aren't really that many jobs. Also, I don't find the tech behind these web frameworks particularly interesting anymore. I also don't like how AI is becoming more and more important in this field (hopefully it is less present in gamedev?)\n\nOn a personal note, I feel a need to work on a big personal project. Something that would take me years. Something that I'd love to work on, and that I can be proud of. Something to leave behind when I'm gone. \n\nI just think that at the current state, there isn't anything web-related that would make me feel that way. I feel like I've already hit the ceiling, there is little new to learn, the feeling of novelty is long gone, and most project that I'd make are just a matter of time, not skills. I'm not saying that it's easy or that I know everything - it's just that I want to be part of something more exclusive, \"go to the next level\" of programming, working more with truly passionate people (which I think are really hard to find in webdev!) and bigger projects.\n\nGamedev sounds so exciting because it's a huge field and there's a lot to learn. I have a good base of C (although I haven't made many projects with it) to build upon, and I'm sure that my knowledge of webdev and programming principles would be really useful. It also sounds much harder and exclusive, something that would make me much more fulfilled and proud to be a part of.\n\nThe journey to learn gamedev will definitely be long, but I think it'll be so exciting! I really missed the feeling of novelty, that feeling of slowly understand how everything works, learning the quirks of the language. That feeling of not knowing and having to figure out how things work. For example, I recently started looking at C++, and I learnt that the common way of initializing a variable is using this syntax: int x { 2 }, instead of the common int x = 2, and this made me so excited!\n\nI also believe that gamedev industry has a way higher barrier to entry, so it's much harder to become a gamedev rather than being a webdev, but once you do that, you're set \"for life\", especially at senior levels. This is definitely also true for webdev, but perhaps even more so for gamedev?\n\nI had a meeting in-office with someone I met at a party last week. They showed me around and talked about what they're building (which was a really cool and amazing idea). When I talked about my skills and experience, the guy was really excited and told to the other \"Nick, I thought you brought just a web dev!\". I felt that, and I completely understand where he is coming from, and I don't want to be \"just a web dev\". I want to be more and apply my skills in more challenging fields. I want to make something more exciting than websites.\n\nDoes someone else also feel this way? Or even better, is there anyone who switched careers from web development to game development and want to share their story? I'd love to hear what you think. Thanks so much!\n\nTL;DR: I don't find web dev exciting anymore. Even though it's really versatile and cool, I want to apply my skills in more challenging areas, and gamedev sounds like a really exciting field to be a part of.",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1jfigtt/as_a_senior_full_stack_web_developer_i_want_to/",
        "num_comments": 3,
        "comments": [
            {
                "body": ">don't find web dev exciting anymore\n\nSame here. I don't have your experience for sure, but I've been on it from \\~8 years and still learning so many things and also with impostor sindrome.\n\nI would like to switch too but I consider the game industry difficult and a bit unknown to me. I played since 10 and I love games, but develop them is a hole world of difference. \n\nGood luck man!",
                "author": "AlternativePear4617",
                "score": 1
            },
            {
                "body": "iot, embedded systems",
                "author": "Dakaa",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1723208371.0,
        "title": "I'm lost.",
        "author": "Futureblur",
        "id": "1enz2h7",
        "selftext": "But perhaps I'm overcomplicating things.\n\nWarning: noob here. \\~5 min read time. Thank you in advance.\n\n\n\n# Good evening fellow developers 👋\n\n**TLDR: I need highly memory efficient backend solutions.**\n\nI have a small \"business?\" that doesn't generate enough revenue yet for me to be able to afford pricey cloud providers. After days of research, I've decided to go with a Hetzner Cloud VPS because I like self-hosting. Their cheapest one is CX22 (Intel 2 Core, 4GB RAM, 40GB SSD) for 4.51€/m.\n\nNow, I come from the C++ world so I'm overly obsessed with memory usage & performance, and I don't have much experience in web dev.\n\n\n\n# Current situation\n\n**(1)** I have a simple [Discord bot](https://fut.red/zip) (NodeJS) that stays online via a self-hosted GitHub actions runner & pm2 on an M1 MBP next to me, plugged into a power source 24/7. I know, this isn't a viable solution. On idle, the bot consumes over **100MB of RAM**, which is wild to me.\n\n**(2)** Next, I plan to create a blog with [GhostCMS](https://ghost.org) and a digital asset store with [PayloadCMS](https://payloadcms.com/). Both are super compelling because they are easy to set up and come with features out of the box that I don't have to code (analytics, email newsletter, text editor, integrations with platforms, etc). **The problem is that these tools alone need at least 2GB of RAM for running (in a docker container).**\n\nTotal: \\~2.1 GB.\n\n\n\n# My ideas\n\nYou see where this is going. After countless hours of looking in forums, watching YouTube tutorials, analyzing RAM usage graphs, I've decided to come to Reddit as a last resort. Here are the possible solutions that I went through.\n\n* Kotlin (+ ktor?). I like Kotlin, but I've read that it's a bit memory hungry (ktor, micronaut). Would honestly love to use it though! 🥇\n* Swift (+ Vapor?). Also a solid option. But do people even use that on the server side? I'm on macOS, so it would be beneficial to transfer that knowledge over when writing apps. 🥈\n* C++ (+ drogon?). The language I spent the most time with, so I'm a bit biased. Not sure if it's the right tool for the job, but definitely ticks all of the boxes except great DX. 🥉\n* Go. Good DX because it comes with all the tools needed for web dev. Don't like it due to it's syntax. Variable names are one letter. No semicolons. I heard error handling is a pain too.\n* Rust (+ actix?). Honestly considering it. But I heard it's hard to set up for web compared to Go.\n\nAlso:\n\n* HTMX for front-end. It has a different approach and gets combined with Go. I like its simplicity.\n* [Coolify](https://coolify.io) to tie it all together. Super compelling Vercel alternative for managing auto-deployments in a GUI. Pro: I never have to touch docker. Con: you guessed it, it needs an even more powerful VPS. Does that mean I'll need to learn K8S for auto deploying from GitHub?\n* SQLLite. Are there other (managed OSS) databases you'd recommend?\n\n\n\nBesides that, I have used NextJS but I think it gets hyped a lot on YouTube? There are countless tutorials on it. They introduce a breaking change every year. App dir? Src dir? Where is pages? And now caching is broken? Edge wasn't real? Turbopack is better than webpack?\n\nBecause of this, I chose Astro + Cloudflare pages to host the frontend for my blog back then. Simple, lightweight.\n\n\n\n# So, what's the problem? You'll be fine with a memory usage of under 3GB with your current situation. That's true, but:\n\nFirstly, I'd like to drop in other services as well in the future — I've heard Grafana and Prometheus are good for monitoring, so they'll eat up even more resources. Also, I heard about New Relic that I'd like to try it out. I haven't even decided on a database. Maybe put a mail server there as well? Oh, and what about Sentry for error logging? (they recommend 16 GB 🤯)\n\nSecondly, I believe in minimizing footprint before upgrading hardware. It's easy to scale and call it a day. But in my opinion, we should be mindful of our resource consumption and try to solve things on the software-level first, by choosing the right tools. Just because you have access to so much RAM, doesn't mean you should be wasting all of this precious hardware. Simplicity over complexity.\n\n\n\n# Bottom line\n\nSo, what should I do? Code a CMS with any of the mentioned languages by myself? Not sure if I have the time for that. [My current blog](https://news.futureblur.com) uses [Astro starlight](https://starlight.astro.build/), but non-devs can't add to it because there is no visual editor. It's just .md files in the GitHub repo. No CMS system. And as mentioned, I'll also need to rewrite the Discord bot in a more efficient language.\n\n\n\nI'm not learning to get a job, so I don't really care whether that particular solution is widely adopted in the industry. Is it time for me to move over to Framer? I'm a just 3D artist with some web dev needs.\n\nAnd does anyone else have experience with similar requirements to mine, or am I the only one who thinks about this? Are there any language + framework combinations that I have missed, which could be very well optimized to be incredibly low on the memory?\n\nI would really, really appreciate if anyone with experience could give me some guidance. Thank you!",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1enz2h7/im_lost/",
        "num_comments": 22,
        "comments": [
            {
                "body": "[deleted]",
                "author": null,
                "score": 10
            },
            {
                "body": "How are you measuring your Discord bot’s memory usage? Is that just the node process itself or inclusive of web server, etc? Have you done any performance profiling? How much of it is Discord’s libraries (and their dependencies) vs your code? If you need help understanding how to profile Node and learn JS performance optimization tricks, I highly recommend two courses on Frontend Masters: [Blazingly Fast JavaScript](https://frontendmasters.com/courses/blazingly-fast-js/) by ThePrimeagen and [Bare Metal JavaScript: The JavaScript Virtual Machine](https://frontendmasters.com/courses/javascript-cpu-vm/) by Miško Hevery.\n\nThere are lots of successful businesses built with Laravel (PHP) running on $5 Digital Ocean instances. So I think your assessment and concerns around memory usage are unfounded based on your needs.\n\nPersonally, I would start with whatever technologies get you up and running the fastest. Then you can observe your service in the real world and migrate hotspots to more optimal implementations.\n\nWrt CMS, have you looked at Netlify CMS / Decap CMS? It’s free, git based, easy to hook up, and provides a UI. https://decapcms.org/docs/intro/",
                "author": "tonjohn",
                "score": 3
            },
            {
                "body": "I don't know how they determine those numbers.  They seem extremely high to me.\n\n  \nHonestly I think you are being pretty silly.  You're trying to plan everything out but you don't know what you are doing.  Then you resist the simple options of just doing one thing at a time and dealing with problems when they actually come up or paying a bit more for hardware.  Obviously its your choice but the time you took doing all this reach/doing all these plans in my opinion would be much better spent on the tasks you are trying to accomplish.",
                "author": "Jutboy",
                "score": 3
            },
            {
                "body": "Not sure where you're getting that Sentry consumes 16GB, I see the minimum requirements for running it is 4GB but that doesn't necessarily mean it consumes all of that 4GB either\n\nI think it's not a matter of optimization but more of picking the right tool for the job. If you have low traffic and small memory limitations I think it doesn't make sense to run a heavy process for error tracking",
                "author": "11Azpilicuetas",
                "score": 2
            },
            {
                "body": "Where are you getting these ram usage numbers from?  You can't just take usage in one environment and say that is what it needs nor imply what it would use in another environment.  These frameworks all can overwork any server...its all about traffic.  Lastly, I didn't see any mention of just paying a little more for more ram....also with hosting you get what you pay for...get ready for lots of issues with 5 dollar hosting.",
                "author": "Jutboy",
                "score": 1
            },
            {
                "body": "Here are my general thoughts.  \n\n* All the out-of-the-box solutions are usually resource wasteful.  \n* Writing your own discord bot from scratch that takes basically no resources is definitely within the realm of things you can do in any language with a good websocket library. That does not mean it is the best way for you to spend your time.  \n* Writing your own CMS is a lot harder and more time consuming. This is almost certainly not worth your time to make.  \n* Pretty much all languages can be used in a light-weight manner. It is mostly the stack of libraries people throw on top where the bloat comes from. I would personally recommend Go, because the DX is just great. Go's position on syntax is also actually amazing. Because Go's position is '*syntax doesn't matter, here's a formatter so everyone's code looks the same*\". Error handling is not hard, in fact it is much easier than languages that use throw exceptions, but people don't like it because there is some repetition involved.\n* Regarding database choice, SQLite is fine and lightweight. It works well unless you have thousands of concurrent users (you don't). The obvious alternative would be postgres.  \n* Do you actually need a CMS? Or could you arrive at a decent solution with something like a simple static site generator? \n* Regarding your last question if anyone has similar requirements. We don't actually know. You have told us very little about the problem you're trying to solve, but a lot about how you're trying to solve it. You could very well be having an [XY problem](https://xyproblem.info/).",
                "author": "Additional_Sir4400",
                "score": 1
            },
            {
                "body": "> Oh, and what about Sentry for error logging? (they recommend 16 GB 🤯)\n\nYou might consider [Bugsink](https://www.bugsink.com/) instead. I use the same VPS as you do for testing the setup, and I get [good numbers](https://www.bugsink.com/scalable-and-reliable/#the-numbers).",
                "author": "klaasvanschelven",
                "score": 1
            },
            {
                "body": "I‘m always open to outside thoughts, so I appreciate your input. \n\nI think I was overly dramatic about the billing part - it’s not an issue for me to pay up and I don’t struggle with the marketing part. \n\nI explained my philosophy in the second to last section. I’m genuinely curious about what drives the memory usage up in these apps and why optimization is kind of an afterthought.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "Thank you so much, this is extremely helpful!\n\nI measured the memory usage for the discord bot by simply running pm2 list. No other profiling have been done, since I have no experience in doing that. \n\nI’ll take a look at the resources you provided. I’ve decided to go with Kotlin + ktor because of personal preference and to take a break from the JS ecosystem. \n\nThank you once again!",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "A quick google search reveals recommended specs for these frameworks. You’re right, it depends on the usage, but the docs still give an idea of what to generally expect.\n\nSince I’m not that experienced, could you explain what drives up the memory usage with these NodeJS apps? Is it the response getting cached, the problem with loads of allocations or something else?\n\nAgain, the issue isn’t opting for a higher plan. Read the second to last section.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "Thank you for the detailed response, I agree with you. What would you recommend instead for the 2nd. bullet point? I need a custom bot.\n\n  \nI've come to the realization that I have been overcomplicating things. In fact, a CMS would be an overkill along with the other tools I've mentioned towards the end. A lightweight static site generator would be fine. For backend, I have decided to give Kotliln + ktor a go because of personal preference and to free my mind from JS hell.\n\n  \nAs for the problem I'm trying to solve, it's really the need for a visual editor and image storage system for my current blog and an upcoming digital store. It's not even that much of a big deal, because I'm the sole maintainer anyway, but I've seen PayloadCMS and was compelled to give it a try. \n\nI'll be fine with keeping these .md files in the GitHub repo and storing images in the folder next to it. But I was just thinking if there was a slightly smarter way of going about this, because I have to link all images manually by providing a relative file path in each page.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "From what I saw, it’s in early stages but thank you for drawing attention to it.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "sure, but I think it would also be beneficial for others to see what you’d recommend.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "What makes you say that optimization is an afterthought on the tools you mentioned? It doesn't sound like you have a problem on your hands, but more like you already have the answers you need",
                "author": "11Azpilicuetas",
                "score": 1
            },
            {
                "body": "Isn’t 100MB a bit too much for Discord bot? Does 16GB sound reasonable for a tool that does error reporting? Correct me if I’m wrong, but again, I’d really like to learn how memory is handled in JS. \n\nYou’re right, I already have my solution. I appreciate you for helping!",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "I tend to over-analyze things, and you’re right about that. I’ve decided to go with Kotlin + ktor since it’s my personal favorite and a breath of fresh air. \n\nThe rest, I’ll deal with in the future when the times comes.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "I think you will be fine.  VPS are designed to be scaled up.  All tech stacks have downsides and upsides...you will learn about both and next time make a more informed decision how you want to proceed.  Just keep mind that every solution you implement is another thing that needs to be maintained, another failure point...a little more complexity on the pile.",
                "author": "Jutboy",
                "score": 1
            },
            {
                "body": "[This](https://develop.sentry.dev/self-hosted/#:~:text=Current%20recommended%20system%20specification%20for,GB%20free%20disk%20storage%20space) was my source. \n\nBut I agree, it’s makes a big difference regarding the tool you choose. I think I overcomplicated things where there wasn’t a need to. \n\nI’ve decided to just go with Kotlin + ktor and worry about everything else later.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "I‘m optimistic as well. \n\nWhen I dipped my toes into web dev for the first time, I was caught up in tutorial hell. I followed the beliefs of those saying Java bad, PHP bad. And JS would be the only thing I was using, full stack. \n\nAs time moved on, I got discouraged and programming lost its magic for me. I’d attribute a lot of it to JS & Copilot. So I think it’s finally time for me to break free from this tunnel vision and explore other worlds. \n\nThanks for spending time to go through my post!",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "I always recommend learning while building something you actually want to build.  I'm an old programmer...I don't know how people decide stuff these days...I recognize it can be really hard to do anything when you have hundreds of options to choose from.",
                "author": "Jutboy",
                "score": 1
            },
            {
                "body": "Analysis-paralysis. Sometimes it’s good to take a step back and pause for a bit. Thank you for the advice.",
                "author": "Futureblur",
                "score": 1
            },
            {
                "body": "[removed]",
                "author": null,
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1740585576.0,
        "title": "Building a custom multi-tenant E-Commerce using Next.js",
        "author": "alisissa",
        "id": "1iyqtkn",
        "selftext": "Hello,\n\nI am thinking about building a custom multi-tenant (merchants) E-Commerce using Next.js SSR for the frontend and going serverless for the Backend (AWS Lambda + API Gateway), AWS Cognito for Auth.\n\nThe MVP isn't too crazy, it has the following:\n\n* Admin Section\n   * Manage Merchants (CRUD)\n   * Check sales reports\n   * Manage customers\n* Merchants Section\n   * Manage products\n   * bulk-add products\n   * Manage discounts and sales\n   * Highlight products\n   * Manage their own sales\n* StoreFront: basically nothing crazy, just like any traditional E-Commerce \n\nI do have around 4-5 months to build this, and with my experience I think I can do it.\n\nHowever, I do have some questions since most of my professional expeirence comes from working on banking apps and recently more into architecture\n\n1. What's the best UI Kit that is fully integrated with Next.js? I was eyeing TailwindUI, heroui and shadcn\n2. I was thinking of using a headless CMS like Strapi since it seems that it fully integrate with Next.js, what do you think?\n3. Does NextAuth makes workiing with Cognito easier or is there another identity provider recommended that works great with NextAuth?\n4. Can Next.js API Routes replace AWS Lambdas. I know that API Routes get deployed as lambdas, but I think API Routes and Vercel are much more expensive than AWS Lambdas & Amplify or Fargate\n5. Any other tools, platforms, etc...that I can/should use that will make my life easier? E-commerce platforms that have all these and is well documented and not crazy expensive?\n6. What payment gateway is recommended?",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1iyqtkn/building_a_custom_multitenant_ecommerce_using/",
        "num_comments": 6,
        "comments": [
            {
                "body": "For UI, shadcn is solid - it's free, customizable and works great with Next.js. Skip Strapi though, it'll be overkill for your needs. \n\nNextAuth + Cognito works fine, but Auth0 might be easier to implement if budget isn't tight.",
                "author": "LuciaCDS",
                "score": 2
            },
            {
                "body": "Have you any experience in doing something like this before?",
                "author": "Quin452",
                "score": 2
            },
            {
                "body": "For UI I would go for tailwind",
                "author": "sooozick",
                "score": 2
            },
            {
                "body": "Not with ecommirce, but with react, aws, databases, infra, etc…",
                "author": "alisissa",
                "score": 2
            },
            {
                "body": "Check out the \"awesome selfhosted\" list for a bunch of FOSS options.  Most of them will have what you need out of the bag.\n\nThen you'll only really need to decide what payment gateway you want to use, and how you want the site to look (one of these should have some sort of tutorial in how to template for their software).\n\nhttps://awesome-selfhosted.net/tags/e-commerce.html",
                "author": "Quin452",
                "score": 2
            },
            {
                "body": "Curious why a platform like Shopify would not suffice here?",
                "author": "pizza_overflow_error",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1728757090.0,
        "title": "Building an AI-Integrated Law-Firm-As-App",
        "author": "FedRCivP11",
        "id": "1g26a6j",
        "selftext": "Hi fellow developers!\n\nI'd like to introduce you to my 5-year project: Cloud Counsel by J. Madison PLC. You can find it at [https://jmadisonplc.com](https://jmadisonplc.com)\n\nI'm a trial attorney and mostly self-taught software developer. For the past five years, I've been taking fewer cases so I can find time to build Cloud Counsel, which is an AngularFire web app that I use in my solo law practice. Cloud Counsel is a lot of things for my practice and me, but at core it is a platform for users (my clients and prospective clients) to build case files that model their legal concerns. I then use those case models to find good cases to take and to generate legal work product. I went into production in January and, since then, have been implementing improvements, bug fixes, and new features. I currently have 130 users.\n\nWhen I started building Cloud Counsel in December 2019, I already had a case-modeling system that my clients used to build models of their cases. It worked with a ton of complex Zapier steps I built and maintained over years. The idea has always been to allow my clients to interact with online tools to build models of their cases. But I knew that to really do it right, I needed a modern application where users with different roles could interact in a secure environment. So I started building an Angularfire app.\n\nCloud Counsel has a ton of features I'm proud of, and I've built it all myself (with AI help). Here's a few achievements I'm pleased with.\n\n**Local Development Startup Script**\n\n[The Cloud Counsel Startup Script](https://preview.redd.it/r3cp69gtscud1.png?width=1478&format=png&auto=webp&s=a7634211e3ba316b930d46f23da8a9efd22d6ff8)\n\nCloud Counsel is an Angular App built for Firebase. It's also supported by a Cloud Run deployment. And for local development, I like to use tmux to monitor typescript in watch mode. So I've built and maintained a fun startup script with ASCII art (a throwback to my time playing on BBSs as a kid in the 90s) that I run for local development that gives me a smile every time it runs.\n\n**Messaging**\n\n[MessagesComponent showing MessageListComponent and EditMesssageComponent](https://preview.redd.it/hv8hc868ucud1.png?width=2000&format=png&auto=webp&s=151a003df924a68a0537eff32a154c083e541396)\n\nAn integral part of my app is messaging. My single staff member and I send messages to clients. They send them to us. We message with co-counsel. And we have bots with messaging capability (mostly for planned features). So I decided to build a messaging module to facilitate messaging internally.\n\n[MessageThreadOverlayComponent visible in the InternalModule, for Firm Staff. Also visible is the MatterOperationsTableComponent](https://preview.redd.it/9wg3o6jtucud1.png?width=2238&format=png&auto=webp&s=152cd1875542bcd2084047c14a376035b147a002)\n\nI wanted both a component users could go to for their message threads and messages, but also a collapsible and close-able overlay component like we are all familiar with.\n\n**Timeline System**\n\nhttps://preview.redd.it/hcijzv1ozcud1.png?width=4112&format=png&auto=webp&s=2bb7c71071ad1161fb717285ab8e4c25ad166f62\n\nThe current way Cloud Counsel helps clients and prospective clients build models of their cases is by allowing them to tell us about a few key datapoints and then merging those together in a timeline. First, users tell us about all of the (a) people and (b) organizations that played a role in their case. Since I primarily handle employment law matters, this means they add their employers, any organizational units at the employer relevant to their case, and the coworkers and managers who were involved with or have knowledge about their case. Next, they will begin adding (c) documents that bear on their concerns.\n\nAnd then, they build EventStatements, which are form responses, with each response the user's recollection of a specific event. In the EventStatement, they can associate people, organizations, and documents with the event, and then specify the relationship between, for example, a document and an event.\n\nThis takes users, in many cases, a long time, as many employment cases relate to a sequence of events that can stretch years. So users normally update events to make them more comprehensive, and continue to add more events in an effort to make the model more accurate and detailed. In litigation, details matter a great deal, and Cloud Counsel gives me a leg up in extracting the important information about cases from my clients' and prospective clients' heads.\n\n**Document Viewer**\n\nhttps://preview.redd.it/neb7zciz6dud1.png?width=4112&format=png&auto=webp&s=591e78d78e33ecc2098e31fbfef59e84b549c8db\n\nI get a lot of uploads of pdfs, .eml files, images, audio, and video into Cloud Counsel. Until recently, users could upload documents, submit a CustodianDocumentSubmission to tell us what they thought it was and how they got it, associate MatterDocuments with EventStatements, and download MatterDocuments. But I recently finished early versions of a document viewer to allow users (like me!) to view, watch, or listen to the evidence or other documents in a case file without having to leave the app. I don't know I thought it would be hard to implement a document viewer, but so far .eml files are the ones that have given me the most headache, and I think it may give me my first opportunity to contribute to an open source project.\n\nI also implemented a multimedia transcript-creation endpoint in my cloud run deployment so when I get an audio or video file I can just send it off for transcription in the app. Soon, I'll integrate these transcripts with the audio and video player so you can scroll the transcript and click to navigate to the appropriate timestamp, and allow editing of the transcript and assigning specific persons to specific parts of the transcript.\n\n**The Future**\n\nI've started to feel, in recent weeks and months, that Cloud Counsel is finally starting to get close to a first complete instantiation of the vision I've been building toward for a long time. At some point soon, I plan to implement a subscription service that allows users to use Cloud Counsel for a weekly or monthly cost. I want to feel good that users are getting a valuable service before I get there. As an attorney, my services need to comply with the rules of professional conduct, and I want to make sure that the automated services I sell to clients are helping them and are a good value for the cost (especially since many have lost their jobs or are facing employment difficulties).\n\nAs the platform becomes more complete, I plan to scale it up to serve larger numbers of clients and prospective clients at a time and to increase Cloud Counsel's ability to help clients resolve claims with less attorney work. One of the benefits, I think, of building out a structure to model these cases is that I can use AI to build complex legal work product. I have a lot of ideas about using AI and agents, paired with Cloud Counsel's system for modeling cases, to generate drafts of documents like Complaints, Affidavits, Motions, Briefs. A key part of this is building out an AI-heavy system to generate and handicap \\*inferences\\* that are drawable from the various evidence we acquire in a case (EventStatements and MatterDocuments) and chaining those inferences together to model the arguments likely to appear in any litigation. My ideas and plans in this area are heavily reliant on the writings of Professor John Henry Wigmore in his 1938 Book *The Science of Judicial Proof*\n\nI also think that Cloud Counsel will position me well to find important and high value cases. But I also know that, as one attorney, I can only serve so many. So I have plans to affiliate with other firms and build out my current CoCounselModule to extend the capabilities I'm building to other lawyers.\n\nOne of the things that makes Cloud Counsel different than other #LegalTech projects is the fact that the services I am building are intended directly for my law practice's clients, and not other lawyers. Almost all of the other, often impressive, efforts I see in this area are focused on selling a product to attorneys. But I've come to believe that the future will likely see more firms like mine, which I think of as an App-as-Law-Firm. By iterating over time, I can steadily improve the quality of my legal services and move more and more of an attorney's tasks over to a server. I believe that attorneys, who are subject to discipline and required to comply with the rules of ethics, should be deeply involved in building, maintaining, and monitoring these systems to ensure they comply with the rules of conduct.\n\n**Your Thoughts?**\n\nI would love any feedback you can provide! If you have any questions, critiques, or ideas, please share. Any questions you have I'll respond if I can! Thanks for looking!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1g26a6j/building_an_aiintegrated_lawfirmasapp/",
        "num_comments": 17,
        "comments": [
            {
                "body": "*edit/update* for folks: whoever is down voting OP for the premise of their idea you shouldn't be. They are building a cool tool and doing so without any formal SWE education. The risks they have with the GenAI use are outlined below, OP is aware. ( Though I think the underlying understanding OP has of GenAI is missing, that's something that comes from having a formal education) This is a webdev sub so the tool built here is on topic imo. \n\n-- my original comment:\nI'm a software engineer with a JD ( I don't practice but I do work in tech and use the JD advantage every day). I would strongly recommend reading up on the current case law around AI giving client advice. There are some pretty high risk sides to this for firms and attorneys who are utilizing \"AI\" for anything.\n\nKeep in mind that Gen AI is basically just guessing the next tokens and using the most common patterns. The logic side of it doesn't exist. That's one of the reasons they are so bad at math, and to this day the best way for Gen AI to do math is for it to write a script to do it, and then take that answer.\n\nI think what you built here is cool, but the risks of clients relying on AI and that ending up coming back in a bad way is high. \n\nJust two good examples:\n\nhttps://www.law.com/therecorder/2024/06/07/ai-legal-startup-donotpay-reaches-settlement-in-robot-lawyer-class-action/\n\nhttps://www.reuters.com/legal/new-york-lawyers-sanctioned-using-fake-chatgpt-cases-legal-brief-2023-06-22/",
                "author": "good4y0u",
                "score": 10
            },
            {
                "body": "I'm not sure you can be with Gen AI because it's a \" black box\" our attorneys at my large tech company will not certify AI as good enough for lesser licensed advising ( think insurance), it would be trivial to defeat current Gen AI \" competency\" at this point for an expert. I could do it, and it's already happened.  The courts have also been hostile to AI use generally. \n\nI'd be weary of relying on it past general customer support.",
                "author": "good4y0u",
                "score": 7
            },
            {
                "body": "My past legal life was IP and patent law. But to each their own. \n\nI think your concept is good, and I like the idea, there aren't enough tools for small firms. But I just wanted to note I see it as one of the highest risk areas to use GenAI along with other regulated and licensed industries.  A lot of my current job is risk mitigation.",
                "author": "good4y0u",
                "score": 3
            },
            {
                "body": "How much manual QA have you done? Like if you pass 1000 inputs into the ai pipeline does it output 1000 sound pieces of legal advice?",
                "author": null,
                "score": 2
            },
            {
                "body": "Very cool.  The event statements (and maybe some AI queries on top of what users tag) is a use case I hadn't considered but you can basically cross index a file every which way. So if you need to look up what Person A said about Person B you could instantly query the file.\n\nMy only complaint is you didn't use more no code tools so I could try and replicate what you built :)",
                "author": "aliph",
                "score": 2
            },
            {
                "body": "I do get it probably isn't what you want to hear. But that's not what I'm aiming to do. The fact that you do have a license is why it's high risk for you. Because more than likely what you are building falls under your license especially if it's your firm giving advice to clients which is your literal career as a practicing attorney. Selling it would be even more interesting. \n\n\nI'll start this by saying you're literally building something called \"Cloud Counsel\" a tool where people can ask for advice in a way based on your description and screenshots. This isn't a research tool, it's an advising tool. Your example was a theoretical person asking questions and receiving possible advice/ building a timeline. \n\nThe tech itself is cool, what you're doing is cool. At some point the legal system as a whole will come around to GenAI, but it took a global pandemic for e-filing and video calls to become mainstream in courts of all levels. There are still people using pages for their drafting documents. \n\nOn the technical side I was doing AI research before it was cool back when it was NLP SNN's, and had access to OpenAI GenAI before OpenAI even released it to the public. I also worked for one of the large semiconductor companies prior to what I do now. \n\nBut I do this whole risk analysis thing handling approving AI usage and product development for a living for a multi billion dollar company in multiple highly regulated fields. I'm saying for free what they pay more than half a mil a year for. That's all. You can take it however you want. This is just Reddit at the end of the day. \n\nYou can see some research here on GenAI as a secondary source that needs to be fact checked. And this is talking about westlaw and lexis.  https://ndnyfcba.org/answers-to-questions-about-using-generative-ai-to-practice-law/\n\nhttps://www.fredlaw.com/alert-judges-issue-guidance-on-use-of-generative-artificial-intelligence-in-court-filings-in-the-wake-of-attorneys-citing-to-nonexistent-cases-created-by-chatgpt\n\nhttps://www.geeklawblog.com/2024/05/legal-ai-under-the-microscope-stanford-hais-in-depth-analysis-of-lexis-and-westlaw-ai-tools.html",
                "author": "good4y0u",
                "score": 2
            },
            {
                "body": "Well thanks for your feedback. If you ever want to reach out offline and propose some consulting on risk management I'd perhaps take it a bit more seriously, though it sounds like you have a gig. This thread should probably end so I'll offer this: I read the rules of professional conduct and the commentary regularly, and I regularly read applicable Legal Ethics Opinions and disciplinary committee opinions because I'm building something new and that's how you do it right. I carry and maintain insurance with limits appropriate for the cases I undertake. I am honest with my clients and prospective clients about the technology I've built and its limits. I am not violating any rules of professional conduct, nor am I getting close to doing so. \n\nIf you think I'm wrong in that regard, I would love to bring myself into compliance and I invite you to point me to the rule you think I'm violating and the practice I'm engaged in that violates it. Otherwise, let's let this thread sleep, yeah?",
                "author": "FedRCivP11",
                "score": 2
            },
            {
                "body": "I just saw your edit. Thanks for the kind words about the tool. Yes I was surprised this post didn’t do better because I think I’m building a neat tool that’s innovative. It’s a shame our AI discussion was the only discussion because so little of my tool relies on AI. Especially now, when I’m primarily building the modeling side, not the building-work-product-with-ai-side.\n\nI think you might be jumping to some conclusions about my understanding but that’s neither here nor there. While I didn’t study computer science at school, I started writing code in the 90s, first learning QBASIC from my professional programmer parent. And over the years I’ve acquired a library and list of online classes I’ve taken, as the need arose.  \n\nI’ll note I’ve had access to OpenAI’s api since August 2021 and have run enough prompts (tens of thousands? Hundreds?) to feel very confident that I can achieve what I plan. It makes me sure that you’re either (1) wrong about what you think I’m asking AI to do or (2) wrong about GenAI’s capabilities. For example, the messaging tool I built was very easy to connect to the API to run a chatbot. But that simple chatbot is not easy to control and is gameable by users, as a car dealership famously learned. It also doesn’t add much value.\n\nFrameworks like autogen, and OpenAI’s assistants api are powerful tools to accomplish complex work. I also know someone who has rolled their own agent framework with successful results. And using function calling, much of the complexity AI can’t handle can be handled by non-genAI tools. I think (hope) there is some secret sauce in my approach so I don’t want to say too much but if you are suggesting you can’t get a 45 page motion out of a single prompt call I 100% agree. If you are saying you can’t build an automated tool to assemble complex product by mixing a system of rules designed by attorneys with targeted generative AI calls for specific function then, and then iteratively improve that process to get better output over time, well…\n\n\nI’ll bet my career that you are wrong.",
                "author": "FedRCivP11",
                "score": 1
            },
            {
                "body": "I am not currently deploying any functionality that uses AI to generate legal advice or any similar output for production to clients without an attorney in the loop. I have partially-built custom definitions and workflows that I believe will get me to what will essentially be that. But this is not completed or working to a level I can deploy to clients. My primary focus is fleshing out the case-modeling system, which builds the fact-models that will eventually support the more complex GenAI tools I've planned.\n\nI do have deployed some simple GenAI tools, like the transcript creation I mentioned in my post. Also, GenAI summarizes my clients' EventStatemetns to create titles for events. My clients fill out a form to fill out an object called an EventStatement, which is meant to be the user's description of their recollection of an occurrence. When viewing a narrative made up of events, it is useful to have titles for each event, but I found over the years that clients and prospective clients are not good at naming their events in a way that is useful for building a timeline that can help in litigation. So now AI generates all of my EventStatement titles. In that regard, with my current prompts (it took some tinkering), the titles are always relevant and in the format I like.\n\nOne of the things that makes up a cornestone of my current plans is to use the case models, together with expert systems specific to each sort of work product we want to create, as the structure for advanced document creation. In this way, the non-GenAI, rigid, rules-based systems are like a christmas tree and the GenAI outputs are just ornaments. The idea is to create complex work product with a mixture of the magic you actually can get from GenAI tools but also some clever coding and smoke and mirrors.\n\nSelling legal advice that comes out of Cloud Counsel without an attorney in the loop will be a big step. I'm sure, based on what I've already seen and been able to achieve, that I'll get there And when I get there it will be with a hybrid system that uses many prompts, some for function-calling and others to generate output. A lot of the output will be left on the cutting room floor as other functions edit, review, and revise the output before assembling it.\n\nAnd before we ever sell it straight from the silicon to the client will be after a long time of producing it internally (for us to review it and revise just as we would a draft created by a paralegal). We'll tinker with it and work to improve the output and then, when it meets the requirements of the rules of professional conduct, I'll sell it but continue to monitor outputs.",
                "author": "FedRCivP11",
                "score": 1
            },
            {
                "body": "This all was born as, first, applescripts I ran locally and then Zaps in Zapier. Sooooo many zaps. But, for me, the limitations hindered what I wanted to do too much so I just learned how to build a web app.",
                "author": "FedRCivP11",
                "score": 1
            },
            {
                "body": "I’ve been building this product for five years and it’s the progeny of tools I also spent years on. I’ve had multiple conversations with my insurer, as well as with the bar’s ethics hotline. I began drafting a formal ethics opinion request, and I spent months on it, fine-tuning it to better address my case. But in drafting that request, I had to prepare legal research, which made me realize I did not have very many novel issues. I eventually decided that the ethical issues, after enough research, were not novel enough to submit to a formal legal ethics opinion request, even if the use case appears novel. \n\nI constantly look at mitigation of risk and appreciate that the space is risk prone. I will also note, I’m a plaintiff’s employment attorney, so my practice is risk heavy to begin with.\n\nI hope you’ll understand that I’m not going to abandon a five-year plan and vision because it appears risky to someone who, even if they have some familiarity with the general space, hasn’t seen my codebase, logs, or contracts with clients. You’ve also not seen or participated in any of my cases in court. \n\nIf you are suggesting that there is a lot of risk involved in my line of work then I would agree, but that was true before my first commit.\n\nBut if you’re suggesting that because of that risk, I should abandon my dream and stop building the app I’ve spent so long on, well then you and I have different risk preferences.",
                "author": "FedRCivP11",
                "score": 1
            },
            {
                "body": "It's your license at the end of the day, and your risk to assume as long as you know it exists. I'm not saying stop, I'm just letting you know from the engineering perspective GenAI is not logic based and is not reliable enough to meet the requirements of most licensed professional fields. \n\nApples research dept just recently published on this ( I found this just a few minutes ago but thought it was relevant), it's not something I'm just making up or wrong about. But I have a strong technical background here and a strong legal background - as you do. I just see the way these two things have been interacting and am highlighting the risks. law isn't the only professional field impacted by this. \n\nhttps://www.reddit.com/r/technology/s/MssgAZIn0g",
                "author": "good4y0u",
                "score": 1
            },
            {
                "body": "It's not that you're wrong, it's that you're not even wrong. You don't know to what extent I'm leaning into GenAI's strengths, what I'm accomplishing without GenAI, what I've tried, failed, and found workarounds for, or to what extent my non-GenAI functions and tools find clever ways to do what others haven't yet. You don't know to what extent I'm keeping abreast of the literature and running my own tests.\n\nI would just note that the two examples you gave are (1) someone trying to practice law without a license with, as best I could tell, a GPT-3 wrapper and (2) an attorney who got sanctioned because he pasted ChatGPT content into briefs and then didn't own up to his mistake. The Court found \"acts of conscious avoidance and false and misleading statements to the court.\"\n\nSo I was building Cloud Counsel at the time of both of those stories. I obviously payed attention to them and have taken whatever lessons I could from them, though 'Don't lie to the Court' is a rule I never strayed close to breaking. So I'm different from, at least, *them*, because (1) I have a license to practice law and (2) I've never been sanctioned by a court for dishonesty (or any reason), despite my username.\n\nI hope you can understand why comparing my half-decade effort to those goofballs is off-putting. I assume you mean it from a place of trying to be helpful. Just know that you're suggesting that the entire focus of my professional life for the last 5 years and for the foreseeable future is a bad idea because some folks near the beginning of this technology played fast and loose with rules. I just think I have a bit more context on that matter than you, which is not to say you don't know what you're talking about.",
                "author": "FedRCivP11",
                "score": 1
            },
            {
                "body": "I just wanted to come back to this post because I hadn’t addressed your links or the substance of the commentary you included around it. It’s these links that, I think, illustrate the problems you think I’m tackling and thus why you’re wrong.\n\nSo first, let me just say that any attorney who is building what I’ve been building for as long as I have should be expected to have already reviewed these publications, right? (Well, not the private law firm’s page but at least the order it’s addressing). In any disciplinary inquiry into whether id violated the rules with the use of generative AI the bar will expect me to be paying attention to the area I’m dabbling in and I do.\n\nBut, for example, you link to NDNY’s Q&A pdf and you say these show “GenAI is a secondary source that needs to be fact checked.” Uhhhhhh… yeah. \n\nWhile you’re right in the thrust of your point (don’t trust the outputs of GenAI, at least blindly), your (casual) characterization of it as a secondary source is not correct. GenAI is NOT a source at all. It is, as relevant here, a computer function that takes an input and gives an output. With care, you can coax those outputs to be useful. With care, you can craft inputs (from your proprietary data model) that reliably produce useful outputs.\n\nBut, turning to the question of whether you would, say, ask a generative AI tool what the law on a topic was in a jurisdiction, you would prefer to do it in a function that is building search prompts to be fed to a database of sources. You don’t need GenAI to be a “source” because we already know how to store and retrieve sources: databases with search queries. If you’re going to get GenAI involved in legal research, you have to treat it as a dumb research assistant that makes mistakes, not the chief librarian of the library of Alexandria. But research assistants are very useful.\n\nThe remaining links in this post are also overview level publications for practitioners who won’t normally work with these tools every day or be expected to keep up with the research. Your other post about Apple Research and the other research indicating that GenAI can’t “reason” is closer to something that might trouble me but even here I say “who cares?” \n\nI don’t need generative AI to reason. That’s what I’m for. I need generative AI to have a large context window and to adhere tightly to the information my app submits submit in the prompt of an API call. I need it to operate at low cost and in parallel and I need it to be able to call my custom functions. I’ll do the reasoning, and it can do all of that.",
                "author": "FedRCivP11",
                "score": 1
            },
            {
                "body": "There is perhaps a bit more to say here when I have more time, but I am 100% confident that GenAI works well for my use cases and have been working on them for, as I said, years. The use cases I have rolled out GenAI tools in consistently produce the results that I want (I monitor them). The areas where I continue to develop will be released when they consistently produce good results.\n\nI appreciate the caution, but I’m doing a categorically different thing than DoNotPay or the attorney who dumped ChatGPT results into a brief. That was, being generous, half baked. And DoNotPay wasn’t even a law firm and they got in trouble for selling legal services. I’m a licensed attorney with a lot of experience and I’ve been building and using these tools for long enough to know they do what my clients and I want. This is and will be the fully cooked version. Keep your eye on jmadisonplc.com.",
                "author": "FedRCivP11",
                "score": -1
            },
            {
                "body": "Thanks for your response! I’m actually a trial attorney in practice for over 12 years. I would also advise anybody who is interested in this area to be cautious. But I’ve been working hard in the space for a long time have my approach and plan lined up.\n\nI’m not going to get into details here, but the rules of professional conduct do require that any services that I sell be competent. I’m confident that all the services that I sell will meet that bar.",
                "author": "FedRCivP11",
                "score": -4
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1744651405.0,
        "title": "Need API recommendations to find similar websites/platforms based on keywords",
        "author": "Mundane-Factor7686",
        "id": "1jz4hki",
        "selftext": "I'm building a competitive analysis app that already successfully scrapes app data from the Play Store and App Store. Now I need to expand to include similar web-based platforms/services, but I'm having trouble with this part.\n\nMy goal: When a user enters keywords (like \"project management\" or \"meal planning\"), I need to find similar web platforms that match those keywords - not just mobile apps.\n\nWhat I've tried:\n\n* Product Hunt API (didn't work as expected)\n* Custom web scraping (works for getting info AFTER I have the URLs, but doesn't help me FIND relevant platforms)\n\nWhat I need:\n\n* An API or service that can return a list of relevant web platforms/websites based on keyword search\n* Something that ideally provides basic info like domain, description, and category\n* Free or reasonably priced options would be preferred\n\nAny recommendations for APIs, services, or alternative approaches would be greatly appreciated!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1jz4hki/need_api_recommendations_to_find_similar/",
        "num_comments": 1,
        "comments": [
            {
                "body": "I’d recommend giving SerpApi a try, it’s an API that pulls search results from Google, so you can easily find web platforms related to specific keywords. It should give you the info you need without too much hassle.",
                "author": "Extension_Anybody150",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1738342197.0,
        "title": "Wanna check out my resume too, I'd appreciate the feedback",
        "author": "KaosAkroma",
        "id": "1iej728",
        "selftext": "Hi there!\n\nI had seen another Redditor posted looking for help with their resume, so I figured it wouldn't hurt to see if I could get help as well.  I've been laid off now since December of last year, and so far I've sent out close to 100 applications, the only traction I had was through network contacts from my past, only for those to not pan out.  I've been applying to Senior software developer positions, and recently Intermediate positions as I feel that the skills and experience I have isn't enough.  \nSince I've worked mainly for companies, I don't really have a large portfolio as of right now, so I'm hoping what I have in the resume will be enough to at least get me an interview... no luck obviously.\n\n\n\nhttps://preview.redd.it/g9ld2xvxzcge1.png?width=619&format=png&auto=webp&s=4773b22ecf84d38be442bb0211b67ca7f4651bdd\n\nhttps://preview.redd.it/4llp9mxyzcge1.png?width=607&format=png&auto=webp&s=40389a5d9c910e29878652dd9800aa73ab1147f9\n\n",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/1iej728/wanna_check_out_my_resume_too_id_appreciate_the/",
        "num_comments": 7,
        "comments": [
            {
                "body": "1 page per decade.  On average recruiters and hiring managers only have a very short amount of time to review resumes.  Unless you're going for a senior position and have more than 10 years of experience stick to one-page\n\nRead this from top to bottom:\nhttps://www.reddit.com/r/EngineeringResumes/wiki/index/?utm_source=reddit&utm_medium=usertext&utm_name=EngineeringResumes",
                "author": "GhostsOf94",
                "score": 5
            },
            {
                "body": "1 page max\n\nRemove 'references available upon request'",
                "author": "GhostsOf94",
                "score": 2
            },
            {
                "body": "/r/EngineeringResumes\n\nThank me later!",
                "author": "canadian_webdev",
                "score": 2
            },
            {
                "body": "- Your name should be the biggest thing on the page\n- Tighten up that header; lots of empty space\n- Things like \"implemented key components\" say nothing while taking up 2 lines of text. Be specific.\n- Use a consistent font and font size for each part of each section\n- Your skills section needs to be better laid out. There's no order to it and it's hard to skim, especially with these ratings in parenthesis\n- Mac isn't all caps.\n- No need to put the line about references; everyone knows you'll provide references if asked. It's also not formatted like everything else anyway.",
                "author": "mrbmi513",
                "score": 1
            },
            {
                "body": "I was always under the impression that two was the max.  In the case of only having one page, I'm guessing I only want my past two jobs?",
                "author": "KaosAkroma",
                "score": 1
            },
            {
                "body": "So my name is font-size: 16.5, the rest around 11.5, I've cut the header margin down to .50 from .75. For the key components stuff, how specific should I get? The components in question were for a project for the banks. My work was mainly front end, with it going from component to store (vue), maybe.. \n\n\"Architected and implemented front-end structures resulting in smoother collaboration, faster implementation, and reduced complexity for subsequent stages of development.\"",
                "author": "KaosAkroma",
                "score": 1
            },
            {
                "body": "Be even more specific. Mention that you built Vue components and whatnot. The rest of the sentence also sounds like fluff; when are you *not* going to write good, maintainable code?",
                "author": "mrbmi513",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1735122866.0,
        "title": "How Do Web Dev Agencies Handle Client Change Requests?\n",
        "author": "Drypm",
        "id": "1hlyfd9",
        "selftext": "Hey everyone, I’m curious about how web development agencies typically handle client requests for changes or updates to their websites. If you’re part of a web dev agency or have experience in this field, I’d love to hear your insights!\n\nWhen a client wants to make a change to their website after it’s been delivered, what’s the process like? Do they usually call you, send an email, or submit a ticket through some system?\n\nI’ve heard from a few people that email is a common way clients send change requests, but it seems pretty inefficient to me. It’s easy to lose track of details, there’s no clear priority system, and managing multiple requests can quickly become overwhelming.\n\nIf your agency uses a ticketing system, I’m curious about:\n\nHow does the ticketing process work for you?\n\nIs it something your clients find easy to use?\n\nDoes it help streamline communication and avoid back-and-forth emails?\n\nAre there any tools or platforms you’d recommend for managing client requests efficiently?\n\nI’d love to know what’s worked well for you or what hasn’t when it comes to managing change requests.\n\nThanks in advance for your insights! Your feedback will be super helpful as I’m looking to improve how these processes are handled.",
        "score": 5,
        "url": "https://www.reddit.com/r/webdev/comments/1hlyfd9/how_do_web_dev_agencies_handle_client_change/",
        "num_comments": 9,
        "comments": [
            {
                "body": "Clients either have a support contract that covers minor changes/updates, or they get an offer for the hours the change would take.\n \nTickets help keep track, but clients will always chose the way of communication most convenient to *them* - not to you. So you'll ultimately end up creating/updating tickets with the infos you get via email.",
                "author": "toi80QC",
                "score": 13
            },
            {
                "body": "We use redmine as a ticket system (customized). Partly because I hate that dinosaur Jira with a passion. We track time spent in redmine as well.\n\nBut in fact only very few of our customers use it directly. Most communicate with a project manager who will (best case) filter out some of the crap before entering it in the ticket system. Most devs at our agency never interact with customers directly.\n\nMost of the time I think that's a good modus operandi; I rarely intervene (as a tech lead), and only if I think something is going into the completely wrong direction (due to missing knowledge or obvious miscommunication)",
                "author": "DerSchreiner2",
                "score": 5
            },
            {
                "body": "Depends on project style.\n\nOn RUP/Waterfall style, change request process with possible penalties for changing requirements or incurring additional costs. Lengthy process. This is balanced by a lengthy requirements elicitation and elaboration process designed to cover both sides asses.\n\nIn the Agile style, clients are embedded into project teams and anything goes at that point. As long as the client continues to pay, all changes are accommodated. Big IF though.",
                "author": "machopsychologist",
                "score": 3
            },
            {
                "body": "I have a good relationship with my clients, who are usually less tech-savy. I usually just roughly write down the features and an estimate of time needed. The rest is then just handled on the go.\nHowever this requires a lot of trust and knowing how the other side thinks, otherwise this could end in disaster (has happened before)",
                "author": "console5000",
                "score": 2
            },
            {
                "body": "They send an email, we will estimate the work, then once they’ve agreed to move forward we will create tickets on our boards and do the work.     \n\nIf it’s less than an hours work I just skip all that and do it for free though.",
                "author": "Any-Woodpecker123",
                "score": 2
            },
            {
                "body": "With a change request process.\n\nThat's not sarcasm, it's the underlying fact. Doesn't matter waht your process is, it should be documented, tracable, and shgared with your client. It should be mentioned in your MSA and SoW.",
                "author": "web-dev-kev",
                "score": 1
            },
            {
                "body": "I run an agency with over 100 clients. We use zendesk email management. Super easy to use. I can tag emails as edits, add a priority, and assign them to any of my two developers to get notified and grab the ticket, and handle the request for me. And I can see all tickets and statuses so nothing gets missed or slipped through the cracks. I love it. Super useful.",
                "author": "Citrous_Oyster",
                "score": 1
            },
            {
                "body": "Clients either write an email or call us. If it's something more complex, we schedule an online meeting.\n\n\nThe project owner then puts the relevant information into tickets, so that we can schedule them and keep track of all the details.\n\n\nThe ticketing system is for us, we don't want our clients to create tickets themselves, because they are never in the way we want them anyway.\nClients do have access to their projects board(s), where they can see the state of the ticket any time and they can also comment on tickets (only very few clients actually do this), but they usually can not change them in any other way.\n\n\nWith that system, every single requirement has to go through the project owner, which arguably is some overhead, but it also ensures that nothing can be overlooked.\n\n\nWorks well for us.",
                "author": "Fitzi92",
                "score": 1
            },
            {
                "body": "Depends on the client contract. It either goes through the support team who they call or email and they get the details and assign the tasks to devs. Or it goes to a project manager who is on the project and is the client contact and they get information and assign to devs. If the dev has questions a call with the client is scheduled with the Dev, the point of contact and the client.",
                "author": "KoalaBoy",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731407263.0,
        "title": "Top Web Development Trends For 2025",
        "author": "Ready-Essay-5108",
        "id": "1gphqfq",
        "selftext": "Here’s a look at the top web development trends for 2025, each offering unique advantages and examples of real-world applications.\n\n**1. AI-Driven Development**  \nIn 2025, AI tools are transforming web development, simplifying complex processes and speeding up coding. **Tools like GitHub Copilot** assist developers by handling repetitive coding tasks, fixing errors, and suggesting improvements. This not only saves time but also lets developers focus on solving higher-level issues, making AI a key player in efficient, personalized web experiences.\n\n**2. Low-Code and No-Code Platforms**  \nLow-code and no-code platforms have made it easy for anyone, even without coding skills, to build websites by simply dragging and dropping elements. **Platforms like Webflow** let designers create responsive websites without deep technical knowledge, allowing businesses to launch faster. This trend enables businesses to keep pace with frequent updates without needing to rely solely on development teams.\n\n**3. Progressive Web Apps (PWAs)**  \nPWAs are bridging the gap between websites and native apps, providing app-like experiences directly through the browser. For instance, **Starbucks**’ PWA lets users order and receive notifications without an app download. Offline functionality is a standout feature, allowing users to interact with apps even without internet connectivity, making it ideal for consistent user engagement.\n\n**4. Voice Search Optimization and Voice UI**  \nWith more people using voice-activated devices, optimizing websites for voice search is essential. Platforms are now integrating natural language processing and schema markup, making it easier for voice assistants like **Siri and Alexa** to interpret content. This trend improves accessibility and offers a hands-free experience, aligning with how users search and interact today.\n\n**5. Serverless Architecture**  \nServerless architecture is transforming how developers manage infrastructure. With services like **AWS Lambda**, **Netflix** efficiently handles vast traffic loads, scaling resources automatically as demand changes. This architecture supports high-traffic applications, eliminates downtime, and reduces costs by charging only for the resources used.\n\n**6. Cybersecurity and Privacy**  \nIn a world of increasing cyber threats, cybersecurity remains a priority. Advanced encryption, two-factor authentication, and compliance with privacy regulations like **GDPR** ensure user data remains safe. As cyber-attacks increase, developers are integrating robust security measures to protect users and businesses alike.\n\n**7. Web 3.0 and Decentralized Applications (dApps)**  \nWeb 3.0 emphasizes decentralized applications that provide secure, user-controlled data storage. **dApps** use blockchain to prevent data centralization, enhancing security and reliability by removing the risks of a central server. This shift empowers users, offering control and privacy.\n\n**8. Augmented and Virtual Reality**  \nAR and VR are making websites interactive and immersive. **IKEA uses AR** to help customers visualize products in their space, while VR is helping real estate platforms offer virtual tours, creating more engaging customer experiences.\n\n**9. Dark Mode and UI Design Trends**  \nDark mode, along with design elements like 3D visuals and micro-animations, enhances user experience by improving visibility and aesthetics. **Twitter** and **Google Chrome** offer dark modes, which reduce eye strain and conserve battery, making it a user-preferred feature.\n\n**10. Advanced API Integrations**  \nAPIs are essential in modern web development for connecting multiple platforms. **Zapier’s API** integrations allow apps to communicate and automate workflows, while payment APIs enable seamless, secure transactions. APIs are key to building interactive, data-driven applications that enhance user engagement.\n\nThese trends are reshaping how websites are developed, with each trend addressing specific user needs for efficiency, personalization, and engagement.\n\n*Check here for the* [*Resource*](https://deftsoft.com/blog/web-development-trends-to-watch-in-2025/)*!*",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1gphqfq/top_web_development_trends_for_2025/",
        "num_comments": 14,
        "comments": [
            {
                "body": "Thank you, ChatGPT. Really cool!",
                "author": "mondayquestions",
                "score": 14
            },
            {
                "body": "soooo .. nothing new?",
                "author": "freecodeio",
                "score": 7
            },
            {
                "body": "2025 will see the return to jQuery and static html built with Dreamweaver using pixel perfect design mockups.",
                "author": "adevx",
                "score": 7
            },
            {
                "body": "Aren't these 2024 trends?",
                "author": "Ok_Trainer3277",
                "score": 6
            },
            {
                "body": "With low/no-code people realize more and more how limiting it is for the last 10% needed. \"Web 3\" isn't trending anywhere anymore as well, \"AI-driven development\" is also questionable.",
                "author": "riklaunim",
                "score": 3
            },
            {
                "body": "WTF\n\nPWAs have been \"the trend of the year\" for the last 10 years.\n\nWeb3 has only spurred a bunch of crypto-bro startups hiring in Rust, definitely not knowing how they will make money.\n\nServerless is so 2018.",
                "author": "FalseRegister",
                "score": 2
            },
            {
                "body": "I would say, same as usual, crypto-bro has been begging for investments and selling their next ponzi-scheme as a definite \"opportunity\" since their birth. :)",
                "author": "scavenger22",
                "score": 2
            },
            {
                "body": "Low-Code/No-Code, PWA, Serverless, Security and Privacy, Dark Mode and API integrations are news how exactly?\n\nAlso, web 3.0 is still alive?",
                "author": "xroalx",
                "score": 1
            },
            {
                "body": "Wait... you guys are doing security?",
                "author": "IAmRules",
                "score": 1
            },
            {
                "body": "Latest Web Development Trends to Follow In 2025\n\n1. AI-Powered Web Development\n\n2. Progressive Web Apps (PWAs)\n\n3. Low-Code/No-Code Development\n\n4. Accelerated Mobile Pages (AMPs)\n\n5. Single Page Applications (SPAs)\n\n6. Web Development using JavaScript Frameworks\n\n7. Micro Frontend\n\n8. Cloud Computing\n\n9. Serverless Architecture\n\n10. AI-Powered Chatbots\n\n11. Content Personalization with AI/ML Technology",
                "author": "Rsmith201",
                "score": 1
            },
            {
                "body": "Il y a AlpineJS maintenant. Plus performant que JQuery",
                "author": null,
                "score": 1
            },
            {
                "body": "Yea ai driven development is me tossing simple but consequential ideas  at Claude.ai and seeing if I can glean any info on the ramifications, as things grow and change. \n\nBut god damn they are bad at large code base stuff. \n\n\nNow small Lettie with directions they’re bomb at",
                "author": "LickADuckTongue",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1743384435.0,
        "title": "Custom JavaScript Integration on Popular Platforms (tutorial of sorts)",
        "author": "OmarFromBK",
        "id": "1jnrzcq",
        "selftext": "# Custom JavaScript Integration on Popular Platforms\n\nDifferent website-building platforms have varied approaches to handling custom scripts. Here's how to implement them on some of the most popular platforms:\n\n---\n\n## JavaScript for Wix\nWix offers an intuitive approach to adding custom JavaScript:\n1. Navigate to your **Website Dashboard**\n2. Select `Settings > Advanced > Custom Code`\n3. Copy your JavaScript code into the **Head** or **Body** section\n4. Activate the code snippet by toggling it on\n\n> **Note**: A paid Wix plan with a connected domain is required for this feature.\n\n---\n\n## Squarespace Code Injection\nSquarespace provides multiple integration methods:\n- **Site-wide integration**:\n  - Go to `Home Menu > Settings > Advanced > Code Injection`\n- **Page-specific scripts**:\n  - Access `Page Settings > Advanced > Page Header Code Injection`\n- Use their **script loader** to combine and minify scripts for optimized execution\n\n---\n\n## Weebly Custom HTML Script\nWeebly's drag-and-drop workflow:\n1. Drag the \"Custom HTML\" element onto your webpage\n2. Click `Edit Custom HTML` in the popup\n3. Paste your script code directly into the editor\n\n*Always publish changes to see adjustments take effect.*\n\n---\n\n## Exploring Additional Platforms\n| Platform      | Implementation Method                                                                 |\n|---------------|---------------------------------------------------------------------------------------|\n| BigCommerce   | Use **Script Manager** for site-wide scripts or Page Builder integration               |\n| Webflow       | Embed elements or site-wide settings                                                  |\n| Joomla        | Requires JavaScript plugin for frontend configuration                                 |\n| Ghost         | Supports HTML cards or Code Injection in Post Settings                                |\n\n---\n\n## Best Practices for Custom JavaScript Integration\n- ✅ **Test thoroughly** after implementation\n- 📍 **Optimize placement** based on platform requirements\n- 💰 **Verify plan limitations** - some features require premium tiers\n- ⚡ **Prioritize performance** through minification and async loading\n\n---\n\n## Why Custom JavaScript Integration Matters\n### Key Benefits:\n- **Enhanced Interactivity**  \n  Create dynamic elements responding to user behavior\n- **Improved Performance**  \n  Optimize loading speeds with strategic script placement\n- **Analytical Insights**  \n  Track user interactions through custom event tracking\n- **Unique Branding**  \n  Implement bespoke functionalities beyond template limitations\n\n> Pro Tip: Always use `<script>` tags strategically and consider Content Security Policy (CSP) requirements.\n\n\n*In order to format this blog post into this beautiful reddit type post, I fed the following prompt into DeepSeek and then included a whole bunch of text that I copied and pasted from my blog article.*\n\n```\ni copied some text from a website but the formatting got lost. can you format it in a good way, using markdown? \n\nhere is the text, after the break:\n\n---\n[Contents I copied from my blog, in a slightly different order]\n```\n\n*My blog article's paragraphs are in a different order than this text. I decided that for reddit, the order should be slightly different based on other posts I've seen here. Anyway, the original blog article can be found here ( I hope I brought some value to the community here):*\n\n[https://easypeasy.chat/blog/tutorials/add-custom-scripts-across-major-website-platforms-a-step-by-step-guide](https://easypeasy.chat/blog/tutorials/add-custom-scripts-across-major-website-platforms-a-step-by-step-guide)",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1jnrzcq/custom_javascript_integration_on_popular/",
        "num_comments": 2,
        "comments": [
            {
                "body": "Depends a lot on the platform, but in general: if it allows you to inject JS, it probably also leaves the door open for breaking layout, accessibility, or performance — sometimes all at once 😅\n\nIf you’re working on something reusable (e.g. for clients), it’s worth wrapping your script in a way that minimizes global scope pollution and gracefully handles failure. And always test like hell — platforms like Shopify or Wix can be super fragile under the hood.",
                "author": "danielrusnok",
                "score": 1
            },
            {
                "body": "For sure, I agree it can open the door to breaking layouts, but none of the platforms can really disallow it entirely. There are a ton of JS libraries that a user might want to take advantage of, like for example, your own in house analytics (matomo, O.W.N., etc).\n\nThe reason I wrote the article is self serving of course. I wanted to make it super easy for every layman to be able to integrate my chatbot solution on their site. But after writing it, I figured it might be a good compilation to share with other communities.\n\nI've always heard that you build credibility by sharing valuable info, and usually I always feel like \"well that sucks, i don't have any valuable info to share\".\n\nBut this time, i was looking for all these integrations and compiled it all into one blog and a friend that looked at it suggested \"Hey what do you mean you never have anything to share. You just created something\" 😆 \n\nAnd so here I am. How you enjoyed the read nonetheless, for the info alone. I need to put WP and shopify also, but i figured I'll make them their own posts (for SEO, i think it's better for them to be separate posts) 😅",
                "author": "OmarFromBK",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1730112113.0,
        "title": "I've had enough: privacy/cookie consent prompts across multiple sites in a browser session",
        "author": "Vovukai",
        "id": "1gdyxgl",
        "selftext": "Hey everyone!\n\nTL;DR is there a way for users to specify their choice for cookie consent modals/pop-ups/banners in a browser session across multiple websites?\n\nI'm asking this community to tap in on your knowledge because I'm at the point where this experience is just ridiculous. It's been becoming an issue over time for me but I don't want to turn 'ranty' as I think most of you will share the frustration. I finally broke today because I I was browsing on my phone, then on my PC, and I've had enough. \n\nMore so because I've noticed a lot of the websites I've visited use the same consent platform, like OneTrust so I thought if I've rejected for one site using this consent platform why isn't there a way for OneTrust to remember my choice for all websites?\n\nFrom a users' perspective, do you know if there's a way to bypass, automatically dismiss or choose an option on cookie consent banners across multiple websites in a browsing session? \n\nFor context, I mostly use Chrome, Firefox and a mix of Windows, iOS & MacOS. I can handle my choice not being remembered across platforms, i.e. from mobile to desktop to laptop. But on one platform using the same browser, it'd be great if there was a way where I just wasn't prompted on every single website I visit when I'm researching something in a browser session.\n\nI've searched r/webdev and while there's a few things generally about cookie consent and people's opinions, I couldn't find anyone raising this point about the platforms themselves remembering the user's preference. The closest thing I've seen would be a browser setting but alas this isn't currently available on Chrome and Firefox to my knowledge.\n\nThanks in advance!",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1gdyxgl/ive_had_enough_privacycookie_consent_prompts/",
        "num_comments": 15,
        "comments": [
            {
                "body": "Yes, brave browser",
                "author": "SubjectHealthy2409",
                "score": 3
            },
            {
                "body": "Some browsers do have built-in feature to dismiss them. Theres some dedicated extension to do that too. Ublock origin extension with some list could block them too. Depends on what you need, to dismiss, to autoclick reject or reject all, to block etc.",
                "author": "Stunning-Skill-2742",
                "score": 2
            },
            {
                "body": "Try \"Consent-O-Matic\" browser add-on - available in chrome and firefox. Works on the vast majority of sites in my experience.",
                "author": "jemjabella",
                "score": 2
            },
            {
                "body": "The problem is that the owners of websites want data. That’s why the Do-Not-Track header failed, and that’s why OneTrust does not store your preferences for every website; every website owner thinks that their tracking is (more) important.\n\nBrave works, but we accidentally found a way that Brave does not recognize, and thus block the modals, so that will probably become a race to the bottom between blockers and websites 😔\n\nPS I reverted the change, so Brave still removes the modal, as I firmly believe that everyone should have the choice not to be tracked. Don’t tell my boss 🤫",
                "author": "wackmaniac",
                "score": 2
            },
            {
                "body": "Brave browser and 'i don't care about cookies' add-on.",
                "author": "PointandStare",
                "score": 1
            },
            {
                "body": "The biggest problem with the cookie modals stems from a complete misunderstanding of the tracking and data parts of the GDPR. Cookies are just a very tiny part of all that (only mentioned 3 times in the specs), but it became the bogeyman for the industry to focus on. The main issue in general is tracking. If this is done without using cookies, it still absolutely falls under the GDPR.\n\nAlso, these banners and modals look like they've been built either by AI or the most imcompetent developer that walked the planet. Some of the first iterations of these I saw would actually make dozens of external API calls to register you opting out (contrary to the very specific opt in behaviour the GDPR calls for) of specific groups of cookies. Those modals would take literal minutes to \"process\" your request, and most people would either leave the site or just accept everything (which conveniently was instant).\n\nThe state of play currently is a mess of unusable cookie modals, some of which require hundreds of individual clicks to fully opt out of everything (and yes, [I tested some sites and counted](https://www.ashleysheridan.co.uk/blog/Accessibility+Issues+With+Cookie+Banners) ). The result is something that is difficult for most people to use, and impossible for those people with specific accessibility needs. And a mistake I see pretty much every banner/modal make is to list the essential/functional cookies but as a readonly option that can't be changed. They're not part of tracking, they never needed to be listed or disabled, but somehow, they fell into the general misconception that GDPR = no cookies.\n\nAs the GDPR works through the various companies that violate specific sections of it, I reckon we'll see another change in how these modals are presented, but that's probably on a timescale of years.",
                "author": "AshleyJSheridan",
                "score": 1
            },
            {
                "body": "Thanks for the reply. Any of those options really! It's not so much a 'need' and more of a 'want' because the experience on browsing the web with these consent things is pretty frustrating.\n\nYeah, I have a few privacy-centric or adblocking extensions installed like Ublock Origin but they don't seem to do what I was asking about. \n\nWhich browsers have the feature built-in, have you used any and what's your experience been?",
                "author": "Vovukai",
                "score": 1
            },
            {
                "body": "none of them really work reliably tbh",
                "author": null,
                "score": 1
            },
            {
                "body": "I've seen many positive posts about Brave, I'll give it a try, thank you.",
                "author": "Vovukai",
                "score": 1
            },
            {
                "body": "I doubt that will work. It is unlikely there are different software versions of a website just to exclude the cookie modal. At this point it's a CYA thing, from a web development point of view.",
                "author": "smartguy05",
                "score": 1
            },
            {
                "body": "you are extremely naive if you seriously  think that these data fencing companies didn't collect any information about you before they implemented this prompt.",
                "author": null,
                "score": 1
            },
            {
                "body": "Oh this is an innovative idea, might give it a try to see how it works. Thanks!",
                "author": "Vovukai",
                "score": 0
            },
            {
                "body": "Let me know if any country works for this. I'll cross off all the European ones for you since they have GDPR which seems to be even WORSE with the fucking consent pop ups.",
                "author": "Nearby_Statement_496",
                "score": 0
            },
            {
                "body": "Sure! Yeah, I expect any EU country, the UK and some US states like California to all be off the list. I'll let you know how it goes.",
                "author": "Vovukai",
                "score": 0
            },
            {
                "body": "One idea I had was to vpn to a country that doesn't have this stupid law with unintended consequences that made the whole fucking internet 10 times more annoying.",
                "author": "Nearby_Statement_496",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1734064764.0,
        "title": "Developed a SPA to help devs temporarily deploy their javascript and css code",
        "author": "Beginning-Bother4644",
        "id": "1hd4jmn",
        "selftext": "**Hello Fellow Developers,**\n\nHave you ever needed a quick way to temporarily host a JavaScript or CSS file to share with friends, colleagues, or even just for testing your own code—without having to update the entire project?\n\nRecently, while working on a project, I faced this exact challenge. I needed to integrate custom JavaScript into a Squarespace website to ensure it met WCAG accessibility standards. Unfortunately, Squarespace didn’t offer a direct way to write custom JavaScript (or at least I couldn’t find one). However, it allowed adding custom scripts via a `<script>` tag.\n\nAfter some research, I discovered a few platforms that let you temporarily deploy JS/CSS files. But most of them were either limited in functionality or required payment after a few uses. While I managed to resolve my issue, it made me wonder how many developers face similar obstacles.\n\nThat’s when I decided to create **CloudSyntax**. You can check it out here: [cloudsyntax.site](http://cloudsyntax.site/)\n\nI developed it over a weekend—starting Friday night and finishing by Sunday morning. I wanted to share it immediately, but the domain was unexpectedly suspended. Now that it’s live, I’d love for you to check it out!\n\n**What is CloudSyntax?**\n\n* It’s a free platform (no sign-up or login required, for now).\n* You can deploy any JavaScript or CSS code and receive a CloudFront link to embed directly into your projects.\n\nI’d really appreciate your feedback—whether positive or constructive—to help improve the platform.\n\n**Tech Stack:**  \nIt’s a simple project built with **Next.js**, **AWS S3**, and **CloudFront**.\n\nThanks, and I hope CloudSyntax proves useful to you!",
        "score": 11,
        "url": "https://www.reddit.com/r/webdev/comments/1hd4jmn/developed_a_spa_to_help_devs_temporarily_deploy/",
        "num_comments": 10,
        "comments": [
            {
                "body": "https://www.jsdelivr.com/\nhttps://raw.githubusercontent.com/\n\njust make a github gist or repo and then use the raw url lmao",
                "author": "bluninja1234",
                "score": 14
            },
            {
                "body": "The website design looks very clean and it works fine. However I’m not sure if I understand the purpose of it based on your description here. Is it to share code quickly with others similar to pastebin.com and gist.GitHub.com, or more like CodePen where you can add JS and CSS and run it?\n\nAlso how do I edit or remove a link? Let’s say I accidentally made a mistake or I added something I don’t want to share anymore. I didn’t find any way to remove it",
                "author": "ashkanahmadi",
                "score": 5
            },
            {
                "body": "not a problem i need solved but the design is clean and going 0 to 1 on a project is always good, nice moves",
                "author": null,
                "score": 5
            },
            {
                "body": "Somehow I doubt this is a tool used by Slack or Google...",
                "author": "mehughes124",
                "score": 3
            },
            {
                "body": "Id really swap out those gpt placeholder text inside your ToS 😁",
                "author": "fsyntax",
                "score": 2
            },
            {
                "body": "Thanks for pointing that out :)",
                "author": "Beginning-Bother4644",
                "score": 1
            },
            {
                "body": "I didn’t mean to criticize it. I honestly took a quick look at it. I think it’s pretty good and it’s very well made and easy to use. So if I understood your SS issue, you can load an external JS but cannot add your local <script> code so that’s your workaround right? Honestly seems pretty good",
                "author": "ashkanahmadi",
                "score": 1
            },
            {
                "body": "It is not that big of a project and I didn't really expect that it would come very handy... I am currently working on a project in my company and we need something temporary to host the js so it's somewhat good for me right now. \n\nI just wanted to do something to help myself. That's all. People seem to be criticising it a lot.",
                "author": "Beginning-Bother4644",
                "score": 0
            },
            {
                "body": "You write your code in it and when the link is created you can simply add the link in the src of the script and I will work exactly like javascript you add in a file and then give the path to the file. \nAlso, for now the edit functionality is not present but you will be provided with a new link.",
                "author": "Beginning-Bother4644",
                "score": 0
            },
            {
                "body": "lol no.. I just added to fill the gaps.. I will get rid of it.. i am laughing really bad rn. XDD",
                "author": "Beginning-Bother4644",
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1733936471.0,
        "title": "Are Microservices Feasible for a Budget-Conscious SaaS Project?",
        "author": "troubleBreathin",
        "id": "1hby622",
        "selftext": "Hi all,\n\nI’m building a SaaS platform and considering whether to use a microservices architecture or stick to a monolithic approach for the initial release. The platform involves several domains, such as user accounts, profiles, search, bookings, notifications, and payments, each of which could theoretically be its own service.\n\n**The Challenge:**  \nI’m working with a tight budget, and I also plan to set up multiple environments (e.g., development, staging, production), meaning hosting costs will multiply for databases and services. Additionally, I’m currently a solo developer, so while I see microservices as a great learning opportunity, I recognize they might not be strictly necessary for my initial launch.\n\nFor context, I expect the launch period to handle no more than 10000 users, and that's if things go absurdly well. I’m not sure at what scale microservices actually make sense in terms of benefits outweighing the added complexity.\n\nOne idea I’m exploring is using a single shared database backing domain-based services split into an ECS cluster. This could help me reduce hosting costs while still giving me a microservices-style structure. However, I want to avoid building myself into a corner where a future refactor to full microservices becomes unnecessarily painful.\n\n**Questions:**\n\n1. Is a monolithic architecture a better starting point for a SaaS project with budget constraints and modest user expectations?\n2. If I go with a single database backing multiple services, are there pitfalls I should watch out for?\n3. If full microservices are worth pursuing, what are the most cost-effective options for hosting databases for each service?\n   * Managed cloud databases like AWS RDS or Cloud SQL seem ideal but expensive for multiple services.\n4. Are there any platforms or tools that can help simplify managing a hybrid or microservices-based architecture while keeping costs low, especially for someone working solo?\n\nIf you’ve faced similar trade-offs or have insights on balancing cost, complexity, and scalability, I’d love to hear your thoughts. Thanks!",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1hby622/are_microservices_feasible_for_a_budgetconscious/",
        "num_comments": 11,
        "comments": [
            {
                "body": "Microservices are a socio-technical solution and solve organizational scalability issues. Just stick stick with a modular monolith if you are alone or have small number of developers.",
                "author": "rcls0053",
                "score": 13
            },
            {
                "body": "> Is a monolithic architecture a better starting point for a SaaS project with budget constraints and modest user expectations? \n\nYes.\n\n> If I go with a single database backing multiple services, are there pitfalls I should watch out for? \n\nNothing beyond typical DB design. It's harder than most people realize. Most people learn how to optimize the hard way (e.g. after catastrophic and repeated crashing or performance issues).\n\n> If full microservices are worth pursuing,\n\nWhat do you think microservice design provides? \n\n> what are the most cost-effective options for hosting databases for each service? \n\nThat depends entirely on your use cases and specific app requirements.\n\n> Are there any platforms or tools that can help simplify managing a hybrid or microservices-based architecture while keeping costs low\n\nNo. Microservices are inherently complicated. Any attempt to add an abstraction layer is going to remove control, which is a central point to going that route to begin with. \n\n> especially for someone working solo? \n\nMicroservices are entirely pointless for a solo endeavor. I'd highly recommend reading more about the design pattern to understand what it's about. It's not a buzz word or magic scalability sauce. It's a solution for large corporations that have the resources to handle the added complexity and overhead in exchange for operational benefits.",
                "author": "TheBigLewinski",
                "score": 7
            },
            {
                "body": "Microservices are always more expensive both to develop and run. The second bit is why cloud providers push them so much. If you develop your software as microserices you will be paying a lot more money to your hosting provider.",
                "author": "Mission-Landscape-17",
                "score": 3
            },
            {
                "body": "First version go with what comes easy, be smart with your time, focus on building it out later",
                "author": "tommyxlos",
                "score": 2
            },
            {
                "body": "not required. pricing seems to be getting quite hefty these days anyways so I'd go monolith first then switch when you actually need scalability",
                "author": null,
                "score": 2
            },
            {
                "body": "No, don’t do it. Microservices are a solution to people problems, not usually engineering ones.\n\nA single service + DB is perfectly fine for a single developer, and for 10k users. You can make your once service scale up to lots of users a lot more easily than you can manage multiple services. If you run into performance problems, you can always pay for faster VMs, add caching, or start improving your slow performance, but every approach is a lot simpler with a single service.\n\n10k users is _not a lot_ for well-made software. People used to have single servers in a closet for that number of users. When you do need to scale harder, it’ll be “do I need a second instance of the same service and a load balancer”, not “should I split my monolith into pieces with network traffic between them”.",
                "author": "mq2thez",
                "score": 2
            },
            {
                "body": "No microservices, and also to add my 2 cents: this is premature optimisation. You are overthinking it and I learned it the hard way (I'm also a solo saas boostrapper). \nI don't know what exactly your SaaS does, but even 10k people, if it's not bandwidth/computation/something else heavy, can coexist on a stupid VM in any provider's free tier. \nAnd if you really have a performance issue, you can always refactor and use a beefier instance in the meantime. \n\nHowever, I'm 100% for exploring cost reduction, taking advantage of free tiers, reducing number of requests when you are billed per/req, etc. :)",
                "author": "255kb",
                "score": 2
            },
            {
                "body": "Thank you all for the input. Appreciate the helpful advice! Much love 😘",
                "author": "troubleBreathin",
                "score": 1
            },
            {
                "body": "Hey there! Sounds like you're on an exciting journey with your SaaS platform. If you're interested in enhancing your data management, I recently launched an open-source data pipeline tool written in Go that might be useful for you—check it out on GitHub and a star would really help us out: https://github.com/bruin-data/bruin. Good luck with your project!",
                "author": "ericmurphy01",
                "score": 1
            },
            {
                "body": "Spot on.\n\nThe only thing I’s disagree about is microservices being completely pointless - you can gain experience on solo projects that translate either to bigger projects or can be usefil in other companies/tehnical interviews.",
                "author": "micamecava",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1730210123.0,
        "title": "Looking for advice to improve my pagespeed ",
        "author": "Prxzz",
        "id": "1gev79t",
        "selftext": "I hope I'm in the right place for assistance. With limited experience in website development, I recently had the opportunity to start an online store connected to my line of work. After spending time learning about WordPress, Elementor, and some basic CSS, I managed to create a functional shop using WordPress, Elementor, and WooCommerce.\n\nHowever, I’ve been struggling with a persistent issue: despite high GTMetrix scores (96%+) and PageSpeed scores (99%), the site still loads slowly. Product pages can sometimes take over 6 seconds to load, and I am unsure of what to look into next. Could anyone help me understand why my pages load slowly?\n\nHere's some additional information:\n\n* **Website structure:** The site is built with WordPress, Elementor, and WooCommerce, along with a plugin provided by my supplier. This plugin powers the search functionality and displays results. Once a product is selected, the plugin adds it to WooCommerce’s “Products,” and WooCommerce then displays it on the product page. I’ve tested this plugin on a clean site, and it performs fast there. I have also seen other websites that are build the same way that are fast.\n* **Essential Plugins**: The site cannot function without Elementor, as the supplier's plugin does not support Gutenberg.\n* **Image Loading**: I have no control over how images are added to products—they are automatically sourced from my supplier. There are many products, so manually optimizing images isn’t feasible. I use the Smush plugin for image optimization.\n* **Additional Optimization**: I started using Rocket CDN today, but it hasn’t noticeably improved the speed either.\n* **Plugin Count**: I have already reduced the number of plugins significantly and currently use 17 essential ones. While I could disable one or two more, this has not improved load times in tests.\n\nHere’s a list of my current plugins:\n\n* Code Snippets\n* EED SEO Add-on\n* EED WP Plugin\n* Elementor\n* Elementor Pro\n* Google for WooCommerce\n* Minimum Purchase Amount for WooCommerce\n* Quantity Field on Shop Page for WooCommerce\n* Rank Math SEO\n* Rank Math SEO PRO\n* Redis Object Cache\n* Smush\n* WooCommerce\n* WooPayments\n* WP Consent API\n* WP Rocket\n* WP Rocket | Filter the Content of the Used CSS\n\nWebsite: [https://sedora.nl](https://sedora.nl)\n\nExample of slow-loading pages:\n\n* [https://www.sedora.nl/fornuis-onderdelen/](https://www.sedora.nl/fornuis-onderdelen/)\n* [https://www.sedora.nl/koelkast-onderdelen/](https://www.sedora.nl/koelkast-onderdelen/)\n\nCould someone please help point me in the right direction for improving site speed?\n\n ",
        "score": 0,
        "url": "https://www.reddit.com/r/webdev/comments/1gev79t/looking_for_advice_to_improve_my_pagespeed/",
        "num_comments": 12,
        "comments": [
            {
                "body": "Not trying to be rude, but you have a WP project bloated with plugins, what do you expect?\n\nEdit: took me ~10sec to load category page with LTE and iPhone pro max",
                "author": "Last-Daikon945",
                "score": 2
            },
            {
                "body": "What host are you using? Might be good to seek support there. Some are just really slow.",
                "author": "DiamondHandZilla",
                "score": 1
            },
            {
                "body": "I honestly wouldn't worry about your Pagespeed score as long as you have fixed all the \"easy\" wins, it isn't a completely terrible score and your website is likely to be used by people with decent devices.\n\nBut it looks like the major decrease in the performance comes from Render Delay on your LCP, to reduce this you'd need to identify what CSS and Javscript is used above the fold and either inline this or move it to a different file from the rest of your Javascript and CSS and then defer the rest of your Javscript and CSS. For any images above the fold you need to compress them as .webp and make sure to put a fetchpriority=\"high\" on them.",
                "author": "dan-priorly",
                "score": 1
            },
            {
                "body": "I don’t find it rude at all. I’m just not sure how to reduce the plugin usage further.\n\nThese are the essential plugins for the webshop to function:\n\n* **EED Plugin** (provided by my supplier to build the webshop)\n* **EED SEO** (provided by my supplier to save all added products for SEO purposes)\n* **Google for WooCommerce** (syncs my products with Google Merchant)\n* **Elementor** and **Elementor PRO**\n* **WooCommerce**\n* **WooPayments**\n\nTo optimize site speed, I rely on:\n\n* **Redis Object Cache**\n* **Smush**\n* **WP Rocket**\n* **WP Rocket | Filter the Content of the Used CSS**\n\nAdditionally, I use the following plugins, which I’d prefer to keep\n\n* **Minimum Purchase Amount for WooCommerce** (prevents orders below a certain amount of €)\n* **Quantity Field on Shop Page for WooCommerce** (I could remove this if necessary)\n\nFor SEO purposes:\n\n* **Rank Math SEO**\n* **Rank Math SEO PRO**\n\nIf you have any suggestions I’d love to hear them!\n\nedit: I also tried deactivating plugins to see if that would help with the page speed, but I couldn't find any specific plugin that is causing the issue.",
                "author": "Prxzz",
                "score": 1
            },
            {
                "body": "I am using Vimexx. I contacted the host, and they provided some advice that I followed, but unfortunately, this hasn’t resolved the issue. I looked up information about them, and the reviews are positive, so they seem like a reliable host. I also have a my company website hosted with them that doesnt have any issues.",
                "author": "Prxzz",
                "score": 1
            },
            {
                "body": "It might be a silly question, but shouldn’t the WP Rocket plugin take care of this for me? I have all the optimization options for CSS and JS enabled in WP Rocket. Or is this something I need to do myself?",
                "author": "Prxzz",
                "score": 1
            },
            {
                "body": "I'd check if all of them have defer/async. Then rebuilding it without page builder(Elementor). Look into the cache. Obviously, it's a resource-heavy task but I wouldn't build it with Elementor in the first place. Sorry, that's all I have to offer since I switched from WP about 5y ago.",
                "author": "Last-Daikon945",
                "score": 1
            },
            {
                "body": "I don't use WP myself so I'm not 100% sure, however if you check the Pagespeed issues: Eliminate render-blocking resources you can see what is blocking rendering which is a mix of CSS and JS and on the product page you also have 'Reduce initial server response time' which I believe is due to it taking a long time to load a product as it this isn't present on your categories page report.\n\n  \n[https://pagespeed.web.dev/analysis/https-www-sedora-nl-product-d633823-11025742-onderdelen-of-water-verwarmingvoor-geschikt-voor-saeco/zhvjd49alj?form\\_factor=mobile#:\\~:text=DIAGNOSTICS-,Eliminate%20render%2Dblocking%20resources,-Potential%20savings%20of](https://pagespeed.web.dev/analysis/https-www-sedora-nl-product-d633823-11025742-onderdelen-of-water-verwarmingvoor-geschikt-voor-saeco/zhvjd49alj?form_factor=mobile#:~:text=DIAGNOSTICS-,Eliminate%20render%2Dblocking%20resources,-Potential%20savings%20of)",
                "author": "dan-priorly",
                "score": 1
            },
            {
                "body": "Thanks. I would prefer to not build it with elementor to but my suppliers plugin only works with this page builder.",
                "author": "Prxzz",
                "score": 1
            },
            {
                "body": "Thank you for pointing this out I’ll take a look at these issues!",
                "author": "Prxzz",
                "score": 1
            },
            {
                "body": "Gotcha. \nAlso, you could replace the woocommerce min order with a custom solution/function that check the cart total. That’s at least something.",
                "author": "Last-Daikon945",
                "score": 1
            },
            {
                "body": "Thank you, i will look into that!",
                "author": "Prxzz",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1704755935.0,
        "title": "How far into building your site do you figure out compliance for privacy, etc?",
        "author": "maxiedaniels",
        "id": "191zbsq",
        "selftext": "Very curious about this. I see a TON of relatively popular startup sites (SaaS sites, etc) that don't have accept/reject cookie popups for example. Do people ignore the need to implement that kind of thing? I mean GDPR and whatever other privacy laws there are.  \nAs a developer, I'd be really nervous not to figure this out from day 1, but then again, is that overkill? Does a site with, say, less than 10k users, ever get in trouble for not managing privacy/consent of their users?",
        "score": 18,
        "url": "https://www.reddit.com/r/webdev/comments/191zbsq/how_far_into_building_your_site_do_you_figure_out/",
        "num_comments": 25,
        "comments": [
            {
                "body": "If you're using cookies or third party apps that connect to their service, then use a cookie/consent banner that also saves the proof of consent. Simple as that.\n\nThere is no reason not to, except if you're not using anything that could harm the users privacy.   \n\n\n>Does a site with, say, less than 10k users, ever get in trouble for not managing privacy/consent of their users?\n\nYes. I had sites with less than 100 users a month that got letters from lawyers because they still had external google fonts loading.",
                "author": null,
                "score": 20
            },
            {
                "body": "Are you aware that not all cookies need a banner?",
                "author": "l-roc",
                "score": 15
            },
            {
                "body": "Sorry to burst your “Murica” bubble but there’s the EU-US Privacy Shield agreement which is an agreement between the EU and US to cooperate on matters of this kind… numerous US organisations have faced fines.",
                "author": "RonanSmithDev",
                "score": 10
            },
            {
                "body": "People might hate those laws but they are far better than the privacy laws from the US.",
                "author": "fuyukaidesu2",
                "score": 8
            },
            {
                "body": "Customers have received letters from lawyers, to be precise. I developed the websites many years ago and no longer looked after them.\n\nI removed the Google fonts directly from the site and the customers then wrote back to the lawyers: “Thank you for the information, we have removed all connections to third-party providers (including Google) from the site and therefore consider the matter to be closed.”.\n\nSomething like that.\n\nAs far as I know, they didn't hear back from them, or at least didn't pay any fee.",
                "author": null,
                "score": 7
            },
            {
                "body": "This is just incorrect.\n\nGDPR protects any citizens located within the EEA, you risk sanctions from the EU for any GDPR-violations against those users, regardless where the company is based.\n\nHow realisitic enforcement of it is varies greatly with location and scale of EEA userbase, but for the US specificly at medium-large scale, it very much will apply, and agreements are in place to make it easier to enforce.\n\nIf you don't want to deal with GDPR at all, and have a negliable EEA userbase you can easily just block traffic coming from within the EEA. You see this approach a lot from smaller/local news outlets in the US.",
                "author": "Fluffcake",
                "score": 7
            },
            {
                "body": "Maybe they're not using any cookies other than login/session cookies? My understanding is you don't need cookie-consent in that case.",
                "author": "anonperson2021",
                "score": 6
            },
            {
                "body": "What’s a better solution?",
                "author": "UpgradingLight",
                "score": 6
            },
            {
                "body": "What did you do about the lawyers?",
                "author": "jkcavin",
                "score": 5
            },
            {
                "body": "But if I have users from the EU, I do need it? Wouldn’t virtually any site need to follow those laws since any site is likely accessible from anywhere, also you can’t really be sure where someone is from? (IP location != residence, VPNs, etc)",
                "author": "maxiedaniels",
                "score": 4
            },
            {
                "body": "If you don't use cookies for tracking you don't need it.",
                "author": "l-roc",
                "score": 3
            },
            {
                "body": "Also curious!",
                "author": "maxiedaniels",
                "score": 3
            },
            {
                "body": "Only if you geoblock access to EU users. Otherwise, as long as EU users are able to access your site and do access your site, you have to play by the EU rules.",
                "author": "maxime0299",
                "score": 3
            },
            {
                "body": "The cookie banner is one of the most useless shit out there. It’s just annoying for the user and has no effect if you decline it. It’s a straw man 99.5% of times.\n\nIt’s a poor solution to a law that unfortunately everybody just blindly copies without thinking.",
                "author": "ztbwl",
                "score": 2
            },
            {
                "body": "All German based. Letters concerned the use of external Fonts from Google and the breach of GDPR cause the users didn't get asked for consent before loading those fonts.\n\nThat happened during a time when lawyers tried to make some money and send out those letters en masse. At least here in Germany",
                "author": null,
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "The fines were paid by their EU subsidiaries.",
                "author": "hartator",
                "score": 2
            },
            {
                "body": "I'm aware.  It's not active because it's not been agreed to yet by the EU.",
                "author": "Irythros",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "One SaaS I work for does not have any GDPR compliance.  No problems (legal letters) thus far.  Even if one was received, I imagine it would just be ignored since cross-country legal battles are stupid expensive and the European party wouldn't want to bother following through.\n\nAs for the one I'm making myself, privacy options will be more or less baked in by default.  It's not because I'm worried about any actual lawsuit brought, but because I believe users should have privacy.  It won't launch with it but there will be decisions made before launch to be able to incorporate it after launch.",
                "author": "Irythros",
                "score": 1
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Hopefully the SaaS didn't have any EU users.",
                "author": "MSXzigerzh0",
                "score": 1
            },
            {
                "body": "Ish.\n\nThe e privacy directive (cookie banner) came almost a decade before the general data protection regulation (gdpr), half of which was needed because of poor implementation of the e privacy directive.",
                "author": "web-dev-kev",
                "score": 1
            },
            {
                "body": "It’s basically been renamed to the Trans-Atlantic Data Privacy Agreement.",
                "author": "RonanSmithDev",
                "score": 1
            },
            {
                "body": "Where are you located? Where were the lawyers and their clients located? What were the letters concerning?",
                "author": "vinnymcapplesauce",
                "score": 0
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 0
            },
            {
                "body": "Or you analyse only non-EU traffic and rate limit EU traffic.",
                "author": "IQueryVisiC",
                "score": 0
            },
            {
                "body": "Was an agreement.  It was invalidated and no longer in force.",
                "author": "Irythros",
                "score": -1
            },
            {
                "body": ">But if I have users from the EU, I do need it?\n\nThe US is not an EU member state. The EU does not make laws for the US. We have our own government for that. \n\nThe EU can say whatever they want, but unless you are a citizen or company that falls under the jurisdiction of an EU member state, what can they do? Where would they bring the court case? To a US court? Their laws/policies/insanity have no jurisdiction here. The case would certainly be over in 2 seconds even in front of the most incompetent of judges.\n\nIANAL, YMMV, etc, etc.",
                "author": "vinnymcapplesauce",
                "score": -9
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731276615.0,
        "title": "Should the Google Analytics 4 script be loaded in the beginning and is that how consent mode v2 supposed to work?",
        "author": "Trainee_Ninja",
        "id": "1gocehq",
        "selftext": "I've implemented Google Analytics (GA4) in my Nuxt application using the following approach:\n\n\\- Uses Nuxt Scripts to manage GA script loading\n\n\\- Only loads the GA script after user consent is granted\n\n\\- Stores consent in a secure cookie (maxAge 1 year, secure, sameSite: lax)\n\n\\- Implements Google's Consent Mode v2 with all tracking defaulting to \"denied\"\n\n\n\nThe flow is:\n\n* On initial load: no GA script loads, just basic consent configuration\n* User sees consent banner (if they haven't chosen before)\n* GA script only loads after explicit user consent\n* Preference is remembered via cookie\n\n  \nIs this a good approach for implementing privacy-compliant analytics in a Nuxt application? Are there any potential issues or better alternatives I should consider?",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1gocehq/should_the_google_analytics_4_script_be_loaded_in/",
        "num_comments": 2,
        "comments": [
            {
                "body": "I have already set up Umami for the project. But GA is for the client's needs. I can't tell a client what they should or shouldn't want.",
                "author": "Trainee_Ninja",
                "score": 1
            },
            {
                "body": "If you only need the consent for GA, ditch GA entirely and replace with Ackee in default mode. No consent needed as it doesn't collect anything other than the standard request info.",
                "author": "rjhancock",
                "score": -1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1731148949.0,
        "title": "Implementering GDPR",
        "author": "Qiazias",
        "id": "1gn7ggk",
        "selftext": "Hello,\n\nI recently join a company (EU, Swedish) as they were looking to downsize and reduce cost by replacing the company which built their website.\n\nI understood the role which would basically be fullstack+db manager+security+hosting and everything in-between since I'm the only IT person in the company.\n\nAnyway since they wanted additional features on the side which involves sensitive information. The company is a web-based job search portal and makes money by hosting/posting job ads for companies.\n\nSo to entice the companies to post there and show there are candidates on the sites which they might want to hire; they are looking to extend beyond just letting people subscribe to  a weekly mail update of new jobs within the areas they have actively subscribed to.\n\nSo the new features would involve:\n1. Creating user profile page that could store; name, phone number, email and what jobs they are looking for, possible CV + personal letter.\n2. Giving option to user to:\n- Allow us to say X people are looking for jobs in the job categories that they are following\n- Perhaps some options that will let us either: A: send a email to them saying X company is looking hire people within X section, allow us to send your CV?\nB: Basically have some option that lets the company browse though job seekers and read their qualifications but not share name/profile pic/email etc \n\nSo since we are EU company we need to adhere to GDPR and I want to get advice on what we actually need to implement for compliance. I feel like all the guides online is created for 1000+ companies and not super small ones so I'm abit unclear what needs to be done.\nIf anyone can correct me/add to my list I would appreciate it so much ♥️\n\nConsent:\n\nUser profile, check boxes with options for allowing us to:\n\na. Let companies know X people looking for jobs in the occupations they follow on the site.\nb. Give information about the user qualifications to company which we then can let the user know that X is interested in them.\n\nc. Send SMS/email about new job postings in the occupations they subscribe to.\nd. Send SMS/email if company is interested in them (if option B is checked)\n\nData security:\na. Ensure that the data don't leave outside of EU, we are using a few third party vendors that hosts on AWS. They are well-known so I'm hopeful they are/can GDPR compliance.\nb. Ensure data is secured by limiting access.\n\nOpt-out:\na.Creating a page for logged-in users can;\nRequest their data from us and exported to a json (xml/excel? not sure yet)\nb. Delete all the info about them, that would probably also involve deleting their details on the page (name, phone , CV etc)\n\nI'm I missing something? I feel like Creating a GDPR diary or GDPR compliance person for a 9 person company is super overkill..",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1gn7ggk/implementering_gdpr/",
        "num_comments": 1,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1731427662.0,
        "title": "Can you recommend a service for simple feedback and contact forms that are GDPR-compliant?",
        "author": "Stefan_S_from_H",
        "id": "1gpo72g",
        "selftext": "I was looking at Palform, but this seems to be overkill. I would pay for features I don't need.\n\nWould Google Forms be something you recommend? As I understand it, I would need to include a link to my privacy policy on every single page. This should be manageable.\n\nAnd of course, every external service requires the consent of the users.",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1gpo72g/can_you_recommend_a_service_for_simple_feedback/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1716361923.0,
        "title": "CookieYes guides and tutorials?",
        "author": "AbeilleMarketing",
        "id": "1cxua7v",
        "selftext": "Hello everyone, I have just switched to CookieYes, consent mode was correctly implemented, but I am struggling to link my cookies. So now I have paused all my tags until I manage to be compliant again...\n\nI got GA4, Facebook Pixel and Google Ads tags installed on GTM and they are all fired **before** CookieYes registers consent.\n\nI looked for guides and tutorials but I don't seem to find what I need...\n\nCan anyone please send me a decent guide/tutorial to make this work for GDPR countries??\n\nThanks a million.",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/1cxua7v/cookieyes_guides_and_tutorials/",
        "num_comments": 9,
        "comments": [
            {
                "body": "Do a scan of the cookies on the site via the cookieyes admin panel. It should list all of your cookies mentioned.\n\nUse the cookieyes admin panel to categorise those as analytics cookies if need be.\n\nMake a css or config change to make sure that there isn't some cache issue that's still allowing the cookies through.\n\nHave a look around other config options of the cookieyes popup too.",
                "author": "HotfireLegend",
                "score": 1
            },
            {
                "body": "Hi, we are sorry you’re facing difficulties with your GCM implementation.\n\nPlease drop an email to [support@cookieyes.com](mailto:support@cookieyes.com) with details and your website URL and we’ll be happy to assist you. \n\nMeanwhile, here are a few guides that can help you:\n\n* [https://www.cookieyes.com/documentation/check-proper-implementation-of-gcm/](https://www.cookieyes.com/documentation/check-proper-implementation-of-gcm/)\n* [https://www.cookieyes.com/documentation/block-third-party-cookies-with-google-tag-manager-and-cookieyes](https://www.cookieyes.com/documentation/block-third-party-cookies-with-google-tag-manager-and-cookieyes)",
                "author": "cookieyesHQ",
                "score": 1
            },
            {
                "body": "Hello everyone, I think it's working now. Is there another way to test it apart from the GTM tag assistant and the Chrome console? I just want to make sure I'm capturing them all. Doubleclick was a nightmare...",
                "author": "AbeilleMarketing",
                "score": 1
            },
            {
                "body": "Hey thanks! I managed to make it work for GA and Facebook, but I don't understand what you mean here \"Use the cookieyes admin panel to categorise those as analytics cookies if need be.\"",
                "author": "AbeilleMarketing",
                "score": 1
            },
            {
                "body": "Hi Thanks for your answer, I did send an email but I haven't received a reply yet. Oh well, I got a reply that did not answer my question, I replied again and I still haven't received a response... I checked all the links, I have done what's written in the guide but it still doesn't work properly, so some direct assistant would be really great.\n\n1) Facebook pixel is shown as analytics, but it should be advertising I'd suppose\n\n2) I can't toggle Performance and Advertising, I can only select Analytics\n\n3) I paused Google Ads cookies because there is no way I can make them work with CookieYes, so right now I am running ads without recording conversion.\n\n  \nThis is all quite annoying, I wouldn't mind paying for this job to be done honestly, I just want to be compliant...\n\n  \nThanks in advance",
                "author": "AbeilleMarketing",
                "score": 1
            },
            {
                "body": "having the same issue, how did you stop GA from firing before cookie consent. I'm struggling hard right now",
                "author": "Flower_6954",
                "score": 1
            },
            {
                "body": "On the cookieyes admin panel, there is a configuration set of options. I don't have it open in front of me right now but it should be the same page where you scan for the cookies, and it lists all the cookies. \n\nJust to be clear, it's a separate admin panel/site from the WordPress plugin page etc.",
                "author": "HotfireLegend",
                "score": 1
            },
            {
                "body": "I'm sure you've already figured it out but on the cookieyes home page after logging in there is a section called Google Consent Mode -  'Allow Google tags to fire before consent'",
                "author": "ObviousDave",
                "score": 1
            },
            {
                "body": "Yes, no I understand, I went there but I honestly don't understand how the cookie manager panel works... I hope the CookieYes support will be able to help... se my reply below. Thank anyway, I hate cookies, I am also kinda diabetic so frankly that's all even more frustrating ![gif](emote|free_emotes_pack|table_flip)",
                "author": "AbeilleMarketing",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1712050794.0,
        "title": "Our Adsense horror story",
        "author": "therealPaulPlay",
        "id": "1btuk17",
        "selftext": "I‘m writing this reddit post to share our terrible experience with Adsense and warn other developers. \n\nI’m the Co-Creator of r/OpenGuessr, an online geography game that can be played in the browser.\n\nA month ago, my friend and I created our (first) Adsense account and integrated ads into our website. As responsive ads didn’t work as intended, we had to develop our own scaling solution without any proper documentation, but that turned out to be the smallest of our concerns.\n\nRevenue for the first week was surprisingly good - However, when we wanted to receive the first payment, we ran into issues, as our account type was erroneously set to „company“ - Could have been my mistake. \n\nUnfortunately, according to the support pages, you cannot change the account type (even though we had never received any payment!), which is why we had to close our account and lose out on a quite significant sum.\n\nWith the account closed and a new account created, we were confident that everything would work out now, but in fact, nothing did. \n\nAt first, our account got repeatedly suspended as we allegedly had „multiple accounts“ which was against the guidelines - which we didn’t. This happened a few times until I had the idea to change the details of your account contact, which worked to resolve this issue (but certainly is a problem on google‘s side). \n\nWith that done and everything configured (again) we were eagerly waiting for our website to be verified and accepted once again. \n\nThe verification process took only, and I‘m saying only as it took far longer the first time, a week but to our frustration, our website got rejected.\n\nThroughout the entire process, we messaged the support 7 times and never got a response that even answered or matched our query. My suspicion is that the are just emails being chosen automatically based on the words included in the question, which certainly upset us even more, as we spent a lot of time communicating with the „support“.\n\nThis time again, the support could not tell us why our website got rejected or even addressed our issue, rather wrote about how the verification process can take a while and that we should be patient  and ensure our website is online (?). \n\nI have no idea why the website got rejected this time and it doesn’t make sense, as the same site got approved a month ago.\n\nWe always made sure to follow all policies and integrated consent management etc. in the ways that google recommends. \n\nThroughout the past month, we did not receive any money from google and had to cover all our operational costs out of our own pockets. \n\nI‘m utterly disappointed by Adsense and am looking for alternatives and have contacted a few (Eozic, Snigel, Media.net) which haven‘t responded for 2 weeks now. \n\nDo you guys have any recommendations or a direct contact to google?",
        "score": 29,
        "url": "https://www.reddit.com/r/webdev/comments/1btuk17/our_adsense_horror_story/",
        "num_comments": 7,
        "comments": [
            {
                "body": "I feel really sorry to hear that you are victim of such automated practices. It's one of the main reasons why I try to stay as far away from their misbehavings as possible, there is 0 personal touch to anything these guys do. SEO being the one exception (which also influences other search engines)\n\nYou should maybe consider other monetization strategies. For an app im developing im implementing tips, that can either be one time or recurring. I think it sends a much better message out to your users when you want to protect them from an ad riddled website/game/whatever. Showing you care can result in goodwill from your users and they might feel more inclined to pay you a tip. Another option would be cosmetics people can buy. I think opt in payment strategies are much much better for the end user.\n\nEither way good luck with your game.",
                "author": null,
                "score": 7
            },
            {
                "body": "I’ve never been able to setup a Google Ads account to pay for ads. I get banned every time before they even go live",
                "author": null,
                "score": 5
            },
            {
                "body": "Well we are not a company, we are two individuals.  But as our google account was set to be a business account it defaulted to company account when we created the adsense account and we cannot receive payments that way unless we can prove that we are the owners of the company with the name of our google account (which doesn’t exist).",
                "author": "therealPaulPlay",
                "score": 5
            },
            {
                "body": "Just wondering but how did having account type set to Company affect withdrawals?",
                "author": "267aa37673a9fa659490",
                "score": 3
            },
            {
                "body": "I use Playwire for my ads and I don't hate it. Feel free to dm me if you want details/numbers.",
                "author": "werdnaegni",
                "score": 2
            },
            {
                "body": "Thank you :P I have only implemented one like leaderboard/banner ad that fits nicely into the UI. The site has grown quite quickly and with that, the costs too, and as for now that has been our only way of monetizing.. I‘d love to change that in the future and maybe have an item shop or sth instead of ads, that makes us less dependent on google",
                "author": "therealPaulPlay",
                "score": 2
            },
            {
                "body": "do you need a google ads agency to do it for you?",
                "author": "Kelziyoung",
                "score": -5
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1716658860.0,
        "title": "With zero tech background, I went down the rabbit hole on a mission to figure out this project. I pieced together most of the puzzle pieces but...",
        "author": "ledhippie",
        "id": "1d0h97b",
        "selftext": "With zero tech background, I went down the rabbit hole on a mission to figure out this project. I pieced together most of the puzzle pieces now just need help please to have a clear picture of the puzzle. So I discovered the gmail api nothing new but for me was the oh snap thats it moment...now the 2nd part is a little harder for me but i've learned and put together some more puzzle pieces...Gemini AI API.\n\nI've also seen Google already has a feature to do exactly what I want and others offer some sort of workflow automations but not sure what route to go. Long story short I'm trying to use the Gmail API to connect to emails with users approval then use Google Gemini AI to search emails for emails based on parameters then return a report. I would greatly appreciate any tips or advice, thank you.\n\n  \n\\*\\*\\*Update\\*\\*\\*: Deeper down the rabbit hole. I have figured out what I need to do for this project. I've also been told any skilled developer can complete this in 10 hours or less. Can anyone give me feedback please, appreciate your time.\n\nI will use OAuth 2.0 to obtain user consent for accessing their Gmail accounts. This involves setting up a Google Cloud project and configuring the OAuth consent screen.\n\nI will integrate the Gmail API to fetch and interact with emails. This includes retrieving emails based on user approval.\n\nI will use Google Gemini AI to analyze and search emails based on the specified parameters then generate a detailed report with the search results.\n\nI will build a user-friendly interface using a JavaScript framework like React or next.js which will enable users to authorize the app, input search parameters, and view results.\n\nI will set up a server using Node.js or Python to handle API requests, process data, and manage user sessions securely.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/1d0h97b/with_zero_tech_background_i_went_down_the_rabbit/",
        "num_comments": 2,
        "comments": [
            {
                "body": "[removed]",
                "author": null,
                "score": 2
            },
            {
                "body": "Thank you! appreciate your time and feedback. I keep learning new things and getting more into it. I had Zapier on my list for workflow automation but wasn't sure if i need it with everything Google has going in house, is pipedream, n8n and build-ship the same as Zapier ?",
                "author": "ledhippie",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1715639585.0,
        "title": "Need help finding a job",
        "author": "MoXeroX",
        "id": "1crcipw",
        "selftext": "As the title says guys, I'm a web developer with a decade of experience.\n\nI have filled many roles in my career between backend, frontend, project management, QA and even managerial positions.\n\nEven with my experience, the fact that being located in a country such as Libya already disqualifies me from many job opportunities and limit my options.\n\nI know how much my skills are worth in the marketplace, and I'm willing to go way below that value as I really need to survive first.\n\nI would appreciate any help I could get in finding a job, and here is my resume you have my consent to send it and make copies of it if you need to. https://docs.google.com/document/d/16DWIxT7UmW_DEf-I1GYe9dBPMoGhPAjuhCDjw_78rxY/edit?usp=drivesdk\n\nThank you so much for getting this far!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/1crcipw/need_help_finding_a_job/",
        "num_comments": 0,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1690996768.0,
        "title": "How do you handle GDPR consent?",
        "author": "cortvi",
        "id": "15geu52",
        "selftext": "I'm having trouble implementing Google Tag Manager, because if even I block data sending after user has declined consent, inital events like \"page_view\" have already been sent since gtag script code is sent with the HTML.\n\nHow do you handle this?",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/15geu52/how_do_you_handle_gdpr_consent/",
        "num_comments": 6,
        "comments": [
            {
                "body": "\nHandling GDPR (General Data Protection Regulation) consent involves respecting user privacy and obtaining explicit permission before collecting and processing their personal data. Here are the steps to handle GDPR consent properly:\n\nUnderstand GDPR\n\nIdentify Data Processing Activities\n\nProvide Clear Privacy Policy\n\nObtain Explicit Consent\n\nSeparate Consent for Different Purposes\n\nPlain Language\n\nGranular Consent\n\nEasy Withdrawal\n\nAge Verification and Parental Consent\n\nConsent Management Tools\n\nSecure Data Handling\n\nRegular Review\n\nInternational Transfers\n\nCollaborate with Legal Experts\n\n\nRemember, GDPR compliance is an ongoing process, and it's essential to keep up with updates to regulations and best practices. Non-compliance can lead to significant fines and reputational damage.\n\nFor any further query feel free to contact.",
                "author": "sharan_dev",
                "score": 3
            },
            {
                "body": "Typically you use a tool like Cookiebot that interfaces with GTM. Now, it's worth noting that absolutely nobody can agree on what is or isn't legal for some of this stuff, so exact implementations vary, but typically you see a consent management platform like Cookiebot/OneTrust/TrustArc/etc running on the site, and it will send signals to GTM to tell it what types of scripts to load. GTM also has its own (beta) consent system, but it still requires a consent management tool to tell it what to load (it just removes some of the jank from the process).\n\nYou can implement your own consent management system, but personally I wouldn't - far too likely you'll do something wrong and introduce needless liability.",
                "author": "jdev4",
                "score": 2
            },
            {
                "body": "Cookiebot integration has already been mentioned. \n\nA simple solution would be to only execute GTM code after consent has been given. You could store the users decision in localStorage, and just not execute gtm or load 3rd party js in the negative case.",
                "author": "nio_rad",
                "score": 2
            },
            {
                "body": "Cookiebot integration has already been mentioned. \n\nA simple solution would be to only execute GTM code after consent has been given. You could store the users decision in localStorage, and just not execute gtm or load 3rd party js in the negative case.",
                "author": "nio_rad",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "That's what I'm trying, I just don't really know how to since GTM code executes on page load without any action from me since it's added to the HTML head",
                "author": "cortvi",
                "score": 1
            },
            {
                "body": "that's a valid point\ngonna email my boss like \"naaah\" brb",
                "author": "cortvi",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1669104709.0,
        "title": "Do I need user consent before tracking Jetpack stats on my blog?",
        "author": "DebianDoesDallas",
        "id": "z1o4q5",
        "selftext": "I set GA cookies only after consent, but can't find any information about managing visitor consent for Jetpack stats. The Jetpack T&C says stats are fully anonymized, so does that mean I don't need consent?\n\nI'm planning to drop GA before GA4, so it's useful to get some user stats via Jetpack, but I don't know if using it the way I am is going to get me into trouble. I'm in the UK and run a small blog with small traffic, but do get visitors who 'appear' to be global. Thanks for any advice.",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/z1o4q5/do_i_need_user_consent_before_tracking_jetpack/",
        "num_comments": 9,
        "comments": [
            {
                "body": "You need to be transparent about ***all*** personal data that you collect, including through third parties, as per the Data Protection Act 2018. That includes IP addresses and browsing habits. EU privacy guidelines are gold standard when serving international users\n\nAs a side note, if you collect and process personal data on your site/app, you also need to register as a data controller with the ICO (if a third party processes that data, you only need to state what the third party collects and processes, and link their privacy policy).",
                "author": "VFequalsVeryFcked",
                "score": 2
            },
            {
                "body": "The frustrating thing is that I want to do 'the right thing' but it's so complex. I had no idea about Jetpack being (technically) illegal. Wow. I'm not going to worry unnecessarily - as you say, hopefully I'm at the bottom of a very long list - but I know I need to get educated, and then get a plan. I'll start with that GA link you shared. Thanks!",
                "author": "DebianDoesDallas",
                "score": 2
            },
            {
                "body": "I don't serve ads. I don't make any income at all from my blog and am in a low-wage job, so an annual fee isn't worth it for collecting a few stats. I don't want to be fined either but this might be time for a rethink!",
                "author": "DebianDoesDallas",
                "score": 2
            },
            {
                "body": "[deleted]",
                "author": null,
                "score": 1
            },
            {
                "body": "Thanks so much for the help. So I don't need to get consent in advance for Jetpack, but should tell visitors I'm using it, and why? Can I do that in my privacy policy, or should I need to say it in the cookie banner? I'm worried it might sound a bit \"by continuing to browse, you accept this\", which I know is poor practice.\n\nI rarely use it, but my webhost offers AWStats in their dashboard. Does that count as third-party?",
                "author": "DebianDoesDallas",
                "score": 1
            },
            {
                "body": ">it's technically illegal under GDPR because it's run by a US-based company\n\nWait...what? All US-Based analytics packages are explicitly disallowed under GDPR now?",
                "author": "RotationSurgeon",
                "score": 1
            },
            {
                "body": "So, you still need consent because data is still being collected. But you can just put the who and why in your privacy policy.\n\nIn your cookie banner, just put something to the effect of, \"we use cookies and data is collected and processed by third parties, please read our privacy policy for more information\", and obviously link your privacy policy.\n\nCan you disable AWStats? If not, then I'd list it as a third party myself. If you can disable it, then you're making a conscious decision to collect that data for you to process and interpret, so I would say that that is first party data collection",
                "author": "VFequalsVeryFcked",
                "score": 1
            },
            {
                "body": "Wow, lots for me to look into. And I think there's a fee to pay the ICO? Kinda sorry I asked now, lol. Thanks again for your help though! I'll make a start.",
                "author": "DebianDoesDallas",
                "score": 1
            },
            {
                "body": ">And I think there's a fee to pay the ICO?\n\nIt's like £35 a year, or something. If you serve ads then ot shouldn't be much of a problem. Providing you're getting ad traffic\n\nData Protection is a complex thing to manage, but you face fines and litigation if you don't so, best stay on the right side of it",
                "author": "VFequalsVeryFcked",
                "score": 1
            },
            {
                "body": "Nobody really care.",
                "author": "TheRNGuy",
                "score": 0
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1653979437.0,
        "title": "manage cookies from different parties in one place (CMS, TCP, IAB)",
        "author": "fred_from_earth",
        "id": "v1k4ux",
        "selftext": "I'm trying to find a cookie management system that lets the user control all the following in one place\n\nuse of Google AdSense cookies in general  \nuse of personalised data for personalised Google ads  \nuse of Google Analytics cookies  \nuse of Amazon Affiliate Marketing cookies  \nuse of Google ReCaptcha cookies (if necessary)\n\nCan you think of a solution?\n\nThe business location is Austria, so GDPR (DSGVO) applies.   \nI read that TCP 2.0, which is the product by IAB is a common practice. I don't know why though.\n\nTo be honest, I'm not entirely sure what all these things are and how they work exactly, what's TCP in contrast to a CMS (consent management system)? Can I customise the vendors list that are managed in the tool or do I need to find a tool that already partners with these vendors? \n\nIt's hard to find accurate answers to these questions online, but it's easy to find basic information but it soon gets redundant, so any help is appreciated!",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/v1k4ux/manage_cookies_from_different_parties_in_one/",
        "num_comments": 1,
        "comments": [
            {
                "body": "Hi, if you're willing to pay for a solution for this I think OneTrust offers what you're looking for (https://www.onetrust.com/products/cookie-consent/). I haven't looked at free solutions for this, so can't comment on that",
                "author": "laimonas",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1586021243.0,
        "title": "How do you automatically choose the language for a user in a multilingual website?",
        "author": "MeynGuy",
        "id": "fuxluf",
        "selftext": "I just finished building a multilingual website for a customer, that has a few languages based on their target customers.\n\nThey wanted a feature to automatically choose the language for a user: I was surprised that a quick google suggested that this should be done based on users locations (IP lookup), which is totally unreasonable,  for the following reasons:\n\n* Users don't acquire language skills of a location, just because they stay in that location.\n* What if a location has multiple languages?\n* This will require that I reverse look up of the user's location using the IP address **or**\n* Get the location with the users consent\n\nThe smart thing to do is to use the browsers language, to help choose the language, but not many multilingual websites do that. So I take this *show off Saturday* opportunity to say I managed to do it, and it was simple and easy, and the customer and the customer's customers are happy.\n\nSometimes simple solutions are better.\n\n**An important note, if a user explicitly chose a specific language, please try to remember this for the next visit to your website. Choosing a language should only be done if you are forced to guess, not otherwise.**\n\nPS:  This is the multilingual website I built [https://relyonnutec.com](https://relyonnutec.com/) and here is an article of my learnings:  [https://www.linkedin.com/pulse/building-multilingual-website-antony-meyn/](https://www.linkedin.com/pulse/building-multilingual-website-antony-meyn/)\n\n&#x200B;\n\nAlso this Danish organization has a decent multilingual feature,   [https://drc.ngo/](https://drc.ngo/)  although it is only in 2 languages. ",
        "score": 4,
        "url": "https://www.reddit.com/r/webdev/comments/fuxluf/how_do_you_automatically_choose_the_language_for/",
        "num_comments": 13,
        "comments": [
            {
                "body": "Use the 'Accept-Language' header. And if not present, or not a supported language, fall back to the default for the domain.",
                "author": "_Mitchel_",
                "score": 8
            },
            {
                "body": "People don't have to change their browser language: modern browsers are pretty good in making sure that they are installed in the language preferred by the user. You should take a look at the chromium source code to see how this is done, in the installation module.\n\nI have the analytics from the website I built to prove that browser language lookup was a better bet compared to IP Lookup.\n\nIt was measured based on how many users changed the language that was automatically picked up for them, and the difference is pretty huge. I encourage you measure this for your websites too, especially global ones and not assume that the numbers are a minority. It might work for some Nordic countries which have only a single language per location, but then again, they are a very small minority in the global market.\n\nJust imagine a website of a Greek resort, the main customers are international guests who come from all round the world, because its one of the cheapest place to have a good time. You wouldn't want your guests to suddenly see the website in Greek after they check in. Or if a user is doing a transit at an international airport, its actually a very bad idea to use IP lookup for languages, its should only be used to pick locations, currency etc.",
                "author": "MeynGuy",
                "score": 5
            },
            {
                "body": "A very good summary, well done!\n\nOne thing that you haven't covered though is SEO.\n\nBecause what we're really dealing with here are 'cultures' (language variants found in specific countries, such as en-GB vs. en-US, you have options for how you structure your domain and paths. Such as:\n\n[en-gb.mydomain.com](https://en-gb.mydomain.com)\n\n[en-us.mydomain.com](https://en-us.mydomain.com)\n\nVS\n\n[mydomain.com/en-gb](https://mydomain.com/en-gb)\n\n[mydomain.com/en-us](https://mydomain.com/en-us)\n\nVS\n\n[mydomain.com](https://mydomain.com) (defaults to en-us)\n\n[mydomain.com/en-gb](https://mydomain.com/gb) AND/OR [en-gb.mydomain.com](https://en-gb.mydomain.com)\n\n[mydomain.co.uk](https://myydomain.co.uk) (defaults to en-gb)\n\n[mydomain.co.uk/en-us](https://mydomain.co.uk/us) AND/OR [en-us.mydomain.co.uk](https://en-us.mydomain.co.uk)\n\nIf you're a brand with a different identity in different countries, then you might want the last set of options with the specific top level domains for those countries (assuming that those domains are available, within your budget and that you are allowed to buy them (e.g. .co.jp)).\n\nLocals will prefer to use the version of your site with their local tld, and Google will consider that version to be more relevant to them in organic search results.\n\nFor alternate language versions of the same content, you can also help Google by including either a link element with rel=\"alternate\" and hreflang=\"{language-code}\" in the page header or HTTP headers, or using a correctly marked-up sitemap file.\n\nDon't forget to put the lang attribute for the current page on the html tag too, i.e. <html lang=\"en-gb\">\n\nFinally, if you want to go even deeper down the rabbit-hole then I'll just say that cultures also encompass many things other than the language itself such as datetime and number/currency formatting, which you might also need to reckon' with sooner or later :)",
                "author": "Mazinkaiser909",
                "score": 2
            },
            {
                "body": "let's assume that is a good idea. what language would you assign a south african IP address?",
                "author": null,
                "score": 2
            },
            {
                "body": "Hah thanks, that's good to know!\n\nIP lookup is definitely not the way to go for services whose main customers are foreigners, such as airports or resorts/travel spots.",
                "author": "derekn9",
                "score": 2
            },
            {
                "body": "& that is why browser language is the way to go, as it is independent of your main customers. It will work for all cases, including foreigners etc :)  IP lookup is only for location **never for a language**. :)",
                "author": "MeynGuy",
                "score": 2
            },
            {
                "body": ">Accept-Language' header\n\nIsn't that the same as this?  \n\n`(window.navigator.userLanguage || window.navigator.language).substring(0,2)`",
                "author": "MeynGuy",
                "score": 1
            },
            {
                "body": "I agree it wasn't addressed, but if you check my website, https://relyonnutec.com you will see it has been implemented. :) Everything from date , currency formatting etc",
                "author": "MeynGuy",
                "score": 1
            },
            {
                "body": ":) I guess you didn't read past the title of the post, its about why **IP lookup** is not the best or simpler solution to this problem.",
                "author": "MeynGuy",
                "score": 1
            },
            {
                "body": "You sound really bad at your job XD\n\n> Whatever is in the database.\n\nThat's a painful place to keep translations\n\n> I don't think any disagrees with multi lingual ism\n\nThis isn't a case of multi-lingualism. It's a matter of choosing the right language\n\n> If you think you'll annoy a user, then guess and ask.\n\nWhy do you need to guess? That language is readily available, and even if it wasn't how exactly are you going to ask the user if you select the wrong language?",
                "author": null,
                "score": 1
            },
            {
                "body": "A lot of people dont change their browser language, so I imagine it's not gonna be too accurate either.\n\nI think IP lookup's gonna be more accurate. It's true some people may not speak the language of where they live, but most of the time, they're in the minority. It's also reasonable -- you go out on the street, ppl speak X. You open the browser, it shows language X.\n\nIn the end, I think the best solution is a really, really obvious language selector, ideally placed at the top of the page. Then try to guess the language as accurate as your requirements allow -- ip lookup might add unacceptable extra loading timr, in which case browser lang is better than nothing.",
                "author": "derekn9",
                "score": 0
            },
            {
                "body": "IP lookup",
                "author": "ScientistSeven",
                "score": -2
            },
            {
                "body": "Whatever is in the database.\n\nI don't think any disagrees with multi lingual ism\n\nIf you think you'll annoy a user,  then guess and ask.",
                "author": "ScientistSeven",
                "score": -2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1644641328.0,
        "title": "What is the correct way of using JWTs for user sessions? A proposal for a new session management flow",
        "author": "10xpdev",
        "id": "sqj7v8",
        "selftext": "Having authored an open-source project for session management - [https://github.com/supertokens/supertokens-core](http://github.com/supertokens/supertokens-core), I know some things about authentication and would like to share my findings. JSON Web Tokens (or JWTs) have become incredibly popular and you’ve likely heard of them before. What you may not have heard is that JWTs were originally designed for use in OAuth – which is fundamentally different to user sessions.  \n\n\nWhile the use of JWTs for OAuth is widely accepted, its use for authenticating users sessions is controversial (see [this](https://news.ycombinator.com/item?id=22354534) post). In this article, I will attempt to make a comprehensive list of the pros and cons of using JWT for this context. I do not intend to solve this debate, since devs (*especially* devs) are often strongly opinionated. I only aim to summarize all the perspectives.  \n\n\nThe flow of the content is as follows:  \n\n\n* Advantages and disadvantages of JWTs (including common misconceptions)  \n\n* A proposed session management flow using JWTs and server sessions (opaque tokens)  \n\n* Evaluating the new flow  \n\n* Conclusion  \n\n\n**A cursory note on session management.**  \n\n\nUser sessions involve managing tokens across your app’s backend and frontend. These tokens act as a proxy to your’s identity and can either be:  \n\n\n* Opaque (a.k.a session tokens – a long random meaningless string which is a reference to some information stored in a database)  \n\n* Non-opaque (contains some meaningful information like a userID, encoded in base64)  \n\n\nNon opaque tokens have a special property that enables the backend to verify that the token is legitimate. This is achieved by cryptographically signing them, and in doing so, we get what is known as a **JWT – a signed, non-opaque token**.  \n\n\n*A clarification note:* I am only concerned with session management between an app’s backend APIs and frontend. There is no third party service involved (i.e. no OAuth 2.0).  \n\n\n## The Pros\n\n&#x200B;\n\nhttps://i.redd.it/gw03u8rezbh81.gif\n\nThe following is a list of all the pros for using JWTs – aggregated across multiple sources. These are benchmarked relative to opaque tokens (the only other type of token for sessions). I have also included some common misconceptions and have labeled them as “myths”:  \n\n\n**1)Fact: No database lookups**: It’s generally known that for most APIs, network calls add the most latency. Hence, it’s reasonable to expect that having no network calls (no database lookups) for session verification is beneficial.   \n\n\nTo prove this, I ran a test to see latency times (requests per second or RPS) of APIs that used JWTs and not. The displayed RPS are an average of running the tests 60 times. Following are the different APIs that were tested:  \n\n\n* API-control: This API does nothing and can be used as a maximum RPS reference  \n\n* API-1a: JWT verification and response  \n\n* API-1b: Opaque token verification via database and response\n* API-1c: Opaque token verification via cache and response\n* API-2a: JWT verification, a database read and response\n* API-2b: Opaque token verification via database, another database read and response\n* API-2c: Opaque token verification via cache, a database read and response\n\nFor each API, I set up the database / cache in three locations:   \n\n\n1) The same machine (as the API process)  \n\n\n2) A different machine, but within the same WiFi network   \n\n\n3) A different machine with a different network (to the API process), but within the same city (an AWS EC2 instance). All machines have roughly the same spec in terms of processing power and RAM.  \n\n\n### Results for API-1 (No extra database read):\n\n&#x200B;\n\nhttps://preview.redd.it/toazmcfhzbh81.png?width=574&format=png&auto=webp&s=aca1f5eb1d3414b70339ead6e968cf783e94eaf1\n\n### Results for API-2 (one extra database read in API):\n\n&#x200B;\n\nhttps://preview.redd.it/6mhorigizbh81.png?width=574&format=png&auto=webp&s=3ffd2748f5c1d801a3f8cca917a073cd88fe263c\n\nAs it can be seen, database lookups are indeed much slower, especially over distributed machines (which is very often the case). However, there are counters to this point:  \n\n\n* Other database calls in the API will slow it down anyways: This is true. However, I’d argue that most API calls don’t have 100s of db lookups but just a few of them. Hence you are eliminating a good percentage of latency causing actions *most of the time.*  \n\n* Other services have scaled successfully without JWT: This is also true (even Facebook doesn’t use JWTs). It is possible to scale well with opaque tokens, but it’s just much more difficult and expensive to do so (in terms of engineering costs as well as running costs).  \n\n\n**2)** **Myth: Saving on database space**: Since JWT’s don’t need to be stored in the database, it’s true that it does save space. To get a sense of how much, let’s do a back of an envelope calculation:  \n\n\n* Opaque tokens (64 characters long), would take 64 bytes of space.  \n\n* We want to associate a userId (36 bytes) and some session information with this token (200 bytes). Overall, it takes 300 bytes of space to store one user’s session information.  \n\n* If we assume an app has a million active sessions (which is a lot), that means it’s using 300 million bytes or 300 MB for sessions. 10 million sessions? 3GB of storage.  \n\n\nSo by using JWTs, we are saving 300 MB of database space per million users. This doesn’t make much difference since it would cost approximately $0.03 extra per month on AWS as per [their pricing](https://aws.amazon.com/ebs/pricing/).  \n\n\n**3)** **Myth: More secure because it’s signed:** The signing of the JWT token is only required so that clients cannot manipulate the content in the token. Whereas, opaque tokens cannot be manipulated since the string itself doesn’t have any meaning. Just having a long opaque token (high entropy) is good enough. Hence, the signing of JWTs doesn’t add any extra security in comparison to opaque tokens, it simply matches the security level.  \n\n\n**4) Myth: JWTs are easier to use:** It is true that JWTs are easier to get started with since we don’t have to take the effort to build a system that reads the database for session verification, or a cron job to remove expired tokens… However, these are quite easy to implement anyway.  \n\n\n**5)** **Myth: JWTs are more flexible:** Flexibility comes because we can put anything in a JWT. However, we can do the same with opaque tokens. Any data can be stored in the database against an issued opaque access token.  \n\n\n**6)** **Myth: JWTs automatically prevent CSRF:** As long as we are using cookies for JWT (which is recommended), we also have to take care of CSRF attacks, just like if we use an opaque token. This attack vector will have to be prevented using anti CSRF tokens or SameSite cookie attribute, both of which are independent of if we use JWT or opaque tokens.  \n\n\n**7)** **Myth: No need to ask users for ‘cookie consent’:** Cookie consent which is required for GDPR, applies only to cookies used for analytics and tracking. Not for keeping users logged in securly. JWTs and opaque tokens are the same in regards to this point.  \n\n\n**8)** **Other myths:** I have also read people claim that JWTs work better than opaque tokens for mobile and also work even if cookies are blocked. Both of these are simply not true.  \n\n\nOverall, it seems that the only advantage of JWT over opaque token is lesser latency in API requests (which is a major win). Now let’s have a look at the cons.  \n\n\n## The cons\n\n&#x200B;\n\nhttps://i.redd.it/04gaaipjzbh81.gif\n\nLike the above section, the following is a list of all the cons that I have thought about, as well as what I have read from other sources:  \n\n\n**1)** **Fact: Non revocable:** Since verifying JWTs doesn’t require any lookup to a single source of truth (database), revoking them before they expire can be difficult. I say difficult and not impossible because one can always change the JWT signing key and then all issued JWTs will be immediately revoked. Revocation is important in many cases:  \n\n\n* Logging out users  \n\n* Banning users instantly  \n\n* Changing user’s permission in your system  \n\n* Changing a user’s password  \n\n\nOne solution that people recommend is to use revocation lists. This is where you keep a list of revoked JWTs and check against that list when verifying the JWT. But if we do this, it’s *almost* the same as opaque tokens since we will have to do a database / cache lookup in each API. **I say** ***almost*** **since here, we have the option to choose which APIs should check against the blacklist and which should not.** So this may be an advantage in certain scenarios over opaque tokens.  \n\n\nOne more solution is to keep the lifetime of the JWT very small (\\~10 mins). However, this also means that users will be logged out every 10 mins. There are various session flows that one can implement to have short lived JWTs while maintaining a long session as explained in [this blog post](https://supertokens.com/blog/all-you-need-to-know-about-user-session-security). We will be exploring the recommended method later in this post.  \n\n\n**2)** **Fact: Bottlenecked against one secret key:** If the signing key of the JWTs is compromised, then the attacker can use that to change the userId in their JWT to any other user’s. This allows them to hijack any user’s account in a system. This secret key can be compromised in a variety of ways like employees making a mistake (by pushing the key to github) or purposely leaking the key. Attacks to your servers might also leak this key.  \n\n\nA counter to this is that even opaque tokens from the database can be leaked. However, those are much harder to leak  (because of their sheer volume) and cannot be used to compromise new accounts or accounts that don’t have an active session during the time of attack.   \n\n\n**3) Fact: Crypto deprecation:** Signing of JWTs requires use of a cryptography instrument called hashing. It is usually recommended to use SHA256 for this. However, what happens when this gets deprecated? At that point, one may want to switch to a newer algorithm. While making this change is relatively straightforward, the problem is that developers are very busy and often will miss out on such deprecations. That being said, such deprecations are very infrequent.  \n\n\n**4)** **Fact: Monitoring user devices:** In the most simple implementation, if one is using JWTs for their sessions without any session information stored in the database, their app will not be able to know which devices or how many devices a user is using. This may often cause business logic and analytics issues. This being said, it’s easy to add some information to the database when a JWT is issued and remove it once it expires. This way, this disadvantage can be mitigated. However, this is something that needs to be done purely outside the scope of a JWT (hence this point).  \n\n\n**5) Myth: Cookie size is too large:** A typical JWT can be 500 bytes long[*\\[1\\]*](https://supertokens.com/blog/are-you-using-jwts-for-user-sessions-in-the-correct-way#footer-note-1), versus a 36 or 64 bytes sized opaque token. These are to be sent to the frontend via cookies and these are sent to the backend on each API request. This causes two problems:  \n\n\n* No more space in cookie store: The maximum cookie size a browser allows is 4096 bytes per domain. Even if using a 500 byte JWT, we still have 87% of the cookie store left for use. This seems to be more than enough for most applications.  \n\n* Higher amount of data transferred on each API call: If we take the above numbers, we are transferring 464 bytes extra each API call (500 minus the size of an opaque token). This means, the client is uploading that much more and the server needs to download that much more for each API call.   \n\n   * If we assume that a client has an upload speed of 10kbps (very low), this means each API call will take an extra 46 milliseconds. In general, I believe this  is completely acceptable. In typical situations (1mbps upload speed), this would take an extra 0.4 milliseconds per API request. For applications which are extremely sensitive to latency and want to save every millisecond, this is something that you could consider factoring in.  \n\n   * A typical EC2 instance on AWS has a download speed of 5+ gbps. Let’s assume a low of 1 gbps for argument’s sake. If we also assume that this instance gets 100k concurrent requests (which is very high!), this would imply that the server needs to download an extra 464 \\* 100k bytes = 46.4 MB of data. Given the download speed, it would take the server an extra 46.4 milliseconds across all the requests to do this which is insignificant.  \n\n\n**6) Myth: Data in JWT is visible to everyone:** First, the priority should be that JWTs themselves should not be accessible by anyone malicious because then they can gain unauthorised access to an account (which is a far bigger problem than being able to see the contents of the JWT). However, if that does happen, one should also refrain from putting any sensitive information in a JWT. Instead, one can store this information in the database. Either way, this is not a con of using JWTs.  \n\n\nSeeing the pros and the cons above, my opinion is that just using JWTs is probably not worth it. The risks, I feel, outweigh the benefits. However, what if we could use a different approach where we use both, opaque tokens and JWTs. Perhaps, this would allow us to eliminate the cons whilst keeping the pros?  \n\n\n### The new approach\n\nOnce the user logs in, the backend issues a short lived JWT (access token) and a long lived opaque token (refresh token). Both of these are sent to the frontend via httpOnly and secure cookies. The JWT is sent for each API call and is used to verify the session. Once the JWT expires, the frontend uses the opaque token to get a new JWT and a new opaque token. This is known as rotating refresh tokens. The new JWT is used to make subsequent API calls and the session continues normally. This flow is illustrated in the diagram below:  \n\n\n&#x200B;\n\nhttps://preview.redd.it/b1qtsgslzbh81.png?width=800&format=png&auto=webp&s=f7be4914d9ca5767bc0234bf3472e6878f5a9c71\n\nNow let’s revisit pros and cons for this new session flow.  \n\n\n### Revisiting the pros:\n\n**1) No database lookups:** Since most API calls still use the JWT, this advantage still holds. We will need to call the database when refreshing the session, but this is a relatively rare event (relative to the number of session verifications that do not require a database lookup).  \n\n\n**Cookie 3; Localstorage 1**  \n\n\n**2)** **Added security via session hijacking detection:** Using rotating refresh tokens, we are now able to detect stolen tokens in a reliable way. This will help prevent session hijacking attacks. Learn more about it [here](https://supertokens.com/blog/the-best-way-to-securely-manage-user-sessions).  \n\n\nWe can see that the main advantage of using JWTs still holds, and we have also added a new advantage!  \n\n\n### Revisiting the cons:\n\n**1)** **Partially Solved: Non revocable:** We can use short lived JWTs and long lived refresh tokens to maintain a long session as well as get substantially more control on revocability. To revoke a session, we must now simply remove the opaque token from the database. This way, when the refresh API is called, we can detect that the session has expired and log out the user. Note that this will not immediately revoke a session – it depends on the lifetime of the JWT. But it makes this problem much more bearable.  \n\n\n**2)** **Solved: Bottlenecked against one secret key:** We can keep changing the JWT signing key every fixed interval of time. When the key is changed, all current JWTs will be immediately invalidated. In this event, the frontend can simply use its refresh token to get a new JWT (and a new refresh token) signed with the new key. This way, we can vastly minimise our dependency on this secret key.  \n\n\n**3)** **Not solved: Crypto deprecation:** This point is still a problem, however, changing the hashing algorithm can be done smoothly and immediately just like how we change the signing key.  \n\n\n**4)** **Solved: Monitoring user devices:** Since we have an opaque token for each session, we can easily monitor the devices each user has.  \n\n\nWe can see that most of the cons have been roughly resolved and are now all acceptable risks.  \n\n\n### Conclusion:\n\nMy opinion is that using JWTs, especially for long lived sessions, is not a good idea. Using short lived JWTs with long lived opaque (refresh) tokens in the following scenarios:  \n\n\n* The need for **easier scalability** is higher than the need for **immediate token revocation**. The final decision depends on your use case. Do you expect your app to **scale to millions of users** (JWTs preferable) or less than tens of thousands (opaque tokens preferable)? How important is **instant revocation**? If you ban a user or detect theft, the token will continue to be valid till it expires (let’s say 30 minutes).  \n\n* The 4k bytes cookie size is not a limiting factor.  \n\n* You do not need to map “sensitive” information to the access token that is required in each API call.  \n\n\nWhen I think of consumer apps that I want to develop, most of them meet the criteria above. I feel that it is a perfect balance between scalability and security. For all other requirements, stick to short lived opaque access tokens and long lived opaque refresh tokens.  \n\n\nNote that we have not spoken about the applicability of JWTs for OAuth and have only focused on sessions between an app’s backend API and frontend. JWTs are generally an excellent use case for delegation of access to third party services (OAuth). In fact, they were originally designed for this exact purpose.  \n\n\nWritten by the Folks at [SuperTokens](http://github.com/supertokens/supertokens-core)  \n\n\n^(\\[1\\]: A typical JWT contains the following information:)  \n\n\n* ^(iss (issuer): site name (20 bytes is a good upper limit))  \n\n* ^(sub (subject): 36 bytes UUID)  \n\n* ^(aud (audience): site name (20 bytes is a good upper limit))  \n\n* ^(exp (expiry): timestamp: 13 bytes)  \n\n* ^(nbf (not before time): timestamp: 13 bytes)  \n\n* ^(iat (issued at time): timestamp: 13 bytes)  \n\n* ^(custom roles and information: 200 bytes more)  \n\n\n^(This is a total of 315 bytes. The JWT header is normally between 36 and 50 bytes and finally the signature is between 43 and 64 bytes. So this gives us a maximum of 429 bytes which would take about 10% of cookie space.)  \n\n\nShare you thoughts on the topic and let me know how I can make this note more useful to you",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/sqj7v8/what_is_the_correct_way_of_using_jwts_for_user/",
        "num_comments": 2,
        "comments": [
            {
                "body": "I'm a bit late to the party, but curious to know if you've implemented this?",
                "author": "frenziedfencer",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1608307711.0,
        "title": "Who is responsible for ensuring that a user opts in to third party cookies and is there anything that developers of third party javacript should be doing?",
        "author": "ppyil",
        "id": "kfnxjj",
        "selftext": "I'm making a little script that a user can add to their website (like Google Analytics/Disqus etc) but I don't want to store any cookies unless a user opts in. I already respect Do Not Track and I treat that in the same way as an opt-out, but do I need to explicitly do anything to manage opt-outs of cookies?\n\nA lot of website have cookie opt-in popups/banners. Is there a way to see if a user has accepted cookies from there? I want to be GDPR-compliant and respect each user's privacy. Cookies would be a very useful feature but I want to only store them if a user has explicitly consented to them.\n\nHow do you all deal with external cookies?",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/kfnxjj/who_is_responsible_for_ensuring_that_a_user_opts/",
        "num_comments": 3,
        "comments": [
            {
                "body": "Well normally its the website that should only include your script if they allow your cookie.",
                "author": "flammehawk",
                "score": 3
            },
            {
                "body": "If your script is meant to be used on other people's websites, I'd just provide some kind of a \"hook\" they can use to enable cookies, so that they can handle the consent dialog themselves.",
                "author": "Atulin",
                "score": 2
            },
            {
                "body": "The buck stops with the website “owner”.",
                "author": null,
                "score": 2
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1613000614.0,
        "title": "Wordpress.org best hosting choice",
        "author": "xYoKx",
        "id": "lh7eny",
        "selftext": "Hello,\n\nI would like to begin by saying that I payed 1 year of WIX's premium plan and I wanna change. I know that the rules forbids me to talk about it, so I won't (much, no questions tho).\n\nAnyhow, for the last 12 hours, I researched hosting services and talked to a couple of customer care representatives, but I am such an amateur I don t know what to look for in these services.\n\n&#x200B;\n\nI want to have my blog.\n\nA. I would like to know if there is another better alternative to [WordPress.org](https://Wordpress.org), so I won t be forced to move later (like I am doing right now with WIX).\n\nB.  In my research, I found out about DreamHost, BlueHost and SiteGround. I didn t have any interaction with DreamHost, so I ll talk about the other two:\n\nBlueHost has insanely low prices, but the 36 months term they force upon myself scare me. They also don t offer \"Free domain privacy\" unless you purchase the more expensive plan of theirs. Although, I don t think I need it, because I am from Europe and GDPR. I also don t quite understand the difference between \"WordPress Hosting\" and \"Managed WordPress Hosting.\" The customer care representative told me that the \"Managed\" one is for traffic heavy sites.\n\nSiteGround I like more. I like their site better and the overall impression they gave me, but the prices are a little too steep and I do not know if they are worth it. I saw dozens of reviews that say it s the best choice for a [WordPress.org](https://WordPress.org) site.\n\nI would like to have full control over my website and be able to migrate it if I feel like it. Although friendly and pretty, WIX is so closed in and slow. They customer care is not that great, even tho they helped with everything I needed (except one time when they removed my Google SEO Token without my consent). WIX also charges a lot (290 euros for a premium plan, a mailbox and I didn t put in the site domain).\n\n&#x200B;\n\nIf you decide to let my topic stay, thank you for your help! If not, please guide me to the correct subreddit for such noob questions.",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/lh7eny/wordpressorg_best_hosting_choice/",
        "num_comments": 2,
        "comments": [
            {
                "body": "Wordpress is easy to move anywhere, including to other CMS. I can personally vouch for siteground as we have a client with over 20 sites there and their support has always been top notch. \n\nOne of the better managed hosting options imo.",
                "author": null,
                "score": 1
            },
            {
                "body": "Thank you!",
                "author": "xYoKx",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1612269588.0,
        "title": "Entering world of newsletters and transactional email",
        "author": "krong",
        "id": "laulf5",
        "selftext": "Dear webdevs,\n\nI'm  considering diving into the world of generated emails (for creating  custom newsletters, and similar), and I'm looking for opinions on how to  go about this.\n\nMy response to  clients for the 10 past years has been \"please figure it out yourselves  with mailchimp\". I had some good reasons for this:\n\n1. you cant unsend  an email, this creates a lot of stress about making mistakes I rather  not deal with\n2. email HTML is (used to be?) a complete nightmare\n3. having to deal with spam blocking and making sure the mail is actually  delivered is a tricky topic, as well.\n4. I rather not store any emails (sensitive data) in the CMS and rather not deal with consent.\n\nNow  I have a client who is looking for an automatically generated email solution and I thought maybe it's a good time to take another look at this. They're tired of copy-pasting from the cms to mailchimp.\n\nThey want to compose their own emails from content taken from the existing website CMS. It's in three separate languages and also with a segmented list.\n\n1. can be solved with the client authoring their own emails.\n2. can be solved with  something like [https://mjml.io/faq](https://mjml.io/faq)\n3. can be solved by using a transactional email  provider, such as mailjet or mandrill\n4. (& 5)  I'm not sure - it would be great if the mails can stay in mailchimp/campaign monitor, etc. That would mean I have to tie myself to one solution, and this is something I'm hoping to avoid.\n\n&#x200B;\n\nWhat  experiences and recommendations do you have with this? I'm using  processwire (php) as backend since many years. Every now and then I look  for alternatives, but so far I don't have a better alternative.\n\nHow do you go about authoring? Would you build a preview function yourself?\n\nHow  do you deal with list management? For example, if you have a segmented  list in mailchimp, I suppose there must be a way to send to these  segments, for example?\n\nFor a  newsletter, is it better to use Mailchimp templates and programmatically  fill them, than to build your own templates? The drawback is that I tie  myself to them, this is something I hope to avoid.\n\nThis  is all a bit new to me so I'm not sure I'm even asking the right  questions, but I suppose for my particular case I have in front of me,  it would be something in between a regular mailchimp newsletter and a  transactional email.\n\nthanks!",
        "score": 3,
        "url": "https://www.reddit.com/r/webdev/comments/laulf5/entering_world_of_newsletters_and_transactional/",
        "num_comments": 1,
        "comments": [
            {
                "body": "Sounds like you've outgrown Mailchimp. Try [https://jetsend.com/](https://jetsend.com/), it should do everything you need and provide you with more customization. And if you need more, you can connect it to [https://www.maropost.com/](https://www.maropost.com/).",
                "author": "mariavasserman",
                "score": 1
            }
        ]
    },
    {
        "subreddit": "webdev",
        "created": 1599823953.0,
        "title": "Google analytics Data sharing & GDPR help?",
        "author": "Nox1793",
        "id": "iqoq0i",
        "selftext": "Hello, I'm under GDPR and I manage a couple of websites, one based in Italy (new e-commerce), and another which is worldwide (a blog).\n\nI'm using Wordpress, for privacy and cookie policy I use Complianz plugin.\n\n**In your opinion and experience, should I allow google data sharing/IP anonymization or not?**\n\nComplianz states that if I do not allow data sharing with google, I anonymize IP, and sign the agreement on analytics I can track my traffic without their full cookie consent (because their data is anonymized, whatever this means). I am wondering what I can do with anonymized analytics data in terms of marketing and data analysis.\n\nBasically I have two options: not sharing my data with GOOGLE  and anonymize IP (which legally allows me to fire analytic tracking before consent),  or share my data with Google (while not firing tracking before consent).\n\nWhat's the best way to set it up in your opinion (legally)? I'm quite confused because the way it's explained it's really underwhelming.\n\n&#x200B;\n\nlast thing: in my world-wide blog, how should I comply with all the different regulations? (COPPA, CCPA, GDPR Etc...)\n\n&#x200B;\n\nThanks in advance",
        "score": 1,
        "url": "https://www.reddit.com/r/webdev/comments/iqoq0i/google_analytics_data_sharing_gdpr_help/",
        "num_comments": 1,
        "comments": []
    },
    {
        "subreddit": "webdev",
        "created": 1589873308.0,
        "title": "Need Recommendation for Multilingual Cookie Consent Solution",
        "author": "taeo",
        "id": "gmjwya",
        "selftext": "Hi - so I am working on a ground up redesign of a corporation's global network of sites. Each region has slightly different content needs so, while they all use the same template and code base, they are separate sites with separate domains and are managed by separate marketing teams.\n\nAs the majority of these sites are located in the EU we need to provide a robust cookie consent management solution. Specifically, their legal team has requested that we provide the ability for users to enable/disable different categories of cookies ( i.e. performance/advertising/social/etc ). Additionally they require a cookie statement page with detailed information about each cookie - it's purpose, source, expiration, etc.\n\nUnfortunately I've run into an issue where all of the existing hosted cookie consent solutions I have tested so far either don't support the desired user experience or don't support all of the languages we need.\n\nI've also considered implementing this from scratch on our own but it's very daunting. We only have a few first party cookies on the site and I can add a consent layer, categorize, and provide translation capability for those without too much trouble.\n\nHowever, the client uses Google Tag Manager (GTM) to handle third party scripts and each region is likely to use a separate selection of scripts. I've done a bit of research on how one might categorize and block these scripts and most articles I have read involve making extensive customizations within your GTM configuration. Everything about this sounds hellish to maintain when we consider that we'd be having to account for more than a dozen separate marketing teams each with their own GTM accounts.\n\nSo, unless I'm missing some easy way to interact with cookies added by GTM programmatically ( entirely possible ) it seems like using an existing SAAS solution is the way to go.\n\nDoes anyone have a recommendation for a solution that meets all of these requirements?\n\n* adheres to strict GDPR requirements\n* allows blocking cookies by category ( performance, advertising, etc )\n* capable of generating a cookie statement with detailed information about each cookie ( source, duration, purpose, etc )\n* supports the following languages - English, German, French, Italian, Spanish, Swedish, Portuguese\n* ALTERNATIVELY supports overriding of any text ( includes button text )\n\nIf anyone has a recommendation or can at least point me in a good direction I will be incredibly grateful!",
        "score": 2,
        "url": "https://www.reddit.com/r/webdev/comments/gmjwya/need_recommendation_for_multilingual_cookie/",
        "num_comments": 1,
        "comments": [
            {
                "body": "[deleted]",
                "author": null,
                "score": 2
            },
            {
                "body": "Hmmm is it  [https://complianz.io/](https://complianz.io/) ? This looks to be a WordPress plugin and I'm not seeing mention of an API on the home page.\n\nI hadn't even considered seeing if an API existed for this purpose - that would be a very attractive option for us because we could maintain control over the content management and UI!\n\nThank you!",
                "author": "taeo",
                "score": 1
            }
        ]
    }
]